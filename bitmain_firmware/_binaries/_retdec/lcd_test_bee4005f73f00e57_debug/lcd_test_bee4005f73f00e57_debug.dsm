;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;;
;; Decompilation date: 2025-10-13 20:29:13
;; Architecture: arm
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x837c -- 0x8386
0x837c:    08 b5         	push {r3, lr}
0x837e:    00 f0 67 f8   	bl #0x8450 <call_gmon_start>
0x8382:    00 bf         	nop 
0x8384:    08 bd         	pop {r3, pc}
; section: .plt
; data inside code section at 0x8388 -- 0x839c
0x8388:    04 e0 2d e5 04 e0 9f e5  0e e0 8f e0 08 f0 be e5   |..-.............|
0x8398:    e8 83 00 00                                        |....            |
; dynamically linked function: printf at 0x839c -- 0x83a8
; dynamically linked function: sleep at 0x83a8 -- 0x83b4
; dynamically linked function: perror at 0x83b4 -- 0x83c0
; dynamically linked function: puts at 0x83c0 -- 0x83cc
; dynamically linked function: __libc_start_main at 0x83cc -- 0x83d8
; function: $t at 0x83d8 -- 0x83e8
0x83d8:    78 47         	bx pc
; data inside code section at 0x83da -- 0x83dc
0x83da:    c0 46                                              |.F              |
0x83dc:    00 c6 8f e2   	add ip, pc, #0, #12
0x83e0:    08 ca 8c e2   	add ip, ip, #8, #20
0x83e4:    bc f3 bc e5   	ldr pc, [ip, #0x3bc]!
; dynamically linked function: open at 0x83e8 -- 0x83f4
; dynamically linked function: memset at 0x83f4 -- 0x8400
; dynamically linked function: write at 0x8400 -- 0x840c
; dynamically linked function: abort at 0x840c -- 0x8418
; section: .text
; function: _start at 0x8418 -- 0x8448
0x8418:    4f f0 00 0b   	mov.w fp, #0
0x841c:    4f f0 00 0e   	mov.w lr, #0
0x8420:    5d f8 04 1b   	ldr r1, [sp], #4
0x8424:    6a 46         	mov r2, sp
0x8426:    4d f8 04 2d   	str r2, [sp, #-0x4]!
0x842a:    4d f8 04 0d   	str r0, [sp, #-0x4]!
0x842e:    df f8 14 c0   	ldr.w ip, [pc, #0x14]
0x8432:    4d f8 04 cd   	str ip, [sp, #-0x4]!
0x8436:    04 48         	ldr r0, [pc, #0x10]
0x8438:    04 4b         	ldr r3, [pc, #0x10]
0x843a:    ff f7 c8 ef   	blx #0x83cc <__libc_start_main>
0x843e:    ff f7 e6 ef   	blx #0x840c <abort>
0x8442:    00 00         	movs r0, r0
0x8444:    f1 85         	strh r1, [r6, #0x2e]
0x8446:    00 00         	movs r0, r0
; data inside code section at 0x8448 -- 0x8450
0x8448:    f1 84 00 00 ad 85 00 00                            |........        |
; function: call_gmon_start at 0x8450 -- 0x8460
0x8450:    03 4b         	ldr r3, [pc, #0xc]
0x8452:    04 4a         	ldr r2, [pc, #0x10]
0x8454:    7b 44         	add r3, pc
0x8456:    9b 58         	ldr r3, [r3, r2]
0x8458:    0b b1         	cbz r3, #0x845e <call_gmon_start+0xe>
0x845a:    ff f7 bd bf   	b.w #0x83d8 <$t>
0x845e:    70 47         	bx lr
; data inside code section at 0x8460 -- 0x8468
0x8460:    28 83 00 00 34 00 00 00                            |(...4...        |
; function: deregister_tm_clones at 0x8468 -- 0x8480
0x8468:    08 b5         	push {r3, lr}
0x846a:    05 48         	ldr r0, [pc, #0x14]
0x846c:    05 4b         	ldr r3, [pc, #0x14]
0x846e:    1b 1a         	subs r3, r3, r0
0x8470:    06 2b         	cmp r3, #6
0x8472:    00 d8         	bhi #0x8476 <deregister_tm_clones+0xe>
0x8474:    08 bd         	pop {r3, pc}
0x8476:    04 4b         	ldr r3, [pc, #0x10]
0x8478:    00 2b         	cmp r3, #0
0x847a:    fb d0         	beq #0x8474 <deregister_tm_clones+0xc>
0x847c:    98 47         	blx r3
0x847e:    f9 e7         	b #0x8474 <deregister_tm_clones+0xc>
; data inside code section at 0x8480 -- 0x848c
0x8480:    c0 07 01 00 c3 07 01 00  00 00 00 00               |............    |
; function: register_tm_clones at 0x848c -- 0x84aa
0x848c:    08 b5         	push {r3, lr}
0x848e:    07 48         	ldr r0, [pc, #0x1c]
0x8490:    07 4b         	ldr r3, [pc, #0x1c]
0x8492:    1b 1a         	subs r3, r3, r0
0x8494:    9b 10         	asrs r3, r3, #2
0x8496:    03 eb d3 73   	add.w r3, r3, r3, lsr #31
0x849a:    59 10         	asrs r1, r3, #1
0x849c:    00 d1         	bne #0x84a0 <register_tm_clones+0x14>
0x849e:    08 bd         	pop {r3, pc}
0x84a0:    04 4a         	ldr r2, [pc, #0x10]
0x84a2:    00 2a         	cmp r2, #0
0x84a4:    fb d0         	beq #0x849e <register_tm_clones+0x12>
0x84a6:    90 47         	blx r2
0x84a8:    f9 e7         	b #0x849e <register_tm_clones+0x12>
; data inside code section at 0x84aa -- 0x84b8
0x84aa:    00 bf c0 07 01 00 c0 07  01 00 00 00 00 00         |..............  |
; function: __do_global_dtors_aux at 0x84b8 -- 0x84ca
0x84b8:    10 b5         	push {r4, lr}
0x84ba:    04 4c         	ldr r4, [pc, #0x10]
0x84bc:    23 78         	ldrb r3, [r4]
0x84be:    1b b9         	cbnz r3, #0x84c8 <__do_global_dtors_aux+0x10>
0x84c0:    ff f7 d2 ff   	bl #0x8468 <deregister_tm_clones>
0x84c4:    01 23         	movs r3, #1
0x84c6:    23 70         	strb r3, [r4]
0x84c8:    10 bd         	pop {r4, pc}
; data inside code section at 0x84ca -- 0x84d0
0x84ca:    00 bf c0 07 01 00                                  |......          |
; function: frame_dummy at 0x84d0 -- 0x84e6
0x84d0:    05 48         	ldr r0, [pc, #0x14]
0x84d2:    08 b5         	push {r3, lr}
0x84d4:    03 68         	ldr r3, [r0]
0x84d6:    13 b1         	cbz r3, #0x84de <frame_dummy+0xe>
0x84d8:    04 4b         	ldr r3, [pc, #0x10]
0x84da:    03 b1         	cbz r3, #0x84de <frame_dummy+0xe>
0x84dc:    98 47         	blx r3
0x84de:    bd e8 08 40   	pop.w {r3, lr}
0x84e2:    ff f7 d3 bf   	b.w #0x848c <register_tm_clones>
; data inside code section at 0x84e6 -- 0x84f0
0x84e6:    00 bf 94 06 01 00 00 00  00 00                     |..........      |
; function: main at 0x84f0 -- 0x85ac
0x84f0:    80 b5         	push {r7, lr}
0x84f2:    94 b0         	sub sp, #0x50
0x84f4:    00 af         	add r7, sp, #0
0x84f6:    78 60         	str r0, [r7, #4]
0x84f8:    39 60         	str r1, [r7]
0x84fa:    48 f2 00 60   	movw r0, #0x8600
0x84fe:    c0 f2 00 00   	movt r0, #0
0x8502:    41 f2 02 01   	movw r1, #0x1002
0x8506:    c0 f2 10 01   	movt r1, #0x10
0x850a:    ff f7 6e ef   	blx #0x83e8 <open>
0x850e:    f8 64         	str r0, [r7, #0x4c]
0x8510:    fb 6c         	ldr r3, [r7, #0x4c]
0x8512:    00 2b         	cmp r3, #0
0x8514:    0f da         	bge #0x8536 <main+0x46>
0x8516:    48 f2 14 60   	movw r0, #0x8614
0x851a:    c0 f2 00 00   	movt r0, #0
0x851e:    f9 6c         	ldr r1, [r7, #0x4c]
0x8520:    ff f7 3c ef   	blx #0x839c <printf>
0x8524:    48 f2 3c 60   	movw r0, #0x863c
0x8528:    c0 f2 00 00   	movt r0, #0
0x852c:    ff f7 42 ef   	blx #0x83b4 <perror>
0x8530:    4f f0 ff 33   	mov.w r3, #-1
0x8534:    35 e0         	b #0x85a2 <main+0xb2>
0x8536:    48 f2 44 60   	movw r0, #0x8644
0x853a:    c0 f2 00 00   	movt r0, #0
0x853e:    f9 6c         	ldr r1, [r7, #0x4c]
0x8540:    ff f7 2c ef   	blx #0x839c <printf>
0x8544:    48 f2 68 60   	movw r0, #0x8668
0x8548:    c0 f2 00 00   	movt r0, #0
0x854c:    ff f7 38 ef   	blx #0x83c0 <puts>
0x8550:    07 f1 0c 03   	add.w r3, r7, #0xc
0x8554:    18 46         	mov r0, r3
0x8556:    20 21         	movs r1, #0x20
0x8558:    40 22         	movs r2, #0x40
0x855a:    ff f7 4c ef   	blx #0x83f4 <memset>
0x855e:    07 f1 0c 03   	add.w r3, r7, #0xc
0x8562:    f8 6c         	ldr r0, [r7, #0x4c]
0x8564:    19 46         	mov r1, r3
0x8566:    40 22         	movs r2, #0x40
0x8568:    ff f7 4a ef   	blx #0x8400 <write>
0x856c:    03 20         	movs r0, #3
0x856e:    ff f7 1c ef   	blx #0x83a8 <sleep>
0x8572:    48 f2 74 60   	movw r0, #0x8674
0x8576:    c0 f2 00 00   	movt r0, #0
0x857a:    ff f7 22 ef   	blx #0x83c0 <puts>
0x857e:    07 f1 0c 03   	add.w r3, r7, #0xc
0x8582:    18 46         	mov r0, r3
0x8584:    61 21         	movs r1, #0x61
0x8586:    40 22         	movs r2, #0x40
0x8588:    ff f7 34 ef   	blx #0x83f4 <memset>
0x858c:    07 f1 0c 03   	add.w r3, r7, #0xc
0x8590:    f8 6c         	ldr r0, [r7, #0x4c]
0x8592:    19 46         	mov r1, r3
0x8594:    40 22         	movs r2, #0x40
0x8596:    ff f7 34 ef   	blx #0x8400 <write>
0x859a:    03 20         	movs r0, #3
0x859c:    ff f7 04 ef   	blx #0x83a8 <sleep>
0x85a0:    d0 e7         	b #0x8544 <main+0x54>
0x85a2:    18 46         	mov r0, r3
0x85a4:    07 f1 50 07   	add.w r7, r7, #0x50
0x85a8:    bd 46         	mov sp, r7
0x85aa:    80 bd         	pop {r7, pc}
; function: __libc_csu_init at 0x85ac -- 0x85e8
0x85ac:    2d e9 f8 43   	push.w {r3, r4, r5, r6, r7, r8, sb, lr}
0x85b0:    06 46         	mov r6, r0
0x85b2:    0d 4d         	ldr r5, [pc, #0x34]
0x85b4:    0f 46         	mov r7, r1
0x85b6:    df f8 34 90   	ldr.w sb, [pc, #0x34]
0x85ba:    90 46         	mov r8, r2
0x85bc:    7d 44         	add r5, pc
0x85be:    ff f7 dd fe   	bl #0x837c <_init>
0x85c2:    f9 44         	add sb, pc
0x85c4:    c5 eb 09 09   	rsb sb, r5, sb
0x85c8:    5f ea a9 09   	asrs.w sb, sb, #2
0x85cc:    0a d0         	beq #0x85e4 <__libc_csu_init+0x38>
0x85ce:    04 3d         	subs r5, #4
0x85d0:    00 24         	movs r4, #0
0x85d2:    55 f8 04 3f   	ldr r3, [r5, #4]!
0x85d6:    30 46         	mov r0, r6
0x85d8:    39 46         	mov r1, r7
0x85da:    42 46         	mov r2, r8
0x85dc:    01 34         	adds r4, #1
0x85de:    98 47         	blx r3
0x85e0:    4c 45         	cmp r4, sb
0x85e2:    f6 d1         	bne #0x85d2 <__libc_csu_init+0x26>
0x85e4:    bd e8 f8 83   	pop.w {r3, r4, r5, r6, r7, r8, sb, pc}
; data inside code section at 0x85e8 -- 0x85f0
0x85e8:    cc 80 00 00 ca 80 00 00                            |........        |
; function: __libc_csu_fini at 0x85f0 -- 0x85f1
; data inside code section at 0x85f1 -- 0x85f4
0x85f1:    47 00 bf                                           |G..             |
; section: .fini
; function: _fini at 0x85f4 -- 0x85fa
0x85f4:    08 b5         	push {r3, lr}
0x85f6:    00 bf         	nop 
0x85f8:    08 bd         	pop {r3, pc}

;;
;; Data Segment
;;

; section: .interp
0x8134:    2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2d 61 72   |/lib/ld-linux-ar|
0x8144:    6d 68 66 2e 73 6f 2e 33  00 ??                     |mhf.so.3.?      |
; section: .hash
0x8194:    03 00 00 00 0b 00 00 00  09 00 00 00 05 00 00 00   |................|
0x81a4:    0a 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x81b4:    02 00 00 00 00 00 00 00  04 00 00 00 03 00 00 00   |................|
0x81c4:    01 00 00 00 06 00 00 00  08 00 00 00 07 00 00 00   |................|
0x81d4:    00                                                 |.               |
; section: .dynsym
0x81d4:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x81e4:    2c 00 00 00 9c 83 00 00  00 00 00 00 12 00 00 00   |,...............|
0x81f4:    3f 00 00 00 a8 83 00 00  00 00 00 00 12 00 00 00   |?...............|
0x8204:    1a 00 00 00 b4 83 00 00  00 00 00 00 12 00 00 00   |................|
0x8214:    21 00 00 00 c0 83 00 00  00 00 00 00 12 00 00 00   |!...............|
0x8224:    45 00 00 00 cc 83 00 00  00 00 00 00 12 00 00 00   |E...............|
0x8234:    01 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x8244:    3a 00 00 00 e8 83 00 00  00 00 00 00 12 00 00 00   |:...............|
0x8254:    33 00 00 00 f4 83 00 00  00 00 00 00 12 00 00 00   |3...............|
0x8264:    57 00 00 00 00 84 00 00  00 00 00 00 12 00 00 00   |W...............|
0x8274:    26 00 00 00 0c 84 00 00  00 00 00 00 12 00 00 00   |&...............|
0x8284:    00                                                 |.               |
; section: .dynstr
0x8284:    00 5f 5f 67 6d 6f 6e 5f  73 74 61 72 74 5f 5f 00   |.__gmon_start__.|
0x8294:    6c 69 62 63 2e 73 6f 2e  36 00 70 65 72 72 6f 72   |libc.so.6.perror|
0x82a4:    00 70 75 74 73 00 61 62  6f 72 74 00 70 72 69 6e   |.puts.abort.prin|
0x82b4:    74 66 00 6d 65 6d 73 65  74 00 6f 70 65 6e 00 73   |tf.memset.open.s|
0x82c4:    6c 65 65 70 00 5f 5f 6c  69 62 63 5f 73 74 61 72   |leep.__libc_star|
0x82d4:    74 5f 6d 61 69 6e 00 77  72 69 74 65 00 47 4c 49   |t_main.write.GLI|
0x82e4:    42 43 5f 32 2e 34 00 ??                            |BC_2.4.?        |
; section: .gnu.version
0x82ec:    00 00 02 00 02 00 02 00  02 00 02 00 00 00 02 00   |................|
0x82fc:    02 00 02 00 02 00 ??                               |......?         |
; section: .gnu.version_r
0x8304:    01 00 01 00 10 00 00 00  10 00 00 00 00 00 00 00   |................|
0x8314:    14 69 69 0d 00 00 02 00  5d 00 00 00 00 00 00 00   |.ii.....].......|
0x8324:    b4                                                 |.               |
; section: .rel.dyn
0x8324:    b4 07 01 00 15 06 00 00  8c                        |.........       |
; section: .rel.plt
0x832c:    8c 07 01 00 16 01 00 00  90 07 01 00 16 02 00 00   |................|
0x833c:    94 07 01 00 16 03 00 00  98 07 01 00 16 04 00 00   |................|
0x834c:    9c 07 01 00 16 05 00 00  a0 07 01 00 16 06 00 00   |................|
0x835c:    a4 07 01 00 16 07 00 00  a8 07 01 00 16 08 00 00   |................|
0x836c:    ac 07 01 00 16 09 00 00  b0 07 01 00 16 0a 00 00   |................|
0x837c:    08                                                 |.               |
; section: .rodata
0x85fc:    01 00 02 00                                        |....            |
0x8600:    2f 64 65 76 2f 62 69 74  6d 61 69 6e 2d 6c 63 64   |/dev/bitmain-lcd|   "/dev/bitmain-lcd"
0x8610:    00                                                 |.               |
0x8611:    00 00 00                                           |...             |
0x8614:    2f 64 65 76 2f 62 69 74  6d 61 69 6e 2d 6c 63 64   |/dev/bitmain-lcd|   "/dev/bitmain-lcd open failed. fd = %d\n"
0x8624:    20 6f 70 65 6e 20 66 61  69 6c 65 64 2e 20 66 64   | open failed. fd|
0x8634:    20 3d 20 25 64 0a 00                               | = %d..         |
0x863b:    00                                                 |.               |
0x863c:    6f 70 65 6e 00                                     |open.           |   "open"
0x8641:    00 00 00                                           |...             |
0x8644:    2f 64 65 76 2f 62 69 74  6d 61 69 6e 2d 6c 63 64   |/dev/bitmain-lcd|   "/dev/bitmain-lcd opened. fd = %d\n"
0x8654:    20 6f 70 65 6e 65 64 2e  20 66 64 20 3d 20 25 64   | opened. fd = %d|
0x8664:    0a 00                                              |..              |
0x8666:    00 00                                              |..              |
0x8668:    0a 63 6c 65 61 72 20 6c  63 64 00                  |.clear lcd.     |   "\nclear lcd"
0x8673:    00                                                 |.               |
0x8674:    0a 77 72 69 74 65 20 6c  63 64 00                  |.write lcd.     |   "\nwrite lcd"
0x867f:    00 98                                              |..              |
; section: .ARM.exidx
0x8680:    98 fd ff 7f 01 00 00 00  00                        |.........       |
; section: .eh_frame
0x8688:    00 00 00 00 ??                                     |....?           |
; section: .init_array
0x1068c:   d1 84 00 00 b9                                     |.....           |
; section: .fini_array
0x10690:   b9 84 00 00 00                                     |.....           |
; section: .jcr
0x10694:   00 00 00 00 01                                     |.....           |
; section: .dynamic
0x10698:   01 00 00 00 10 00 00 00  0c 00 00 00 7d 83 00 00   |............}...|
0x106a8:   0d 00 00 00 f5 85 00 00  19 00 00 00 8c 06 01 00   |................|
0x106b8:   1b 00 00 00 04 00 00 00  1a 00 00 00 90 06 01 00   |................|
0x106c8:   1c 00 00 00 04 00 00 00  04 00 00 00 94 81 00 00   |................|
0x106d8:   05 00 00 00 84 82 00 00  06 00 00 00 d4 81 00 00   |................|
0x106e8:   0a 00 00 00 67 00 00 00  0b 00 00 00 10 00 00 00   |....g...........|
0x106f8:   15 00 00 00 00 00 00 00  03 00 00 00 80 07 01 00   |................|
0x10708:   02 00 00 00 50 00 00 00  14 00 00 00 11 00 00 00   |....P...........|
0x10718:   17 00 00 00 2c 83 00 00  11 00 00 00 24 83 00 00   |....,.......$...|
0x10728:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x10738:   fe ff ff 6f 04 83 00 00  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x10748:   f0 ff ff 6f ec 82 00 00  00 00 00 00 00 00 00 00   |...o............|
0x10758:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x10768:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x10778:   00 00 00 00 00 00 00 00  98                        |.........       |
; section: .got
0x10780:   98 06 01 00 00 00 00 00  00 00 00 00 88 83 00 00   |................|
0x10790:   88 83 00 00 88 83 00 00  88 83 00 00 88 83 00 00   |................|
0x107a0:   88 83 00 00 88 83 00 00  88 83 00 00 88 83 00 00   |................|
0x107b0:   88 83 00 00 00 00 00 00  00                        |.........       |
; section: .data
0x107b8:   00 00 00 00 00 00 00 00  00                        |.........       |
