source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%timeval = type { i32, i32 }
%_IO_FILE = type { i32 }
%timezone = type { i32, i32 }
%lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }

@global_var_8fb8 = local_unnamed_addr constant i32 181360
@global_var_2c470 = local_unnamed_addr constant [18 x i8] c"ifo space, break\0A\00"
@global_var_8fbc = local_unnamed_addr constant i32 260
@global_var_35330 = global i32 1
@global_var_35420 = local_unnamed_addr global i32* @global_var_35330
@global_var_35524 = local_unnamed_addr global i32 0
@global_var_8fd8 = local_unnamed_addr constant i32 219808
@global_var_35aa0 = global i32 0
@global_var_8fdc = local_unnamed_addr constant i32 219811
@global_var_35aa3 = local_unnamed_addr global i32 0
@global_var_9008 = local_unnamed_addr constant i32 219808
@global_var_900c = local_unnamed_addr constant i32 0
@global_var_9024 = local_unnamed_addr constant i32 219812
@global_var_9040 = local_unnamed_addr constant i32 217900
@global_var_3532c = global i32 0
@global_var_9044 = local_unnamed_addr constant i32 0
@global_var_3367dc = global i32 0
@global_var_336848 = local_unnamed_addr global i32 0
@global_var_336850 = local_unnamed_addr global i32 0
@global_var_82dc = global i32 0
@global_var_9324 = local_unnamed_addr constant i32 553185864
@global_var_8624 = local_unnamed_addr global i32 348
@global_var_860c = local_unnamed_addr global i32 0
@global_var_35ae8 = global i32 0
@global_var_85f8 = local_unnamed_addr global i32 36480
@global_var_3368a0 = local_unnamed_addr global i32 0
@global_var_33684c = local_unnamed_addr global i32 0
@global_var_23630c = global i32 0
@global_var_8928 = constant [12 x i8] c"ettimeofday\00"
@global_var_3367d8 = local_unnamed_addr global i32 0
@global_var_85e0 = local_unnamed_addr global i32 18
@global_var_33630c = local_unnamed_addr global i32 0
@global_var_3367c8 = local_unnamed_addr global i32 0
@global_var_e240 = local_unnamed_addr constant i32 3377488
@global_var_8500 = global i32 18
@global_var_20000 = constant i32 -1090470528
@global_var_85c8 = local_unnamed_addr global i32 36444
@global_var_3367d0 = global i32 0
@global_var_9eb4 = local_unnamed_addr constant i32 2843412
@global_var_2b6314 = global i32 0
@global_var_9eb8 = local_unnamed_addr constant i32 2843408
@global_var_2b6310 = global i32 0
@global_var_2b630c = global i32 0
@global_var_8430 = global i32 18
@global_var_8444 = global i32 327
@global_var_3368e0 = local_unnamed_addr global i32 0
@global_var_336820 = local_unnamed_addr global i32 0
@global_var_9ebc = local_unnamed_addr constant i32 2843420
@global_var_2b631c = global i32 0
@global_var_35ac8 = global i32 0
@global_var_3368b4 = local_unnamed_addr global i32 0
@global_var_84c4 = global i32 483
@global_var_84d8 = global i32 36272
@global_var_84ec = global i32 0
@global_var_a060 = local_unnamed_addr constant i32 2843404
@global_var_85ac = local_unnamed_addr global i32 4
@global_var_a3d8 = local_unnamed_addr constant i32 2843412
@global_var_493e0 = global i32 0
@global_var_a3dc = local_unnamed_addr constant i32 2843416
@global_var_2b6318 = global i32 0
@global_var_a3e0 = local_unnamed_addr constant i32 2843408
@global_var_35aac = global i32 0
@global_var_3368e4 = local_unnamed_addr global i32 0
@global_var_a958 = local_unnamed_addr constant i32 2843420
@global_var_8594 = global i32 501
@global_var_a95c = local_unnamed_addr constant i32 2843404
@global_var_89f8 = local_unnamed_addr global i32 131075
@global_var_89e0 = local_unnamed_addr global i32 196610
@global_var_abf4 = local_unnamed_addr constant i32 -396429314
@global_var_abf0 = local_unnamed_addr constant i32 722988115
@global_var_abec = local_unnamed_addr constant i32 16970432
@global_var_abe8 = local_unnamed_addr constant i32 298907208
@global_var_abe4 = local_unnamed_addr constant i32 193216
@global_var_abe0 = local_unnamed_addr constant i32 1618014792
@global_var_abdc = local_unnamed_addr constant i32 2062020279
@global_var_abd8 = local_unnamed_addr constant i32 2046881239
@global_var_abd4 = local_unnamed_addr constant i32 1622868736
@global_var_abd0 = local_unnamed_addr constant i32 -263233157
@global_var_abcc = local_unnamed_addr constant i32 587232251
@global_var_abc8 = local_unnamed_addr constant [3 x i8] c";a\00"
@global_var_abc4 = local_unnamed_addr constant [3 x i8] c"{q\00"
@global_var_89bc = local_unnamed_addr global i32 196611
@global_var_8200 = global i32 0
@global_var_89a4 = local_unnamed_addr global i32 196611
@global_var_878c = constant [14 x i8] c"thread_create\00"
@global_var_88cc = constant [5 x i8] c"conv\00"
@global_var_898c = local_unnamed_addr constant [4 x i8] c"2.4\00"
@global_var_b708 = local_unnamed_addr constant i32 2843412
@global_var_b70c = local_unnamed_addr constant i32 2843408
@global_var_87c0 = constant [19 x i8] c"pthread_mutex_lock\00"
@global_var_87d8 = constant [17 x i8] c"ad_mutex_destroy\00"
@global_var_87f8 = constant [16 x i8] c"read_mutex_init\00"
@global_var_87fc = constant [12 x i8] c"_mutex_init\00"
@global_var_8810 = constant [13 x i8] c"gmon_start__\00"
@global_var_8824 = constant [3 x i8] c".6\00"
@global_var_b710 = local_unnamed_addr constant i32 2843420
@global_var_8840 = constant [3 x i8] c"en\00"
@global_var_885c = constant [6 x i8] c"isnan\00"
@global_var_8890 = global i32 1600061552
@global_var_88a4 = constant [3 x i8] c"od\00"
@global_var_88b8 = constant [7 x i8] c"strlen\00"
@global_var_b8b4 = local_unnamed_addr constant i32 2843404
@global_var_8970 = local_unnamed_addr constant [7 x i8] c"t_main\00"
@global_var_bc2c = local_unnamed_addr constant i32 2843412
@global_var_bc30 = local_unnamed_addr constant i32 2843416
@global_var_8924 = constant [3 x i8] c"te\00"
@global_var_8940 = constant [6 x i8] c"qsort\00"
@global_var_c20c = local_unnamed_addr constant i32 2843420
@global_var_c210 = local_unnamed_addr constant i32 2843404
@global_var_336878 = local_unnamed_addr global i32 0
@global_var_8960 = constant [5 x i8] c"rror\00"
@global_var_28a10 = constant [42 x i8] c"actual_asic_number = %d, but it is error\0A\00"
@global_var_35aec = local_unnamed_addr global i32 0
@global_var_28cfc = constant [12 x i8] c"read_config\00"
@global_var_33681c = local_unnamed_addr global i32 0
@global_var_3368a4 = local_unnamed_addr global i32 0
@global_var_336824 = local_unnamed_addr global i32 0
@global_var_336828 = local_unnamed_addr global i32 0
@global_var_33682c = local_unnamed_addr global i32 0
@global_var_336830 = local_unnamed_addr global i32 0
@global_var_336834 = local_unnamed_addr global i32 0
@global_var_336838 = local_unnamed_addr global i32 0
@global_var_33683c = local_unnamed_addr global i32 0
@global_var_336840 = local_unnamed_addr global i32 0
@global_var_336844 = local_unnamed_addr global i32 0
@global_var_33687c = local_unnamed_addr global i32 0
@global_var_336880 = local_unnamed_addr global i32 0
@global_var_336884 = local_unnamed_addr global i32 0
@global_var_336888 = local_unnamed_addr global i32 0
@global_var_33688c = local_unnamed_addr global i32 0
@global_var_336890 = local_unnamed_addr global i32 0
@global_var_336894 = local_unnamed_addr global i32 0
@global_var_336898 = local_unnamed_addr global i32 0
@global_var_33689c = local_unnamed_addr global i32 0
@global_var_3368a8 = local_unnamed_addr global i32 0
@global_var_3368dc = local_unnamed_addr global i32 0
@global_var_35af0 = local_unnamed_addr global i32 0
@global_var_3368c0 = local_unnamed_addr global i32 0
@global_var_28c64 = constant [15 x i8] c"HeatingUpTime=\00"
@global_var_28c74 = constant [12 x i8] c"MaxTempGap=\00"
@global_var_3368b8 = local_unnamed_addr global i32 0
@global_var_3368c4 = local_unnamed_addr global i32 0
@global_var_28c94 = constant [18 x i8] c"Invalid_Core_Num=\00"
@global_var_3368c8 = local_unnamed_addr global i32 0
@global_var_28ca8 = constant [22 x i8] c"Least_nonce_per_core=\00"
@global_var_3368cc = local_unnamed_addr global i32 0
@global_var_28cc0 = constant [23 x i8] c"Most_lost_nonce_total=\00"
@global_var_3368d0 = local_unnamed_addr global i32 0
@global_var_28cd8 = constant [13 x i8] c"Most_HW_Num=\00"
@global_var_3368d4 = local_unnamed_addr global i32 0
@global_var_28ce8 = constant [19 x i8] c"close_power_delay=\00"
@global_var_28f14 = constant [39 x i8] c"/media/card/minertest-BM1722/dcr-asic-\00"
@global_var_28f3c = constant [39 x i8] c"/media/card/minertest-BM1725/dcr-asic-\00"
@global_var_28f64 = constant [7 x i8] c"/core_\00"
@global_var_35534 = local_unnamed_addr global [3 x i8*] [i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_28f14, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_28f3c, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_28f64, i32 0, i32 0)]
@global_var_d32c = local_unnamed_addr constant i32 2843436
@global_var_3553c = local_unnamed_addr global [7 x i8]* @global_var_28f64
@global_var_d330 = local_unnamed_addr constant i32 2843500
@global_var_35538 = local_unnamed_addr global [39 x i8]* @global_var_28f3c
@global_var_28d08 = local_unnamed_addr constant i32 16843009
@CRC_16_CCITT_poly_0x1021_at_28d10 = constant [256 x i16] [i16 0, i16 4129, i16 8258, i16 12387, i16 16516, i16 20645, i16 24774, i16 28903, i16 -32504, i16 -28375, i16 -24246, i16 -20117, i16 -15988, i16 -11859, i16 -7730, i16 -3601, i16 4657, i16 528, i16 12915, i16 8786, i16 21173, i16 17044, i16 29431, i16 25302, i16 -27847, i16 -31976, i16 -19589, i16 -23718, i16 -11331, i16 -15460, i16 -3073, i16 -7202, i16 9314, i16 13379, i16 1056, i16 5121, i16 25830, i16 29895, i16 17572, i16 21637, i16 -23190, i16 -19125, i16 -31448, i16 -27383, i16 -6674, i16 -2609, i16 -14932, i16 -10867, i16 13907, i16 9842, i16 5649, i16 1584, i16 30423, i16 26358, i16 22165, i16 18100, i16 -18597, i16 -22662, i16 -26855, i16 -30920, i16 -2081, i16 -6146, i16 -10339, i16 -14404, i16 18628, i16 22757, i16 26758, i16 30887, i16 2112, i16 6241, i16 10242, i16 14371, i16 -13876, i16 -9747, i16 -5746, i16 -1617, i16 -30392, i16 -26263, i16 -22262, i16 -18133, i16 23285, i16 19156, i16 31415, i16 27286, i16 6769, i16 2640, i16 14899, i16 10770, i16 -9219, i16 -13348, i16 -1089, i16 -5218, i16 -25735, i16 -29864, i16 -17605, i16 -21734, i16 27814, i16 31879, i16 19684, i16 23749, i16 11298, i16 15363, i16 3168, i16 7233, i16 -4690, i16 -625, i16 -12820, i16 -8755, i16 -21206, i16 -17141, i16 -29336, i16 -25271, i16 32407, i16 28342, i16 24277, i16 20212, i16 15891, i16 11826, i16 7761, i16 3696, i16 -97, i16 -4162, i16 -8227, i16 -12292, i16 -16613, i16 -20678, i16 -24743, i16 -28808, i16 -28280, i16 -32343, i16 -20022, i16 -24085, i16 -12020, i16 -16083, i16 -3762, i16 -7825, i16 4224, i16 161, i16 12482, i16 8419, i16 20484, i16 16421, i16 28742, i16 24679, i16 -31815, i16 -27752, i16 -23557, i16 -19494, i16 -15555, i16 -11492, i16 -7297, i16 -3234, i16 689, i16 4752, i16 8947, i16 13010, i16 16949, i16 21012, i16 25207, i16 29270, i16 -18966, i16 -23093, i16 -27224, i16 -31351, i16 -2706, i16 -6833, i16 -10964, i16 -15091, i16 13538, i16 9411, i16 5280, i16 1153, i16 29798, i16 25671, i16 21540, i16 17413, i16 -22565, i16 -18438, i16 -30823, i16 -26696, i16 -6305, i16 -2178, i16 -14563, i16 -10436, i16 9939, i16 14066, i16 1681, i16 5808, i16 26199, i16 30326, i16 17941, i16 22068, i16 -9908, i16 -13971, i16 -1778, i16 -5841, i16 -26168, i16 -30231, i16 -18038, i16 -22101, i16 22596, i16 18533, i16 30726, i16 26663, i16 6336, i16 2273, i16 14466, i16 10403, i16 -13443, i16 -9380, i16 -5313, i16 -1250, i16 -29703, i16 -25640, i16 -21573, i16 -17510, i16 19061, i16 23124, i16 27191, i16 31254, i16 2801, i16 6864, i16 10931, i16 14994, i16 -722, i16 -4849, i16 -8852, i16 -12979, i16 -16982, i16 -21109, i16 -25112, i16 -29239, i16 31782, i16 27655, i16 23652, i16 19525, i16 15522, i16 11395, i16 7392, i16 3265, i16 -4321, i16 -194, i16 -12451, i16 -8324, i16 -20581, i16 -16454, i16 -28711, i16 -24584, i16 28183, i16 32310, i16 20053, i16 24180, i16 11923, i16 16050, i16 3793, i16 7920]
@global_var_ffff = constant i32 -2027749024
@global_var_235c34 = local_unnamed_addr global i32 0
@global_var_235c30 = local_unnamed_addr global i32 0
@global_var_235c28 = local_unnamed_addr global i32 0
@global_var_235c38 = local_unnamed_addr global i32 0
@global_var_f4000 = local_unnamed_addr global i32 0
@global_var_f4240 = global i32 0
@global_var_28f6c = constant [23 x i8] c"Timestamp %s : %d sec\0A\00"
@global_var_28f84 = constant [5 x i8] c"\0A%s\0A\00"
@global_var_2a038 = constant [10 x i8] c"cgpu_init\00"
@global_var_1004c4 = global i32 0
@global_var_28f8c = constant [27 x i8] c"!!! %s: check chain error\0A\00"
@global_var_28fc8 = constant [24 x i8] c"!!! %s: open i2c error\0A\00"
@global_var_28ff4 = constant [13 x i8] c"No Hashboard\00"
@global_var_2a024 = local_unnamed_addr constant [20 x i8] c"malloc_register_buf\00"
@global_var_29038 = constant [18 x i8] c"FREQ: %d  CORE:%d\00"
@global_var_2904c = constant [12 x i8] c"Voltage: %d\00"
@global_var_29058 = constant [46 x i8] c"%s: actual_core_number = %d, but it is error\0A\00"
@global_var_2a00c = constant [22 x i8] c"calculate_core_number\00"
@global_var_35b34 = global i32 0
@global_var_29098 = local_unnamed_addr constant [6 x i8] c"     \00"
@global_var_2909c = local_unnamed_addr constant i32 32
@global_var_29088 = constant [4 x i8] c"%2d\00"
@global_var_8980 = constant [6 x i8] c"C_2.7\00"
@global_var_2908c = constant [12 x i8] c"Level: %d\0A\0A\00"
@global_var_290a0 = constant [9 x i8] c"\0A--- %s\0A\00"
@global_var_29ff8 = constant [17 x i8] c"reset_global_arg\00"
@global_var_35af4 = global i32 0
@global_var_35b04 = global i32 0
@global_var_35b14 = global i32 0
@global_var_336948 = global i32 0
@global_var_235b64 = global i32 0
@global_var_235b74 = global i32 0
@global_var_235b84 = global i32 0
@global_var_235b94 = global i32 0
@global_var_235ba4 = global i32 0
@global_var_235bb4 = global i32 0
@global_var_235bc4 = global i32 0
@global_var_235bd4 = global i32 0
@global_var_235be4 = global i32 0
@global_var_235bf4 = global i32 0
@global_var_235c0c = global i32 0
@global_var_3368e8 = global i32 0
@global_var_235b34 = global i32 0
@global_var_35b24 = global i32 0
@global_var_20028 = local_unnamed_addr constant i32 16970432
@global_var_290ac = constant [16 x i8] c"\0A%s: Got a HW!\0A\00"
@global_var_29fec = constant [9 x i8] c"check_hw\00"
@global_var_290bc = constant [7 x i8] c"\09data=\00"
@global_var_290c4 = constant [5 x i8] c"%02x\00"
@global_var_290cc = constant [53 x i8] c"\09return nonce=0x%08x, but it should be nonce=0x%08x\0A\00"
@global_var_29fd0 = constant [27 x i8] c"calculate_timeout_and_baud\00"
@global_var_e058 = local_unnamed_addr constant i32 57499
@global_var_29104 = constant [39 x i8] c"%s: pattern_test_time = %d, error!!! \0A\00"
@global_var_2912c = constant [12 x i8] c"   time %ds\00"
@global_var_29138 = constant [12 x i8] c"   nonce=%d\00"
@global_var_e244 = local_unnamed_addr constant i32 3377504
@global_var_29144 = constant [9 x i8] c"   HW=%d\00"
@global_var_e248 = local_unnamed_addr constant i32 3377520
@global_var_29150 = constant [14 x i8] c"   temp %d `C\00"
@global_var_e2a4 = local_unnamed_addr constant i32 58141
@global_var_29160 = constant [31 x i8] c"\0A--- %s: Can't find voltage%d\0A\00"
@global_var_e4dc = local_unnamed_addr constant i32 1081073664
@global_var_29180 = constant [67 x i8] c"\0A--- %s: real voltage = %d, temp_voltage = %.6f, Pic_Voltage = %d\0A\00"
@global_var_29fc4 = constant [12 x i8] c"set_voltage\00"
@global_var_86a0 = global i32 32
@global_var_291c4 = constant [32 x i8] c"\0A--- %s: Chain : %d, baud = %d\0A\00"
@global_var_29fb8 = constant [9 x i8] c"set_baud\00"
@global_var_291e4 = constant [39 x i8] c"%s: received ASIC%02d nonce. error!!!\09\00"
@global_var_29fac = constant [12 x i8] c"check_nonce\00"
@global_var_2920c = constant [44 x i8] c",received data is : 0x%02x%02x%02x%02x%02x\0A\00"
@global_var_29238 = constant [39 x i8] c"%s: received core%02d nonce. error!!!\09\00"
@global_var_29260 = constant [48 x i8] c",received data is : 0x%02x%02x%02x%02x%02x%02x\0A\00"
@global_var_29290 = constant [45 x i8] c"%s: received work_id = %02d nonce. error!!!\09\00"
@global_var_292c0 = constant [56 x i8] c"%s: Find a HW. Chain%d ASIC%d Core%d : nonce = 0x%08x.\0A\00"
@global_var_292f8 = constant [35 x i8] c"%s: reg_value_buf buffer is full!\0A\00"
@global_var_29f94 = constant [21 x i8] c"check_register_value\00"
@global_var_2931c = constant [26 x i8] c"%s, malloc buffer error!\0A\00"
@global_var_29f84 = constant [13 x i8] c"receive_func\00"
@global_var_29338 = constant [38 x i8] c"%s: which_chain = %d, which_i2c = %d\0A\00"
@global_var_29360 = constant [90 x i8] c"%s: Headers are not corret! Header0 = 0x%02x, Header1 = 0x%02x, Header2 = 0x%02x rp = %d\0A\00"
@global_var_293bc = constant [37 x i8] c"\0A\0A---%s: Chain%d send work num : %d\0A\00"
@global_var_29f78 = constant [10 x i8] c"send_func\00"
@global_var_9418 = constant [3 x i8] c"{r\00"
@global_var_29430 = constant [5 x i8] c"date\00"
@global_var_29438 = constant [16 x i8] c"to stop receive\00"
@global_var_293e4 = constant [51 x i8] c"\0A\0A---%s: Chain%d send work num : %d, less than %d\0A\00"
@global_var_29448 = constant [47 x i8] c"\0A%s: please config sensor_model in Config.ini\0A\00"
@global_var_29f68 = constant [15 x i8] c"read_temp_func\00"
@global_var_294a4 = local_unnamed_addr constant [26 x i8] c"      HW:       eeprom OK\00"
@global_var_294a8 = local_unnamed_addr constant [22 x i8] c"  HW:       eeprom OK\00"
@global_var_294ac = local_unnamed_addr constant [18 x i8] c":       eeprom OK\00"
@global_var_294b0 = local_unnamed_addr constant [14 x i8] c"    eeprom OK\00"
@global_var_29478 = constant [17 x i8] c"   Pattern OK   \00"
@global_var_2948c = constant [17 x i8] c"   Pattern NG   \00"
@global_var_294a0 = constant [3 x i8] c"%d\00"
@global_var_294b4 = constant [10 x i8] c"eeprom OK\00"
@global_var_294c0 = constant [14 x i8] c"   epprom OK\09\00"
@global_var_294d0 = constant [10 x i8] c"eeprom NG\00"
@global_var_294dc = constant [14 x i8] c"   epprom NG\09\00"
@global_var_294ec = constant [17 x i8] c" Temperature OK \00"
@global_var_29500 = constant [17 x i8] c" Temperature NG \00"
@global_var_29514 = constant [106 x i8] c"\0A\0A------------------------------------------------------------------------------------------------------\0A\00"
@global_var_29580 = constant [39 x i8] c"every CORE require nonce number: %lu\0A\0A\00"
@global_var_2b63ac = local_unnamed_addr global i32 0
@global_var_295d4 = constant [17 x i8] c"core[%02d]=%02d\09\00"
@global_var_295e8 = constant [3 x i8] c"\0A\0A\00"
@global_var_295ec = constant [52 x i8] c"core[%02d] = %d,      lost these pattern's nonce : \00"
@global_var_29620 = constant [5 x i8] c"%d  \00"
@global_var_29628 = constant [39 x i8] c"\0A\0Aevery core returned all nonce count:\00"
@global_var_29650 = constant [44 x i8] c"\0A\0Aevery core returned repeated nonce count:\00"
@global_var_2967c = constant [105 x i8] c"\0A------------------------------------------------------------------------------------------------------\0A\00"
@global_var_296e8 = constant [39 x i8] c"Chain%d total valid nonce number: %d\0A\0A\00"
@global_var_29710 = constant [41 x i8] c"Chain%d total receive nonce number: %d\0A\0A\00"
@global_var_2973c = constant [41 x i8] c"Chain%d total repeate nonce number: %d\0A\0A\00"
@global_var_29768 = constant [25 x i8] c"Chain%d HW number = %d\0A\0A\00"
@global_var_29784 = constant [12 x i8] c"Pattern OK\0A\00"
@global_var_29790 = constant [12 x i8] c"Pattern NG\0A\00"
@global_var_2979c = constant [38 x i8] c"every ASIC require nonce number: %lu\0A\00"
@global_var_297c4 = constant [41 x i8] c"\0A\0Aevery asic returned valid nonce count:\00"
@global_var_297f0 = constant [15 x i8] c"asic[%02d]=%d\09\00"
@global_var_29800 = constant [39 x i8] c"\0A\0Aevery asic returned all nonce count:\00"
@global_var_29828 = constant [44 x i8] c"\0A\0Aevery asic returned repeated nonce count:\00"
@global_var_29858 = constant [17 x i8] c"asic[%02d] = %d\0A\00"
@global_var_2986c = constant [42 x i8] c"core[%02d] = %d,      lost these nonce : \00"
@global_var_29898 = constant [10 x i8] c"ret = %d\0A\00"
@global_var_298a4 = constant [42 x i8] c"Chain%d total returned nonce number: %d\0A\0A\00"
@global_var_298d0 = constant [42 x i8] c"Chain%d total repeated nonce number: %d\0A\0A\00"
@global_var_298fc = constant [30 x i8] c"total invalid asic number %d\0A\00"
@global_var_2991c = constant [30 x i8] c"total invalid core number %d\0A\00"
@global_var_2993c = constant [47 x i8] c"total nonce expected %d lost %d allow most %d\0A\00"
@global_var_2996c = constant [11 x i8] c"Sensor OK\0A\00"
@global_var_29978 = constant [11 x i8] c"Sensor NG\0A\00"
@global_var_29984 = constant [16 x i8] c"Temperature OK\0A\00"
@global_var_29994 = constant [16 x i8] c"Temperature NG\0A\00"
@global_var_103cc = local_unnamed_addr constant i32 542046359
@global_var_299d0 = local_unnamed_addr constant [21 x i8] c"--- %s: need recal 1\00"
@global_var_29f50 = local_unnamed_addr constant [21 x i8] c"get_pllparam_divider\00"
@global_var_29a3c = local_unnamed_addr constant [66 x i8] c"--- %s: !!!!!!!!!!!!!!!Set freq don't ok!!!!!!!!!! using 200M pll\00"
@global_var_299e8 = local_unnamed_addr constant [21 x i8] c"--- %s: need recal 2\00"
@global_var_29a00 = local_unnamed_addr constant [58 x i8] c"--- %s: Don't find postdiv1 %d * postdiv2 %d = postdiv %d\00"
@global_var_29aa4 = local_unnamed_addr constant [100 x i8] c"--- %s: pll_vco %f, fbdiv %#x refdiv %#x postdiv1 %#x postdiv2 %#x, pll_divider %d ,{pll_value %#x}\00"
@global_var_29f1c = constant [49 x i8] c"enable_extended_mode_of_temperature_sensor_chain\00"
@global_var_29b08 = local_unnamed_addr constant i32 2
@global_var_29b0c = constant [43 x i8] c"%s: Can't set extended mode. ret = 0x%08x\0A\00"
@global_var_29b38 = constant [54 x i8] c"%s: Can't read out GENERAL_I2C_COMMAND. ret = 0x%08x\0A\00"
@global_var_29eec = constant [45 x i8] c"get_temperature_offset_value_from_asic_chain\00"
@global_var_29b70 = constant [24 x i8] c"ASIC temperature is %d\0A\00"
@global_var_29b88 = constant [44 x i8] c"%s: Can't read out ASIC TEMP. ret = 0x%08x\0A\00"
@global_var_29bb4 = constant [18 x i8] c"local_temp is %d\0A\00"
@global_var_29bc8 = constant [50 x i8] c"%s: Can't read out HASH BOARD TEMP. ret = 0x%08x\0A\00"
@global_var_29bfc = constant [24 x i8] c"temp_offset_value = %d\0A\00"
@global_var_29c14 = constant [23 x i8] c"offset_value[%d] = %d\0A\00"
@global_var_29c2c = constant [23 x i8] c"!!! sensor1 is error!\0A\00"
@global_var_29c44 = constant [23 x i8] c"!!! sensor2 is error!\0A\00"
@global_var_29c5c = constant [23 x i8] c"!!! sensor3 is error!\0A\00"
@global_var_29c74 = constant [24 x i8] c"\0A\0AASIC %d TEMP is : %d\0A\00"
@global_var_29c8c = constant [60 x i8] c"\0ABegin test!!! Start sensor is %d, ASIC temperature is %d\0A\0A\00"
@global_var_29cc8 = constant [71 x i8] c"\0AASIC %d temperature is %d, waiting it raise to start temperature %d\0A\0A\00"
@global_var_29d10 = constant [42 x i8] c"%s: do not read out ASIC %d temperature\0A\0A\00"
@global_var_29ea8 = constant [22 x i8] c"read_asic_temperature\00"
@global_var_29d3c = constant [39 x i8] c"ASIC %d Hash Board temperature is %d\0A\0A\00"
@global_var_29d64 = constant [53 x i8] c"%s: do not read out ASIC %d Hash Board temperature\0A\0A\00"
@global_var_29d9c = constant [28 x i8] c"\0AgGlobalHighestTemp is %d\0A\0A\00"
@global_var_29db8 = constant [26 x i8] c"gMaxTempGap_value is %d\0A\0A\00"
@global_var_29dd4 = constant [26 x i8] c"test_set_eeprom_val = %x\0A\00"
@global_var_235c48 = local_unnamed_addr global i32 0
@global_var_29df0 = constant [26 x i8] c"test_get_eeprom_val = %x\0A\00"
@global_var_7a120 = global i32 0
@global_var_29e0c = constant [36 x i8] c"The value write to eeprom : 0x%02X\0A\00"
@global_var_29e30 = constant [36 x i8] c"The value get from eeprom : 0x%02X\0A\00"
@global_var_29e54 = constant [18 x i8] c"Save eeprom Error\00"
@global_var_29e68 = constant [28 x i8] c"Get value from eeprom Error\00"
@global_var_29e84 = constant [36 x i8] c"save_voltage_info_to_eeprom failed!\00"
@global_var_2a044 = constant [47 x i8] c"--- %s on 7007, slave high = 0x%x, low = 0x%x\0A\00"
@global_var_2a088 = constant [9 x i8] c"open_i2c\00"
@global_var_235c40 = local_unnamed_addr global i32 0
@global_var_235c44 = local_unnamed_addr global i32 0
@global_var_2a074 = constant [8 x i8] c"--- %s\0A\00"
@global_var_2a07c = constant [10 x i8] c"close_i2c\00"
@global_var_2a094 = constant [22 x i8] c"%s: invalid chain id\0A\00"
@global_var_2a0c4 = constant [14 x i8] c"dcr_uart_send\00"
@global_var_2a0ac = constant [21 x i8] c"uart_set_config %d \0A\00"
@global_var_2a0f0 = constant [6 x i8] c"reset\00"
@global_var_2a0f8 = constant [9 x i8] c"ipreport\00"
@global_var_2a104 = local_unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2a0f0, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2a0f8, i32 0, i32 0)]
@global_var_2a108 = local_unnamed_addr constant [9 x i8]* @global_var_2a0f8
@global_var_2a0d4 = constant [16 x i8] c"%s key pressed\0A\00"
@global_var_235c4c = local_unnamed_addr global i32 0
@global_var_2a0e4 = constant [11 x i8] c"%s key up\0A\00"
@global_var_2a10c = constant [23 x i8] c"input value error: %c\0A\00"
@global_var_2a124 = constant [46 x i8] c"s2hex para error dst(%p), src(%p), inlen(%d)\0A\00"
@global_var_2a154 = constant [12 x i8] c"\0A%s begin\0A\0A\00"
@global_var_2a2b4 = constant [12 x i8] c"print_works\00"
@global_var_2a160 = constant [25 x i8] c"core[%02d][%02d].work=0x\00"
@global_var_2a17c = constant [5 x i8] c"%02x\00"
@global_var_2a184 = constant [15 x i8] c" nonce=0x%08x\0A\00"
@global_var_2a194 = constant [10 x i8] c"\0A%s end\0A\0A\00"
@global_var_2a1a0 = constant [31 x i8] c"asic[%02d][%02d][%02d].work=0x\00"
@global_var_2a1c8 = constant [5 x i8] c"work\00"
@global_var_2a1d0 = constant [13 x i8] c"get work err\00"
@global_var_2a1e0 = constant [38 x i8] c"%s, Conf.AsicNum %d, Conf.CoreNum %d\0A\00"
@global_var_2a2a8 = constant [10 x i8] c"get_works\00"
@global_var_2a208 = constant [29 x i8] c"%s: malloc struct work err!\0A\00"
@global_var_12a34 = local_unnamed_addr constant i32 2843500
@global_var_2a228 = constant [17 x i8] c"%s%02d%s%03d.txt\00"
@global_var_12a38 = local_unnamed_addr constant i32 2843436
@global_var_2a240 = constant [29 x i8] c"%s: Open test file %s error\0A\00"
@global_var_20128 = local_unnamed_addr constant i32 -1090470528
@global_var_2b67ac = local_unnamed_addr global i32 0
@global_var_3367ac = local_unnamed_addr global i32 0
@global_var_2a260 = constant [14 x i8] c"Get Less Work\00"
@global_var_2a270 = constant [54 x i8] c"%s: cgpu.subid[%d] = %d, is the least pattern number\0A\00"
@global_var_2a2c0 = constant [73 x i8] c"\0A--- %s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x\0A\0A\00"
@global_var_2aec4 = constant [33 x i8] c"set_PIC16F1704_flash_point32_ter\00"
@global_var_2a30c = constant [13 x i8] c"\0A--- %s ok\0A\0A\00"
@global_var_2aeac = constant [24 x i8] c"send_data_to_PIC16F1704\00"
@global_var_2a31c = constant [173 x i8] c"\0A--- %s failed! read_back_data[0] = 0x%x, read_back_data[1] = 0x%x, read_back_data[2] = 0x%x, read_back_data[3] = 0x%x, read_back_data[4] = 0x%x, read_back_data[5] = 0x%x\0A\0A\00"
@global_var_2ae88 = constant [34 x i8] c"read_PIC16F1704_flash_point32_ter\00"
@global_var_2a3cc = local_unnamed_addr constant [59 x i8] c"\0A--- %s ok! flash_addr_h = 0x%02x, flash_addr_l = 0x%02x\0A\0A\00"
@global_var_2a408 = constant [570 x i8] c"--- %s: read_back_data[0] = 0x%x, read_back_data[1] = 0x%x, read_back_data[2] = 0x%x, read_back_data[3] = 0x%x,         read_back_data[4] = 0x%x, read_back_data[5] = 0x%x, read_back_data[6] = 0x%x, read_back_data[7] = 0x%x,         read_back_data[8] = 0x%x, read_back_data[9] = 0x%x, read_back_data[10] = 0x%x, read_back_data[11] = 0x%x,         read_back_data[12] = 0x%x, read_back_data[13] = 0x%x, read_back_data[14] = 0x%x, read_back_data[15] = 0x%x,         read_back_data[16] = 0x%x, read_back_data[17] = 0x%x, read_back_data[18] = 0x%x, read_back_data[19] = 0x%x\0A\00"
@global_var_2ae6c = constant [27 x i8] c"read_PIC16F1704_flash_data\00"
@global_var_2a644 = constant [18 x i8] c"\0A--- %s failed!\0A\0A\00"
@global_var_2a658 = local_unnamed_addr constant [31 x i8] c"\0A--- %s failed! crc = 0x%04x\0A\0A\00"
@global_var_2ae54 = constant [23 x i8] c"erase_PIC16F1704_flash\00"
@global_var_2ae2c = constant [37 x i8] c"write_data_int32_to_PIC16F1704_flash\00"
@global_var_2ae08 = constant [35 x i8] c"jump_from_loader_to_app_PIC16F1704\00"
@global_var_2adf0 = constant [21 x i8] c"reset_PIC16F1704_pic\00"
@global_var_2a678 = constant [9 x i8] c"\0A--- %s\0A\00"
@global_var_2add8 = constant [23 x i8] c"set_PIC16F1704_voltage\00"
@global_var_61a80 = global i32 0
@global_var_2adbc = constant [25 x i8] c"write_hash_ID_PIC16F1704\00"
@global_var_2a684 = constant [451 x i8] c"--- %s: read_back_data[0] = 0x%x, read_back_data[1] = 0x%x, read_back_data[2] = 0x%x, read_back_data[3] = 0x%x,        read_back_data[4] = 0x%x, read_back_data[5] = 0x%x, read_back_data[6] = 0x%x, read_back_data[7] = 0x%x,        read_back_data[8] = 0x%x, read_back_data[9] = 0x%x, read_back_data[10] = 0x%x, read_back_data[11] = 0x%x,        read_back_data[12] = 0x%x, read_back_data[13] = 0x%x, read_back_data[14] = 0x%x, read_back_data[15] = 0x%x\0A\00"
@global_var_2ada4 = constant [24 x i8] c"read_hash_id_PIC16F1704\00"
@global_var_2ad8c = constant [24 x i8] c"enable_PIC16F1704_dc_dc\00"
@global_var_2ad74 = constant [22 x i8] c"heart_beat_PIC16F1704\00"
@global_var_2a848 = constant [138 x i8] c"--- %s: read_back_data[0] = 0x%x, read_back_data[1] = 0x%x, read_back_data[2] = 0x%x, read_back_data[3] = 0x%x, read_back_data[4] = 0x%x\0A\00"
@global_var_2ad54 = constant [32 x i8] c"get_PIC16F1704_software_version\00"
@global_var_2a8d4 = local_unnamed_addr constant [31 x i8] c"\0A--- %s ok, version = 0x%02x\0A\0A\00"
@global_var_2ad3c = constant [23 x i8] c"get_PIC16F1704_voltage\00"
@global_var_2a8f4 = local_unnamed_addr constant [31 x i8] c"\0A--- %s ok, voltage = 0x%02x\0A\0A\00"
@global_var_2ad18 = constant [36 x i8] c"write_temperature_offset_PIC16F1704\00"
@global_var_2a914 = constant [338 x i8] c"--- %s: read_back_data[0] = 0x%x, read_back_data[1] = 0x%x, read_back_data[2] = 0x%x, read_back_data[3] = 0x%x,         read_back_data[4] = 0x%x, read_back_data[5] = 0x%x, read_back_data[6] = 0x%x, read_back_data[7] = 0x%x,         read_back_data[8] = 0x%x, read_back_data[9] = 0x%x, read_back_data[10] = 0x%x, read_back_data[11] = 0x%x\0A\00"
@global_var_2acf4 = constant [35 x i8] c"read_temperature_offset_PIC16F1704\00"
@global_var_2aa68 = constant [21 x i8] c"%s: erase_loop = %d\0A\00"
@global_var_2acd8 = constant [27 x i8] c"erase_PIC16F1704_app_flash\00"
@global_var_2aa80 = constant [24 x i8] c"\0A--- update pic program\00"
@global_var_2aa98 = constant [29 x i8] c"/mnt/card/pic16f1704_app.txt\00"
@global_var_2aabc = constant [37 x i8] c"\0A%s: open pic16f1704_app.txt failed\0A\00"
@global_var_2acb8 = constant [31 x i8] c"PIC1704_update_pic_app_program\00"
@global_var_2aae4 = constant [23 x i8] c"pic_flash_length = %d\0A\00"
@global_var_2aafc = constant [27 x i8] c"!!! %s: reset pic error!\0A\0A\00"
@global_var_2ab18 = constant [29 x i8] c"!!! %s: erase flash error!\0A\0A\00"
@global_var_2ab38 = constant [39 x i8] c"!!! %s: set flash point32_ter error!\0A\0A\00"
@global_var_2ab60 = constant [27 x i8] c"send pic program time: %d\0A\00"
@global_var_2ab7c = constant [18 x i8] c"buf[%d] = 0x%02x\0A\00"
@global_var_2aca0 = constant [21 x i8] c"save_freq_PIC16F1704\00"
@global_var_2ab90 = constant [164 x i8] c"--- %s: read_back_data[0] = 0x%x, read_back_data[1] = 0x%x, read_back_data[2] = 0x%x, read_back_data[3] = 0x%x, read_back_data[4] = 0x%x, read_back_data[5] = 0x%x\0A\00"
@global_var_2ac8c = constant [20 x i8] c"get_PIC16F1704_freq\00"
@global_var_2ac34 = local_unnamed_addr constant [24 x i8] c"\0A--- %s ok, freq = %d\0A\0A\00"
@global_var_ac6c = constant [3 x i8] c"{y\00"
@global_var_2ac4c = constant [31 x i8] c"write_sensor_info_int32_to_pic\00"
@global_var_2aee8 = constant [8 x i8] c"--- %s\0A\00"
@global_var_2af50 = constant [12 x i8] c"check_chain\00"
@global_var_2aef0 = constant [22 x i8] c"platform init failed!\00"
@global_var_2af08 = constant [13 x i8] c"gChain = %d\0A\00"
@global_var_2af18 = constant [31 x i8] c"test zhiju only support 1 plug\00"
@global_var_2af38 = constant [23 x i8] c"no hash board inserted\00"
@global_var_235c50 = local_unnamed_addr global i32 0
@global_var_2af64 = local_unnamed_addr constant [12 x i8] c"fan_control\00"
@global_var_2af70 = constant [24 x i8] c"/sys/class/gpio/gpio907\00"
@global_var_2af88 = constant [34 x i8] c"echo 907 > /sys/class/gpio/export\00"
@global_var_2afac = constant [45 x i8] c"echo out > /sys/class/gpio/gpio907/direction\00"
@global_var_2afdc = constant [13 x i8] c"init gpio907\00"
@global_var_2afec = constant [39 x i8] c"echo 0 > /sys/class/gpio/gpio907/value\00"
@global_var_2b014 = constant [39 x i8] c"echo 1 > /sys/class/gpio/gpio907/value\00"
@global_var_2b03c = constant [40 x i8] c"power protocal %02x, using package cmd\0A\00"
@global_var_2b064 = constant [39 x i8] c"power protocal %02x, using simple cmd\0A\00"
@global_var_2b08c = constant [16 x i8] c"power init ... \00"
@global_var_2b09c = constant [24 x i8] c"power reply data error:\00"
@global_var_2b0b4 = constant [6 x i8] c"%02x \00"
@global_var_2b0bc = constant [52 x i8] c"power reply crc error, crc %04x != crc_reply %04x:\0A\00"
@global_var_2b0f0 = constant [24 x i8] c"%s, reply_buf[%d]=%02x\0A\00"
@global_var_2b2c0 = constant [15 x i8] c"power_send_cmd\00"
@global_var_2b108 = constant [50 x i8] c"power send cmd 0x%02x failed, retry for %d times\0A\00"
@global_var_2b164 = local_unnamed_addr constant i32 17082965
@global_var_2b168 = local_unnamed_addr constant i32 5
@global_var_2b13c = constant [37 x i8] c"power firmware version is %02x %02x\0A\00"
@global_var_2b18c = local_unnamed_addr constant i32 33860181
@global_var_2b190 = local_unnamed_addr constant i32 6
@global_var_2b16c = constant [30 x i8] c"power device no is %02x %02x\0A\00"
@global_var_2b1b0 = local_unnamed_addr constant i32 50637397
@global_var_2b1b4 = local_unnamed_addr constant i32 7
@global_var_2b194 = constant [28 x i8] c"power get da value is %02x\0A\00"
@global_var_2b1b8 = constant [22 x i8] c"power da value is %d\0A\00"
@global_var_2b1f0 = local_unnamed_addr constant i32 67414613
@global_var_2b1f4 = local_unnamed_addr constant i32 8
@global_var_2b1d0 = constant [29 x i8] c"power get adc value is %02x\0A\00"
@global_var_b22c = constant i32 415432795
@global_var_2b1f8 = constant [52 x i8] c"%s, %02x, %02x, %02x, %02x, %02x, %02x, %02x, %02x\0A\00"
@global_var_2b2ac = constant [19 x i8] c"power_set_da_value\00"
@global_var_2b234 = constant [35 x i8] c"invalid param addr 0x%02x, len %d\0A\00"
@global_var_2b258 = constant [26 x i8] c"save eeprom data success \00"
@global_var_2b274 = constant [25 x i8] c"save eeprom data failed \00"
@global_var_2b2a4 = local_unnamed_addr constant i32 101100117
@global_var_2b2a8 = local_unnamed_addr constant i32 0
@global_var_2b290 = constant [18 x i8] c"read eeprom data:\00"
@global_var_8a2e = global i32* bitcast (i1* @global_var_100000 to i32*)
@global_var_1a3ec = local_unnamed_addr constant i32 320440878
@global_var_2e0000 = local_unnamed_addr global i32 0
@global_var_1a410 = local_unnamed_addr constant i32 -914599715
@global_var_2b390 = constant i32 0
@global_var_b2d0 = constant i32 -134414285
@global_var_b810 = constant [3 x i8] c"(H\00"
@global_var_2b2f0 = constant i32 1779033703
@global_var_2b310 = constant i32 -1056596264
@global_var_2b820 = constant i32 0
@SHA512_at_2b350 = constant [8 x i64] [i64 7640891576956012808, i64 -4942790177534073029, i64 4354685564936845355, i64 -6534734903238641935, i64 5840696475078001361, i64 -7276294671716946913, i64 2270897969802886507, i64 6620516959819538809]
@global_var_2b840 = constant [6 x i8] c"%s:%d\00"
@global_var_2baf4 = constant [25 x i8] c"platform_dump_capability\00"
@global_var_2b848 = constant [69 x i8] c"==========================capability start==========================\00"
@global_var_2b890 = constant [16 x i8] c"board num = %d\0A\00"
@global_var_2b8a0 = constant [31 x i8] c"board id = %d, chain num = %d\0A\00"
@global_var_2b8c0 = constant [16 x i8] c"\09chain id = %d\0A\00"
@global_var_2b8d0 = constant [69 x i8] c"==========================capability end============================\00"
@global_var_235c54 = local_unnamed_addr global i32 0
@global_var_2bae4 = constant [14 x i8] c"platform_init\00"
@global_var_2b918 = constant [17 x i8] c"fpga init failed\00"
@global_var_2b92c = constant [17 x i8] c"gpio init failed\00"
@global_var_235c5c = global i32 0
@global_var_2b940 = constant [16 x i8] c"HAL_CONFIG_PATH\00"
@global_var_2b950 = constant [15 x i8] c"/media/card/%s\00"
@global_var_2b960 = constant [14 x i8] c"hal_conf.json\00"
@global_var_2b970 = constant [6 x i8] c"%s/%s\00"
@global_var_2b978 = constant [22 x i8] c"hal config path = %s\0A\00"
@global_var_2b990 = constant [26 x i8] c"failed to load hal config\00"
@global_var_2b9ac = constant [26 x i8] c"Cannot Find Any Plug In!\0D\00"
@global_var_235c58 = local_unnamed_addr global i32 0
@global_var_2b9c8 = constant [24 x i8] c"HASH_ON_PLUG T9 = 0x%x\0A\00"
@global_var_2b9e0 = constant [24 x i8] c"HASH_ON_PLUG V9 = 0x%x\0A\00"
@global_var_2b9f8 = constant [16 x i8] c"slot %d pluged\0A\00"
@global_var_35550 = local_unnamed_addr global i32 0
@global_var_357e4 = local_unnamed_addr global i32 0
@global_var_2ba08 = constant [25 x i8] c"HARDWARE_VERSION = 0x%x\0A\00"
@global_var_2bad8 = constant [12 x i8] c"get_eth_mac\00"
@global_var_2ba24 = constant [11 x i8] c"error sock\00"
@global_var_8927 = constant [13 x i8] c"gettimeofday\00"
@global_var_2ba30 = constant [12 x i8] c"error ioctl\00"
@global_var_2ba3c = constant [5 x i8] c"eth0\00"
@global_var_35580 = local_unnamed_addr global i32 13
@global_var_35814 = local_unnamed_addr global i32 13
@global_var_2bac4 = constant [18 x i8] c"get_hardware_type\00"
@global_var_2ba44 = constant [20 x i8] c"platform not inited\00"
@global_var_2bab0 = constant [18 x i8] c"set_hardware_type\00"
@global_var_2ba9c = constant [19 x i8] c"enable_bypass_mode\00"
@global_var_2ba88 = constant [20 x i8] c"disable_bypass_mode\00"
@global_var_2ba70 = constant [22 x i8] c"is_bypass_mode_enable\00"
@global_var_2ba58 = constant [21 x i8] c"get_hardware_version\00"
@global_var_2bb10 = constant [6 x i8] c"%s:%d\00"
@global_var_2bb70 = constant [9 x i8] c"fan_init\00"
@global_var_2bb18 = constant [29 x i8] c"please init platform first!!\00"
@global_var_35554 = local_unnamed_addr global i32 1
@global_var_357e8 = local_unnamed_addr global i32 1
@global_var_2bb38 = constant [29 x i8] c"FAN_SPEED fpga value = 0x%x\0A\00"
@global_var_2bb7c = constant [6 x i8] c"%s:%d\00"
@global_var_2bc5c = constant [6 x i8] c"reset\00"
@global_var_2bb84 = constant [19 x i8] c"fpga reset success\00"
@global_var_235d80 = local_unnamed_addr global i32 0
@global_var_2bb98 = constant [18 x i8] c"/dev/axi_fpga_dev\00"
@global_var_235d84 = local_unnamed_addr global i32 0
@global_var_2bc50 = constant [10 x i8] c"fpga_init\00"
@global_var_2bbac = constant [40 x i8] c"/dev/axi_fpga_dev open failed. fd = %d\0A\00"
@global_var_235d88 = local_unnamed_addr global i32 0
@global_var_2bbd4 = constant [49 x i8] c"mmap axi_fpga_addr failed. axi_fpga_addr = 0x%x\0A\00"
@global_var_2bc08 = constant [41 x i8] c"fpga_init success. axi_fpga_addr = 0x%x\0A\00"
@global_var_2bc44 = constant [12 x i8] c"fpga_uninit\00"
@global_var_235db0 = global i32 0
@global_var_235dc8 = local_unnamed_addr global i32 0
@global_var_2bc68 = constant [6 x i8] c"%s:%d\00"
@global_var_2c0b8 = constant [21 x i8] c"gpio_thread_function\00"
@global_var_2bc70 = constant [29 x i8] c"failed to read gpio port %d\0A\00"
@global_var_2bc90 = constant [43 x i8] c"gpio port %d, last val = %d, new val = %d\0A\00"
@global_var_2bc64 = local_unnamed_addr constant i32 200
@global_var_235d90 = local_unnamed_addr global i32 0
@global_var_235d8c = global i32 0
@global_var_2c0ac = constant [10 x i8] c"gpio_init\00"
@global_var_2bcbc = constant [13 x i8] c"gpio re init\00"
@global_var_cba1 = constant i32 1166207216
@global_var_235d98 = global i32 0
@global_var_235d94 = global i32 0
@global_var_2c098 = constant [18 x i8] c"gpio_reg_callback\00"
@global_var_2bccc = constant [10 x i8] c"bad param\00"
@global_var_2bcd8 = constant [29 x i8] c"fail to lock gpio ctrl mutex\00"
@global_var_2bcf8 = constant [24 x i8] c"add %d to callback map\0A\00"
@global_var_2bd10 = constant [40 x i8] c"port %d already exist in callback map \0A\00"
@global_var_2c084 = constant [20 x i8] c"gpio_unreg_callback\00"
@global_var_2bd38 = constant [30 x i8] c"remove %d from callback list\0A\00"
@global_var_2bd58 = constant [40 x i8] c"callback function not registered before\00"
@global_var_c078 = constant [3 x i8] c"eH\00"
@global_var_2bd80 = constant [19 x i8] c"failed to api lock\00"
@global_var_2bd94 = constant [23 x i8] c"/sys/class/gpio/gpio%d\00"
@global_var_2bdac = constant [26 x i8] c"port %d already exported\0A\00"
@global_var_2bdc8 = constant [13 x i8] c"access error\00"
@global_var_2bdd8 = constant [23 x i8] c"/sys/class/gpio/export\00"
@global_var_2bdf0 = constant [35 x i8] c"Failed to open export for writing!\00"
@global_var_2be14 = constant [3 x i8] c"%d\00"
@global_var_2be18 = constant [26 x i8] c"Failed to export gpio %d!\00"
@global_var_2be34 = constant [24 x i8] c"export gpio %d success\0A\00"
@global_var_2c068 = constant [14 x i8] c"gpio_unexport\00"
@global_var_2be4c = constant [38 x i8] c"port %d already unexported, ret = %d\0A\00"
@global_var_2be74 = constant [25 x i8] c"/sys/class/gpio/unexport\00"
@global_var_2be90 = constant [37 x i8] c"Failed to open unexport for writing!\00"
@global_var_2beb8 = constant [28 x i8] c"Failed to unexport gpio %d!\00"
@global_var_2bed4 = constant [26 x i8] c"unexport gpio %d success\0A\00"
@global_var_2c050 = constant [15 x i8] c"gpio_direction\00"
@global_var_2bef0 = constant [33 x i8] c"/sys/class/gpio/gpio%d/direction\00"
@global_var_2bf14 = constant [47 x i8] c"Failed to open gpio %d direction for writing!\0A\00"
@global_var_2c060 = constant [3 x i8] c"in\00"
@global_var_2bf44 = constant [38 x i8] c"Failed to set gpio %d direction %s !\0A\00"
@global_var_2bf6c = constant [35 x i8] c"set gpio %d direction %s success!\0A\00"
@global_var_2c044 = constant [10 x i8] c"gpio_read\00"
@global_var_2bf90 = constant [29 x i8] c"/sys/class/gpio/gpio%d/value\00"
@global_var_2bfb0 = constant [43 x i8] c"Failed to open gpio %d value for reading!\0A\00"
@global_var_2bfdc = constant [22 x i8] c"Failed to read value!\00"
@global_var_2c034 = constant [11 x i8] c"gpio_write\00"
@global_var_2bff4 = constant [39 x i8] c"Failed to open gpio value for writing!\00"
@global_var_2c040 = constant [3 x i8] c"01\00"
@global_var_2c01c = constant [23 x i8] c"Failed to write value!\00"
@global_var_235dcc = global i32 0
@global_var_2c0d0 = constant [6 x i8] c"%s:%d\00"
@global_var_2c1d4 = constant [9 x i8] c"iic_init\00"
@global_var_2c0d8 = constant [19 x i8] c"failed to iic lock\00"
@global_var_2c0ec = constant [10 x i8] c"bad param\00"
@global_var_2c0f8 = constant [19 x i8] c"failed to i2c_init\00"
@global_var_2c10c = constant [67 x i8] c"i2c chain = %d, master = 0x%x, slave high= 0x%x, slave low = 0x%x\0A\00"
@global_var_2c150 = constant [21 x i8] c"failed to i2c_select\00"
@global_var_2c168 = constant [20 x i8] c"failed to i2c_ioctl\00"
@global_var_2c1c8 = constant [11 x i8] c"iic_uninit\00"
@global_var_2c17c = constant [19 x i8] c"failed to i2c lock\00"
@global_var_2c1bc = constant [9 x i8] c"iic_read\00"
@global_var_2c1b0 = constant [10 x i8] c"iic_write\00"
@global_var_2c1a0 = constant [13 x i8] c"iic_read_reg\00"
@global_var_2c190 = constant [14 x i8] c"iic_write_reg\00"
@global_var_2c1e0 = constant [6 x i8] c"%s:%d\00"
@global_var_2c264 = constant [9 x i8] c"pwm_init\00"
@global_var_2c1e8 = constant [29 x i8] c"please init platform first!!\00"
@global_var_235de4 = global i32 0
@global_var_2c258 = constant [11 x i8] c"pwm_uninit\00"
@global_var_2c250 = constant [8 x i8] c"pwm_set\00"
@global_var_35598 = local_unnamed_addr global [7 x i32] %wide-string
@global_var_3582c = local_unnamed_addr global [7 x i32] %wide-string
@global_var_2c248 = constant [8 x i8] c"pwm_get\00"
@global_var_2c230 = constant [21 x i8] c"duty of fpga = 0x%x\0A\00"
@global_var_1de1c = local_unnamed_addr constant i32 122765
@global_var_1de20 = local_unnamed_addr constant i32 122821
@global_var_3560c = local_unnamed_addr global i32 100
@global_var_35618 = local_unnamed_addr global i32 103
@global_var_355fc = local_unnamed_addr global i32 96
@global_var_35614 = local_unnamed_addr global i32 102
@global_var_3561c = local_unnamed_addr global i32 104
@global_var_35620 = local_unnamed_addr global i32 105
@global_var_35624 = local_unnamed_addr global i32 106
@global_var_35628 = local_unnamed_addr global i32 107
@global_var_35600 = local_unnamed_addr global i32 97
@global_var_3562c = local_unnamed_addr global i32 108
@global_var_35630 = local_unnamed_addr global i32 109
@global_var_35634 = local_unnamed_addr global i32 110
@global_var_35638 = local_unnamed_addr global i32 111
@global_var_3563c = local_unnamed_addr global i32 112
@global_var_35640 = local_unnamed_addr global i32 113
@global_var_35644 = local_unnamed_addr global i32 114
@global_var_35648 = local_unnamed_addr global i32 115
@global_var_35604 = local_unnamed_addr global i32 98
@global_var_3564c = local_unnamed_addr global i32 116
@global_var_35650 = local_unnamed_addr global i32 117
@global_var_35654 = local_unnamed_addr global i32 118
@global_var_35658 = local_unnamed_addr global i32 119
@global_var_356c8 = local_unnamed_addr global i32 152
@global_var_356cc = local_unnamed_addr global i32 153
@global_var_356d0 = local_unnamed_addr global i32 154
@global_var_356d4 = local_unnamed_addr global i32 155
@global_var_35608 = local_unnamed_addr global i32 99
@global_var_356d8 = local_unnamed_addr global i32 156
@global_var_356dc = local_unnamed_addr global i32 157
@global_var_356e0 = local_unnamed_addr global i32 158
@global_var_356e4 = local_unnamed_addr global i32 159
@global_var_2c270 = constant [6 x i8] c"%s:%d\00"
@global_var_2c5ac = constant [22 x i8] c"get_send_address_info\00"
@global_var_2c278 = constant [37 x i8] c"%s: The uart %d is not supported!!!\0A\00"
@global_var_1e19c = local_unnamed_addr constant i32 123489
@global_var_358a0 = local_unnamed_addr global i32 100
@global_var_358a4 = local_unnamed_addr global i32 101
@global_var_35890 = local_unnamed_addr global i32 96
@global_var_358a8 = local_unnamed_addr global i32 102
@global_var_358ac = local_unnamed_addr global i32 103
@global_var_358b0 = local_unnamed_addr global i32 104
@global_var_358b4 = local_unnamed_addr global i32 105
@global_var_358b8 = local_unnamed_addr global i32 106
@global_var_358bc = local_unnamed_addr global i32 107
@global_var_35894 = local_unnamed_addr global i32 97
@global_var_358c0 = local_unnamed_addr global i32 108
@global_var_358c4 = local_unnamed_addr global i32 109
@global_var_358c8 = local_unnamed_addr global i32 110
@global_var_358cc = local_unnamed_addr global i32 111
@global_var_358d0 = local_unnamed_addr global i32 112
@global_var_358d4 = local_unnamed_addr global i32 113
@global_var_358d8 = local_unnamed_addr global i32 114
@global_var_358dc = local_unnamed_addr global i32 115
@global_var_35898 = local_unnamed_addr global i32 98
@global_var_358e0 = local_unnamed_addr global i32 116
@global_var_358e4 = local_unnamed_addr global i32 117
@global_var_358e8 = local_unnamed_addr global i32 118
@global_var_358ec = local_unnamed_addr global i32 119
@global_var_1e46c = local_unnamed_addr constant i32 124391
@global_var_1e48c = local_unnamed_addr constant i32 124355
@global_var_3567c = local_unnamed_addr global i32 133
@global_var_3568c = local_unnamed_addr global i32 137
@global_var_35694 = local_unnamed_addr global i32 139
@global_var_356bc = local_unnamed_addr global i32 149
@global_var_356f4 = local_unnamed_addr global i32 167
@global_var_356fc = local_unnamed_addr global i32 169
@global_var_2c594 = constant [22 x i8] c"get_read_address_info\00"
@global_var_2c2a0 = constant [36 x i8] c"%s: The uart%d is not supported!!!\0A\00"
@global_var_1e648 = local_unnamed_addr constant i32 124739
@global_var_3590c = local_unnamed_addr global i32 132
@global_var_35910 = local_unnamed_addr global i32 133
@global_var_35914 = local_unnamed_addr global i32 134
@global_var_35918 = local_unnamed_addr global i32 135
@global_var_3591c = local_unnamed_addr global i32 136
@global_var_35920 = local_unnamed_addr global i32 137
@global_var_35924 = local_unnamed_addr global i32 138
@global_var_35928 = local_unnamed_addr global i32 139
@global_var_3592c = local_unnamed_addr global i32 140
@global_var_35930 = local_unnamed_addr global i32 141
@global_var_35934 = local_unnamed_addr global i32 142
@global_var_35938 = local_unnamed_addr global i32 143
@global_var_3593c = local_unnamed_addr global i32 144
@global_var_35940 = local_unnamed_addr global i32 145
@global_var_35944 = local_unnamed_addr global i32 146
@global_var_35948 = local_unnamed_addr global i32 147
@global_var_3594c = local_unnamed_addr global i32 148
@global_var_35950 = local_unnamed_addr global i32 149
@global_var_35954 = local_unnamed_addr global i32 150
@global_var_35958 = local_unnamed_addr global i32 151
@global_var_1e834 = local_unnamed_addr constant i32 125241
@global_var_2c570 = constant [33 x i8] c"check_how_many_uart_data_in_fpga\00"
@global_var_358f0 = local_unnamed_addr global i32 124
@global_var_358f4 = local_unnamed_addr global i32 125
@global_var_358f8 = local_unnamed_addr global i32 126
@global_var_358fc = local_unnamed_addr global i32 127
@global_var_35900 = local_unnamed_addr global i32 128
@global_var_2c558 = constant [23 x i8] c"read_uart_data_in_fpga\00"
@global_var_2c2c4 = constant [44 x i8] c"get_read_address_info error, chain_id = %d\0A\00"
@global_var_2c2f0 = constant [50 x i8] c"%s: the uart%d left data is 4*N length, error!!!\0A\00"
@global_var_2c54c = constant [10 x i8] c"uart_init\00"
@global_var_2c324 = constant [29 x i8] c"please init platform first!!\00"
@global_var_2c344 = constant [30 x i8] c"Dumping %u %s bytes from %p:\0A\00"
@global_var_2c364 = constant [6 x i8] c"%02x \00"
@global_var_202020 = global i32 0
@0 = constant i32* @global_var_202020
@global_var_235df4 = global i32 0
@global_var_2c540 = constant [10 x i8] c"uart_send\00"
@global_var_2c370 = constant [44 x i8] c"get_send_address_info error, chain_id = %d\0A\00"
@global_var_2c39c = local_unnamed_addr constant [55 x i8] c"%s: the uart%d send left data is 4*N length, error!!!\0A\00"
@global_var_235f74 = global i32 0
@global_var_35588 = local_unnamed_addr global i32 15
@global_var_3581c = local_unnamed_addr global i32 15
@global_var_2c530 = constant [16 x i8] c"uart_set_config\00"
@global_var_2c3d4 = constant [30 x i8] c"unknown set config type = %d\0A\00"
@global_var_2c520 = constant [16 x i8] c"uart_get_config\00"
@global_var_2c3f4 = local_unnamed_addr constant [27 x i8] c"uart_get_config return %d\0A\00"
@global_var_2c50c = constant [19 x i8] c"clear_uart_tx_fifo\00"
@global_var_2c410 = constant [51 x i8] c"%s: waiting fpga uart%d clear send fifo space ...\0A\00"
@global_var_2c444 = constant [62 x i8] c"%s: uart%d always dose not has enough send fifo space, break\0A\00"
@global_var_2c4f8 = constant [19 x i8] c"clear_uart_rx_fifo\00"
@global_var_2c484 = constant [32 x i8] c"%s: uart%d malloc buffer error\0A\00"
@global_var_2c4a4 = constant [55 x i8] c"%s: uart%d clear rx fifo error. nbytes = %d, len = %d\0A\00"
@global_var_2c4ec = constant [11 x i8] c"uart_flush\00"
@global_var_2c4dc = constant [15 x i8] c"flush uart %d\0A\00"
@global_var_2360f4 = global i32 0
@global_var_23610c = local_unnamed_addr global i32 0
@global_var_2c5c4 = local_unnamed_addr constant i32 200
@global_var_236114 = local_unnamed_addr global i32 0
@global_var_2c5dc = constant [6 x i8] c"%s:%d\00"
@global_var_2c874 = constant [18 x i8] c"gpio_key_callback\00"
@global_var_2c5e4 = constant [37 x i8] c"gpio port %d is not a supported key\0A\00"
@global_var_23611c = global i32 0
@global_var_236110 = local_unnamed_addr global i32 0
@global_var_2c86c = constant [8 x i8] c"ui_init\00"
@global_var_2c60c = constant [17 x i8] c"gpio init failed\00"
@global_var_236118 = global i32 0
@global_var_2c850 = constant [26 x i8] c"remove_port_form_gpio_map\00"
@global_var_2c620 = constant [29 x i8] c"remove %d from flicker list\0A\00"
@global_var_2c838 = constant [21 x i8] c"add_port_to_gpio_map\00"
@global_var_2c640 = constant [40 x i8] c"add %d to flicker map with interval %d\0A\00"
@global_var_2c668 = constant [30 x i8] c"port %d already exist in map\0A\00"
@global_var_2c824 = constant [20 x i8] c"update_filcker_freq\00"
@global_var_2c688 = constant [52 x i8] c"update the freq interval of port[%d] from %d to %d\0A\00"
@global_var_2c814 = constant [13 x i8] c"gpio_ctrl_ui\00"
@global_var_2c6bc = constant [21 x i8] c"unsuported gpio port\00"
@global_var_2c6d4 = constant [38 x i8] c"ui type = %d, port = %d, status = %d\0A\00"
@global_var_2c6fc = constant [19 x i8] c"failed to api lock\00"
@global_var_2c710 = constant [22 x i8] c"unsuported led status\00"
@global_var_2c7f8 = constant [25 x i8] c"gpio_set_led_filker_freq\00"
@global_var_2c728 = constant [20 x i8] c"unsuported led port\00"
@global_var_2c73c = constant [30 x i8] c"interval is same with default\00"
@global_var_2c7e4 = constant [17 x i8] c"reg_key_callback\00"
@global_var_2c75c = constant [27 x i8] c"no more listener available\00"
@global_var_2c7d0 = constant [19 x i8] c"unreg_key_callback\00"
@global_var_2c778 = constant [31 x i8] c"listener not registered before\00"
@global_var_2c7c0 = constant [16 x i8] c"lcd_show_result\00"
@global_var_35a78 = local_unnamed_addr global i32 -1
@global_var_2c5c8 = constant [17 x i8] c"/dev/bitmain-lcd\00"
@global_var_35a7c = local_unnamed_addr global [17 x i8]* @global_var_2c5c8
@global_var_2c798 = constant [19 x i8] c"failed to init %s\0A\00"
@global_var_2c7ac = constant [17 x i8] c"lcd_clear_result\00"
@global_var_236134 = local_unnamed_addr global i32 0
@global_var_2c888 = constant [6 x i8] c"%s:%d\00"
@global_var_2c8fc = constant [9 x i8] c"lcd_init\00"
@global_var_2c890 = constant [10 x i8] c"bad param\00"
@global_var_236130 = local_unnamed_addr global i32 0
@global_var_2c89c = constant [19 x i8] c"open lcd failed!!!\00"
@global_var_2c8f0 = constant [10 x i8] c"lcd_write\00"
@global_var_236138 = global i32 0
@global_var_2c8b0 = constant [19 x i8] c"failed to lcd lock\00"
@global_var_236150 = global i32 0
@global_var_2c8e4 = constant [10 x i8] c"lcd_clear\00"
@global_var_2c8d8 = constant [11 x i8] c"lcd_uninit\00"
@global_var_2c8c4 = constant [20 x i8] c"lcd close failed!!!\00"
@global_var_2c908 = constant [6 x i8] c"%s:%d\00"
@global_var_2caec = constant [9 x i8] c"i2c_init\00"
@global_var_2c910 = constant [29 x i8] c"please init platform first!!\00"
@global_var_2361ac = local_unnamed_addr global i32 0
@global_var_2361a8 = global i32 0
@global_var_236190 = global i32 0
@global_var_2cae0 = constant [11 x i8] c"i2c_uninit\00"
@global_var_2c930 = constant [19 x i8] c"failed to i2c lock\00"
@global_var_2c944 = constant [30 x i8] c"remove %d from callback list\0A\00"
@global_var_2c964 = constant [23 x i8] c"ctx(%d) is not inited\0A\00"
@global_var_2c97c = constant [17 x i8] c"all i2c uninited\00"
@global_var_2c990 = local_unnamed_addr constant [21 x i8] c"still have %d nodes\0A\00"
@global_var_3557c = local_unnamed_addr global i32 12
@global_var_35810 = local_unnamed_addr global i32 12
@global_var_2cad4 = constant [9 x i8] c"i2c_read\00"
@global_var_2c9a8 = constant [22 x i8] c"iic not ready 4 read1\00"
@global_var_2c9c0 = constant [22 x i8] c"iic not ready 4 read2\00"
@global_var_2c9d8 = constant [19 x i8] c"ctx %d not inited\0A\00"
@global_var_2cac8 = constant [10 x i8] c"i2c_write\00"
@global_var_2c9ec = constant [22 x i8] c"iic not ready 4 write\00"
@global_var_2cab8 = constant [13 x i8] c"i2c_read_reg\00"
@global_var_2ca04 = constant [48 x i8] c"more than one byte reg address is not supported\00"
@global_var_2ca34 = constant [24 x i8] c"iic failed to read data\00"
@global_var_2caa8 = constant [14 x i8] c"i2c_write_reg\00"
@global_var_2ca9c = constant [10 x i8] c"i2c_ioctl\00"
@global_var_2ca4c = constant [32 x i8] c"update the slave address to %d\0A\00"
@global_var_2ca90 = constant [11 x i8] c"i2c_select\00"
@global_var_2ca6c = constant [33 x i8] c"update the master address to %d\0A\00"
@global_var_2361b4 = global i32 0
@global_var_2362b4 = global i32 0
@global_var_2caf8 = constant [6 x i8] c"%s:%d\00"
@global_var_2cc44 = constant [14 x i8] c"hal_load_conf\00"
@global_var_2cb00 = constant [23 x i8] c"%s,%d bad json format\0A\00"
@global_var_2cb18 = constant [29 x i8] c"platform/7007/src/hal_conf.c\00"
@global_var_2cb38 = constant [12 x i8] c"json = %s \0A\00"
@global_var_2cb44 = constant [6 x i8] c"chain\00"
@global_var_2cb4c = constant [24 x i8] c"%s,%d bad chain format\0A\00"
@global_var_2cb64 = constant [27 x i8] c"%s,%d bad object in chain\0A\00"
@global_var_2cb80 = constant [3 x i8] c"id\00"
@global_var_2cb84 = constant [5 x i8] c"uart\00"
@global_var_2cb8c = constant [5 x i8] c"plug\00"
@global_var_2cb94 = constant [6 x i8] c"reset\00"
@global_var_2cb9c = constant [4 x i8] c"fan\00"
@global_var_2cba0 = constant [22 x i8] c"%s,%d bad fan format\0A\00"
@global_var_2cbb8 = constant [25 x i8] c"%s,%d bad object in fan\0A\00"
@global_var_2cbd4 = constant [5 x i8] c"name\00"
@global_var_2cbdc = constant [4 x i8] c"max\00"
@global_var_2cbe0 = constant [4 x i8] c"red\00"
@global_var_2cbe4 = constant [15 x i8] c"%s,%d bad red\0A\00"
@global_var_2362fc = local_unnamed_addr global i32 0
@global_var_2cbf4 = constant [6 x i8] c"green\00"
@global_var_2cbfc = constant [17 x i8] c"%s,%d bad green\0A\00"
@global_var_236300 = local_unnamed_addr global i32 0
@global_var_2cc10 = constant [17 x i8] c"%s,%d bad reset\0A\00"
@global_var_236304 = local_unnamed_addr global i32 0
@global_var_2cc24 = constant [9 x i8] c"ipreport\00"
@global_var_2cc30 = constant [20 x i8] c"%s,%d bad ipreport\0A\00"
@global_var_236308 = local_unnamed_addr global i32 0
@global_var_2361b0 = local_unnamed_addr global i32 0
@global_var_2cc54 = constant [65 x i8] c"debug_node_color(pTree,n) == 1 || debug_node_color(pTree,n) == 0\00"
@global_var_2cc98 = constant [25 x i8] c"3rdparty/cstl/src/c_rb.c\00"
@global_var_2cdc4 = constant [24 x i8] c"debug_verify_property_1\00"
@global_var_2ccb4 = constant [34 x i8] c"debug_node_color(pTree,root) == 0\00"
@global_var_2cdac = constant [24 x i8] c"debug_verify_property_2\00"
@global_var_2ccd8 = constant [37 x i8] c"debug_node_color(pTree,n->left) == 0\00"
@global_var_2cd94 = constant [24 x i8] c"debug_verify_property_4\00"
@global_var_2cd00 = constant [38 x i8] c"debug_node_color(pTree,n->right) == 0\00"
@global_var_2cd28 = constant [39 x i8] c"debug_node_color(pTree,n->parent) == 0\00"
@global_var_2cd50 = constant [33 x i8] c"black_count == *path_black_count\00"
@global_var_2cd74 = constant [31 x i8] c"debug_verify_property_5_helper\00"
@global_var_2cddc = local_unnamed_addr constant [33 x i8] c"                                \00"
@global_var_2ce04 = constant i32 32
@global_var_2ce0c = local_unnamed_addr constant [3 x i8] c"\5C\5C\00"
@global_var_2ce10 = local_unnamed_addr constant [3 x i8] c"\5C\22\00"
@global_var_2ce14 = local_unnamed_addr constant [3 x i8] c"\5Cb\00"
@global_var_2ce18 = local_unnamed_addr constant [3 x i8] c"\5Cf\00"
@global_var_2ce1c = local_unnamed_addr constant [3 x i8] c"\5Cn\00"
@global_var_2ce20 = local_unnamed_addr constant [3 x i8] c"\5Cr\00"
@global_var_2ce24 = local_unnamed_addr constant [3 x i8] c"\5Ct\00"
@global_var_2ce28 = local_unnamed_addr constant [3 x i8] c"\5C/\00"
@global_var_2ce2c = local_unnamed_addr constant [7 x i8] c"\5Cu%04x\00"
@global_var_ffc00 = local_unnamed_addr global i32 0
@global_var_2ce34 = local_unnamed_addr constant [13 x i8] c"\5Cu%04x\5Cu%04x\00"
@global_var_2ce44 = local_unnamed_addr constant [5 x i8] c"null\00"
@global_var_2ce4c = local_unnamed_addr constant [5 x i8] c"true\00"
@global_var_2ce54 = local_unnamed_addr constant [6 x i8] c"false\00"
@global_var_2ce5c = local_unnamed_addr constant [5 x i8] c"%lld\00"
@global_var_2ce68 = local_unnamed_addr constant i32 93
@global_var_2ce70 = local_unnamed_addr constant i32 58
@global_var_2ce74 = local_unnamed_addr constant [3 x i8] c": \00"
@global_var_2ce7c = local_unnamed_addr constant i32 125
@global_var_2ce80 = local_unnamed_addr constant [10 x i8] c"i == size\00"
@global_var_2ce8c = local_unnamed_addr constant [32 x i8] c"3rdparty/jansson-2.6/src/dump.c\00"
@global_var_2ceb8 = local_unnamed_addr constant [8 x i8] c"do_dump\00"
@global_var_2ceac = local_unnamed_addr constant [6 x i8] c"value\00"
@global_var_2cec0 = constant i32 5
@global_var_2cf34 = constant [13 x i8] c"%s near '%s'\00"
@global_var_2cf44 = constant [20 x i8] c"%s near end of file\00"
@global_var_2cf58 = constant [3 x i8] c"%s\00"
@global_var_2cf5c = constant [11 x i8] c"count >= 2\00"
@global_var_2cf68 = constant [32 x i8] c"3rdparty/jansson-2.6/src/load.c\00"
@global_var_2d2a0 = constant [11 x i8] c"stream_get\00"
@global_var_2cf88 = constant [27 x i8] c"unable to decode byte 0x%x\00"
@global_var_2cfa4 = constant [23 x i8] c"stream->buffer_pos > 0\00"
@global_var_2d290 = constant [13 x i8] c"stream_unget\00"
@global_var_2cfbc = constant [40 x i8] c"stream->buffer[stream->buffer_pos] == c\00"
@global_var_2cfe4 = constant [7 x i8] c"c == d\00"
@global_var_2d27c = constant [17 x i8] c"lex_unget_unsave\00"
@global_var_2cfec = constant [14 x i8] c"str[0] == 'u'\00"
@global_var_2d264 = constant [22 x i8] c"decode_unicode_escape\00"
@global_var_2d000 = constant [23 x i8] c"premature end of input\00"
@global_var_2d018 = constant [19 x i8] c"unexpected newline\00"
@global_var_2d02c = constant [23 x i8] c"control character 0x%x\00"
@global_var_2d044 = constant [15 x i8] c"invalid escape\00"
@global_var_2d054 = constant [31 x i8] c"invalid Unicode '\5Cu%04X\5Cu%04X'\00"
@global_var_2d074 = constant [25 x i8] c"invalid Unicode '\5Cu%04X'\00"
@global_var_2d090 = constant [22 x i8] c"\5Cu0000 is not allowed\00"
@global_var_2d254 = constant [16 x i8] c"lex_scan_string\00"
@global_var_2d0a8 = constant [25 x i8] c"too big negative integer\00"
@global_var_2d0c4 = constant [16 x i8] c"too big integer\00"
@global_var_2d0d4 = constant [43 x i8] c"end == saved_text + lex->saved_text.length\00"
@global_var_2d244 = constant [16 x i8] c"lex_scan_number\00"
@global_var_2d100 = constant [21 x i8] c"real number overflow\00"
@global_var_2d118 = constant [5 x i8] c"true\00"
@global_var_2d120 = constant [6 x i8] c"false\00"
@global_var_2d128 = constant [5 x i8] c"null\00"
@global_var_2d130 = constant [23 x i8] c"string or '}' expected\00"
@global_var_2d148 = constant [21 x i8] c"duplicate object key\00"
@global_var_2d160 = constant [13 x i8] c"':' expected\00"
@global_var_2d170 = constant [13 x i8] c"'}' expected\00"
@global_var_2d180 = constant [13 x i8] c"']' expected\00"
@global_var_2d190 = constant [14 x i8] c"invalid token\00"
@global_var_2d1a0 = constant [17 x i8] c"unexpected token\00"
@global_var_2d1b4 = constant [20 x i8] c"'[' or '{' expected\00"
@global_var_2d1c8 = constant [21 x i8] c"end of file expected\00"
@global_var_2d1e0 = constant [9 x i8] c"<string>\00"
@global_var_2d1ec = constant [16 x i8] c"wrong arguments\00"
@global_var_2d1fc = constant [9 x i8] c"<buffer>\00"
@global_var_2d208 = constant [8 x i8] c"<stdin>\00"
@global_var_2d210 = constant [9 x i8] c"<stream>\00"
@global_var_2d21c = constant [3 x i8] c"rb\00"
@global_var_2d220 = constant [22 x i8] c"unable to open %s: %s\00"
@global_var_2d238 = constant [11 x i8] c"<callback>\00"
@global_var_35a80 = local_unnamed_addr global i32 36308
@global_var_35a84 = local_unnamed_addr global i32 36080
@global_var_2d2ac = constant [44 x i8] c"end == strbuffer->value + strbuffer->length\00"
@global_var_2d2d8 = constant [35 x i8] c"3rdparty/jansson-2.6/src/strconv.c\00"
@global_var_2d304 = constant [13 x i8] c"jsonp_strtod\00"
@global_var_2d2fc = constant [6 x i8] c"%.17g\00"
@global_var_1c0000 = global i32 0
@global_var_3f000 = global i32 0
@global_var_35a98 = global i32 5
@global_var_35a90 = global i32 6
@global_var_35a88 = global i32 7
@global_var_2e2e2e = global i32 0
@global_var_2d314 = local_unnamed_addr constant i32* @global_var_2e2e2e
@global_var_28c00 = local_unnamed_addr constant [13 x i8] c"StartSensor=\00"
@global_var_80000 = local_unnamed_addr global i32 0
@global_var_28240 = local_unnamed_addr constant i32 53516
@global_var_28248 = local_unnamed_addr constant [3 x i8] c"pG\00"
@global_var_35324 = global i32 36905
@global_var_50464 = global i32 0
@1 = external global i32
@global_var_8fa0 = local_unnamed_addr constant void ()* inttoptr (i32 36937 to void ()*)
@global_var_8fa4 = local_unnamed_addr constant void ()* inttoptr (i32 164357 to void ()*)
@global_var_8fe0 = external constant i8*
@2 = internal constant [4 x i8] c"\A0Z\03\00"
@global_var_9004 = constant i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i32 0, i32 0)
@global_var_35aa4 = external local_unnamed_addr global i8*
@3 = internal constant [2 x i8] c"\08\00"
@global_var_825c = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@4 = internal constant [2 x i8] c"\06\00"
@global_var_8270 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0)
@global_var_35ac5 = external global i8*
@global_var_35ac4 = external local_unnamed_addr global i8*
@global_var_35aa8 = external local_unnamed_addr global i8*
@global_var_35aa9 = external global i8*
@global_var_82ac = external global i8*
@5 = internal constant [2 x i8] c"5\00"
@global_var_8330 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0)
@global_var_833c = external global i8*
@global_var_35adc = external global i8*
@global_var_35ae0 = external global i8*
@global_var_100000 = global i1 false
@global_var_330000 = external global i8*
@6 = internal constant [3 x i8] c"\8D\01\00"
@global_var_8354 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @6, i32 0, i32 0)
@7 = internal constant [3 x i8] c"\C0\8C\00"
@global_var_8398 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i32 0, i32 0)
@8 = internal constant [2 x i8] c"\12\00"
@global_var_83c0 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0)
@global_var_83dc = external global i8*
@global_var_83ec = external global i8*
@9 = internal constant [2 x i8] c"\FF\00"
@global_var_35530 = local_unnamed_addr global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0)
@global_var_35ae4 = external global i8*
@10 = internal constant [2 x i8] c"|\00"
@global_var_83f4 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0)
@global_var_840c = external global i8*
@global_var_842c = external global i8*
@11 = internal constant [3 x i8] c"P\8D\00"
@global_var_8458 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @11, i32 0, i32 0)
@global_var_3368d8 = local_unnamed_addr global i8 0
@12 = internal constant [3 x i8] c"\DC\01\00"
@global_var_8474 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @12, i32 0, i32 0)
@13 = internal constant [2 x i8] c"\12\00"
@global_var_8490 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0)
@global_var_35ac6 = global i8 0
@global_var_35ad8 = external global i8*
@global_var_28f10 = local_unnamed_addr constant i8 0
@14 = internal constant [2 x i8] c"\12\00"
@global_var_8510 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0)
@15 = internal constant [2 x i8] c"\12\00"
@global_var_8530 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @15, i32 0, i32 0)
@16 = internal constant [3 x i8] c"\14\8E\00"
@global_var_8558 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @16, i32 0, i32 0)
@17 = internal constant [3 x i8] c"t\01\00"
@global_var_8574 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @17, i32 0, i32 0)
@global_var_3368bc = local_unnamed_addr global i8 0
@global_var_864c = external global i8*
@18 = internal constant [3 x i8] c"\C8\8E\00"
@global_var_8658 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @18, i32 0, i32 0)
@19 = internal constant [3 x i8] c"\04\8F\00"
@global_var_86b8 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @19, i32 0, i32 0)
@global_var_86fc = external global i8*
@20 = internal constant [3 x i8] c"\AC\01\00"
@global_var_8724 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @20, i32 0, i32 0)
@global_var_87a8 = external global i8*
@21 = internal constant [2 x i8] c"n\00"
@global_var_87b8 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @21, i32 0, i32 0)
@22 = internal constant [4 x i8] c"\10c+\00"
@global_var_bc34 = constant i8* getelementptr inbounds ([4 x i8], [4 x i8]* @22, i32 0, i32 0)
@23 = internal constant [2 x i8] c"k\00"
@global_var_88dc = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @23, i32 0, i32 0)
@24 = internal constant [2 x i8] c"l\00"
@global_var_88fc = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @24, i32 0, i32 0)
@global_var_235c3c = external local_unnamed_addr global i8*
@25 = internal constant [3 x i8] c"B\02\00"
@global_var_8a3c = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @25, i32 0, i32 0)
@26 = internal constant [5 x i8] c"\14ii\0D\00"
@global_var_8a54 = global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i32 0, i32 0)
@global_var_8a58 = external global i8*
@global_var_3367dd = local_unnamed_addr global i8 0
@global_var_3367de = local_unnamed_addr global i8 0
@global_var_3367df = local_unnamed_addr global i8 0
@global_var_3367e0 = local_unnamed_addr global i8 0
@global_var_3367e1 = local_unnamed_addr global i8 0
@global_var_3367e2 = local_unnamed_addr global i8 0
@global_var_3367e3 = local_unnamed_addr global i8 0
@global_var_8a60 = external global i8*
@27 = internal constant [3 x i8] c"\16\02\00"
@global_var_8a80 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @27, i32 0, i32 0)
@28 = internal constant [3 x i8] c"\16\06\00"
@global_var_8aa0 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @28, i32 0, i32 0)
@29 = internal constant [3 x i8] c"\16\08\00"
@global_var_8ab0 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @29, i32 0, i32 0)
@30 = internal constant [4 x i8] c"LT\03\00"
@global_var_8ab4 = global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @30, i32 0, i32 0)
@31 = internal constant [3 x i8] c"\16\0A\00"
@global_var_8ac0 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @31, i32 0, i32 0)
@32 = internal constant [4 x i8] c"XT\03\00"
@global_var_8acc = global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @32, i32 0, i32 0)
@33 = internal constant [3 x i8] c"\16\0D\00"
@global_var_8ad8 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @33, i32 0, i32 0)
@34 = internal constant [3 x i8] c"\16\0E\00"
@global_var_8ae0 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @34, i32 0, i32 0)
@35 = internal constant [3 x i8] c"\16\0F\00"
@global_var_8ae8 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @35, i32 0, i32 0)
@36 = internal constant [3 x i8] c"\16\10\00"
@global_var_8af0 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @36, i32 0, i32 0)
@37 = internal constant [3 x i8] c"\16\11\00"
@global_var_8af8 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @37, i32 0, i32 0)
@38 = internal constant [3 x i8] c"\16\12\00"
@global_var_8b00 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @38, i32 0, i32 0)
@39 = internal constant [3 x i8] c"\16\13\00"
@global_var_8b08 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @39, i32 0, i32 0)
@40 = internal constant [3 x i8] c"\16\14\00"
@global_var_8b10 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @40, i32 0, i32 0)
@41 = internal constant [3 x i8] c"\16\15\00"
@global_var_8b18 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @41, i32 0, i32 0)
@42 = internal constant [3 x i8] c"\16\16\00"
@global_var_8b20 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @42, i32 0, i32 0)
@43 = internal constant [4 x i8] c"\88T\03\00"
@global_var_8b2c = global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @43, i32 0, i32 0)
@44 = internal constant [3 x i8] c"\16\19\00"
@global_var_8b38 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @44, i32 0, i32 0)
@45 = internal constant [4 x i8] c"\94T\03\00"
@global_var_8b44 = global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @45, i32 0, i32 0)
@46 = internal constant [3 x i8] c"\16\1C\00"
@global_var_8b50 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @46, i32 0, i32 0)
@47 = internal constant [4 x i8] c"\A0T\03\00"
@global_var_8b5c = global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @47, i32 0, i32 0)
@48 = internal constant [3 x i8] c"\16\1F\00"
@global_var_8b68 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @48, i32 0, i32 0)
@49 = internal constant [4 x i8] c"\ACT\03\00"
@global_var_8b74 = global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @49, i32 0, i32 0)
@50 = internal constant [3 x i8] c"\16\22\00"
@global_var_8b80 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @50, i32 0, i32 0)
@51 = internal constant [4 x i8] c"\B8T\03\00"
@global_var_8b8c = global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @51, i32 0, i32 0)
@52 = internal constant [4 x i8] c"\C0T\03\00"
@global_var_8b9c = global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @52, i32 0, i32 0)
@53 = internal constant [3 x i8] c"\16(\00"
@global_var_8ba8 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @53, i32 0, i32 0)
@54 = internal constant [3 x i8] c"\16*\00"
@global_var_8bb8 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @54, i32 0, i32 0)
@55 = internal constant [4 x i8] c"\D0T\03\00"
@global_var_8bbc = global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @55, i32 0, i32 0)
@56 = internal constant [3 x i8] c"\16-\00"
@global_var_8bd0 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @56, i32 0, i32 0)
@global_var_3368ac = local_unnamed_addr global i8 0
@57 = internal constant [3 x i8] c"\16/\00"
@global_var_8be0 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @57, i32 0, i32 0)
@global_var_3368ad = local_unnamed_addr global i8 0
@58 = internal constant [3 x i8] c"\161\00"
@global_var_8bf0 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @58, i32 0, i32 0)
@global_var_3368ae = local_unnamed_addr global i8 0
@59 = internal constant [3 x i8] c"\163\00"
@global_var_8c00 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @59, i32 0, i32 0)
@global_var_3368af = local_unnamed_addr global i8 0
@60 = internal constant [3 x i8] c"\165\00"
@global_var_8c10 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @60, i32 0, i32 0)
@global_var_3368b0 = local_unnamed_addr global i8 0
@global_var_8c1c = external global i8*
@global_var_3368b1 = local_unnamed_addr global i8 0
@61 = internal constant [3 x i8] c"\169\00"
@global_var_8c28 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @61, i32 0, i32 0)
@62 = internal constant [4 x i8] c"\14U\03\00"
@global_var_8c44 = global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @62, i32 0, i32 0)
@63 = internal constant [3 x i8] c"\16?\00"
@global_var_8c58 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @63, i32 0, i32 0)
@global_var_3368b2 = local_unnamed_addr global i8 0
@64 = internal constant [4 x i8] c"\A0\C7\02\00"
@global_var_8c80 = constant i8* getelementptr inbounds ([4 x i8], [4 x i8]* @64, i32 0, i32 0)
@global_var_2b632c = external global i8*
@global_var_2b636c = external global i8*
@global_var_28d0c = local_unnamed_addr constant i8 1
@global_var_235c24 = global %timeval* null
@global_var_235c2c = global %timeval* null
@65 = internal constant [20 x i8] c"\03K\04J{D\9BX\0B\B1\FF\F7'\BFpGp\C4\02\00"
@global_var_8fa8 = constant i8* getelementptr inbounds ([20 x i8], [20 x i8]* @65, i32 0, i32 0)
@66 = internal constant [23 x i8] c"\05H\08\B5\03h\13\B1\04K\03\B1\98G\BD\E8\08@\FF\F7\D3\BF\00"
@global_var_9028 = constant i8* getelementptr inbounds ([23 x i8], [23 x i8]* @66, i32 0, i32 0)
@global_var_235b50 = external global i8*
@global_var_235b58 = external global i8*
@global_var_235b5c = external global i8*
@global_var_235b60 = external global i8*
@67 = internal constant [2 x i8] c"\01\00"
@global_var_35540 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @67, i32 0, i32 0)
@68 = internal constant [2 x i8] c"\01\00"
@global_var_35544 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0)
@69 = internal constant [2 x i8] c"\01\00"
@global_var_35548 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @69, i32 0, i32 0)
@global_var_235c04 = external global i8*
@global_var_235c08 = external global i8*
@global_var_235c1c = external global i8*
@global_var_235c20 = external global i8*
@global_var_235b54 = external global i8*
@global_var_338950 = external global i8*
@global_var_338960 = external global i8*
@global_var_338970 = external global i8*
@70 = internal constant [2 x i8] c"[\00"
@global_var_95a8 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @70, i32 0, i32 0)
@71 = internal constant [2 x i8] c"\0A\00"
@72 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @71, i32 0, i32 0)
@global_var_3367cc = external local_unnamed_addr global i8*
@global_var_3367cd = external local_unnamed_addr global i8*
@global_var_3367ce = external local_unnamed_addr global i8*
@73 = internal constant [51 x i8] c"E\F20S\C0\F2\03\03\1Bx\1AFE\F6\C8#\C0\F2\03\03S\F8\22 F\F2\DCs\C0\F23\03\D3\F8\D80\9ABJ\D3F\F2\0C3\C0\F2#\03\03\F5\00"
@global_var_9ec0 = constant i8* getelementptr inbounds ([51 x i8], [51 x i8]* @73, i32 0, i32 0)
@74 = internal constant [4 x i8] c"\C0\F2\04\00"
@global_var_a1c0 = constant i8* getelementptr inbounds ([4 x i8], [4 x i8]* @74, i32 0, i32 0)
@75 = internal constant [2 x i8] c"r\00"
@76 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @75, i32 0, i32 0)
@77 = internal constant [2 x i8] c"r\00"
@78 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @77, i32 0, i32 0)
@79 = internal constant [2 x i8] c"[\00"
@global_var_af5c = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @79, i32 0, i32 0)
@global_var_3554e = local_unnamed_addr global i8 16
@global_var_3554f = local_unnamed_addr global i8 1
@global_var_3554c = local_unnamed_addr global i16* inttoptr (i32 17825793 to i16*)
@global_var_2b790 = constant i64* inttoptr (i32 -2052912941 to i64*)
@80 = internal constant [57 x i8] c"\FD\F7\94\E8E\F20S\C0\F2\03\03\1Bx\1AFF\F2\0C3\C0\F2#\03\9B\18\03\F5\80\13\03\F5\97c\1Bx:\1D\072\10FH\F2\F8q\C0\F2\02\01\1AF\FD\F7\BA\E9\00"
@global_var_bb58 = constant i8* getelementptr inbounds ([57 x i8], [57 x i8]* @80, i32 0, i32 0)
@81 = internal constant [8 x i8] c"\BDF\90\BD\1Cc+\00"
@global_var_c208 = constant i8* getelementptr inbounds ([8 x i8], [8 x i8]* @81, i32 0, i32 0)
@82 = internal constant [5 x i8] c"\80\B5\84\B0\00"
@global_var_c214 = constant i8* getelementptr inbounds ([5 x i8], [5 x i8]* @82, i32 0, i32 0)
@global_var_2ce00 = local_unnamed_addr constant i1 false
@global_var_2ce08 = local_unnamed_addr constant i1 false
@global_var_2ce64 = local_unnamed_addr constant i1 true
@global_var_2ce6c = local_unnamed_addr constant i1 false
@global_var_2ce78 = local_unnamed_addr constant i1 true
@83 = internal constant [2 x i8] c"w\00"
@84 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @83, i32 0, i32 0)
@85 = internal constant [2 x i8] c"0\00"
@86 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @85, i32 0, i32 0)
@global_var_10ffff = global i1 false
@global_var_200000 = global i1 false
@global_var_2c36c = constant [4 x i8] c"   \00"
@global_var_29854 = constant [2 x i8] c"\0A\00"
@global_var_2a23c = constant [2 x i8] c"r\00"
@global_var_2aab8 = constant [2 x i8] c"r\00"
@global_var_2ceb4 = constant [2 x i8] c"w\00"
@global_var_2cffc = constant [2 x i8] c"0\00"

define i32 @_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8c64:
  %0 = call i32 @call_gmon_start(), !insn.addr !0
  %1 = call i32 @__asm_nop(i32 %0, i32 %arg2, i32 %arg3, i32 %arg4), !insn.addr !1
  ret i32 %1, !insn.addr !2
}

declare i32 @pthread_mutex_unlock(i32*) local_unnamed_addr

declare i8* @strstr(i8*, i8*) local_unnamed_addr

declare i32 @raise(i32) local_unnamed_addr

declare i32 @strcmp(i8*, i8*) local_unnamed_addr

declare i32 @printf(i8*, ...) local_unnamed_addr

declare %_IO_FILE* @fopen(i8*, i8*) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @pthread_mutex_destroy(i32*) local_unnamed_addr

declare i32* @memmove(i32*, i32*, i32) local_unnamed_addr

declare void @free(i32*) local_unnamed_addr

declare i8* @fgets(i8*, i32, %_IO_FILE*) local_unnamed_addr

declare i32 @pthread_mutex_lock(i32*) local_unnamed_addr

declare i32* @memcpy(i32*, i32*, i32) local_unnamed_addr

declare i32 @pthread_mutex_init(i32*, i32*) local_unnamed_addr

declare i32 @lseek(i32, i32, i32) local_unnamed_addr

declare i32 @sleep(i32) local_unnamed_addr

declare i8* @strdup(i8*) local_unnamed_addr

declare i32 @__isinf(double) local_unnamed_addr

declare void @perror(i8*) local_unnamed_addr

declare i32 @fwrite(i32*, i32, i32, %_IO_FILE*) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i64 @strtoll(i8*, i8**, i32) local_unnamed_addr

declare i32 @usleep(i32) local_unnamed_addr

declare i8* @strcpy(i8*, i8*) local_unnamed_addr

declare i32 @gettimeofday(%timeval*, %timezone*) local_unnamed_addr

declare i32 @pthread_create(i32*, i32*, i32* (i32*)*, i32*) local_unnamed_addr

declare i8* @getenv(i8*) local_unnamed_addr

declare i32 @puts(i8*) local_unnamed_addr

declare i32* @malloc(i32) local_unnamed_addr

declare i32 @__libc_start_main(i32, i32, i8**, void ()*, void ()*, void ()*) local_unnamed_addr

declare i8* @strerror(i32) local_unnamed_addr

declare i32 @system(i8*) local_unnamed_addr

define i32 @"$t"() local_unnamed_addr {
dec_label_pc_8e04:
  %0 = call i32 @function_461a4603(), !insn.addr !3
  ret i32 %0, !insn.addr !3
}

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @strtoul(i8*, i8**, i32) local_unnamed_addr

declare i32 @strlen(i8*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i8* @strchr(i8*, i32) local_unnamed_addr

declare i32* @__errno_location() local_unnamed_addr

declare i32 @snprintf(i8*, i32, i8*, ...) local_unnamed_addr

declare i32 @sscanf(i8*, i8*, ...) local_unnamed_addr

declare i32* @memset(i32*, i32, i32) local_unnamed_addr

declare i32 @putchar(i32) local_unnamed_addr

declare i32 @pthread_cancel(i32) local_unnamed_addr

declare double @strtod(i8*, i8**) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @__isnan(double) local_unnamed_addr

declare i32 @access(i8*, i32) local_unnamed_addr

declare i32 @fclose(%_IO_FILE*) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @pthread_join(i32, i32**) local_unnamed_addr

declare %lconv* @localeconv() local_unnamed_addr

declare i32 @sprintf(i8*, i8*, ...) local_unnamed_addr

declare i32 @vsnprintf(i8*, i32, i8*, i32) local_unnamed_addr

declare i32 @atoi(i8*) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @fseek(%_IO_FILE*, i32, i32) local_unnamed_addr

declare void @abort() local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare void @__assert_fail(i8*, i8*, i32, i8*) local_unnamed_addr

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8f70:
  %stack_var_4 = alloca i32, align 4
  %0 = bitcast i32* %stack_var_4 to i8**, !insn.addr !4
  %1 = inttoptr i32 %arg1 to void ()*, !insn.addr !4
  %2 = call i32 @__libc_start_main(i32 36937, i32 %arg2, i8** nonnull %0, void ()* inttoptr (i32 164357 to void ()*), void ()* inttoptr (i32 36937 to void ()*), void ()* %1), !insn.addr !4
  call void @abort(), !insn.addr !5
  %3 = trunc i32 %arg2 to i16, !insn.addr !6
  %4 = add i32 %arg2, 18, !insn.addr !6
  %5 = inttoptr i32 %4 to i16*, !insn.addr !6
  store i16 %3, i16* %5, align 2, !insn.addr !6
  ret i32 ptrtoint (i32* @1 to i32), !insn.addr !7
}

define i32 @call_gmon_start() local_unnamed_addr {
dec_label_pc_8fa8:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = load i32, i32* @global_var_35524, align 4, !insn.addr !8
  %3 = icmp eq i32 %2, 0, !insn.addr !9
  br i1 %3, label %dec_label_pc_8fb6, label %dec_label_pc_8fb2, !insn.addr !9

dec_label_pc_8fb2:                                ; preds = %dec_label_pc_8fa8
  %4 = call i32 @"$t"(), !insn.addr !10
  ret i32 %4, !insn.addr !10

dec_label_pc_8fb6:                                ; preds = %dec_label_pc_8fa8
  ret i32 %1, !insn.addr !11
}

define i32 @deregister_tm_clones(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_8fc0:
  ret i32 ptrtoint (i32* @global_var_35aa0 to i32), !insn.addr !12
}

define i32 @register_tm_clones(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8fe4:
  ret i32 ptrtoint (i32* @global_var_35aa0 to i32), !insn.addr !13
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
dec_label_pc_9010:
  %0 = alloca i32
  %r0.0.reg2mem = alloca i32, !insn.addr !14
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = load i32, i32* %0
  %4 = load i8, i8* bitcast (i8** @global_var_35aa4 to i8*), align 4, !insn.addr !15
  %5 = icmp eq i8 %4, 0, !insn.addr !16
  br i1 %5, label %dec_label_pc_9018, label %dec_label_pc_9020, !insn.addr !16

dec_label_pc_9018:                                ; preds = %dec_label_pc_9010
  %6 = call i32 @deregister_tm_clones(i32 %3, i32 %2, i32 %1, i8 0), !insn.addr !17
  store i8 1, i8* bitcast (i8** @global_var_35aa4 to i8*), align 4, !insn.addr !18
  store i32 %6, i32* %r0.0.reg2mem, !insn.addr !18
  br label %dec_label_pc_9020, !insn.addr !18

dec_label_pc_9020:                                ; preds = %dec_label_pc_9010, %dec_label_pc_9018
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !19

; uselistorder directives
  uselistorder i32* %0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9020, { 1, 0 }
}

define i32 @frame_dummy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9028:
  %0 = call i32 @register_tm_clones(i32* nonnull @global_var_3532c, i32 %arg2, i32 %arg3, i32 %arg4), !insn.addr !20
  ret i32 %0, !insn.addr !20
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
dec_label_pc_9048:
  %storemerge.reg2mem = alloca i32, !insn.addr !21
  %r1.2.reg2mem = alloca i32, !insn.addr !21
  %r0.1.reg2mem = alloca i32, !insn.addr !21
  %r2.1.reg2mem = alloca i32, !insn.addr !21
  %r1.1.reg2mem = alloca i32, !insn.addr !21
  %r3.0.reg2mem = alloca i32, !insn.addr !21
  %r2.0.reg2mem = alloca i32, !insn.addr !21
  %r1.0.reg2mem = alloca i32, !insn.addr !21
  %r0.0.reg2mem = alloca i32, !insn.addr !21
  %stack_var_-76 = alloca i32, align 4
  %0 = call i32* @memset(i32* nonnull %stack_var_-76, i32 0, i32 64), !insn.addr !22
  %1 = call i32 @cgpu_init(), !insn.addr !23
  %2 = icmp slt i32 %1, 0, !insn.addr !24
  store i32 %1, i32* %storemerge.reg2mem, !insn.addr !25
  br i1 %2, label %dec_label_pc_9192, label %dec_label_pc_906c, !insn.addr !25

dec_label_pc_906c:                                ; preds = %dec_label_pc_9048
  %3 = call i32 @configMiner(), !insn.addr !26
  %4 = icmp slt i32 %3, 0, !insn.addr !27
  store i32 %3, i32* %storemerge.reg2mem, !insn.addr !28
  br i1 %4, label %dec_label_pc_9192, label %dec_label_pc_907c, !insn.addr !28

dec_label_pc_907c:                                ; preds = %dec_label_pc_906c
  %5 = call i32 @display_arguments(), !insn.addr !29
  %6 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_825c to i32), i32 131072) to i8*)), !insn.addr !30
  store i32 0, i32* %r1.1.reg2mem, !insn.addr !31
  store i32 64, i32* %r2.1.reg2mem, !insn.addr !31
  br label %dec_label_pc_9090, !insn.addr !31

dec_label_pc_908e:                                ; preds = %dec_label_pc_916c, %dec_label_pc_90ae, %dec_label_pc_9184, %dec_label_pc_90e4, %dec_label_pc_90de, %dec_label_pc_90c6, %dec_label_pc_90a8
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  %r2.0.reload = load i32, i32* %r2.0.reg2mem
  %r1.0.reload = load i32, i32* %r1.0.reg2mem
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %7 = call i32 @__asm_nop(i32 %r0.0.reload, i32 %r1.0.reload, i32 %r2.0.reload, i32 %r3.0.reload), !insn.addr !32
  store i32 %r1.0.reload, i32* %r1.1.reg2mem, !insn.addr !32
  store i32 %r2.0.reload, i32* %r2.1.reg2mem, !insn.addr !32
  br label %dec_label_pc_9090, !insn.addr !32

dec_label_pc_9090:                                ; preds = %dec_label_pc_908e, %dec_label_pc_907c
  %r1.1.reload = load i32, i32* %r1.1.reg2mem
  %8 = call i32 @read_key(i32* nonnull %stack_var_-76), !insn.addr !33
  %9 = load i32, i32* @global_var_336848, align 4, !insn.addr !34
  %10 = icmp eq i32 %9, 1, !insn.addr !35
  %11 = icmp slt i32 %8, 1
  br i1 %10, label %dec_label_pc_90a8, label %dec_label_pc_90fe, !insn.addr !36

dec_label_pc_90a8:                                ; preds = %dec_label_pc_9090
  %r2.1.reload = load i32, i32* %r2.1.reg2mem
  store i32 %8, i32* %r0.0.reg2mem, !insn.addr !37
  store i32 %r1.1.reload, i32* %r1.0.reg2mem, !insn.addr !37
  store i32 %r2.1.reload, i32* %r2.0.reg2mem, !insn.addr !37
  store i32 %8, i32* %r3.0.reg2mem, !insn.addr !37
  br i1 %11, label %dec_label_pc_908e, label %dec_label_pc_90ae, !insn.addr !37

dec_label_pc_90ae:                                ; preds = %dec_label_pc_90a8
  %12 = load i32, i32* %stack_var_-76, align 4, !insn.addr !38
  %13 = urem i32 %12, 256, !insn.addr !38
  %14 = icmp eq i32 %13, 1, !insn.addr !39
  store i32 %8, i32* %r0.0.reg2mem, !insn.addr !40
  store i32 %r1.1.reload, i32* %r1.0.reg2mem, !insn.addr !40
  store i32 %r2.1.reload, i32* %r2.0.reg2mem, !insn.addr !40
  store i32 %13, i32* %r3.0.reg2mem, !insn.addr !40
  br i1 %14, label %dec_label_pc_90b4, label %dec_label_pc_908e, !insn.addr !40

dec_label_pc_90b4:                                ; preds = %dec_label_pc_90ae
  %15 = load i32, i32* @global_var_336850, align 4, !insn.addr !41
  switch i32 %15, label %dec_label_pc_90e4 [
    i32 1722, label %dec_label_pc_90c6
    i32 1725, label %dec_label_pc_90de
  ]

dec_label_pc_90c6:                                ; preds = %dec_label_pc_90b4
  %16 = call i32 @singleAsicTest_BM1722(), !insn.addr !42
  store i32 %16, i32* %r0.0.reg2mem, !insn.addr !43
  store i32 %r1.1.reload, i32* %r1.0.reg2mem, !insn.addr !43
  store i32 1722, i32* %r2.0.reg2mem, !insn.addr !43
  store i32 1722, i32* %r3.0.reg2mem, !insn.addr !43
  br label %dec_label_pc_908e, !insn.addr !43

dec_label_pc_90de:                                ; preds = %dec_label_pc_90b4
  %17 = call i32 @singleAsicTest_BM1725(), !insn.addr !44
  store i32 %17, i32* %r0.0.reg2mem, !insn.addr !45
  store i32 %r1.1.reload, i32* %r1.0.reg2mem, !insn.addr !45
  store i32 1725, i32* %r2.0.reg2mem, !insn.addr !45
  store i32 1725, i32* %r3.0.reg2mem, !insn.addr !45
  br label %dec_label_pc_908e, !insn.addr !45

dec_label_pc_90e4:                                ; preds = %dec_label_pc_90b4
  %18 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8270 to i32), i32 131072) to i8*)), !insn.addr !46
  store i32 %18, i32* %r0.0.reg2mem, !insn.addr !47
  store i32 %15, i32* %r1.0.reg2mem, !insn.addr !47
  store i32 %15, i32* %r2.0.reg2mem, !insn.addr !47
  store i32 %15, i32* %r3.0.reg2mem, !insn.addr !47
  br label %dec_label_pc_908e, !insn.addr !47

dec_label_pc_90fe:                                ; preds = %dec_label_pc_9090
  br i1 %11, label %dec_label_pc_910a, label %dec_label_pc_9104, !insn.addr !48

dec_label_pc_9104:                                ; preds = %dec_label_pc_90fe
  %19 = load i32, i32* %stack_var_-76, align 4, !insn.addr !49
  %20 = urem i32 %19, 256, !insn.addr !49
  %21 = icmp eq i32 %20, 1, !insn.addr !50
  br i1 %21, label %dec_label_pc_9130, label %dec_label_pc_910a, !insn.addr !51

dec_label_pc_910a:                                ; preds = %dec_label_pc_9104, %dec_label_pc_90fe
  %22 = load i8, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !52
  %23 = load i8, i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !53
  %24 = icmp uge i8 %22, %23, !insn.addr !54
  %25 = icmp eq i8 %22, 0, !insn.addr !55
  %or.cond = or i1 %25, %24
  store i32 %8, i32* %r0.1.reg2mem, !insn.addr !56
  store i32 %r1.1.reload, i32* %r1.2.reg2mem, !insn.addr !56
  br i1 %or.cond, label %dec_label_pc_916c, label %dec_label_pc_9130, !insn.addr !56

dec_label_pc_9130:                                ; preds = %dec_label_pc_910a, %dec_label_pc_9104
  %26 = load i8, i8* bitcast (i8** @global_var_35aa8 to i8*), align 4, !insn.addr !57
  %27 = icmp eq i8 %26, 0, !insn.addr !58
  br i1 %27, label %dec_label_pc_9144, label %dec_label_pc_913e, !insn.addr !59

dec_label_pc_913e:                                ; preds = %dec_label_pc_9130
  %28 = call i32 @singleBoardTest_BBD12601(), !insn.addr !60
  store i32 %28, i32* %r0.1.reg2mem, !insn.addr !61
  store i32 %r1.1.reload, i32* %r1.2.reg2mem, !insn.addr !61
  br label %dec_label_pc_916c, !insn.addr !61

dec_label_pc_9144:                                ; preds = %dec_label_pc_9130
  %29 = load i8, i8* bitcast (i8** @global_var_35aa9 to i8*), align 4, !insn.addr !62
  %30 = icmp eq i8 %29, 0, !insn.addr !63
  br i1 %30, label %dec_label_pc_9158, label %dec_label_pc_9152, !insn.addr !64

dec_label_pc_9152:                                ; preds = %dec_label_pc_9144
  %31 = call i32 @singleBoardTest_BBD25601(), !insn.addr !65
  store i32 %31, i32* %r0.1.reg2mem, !insn.addr !66
  store i32 %r1.1.reload, i32* %r1.2.reg2mem, !insn.addr !66
  br label %dec_label_pc_916c, !insn.addr !66

dec_label_pc_9158:                                ; preds = %dec_label_pc_9144
  %32 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_82ac to i32), i32 131072) to i8*)), !insn.addr !67
  store i32 %32, i32* %r0.1.reg2mem, !insn.addr !67
  store i32 or (i32 ptrtoint (i32* @global_var_82dc to i32), i32 131072), i32* %r1.2.reg2mem, !insn.addr !67
  br label %dec_label_pc_916c, !insn.addr !67

dec_label_pc_916c:                                ; preds = %dec_label_pc_910a, %dec_label_pc_9158, %dec_label_pc_9152, %dec_label_pc_913e
  %r1.2.reload = load i32, i32* %r1.2.reg2mem
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %33 = load i8, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !68
  %34 = zext i8 %33 to i32, !insn.addr !68
  %35 = load i8, i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !69
  %36 = zext i8 %35 to i32, !insn.addr !69
  %37 = icmp ult i8 %33, %35, !insn.addr !70
  store i32 %r0.1.reload, i32* %r0.0.reg2mem, !insn.addr !71
  store i32 %r1.2.reload, i32* %r1.0.reg2mem, !insn.addr !71
  store i32 %34, i32* %r2.0.reg2mem, !insn.addr !71
  store i32 %36, i32* %r3.0.reg2mem, !insn.addr !71
  br i1 %37, label %dec_label_pc_908e, label %dec_label_pc_9184, !insn.addr !71

dec_label_pc_9184:                                ; preds = %dec_label_pc_916c
  store i8 0, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !72
  store i32 %r0.1.reload, i32* %r0.0.reg2mem, !insn.addr !73
  store i32 %r1.2.reload, i32* %r1.0.reg2mem, !insn.addr !73
  store i32 0, i32* %r2.0.reg2mem, !insn.addr !73
  store i32 ptrtoint (i8** @global_var_35ac5 to i32), i32* %r3.0.reg2mem, !insn.addr !73
  br label %dec_label_pc_908e, !insn.addr !73

dec_label_pc_9192:                                ; preds = %dec_label_pc_906c, %dec_label_pc_9048
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !74

; uselistorder directives
  uselistorder i32 %r0.1.reload, { 1, 0 }
  uselistorder i32 %r1.2.reload, { 1, 0 }
  uselistorder i32 %r2.1.reload, { 1, 0 }
  uselistorder i32 %8, { 0, 2, 1, 3, 4 }
  uselistorder i32 %r1.1.reload, { 1, 0, 2, 5, 4, 6, 3 }
  uselistorder i32* %stack_var_-76, { 2, 3, 0, 1 }
  uselistorder i32* %r0.0.reg2mem, { 1, 2, 4, 5, 6, 3, 7, 0 }
  uselistorder i32* %r1.0.reg2mem, { 1, 2, 4, 5, 6, 3, 7, 0 }
  uselistorder i32* %r2.0.reg2mem, { 1, 2, 4, 5, 6, 3, 7, 0 }
  uselistorder i32* %r3.0.reg2mem, { 1, 2, 4, 5, 6, 3, 7, 0 }
  uselistorder i32* %r0.1.reg2mem, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.2.reg2mem, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_916c, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_908e, { 2, 0, 3, 4, 5, 1, 6 }
}

define i32 @get_BM1722_asic_register(i8 %arg1, i8 %arg2, i8 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_919c:
  %stack_var_-16 = alloca i8, align 1
  %0 = icmp eq i8 %arg4, 0, !insn.addr !75
  %spec.select = select i1 %0, i8 66, i8 82
  store i8 %spec.select, i8* %stack_var_-16, align 1
  %1 = call i32 @CRC5(i8* nonnull %stack_var_-16, i32 32), !insn.addr !76
  %2 = zext i8 %arg1 to i32, !insn.addr !77
  %3 = call i32 @dcr_uart_send(i32 %2, i8* nonnull %stack_var_-16, i32 5), !insn.addr !78
  ret i32 %3, !insn.addr !79

; uselistorder directives
  uselistorder i8* %stack_var_-16, { 1, 2, 0 }
}

define i32 @set_BM1722_asic_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9208:
  %stack_var_-20 = alloca i8, align 1
  %0 = urem i32 %arg1, 256
  %1 = urem i32 %arg4, 256, !insn.addr !80
  %2 = icmp eq i32 %1, 0, !insn.addr !81
  %spec.select = select i1 %2, i8 65, i8 81
  store i8 %spec.select, i8* %stack_var_-20, align 1
  %3 = call i32 @CRC5(i8* nonnull %stack_var_-20, i32 64), !insn.addr !82
  %4 = call i32 @dcr_uart_send(i32 %0, i8* nonnull %stack_var_-20, i32 9), !insn.addr !83
  ret i32 %4, !insn.addr !84

; uselistorder directives
  uselistorder i8* %stack_var_-20, { 1, 2, 0 }
}

define i32 @set_BM1722_freq(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_92a0:
  %0 = alloca i32
  %1 = alloca float
  %2 = load float, float* %1
  %3 = load i32, i32* %0
  call void @__asm_vstr(float %2, i32 %3), !insn.addr !85
  %4 = call float @__asm_vldr(i32 %3), !insn.addr !86
  ret i32 %arg1, !insn.addr !86

; uselistorder directives
  uselistorder i32 %3, { 1, 0 }
}

define i32 @function_92cc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_92cc:
  %0 = alloca i32
  %1 = alloca i1
  %r0.1.reg2mem = alloca i32, !insn.addr !87
  %r0.0.reg2mem = alloca i32, !insn.addr !87
  %2 = load i1, i1* %1
  %3 = load i1, i1* %1
  %4 = load i1, i1* %1
  %5 = load i32, i32* %0
  %6 = load i32, i32* %0
  %7 = load i32, i32* %0
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !87
  br i1 %2, label %dec_label_pc_92d0, label %8, !insn.addr !87

; <label>:8:                                      ; preds = %dec_label_pc_92cc
  %9 = call i32 @function_ffa04db0(), !insn.addr !87
  store i32 %9, i32* %r0.0.reg2mem, !insn.addr !87
  br label %dec_label_pc_92d0, !insn.addr !87

dec_label_pc_92d0:                                ; preds = %dec_label_pc_92cc, %8
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %brmerge = or i1 %3, %4
  br i1 %brmerge, label %dec_label_pc_92f8, label %dec_label_pc_92d8, !insn.addr !88

dec_label_pc_92f8:                                ; preds = %dec_label_pc_92d0
  ret i32 %r0.0.reload, !insn.addr !88

dec_label_pc_92d8:                                ; preds = %dec_label_pc_92d0
  store i32 %r0.0.reload, i32* %r0.1.reg2mem, !insn.addr !89
  br i1 %2, label %10, label %dec_label_pc_92e4, !insn.addr !89

; <label>:10:                                     ; preds = %dec_label_pc_92d8
  %11 = and i32 %6, 8, !insn.addr !89
  %12 = icmp ne i32 %11, 0, !insn.addr !89
  %13 = ashr i32 %6, 4, !insn.addr !89
  %14 = icmp eq i32 %5, %13, !insn.addr !89
  br i1 %14, label %15, label %17, !insn.addr !90

; <label>:15:                                     ; preds = %10
  %16 = call i32 @__asm_smlabteq(i32 %r0.0.reload, i32 %arg3, i32 37604), !insn.addr !90
  store i32 %r0.0.reload, i32* %r0.1.reg2mem, !insn.addr !91
  br i1 %12, label %18, label %dec_label_pc_92e4, !insn.addr !91

; <label>:17:                                     ; preds = %10
  store i32 %r0.0.reload, i32* %r0.1.reg2mem, !insn.addr !91
  br i1 %12, label %18, label %dec_label_pc_92e4, !insn.addr !91

; <label>:18:                                     ; preds = %15, %17
  %19 = call i32 @function_604434(), !insn.addr !91
  store i32 %19, i32* %r0.1.reg2mem, !insn.addr !91
  br label %dec_label_pc_92e4, !insn.addr !91

dec_label_pc_92e4:                                ; preds = %dec_label_pc_92d8, %15, %18, %17
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  call void @__asm_stcl(i32 7, i32 15, i32 %7, i32 1020), !insn.addr !92
  ret i32 %r0.1.reload

; uselistorder directives
  uselistorder i32 %r0.0.reload, { 2, 1, 3, 0, 4 }
  uselistorder i32 %6, { 1, 0 }
  uselistorder i1 %2, { 1, 0 }
  uselistorder i32* %r0.1.reg2mem, { 0, 4, 3, 2, 1 }
  uselistorder i1* %1, { 2, 1, 0 }
  uselistorder i32* %0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_92e4, { 2, 3, 1, 0 }
  uselistorder label %18, { 1, 0 }
  uselistorder label %dec_label_pc_92d0, { 1, 0 }
}

define i32 @function_92fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_92fc:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = call i32 @get_pllparam_divider(i32 %arg1, i32 %arg2, i32 %arg4, i32 %arg4), !insn.addr !93
  %3 = add i32 %1, 20, !insn.addr !94
  %4 = inttoptr i32 %3 to i32*, !insn.addr !94
  store i32 %2, i32* %4, align 4, !insn.addr !94
  %5 = add i32 %1, 16, !insn.addr !95
  %6 = inttoptr i32 %5 to i32*, !insn.addr !95
  %7 = load i32, i32* %6, align 4, !insn.addr !95
  %8 = or i32 %7, -1073741824, !insn.addr !96
  store i32 %8, i32* %6, align 4, !insn.addr !97
  %9 = add i32 %1, 15, !insn.addr !98
  %10 = inttoptr i32 %9 to i8*, !insn.addr !98
  %11 = load i8, i8* %10, align 1, !insn.addr !98
  %12 = add i8 %11, -1
  store i8 %12, i8* %10, align 1, !insn.addr !99
  %13 = add i32 %1, 8, !insn.addr !100
  %14 = inttoptr i32 %13 to i32*, !insn.addr !100
  %15 = load i32, i32* %14, align 4, !insn.addr !100
  %16 = call float @__asm_vldr(i32 %15), !insn.addr !100
  ret i32 %2, !insn.addr !100

; uselistorder directives
  uselistorder i32 %2, { 1, 0 }
  uselistorder i32 %1, { 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @function_931c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_931c:
  %0 = alloca i32
  %1 = alloca i1
  %sb.089.reg2mem = alloca i32, !insn.addr !101
  %r8.110.reg2mem = alloca i32, !insn.addr !101
  %r0.1.reg2mem = alloca i32, !insn.addr !101
  %2 = load i1, i1* %1
  %3 = load i1, i1* %1
  %4 = load i1, i1* %1
  %5 = load i1, i1* %1
  %6 = load i32, i32* %0
  %7 = load i32, i32* %0
  %8 = load i32, i32* %0
  store i32 %arg1, i32* %r0.1.reg2mem, !insn.addr !101
  br i1 %2, label %dec_label_pc_9324, label %9, !insn.addr !101

; <label>:9:                                      ; preds = %dec_label_pc_931c
  %10 = call i32 @function_ffa04e00(), !insn.addr !101
  %11 = call i32 @function_4495c(), !insn.addr !102
  store i32 %11, i32* %r0.1.reg2mem, !insn.addr !102
  br label %dec_label_pc_9324, !insn.addr !102

dec_label_pc_9324:                                ; preds = %dec_label_pc_931c, %9
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %brmerge = or i1 %3, %4
  br i1 %brmerge, label %12, label %dec_label_pc_932c, !insn.addr !103

; <label>:12:                                     ; preds = %26, %.thread, %18, %dec_label_pc_9324, %28
  ret i32 %r0.1.reload, !insn.addr !103

dec_label_pc_932c:                                ; preds = %dec_label_pc_9324
  br i1 %2, label %13, label %18, !insn.addr !104

; <label>:13:                                     ; preds = %dec_label_pc_932c
  %14 = ashr i32 %8, 4, !insn.addr !104
  %15 = xor i32 %14, %6, !insn.addr !104
  %16 = icmp eq i32 %15, 0, !insn.addr !104
  br i1 %16, label %26, label %.thread, !insn.addr !105

.thread:                                          ; preds = %13
  %17 = icmp slt i32 %15, 0, !insn.addr !104
  call void @__asm_ldc(i32 7, i32 15, i32 553185864, i32 1020), !insn.addr !106
  br i1 %17, label %28, label %12, !insn.addr !107

; <label>:18:                                     ; preds = %dec_label_pc_932c
  call void @__asm_ldc(i32 7, i32 15, i32 553185864, i32 1020), !insn.addr !106
  %19 = add i32 %7, 20, !insn.addr !108
  %20 = inttoptr i32 %19 to i32*, !insn.addr !108
  %21 = load i32, i32* %20, align 4, !insn.addr !108
  %22 = add i32 %7, 28, !insn.addr !108
  %23 = add i32 %21, -24, !insn.addr !109
  %24 = inttoptr i32 %23 to i32*, !insn.addr !109
  %25 = load i32, i32* %24, align 4, !insn.addr !109
  store i32 %25, i32* %r8.110.reg2mem, !insn.addr !107
  store i32 %22, i32* %sb.089.reg2mem, !insn.addr !107
  br i1 %5, label %28, label %12, !insn.addr !107

; <label>:26:                                     ; preds = %13
  %27 = call i32 @__asm_smlabteq(i32 %r0.1.reload, i32 %arg3, i32 37688), !insn.addr !105
  call void @__asm_ldc(i32 7, i32 15, i32 553185864, i32 1020), !insn.addr !106
  br label %12

; <label>:28:                                     ; preds = %.thread, %18
  %sb.089.reload = load i32, i32* %sb.089.reg2mem
  %r8.110.reload = load i32, i32* %r8.110.reg2mem
  %29 = inttoptr i32 %r8.110.reload to i32*, !insn.addr !107
  store i32 %sb.089.reload, i32* %29, align 4, !insn.addr !107
  br label %12, !insn.addr !107

; uselistorder directives
  uselistorder i32 %15, { 1, 0 }
  uselistorder i32 %r0.1.reload, { 1, 0 }
  uselistorder i1 %2, { 1, 0 }
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 1 }
  uselistorder i1* %1, { 3, 2, 1, 0 }
  uselistorder i32* %0, { 2, 1, 0 }
  uselistorder void (i32, i32, i32, i32)* @__asm_ldc, { 2, 0, 1 }
  uselistorder i32 553185864, { 2, 0, 1, 3 }
  uselistorder label %28, { 1, 0 }
  uselistorder label %12, { 4, 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_9324, { 1, 0 }
}

define i32 @function_9348() local_unnamed_addr {
dec_label_pc_9348:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = load i32, i32* %0
  %4 = load i32, i32* %0
  %5 = load i32, i32* %0
  %6 = call i32 @set_BM1722_asic_register(i32 %5, i32 %4, i32 %3, i32 %2, i32 ptrtoint (i32* @1 to i32)), !insn.addr !110
  %7 = call i32 @usleep(i32 1000), !insn.addr !111
  %8 = add i32 %1, 15, !insn.addr !112
  %9 = inttoptr i32 %8 to i8*, !insn.addr !112
  %10 = load i8, i8* %9, align 1, !insn.addr !112
  %11 = zext i8 %10 to i32, !insn.addr !112
  %12 = add i32 %1, 7, !insn.addr !113
  %13 = inttoptr i32 %12 to i8*, !insn.addr !113
  %14 = load i8, i8* %13, align 1, !insn.addr !113
  %15 = zext i8 %14 to i32, !insn.addr !113
  %16 = add i32 %1, 6, !insn.addr !114
  %17 = inttoptr i32 %16 to i8*, !insn.addr !114
  %18 = load i8, i8* %17, align 1, !insn.addr !114
  %19 = zext i8 %18 to i32, !insn.addr !114
  %20 = add i32 %1, 5, !insn.addr !115
  %21 = inttoptr i32 %20 to i8*, !insn.addr !115
  %22 = load i8, i8* %21, align 1, !insn.addr !115
  %23 = zext i8 %22 to i32, !insn.addr !115
  %24 = call i32 @set_BM1722_asic_register(i32 %15, i32 %19, i32 112, i32 %23, i32 %11), !insn.addr !116
  %25 = call i32 @usleep(i32 1000), !insn.addr !117
  %26 = add i32 %1, 16, !insn.addr !118
  %27 = inttoptr i32 %26 to i32*, !insn.addr !118
  %28 = load i32, i32* %27, align 4, !insn.addr !118
  %29 = load i8, i8* %13, align 1, !insn.addr !119
  %30 = zext i8 %29 to i32, !insn.addr !119
  %31 = load i8, i8* %17, align 1, !insn.addr !120
  %32 = zext i8 %31 to i32, !insn.addr !120
  %33 = load i8, i8* %21, align 1, !insn.addr !121
  %34 = zext i8 %33 to i32, !insn.addr !121
  %35 = call i32 @set_BM1722_asic_register(i32 %30, i32 %32, i32 12, i32 %34, i32 %28), !insn.addr !122
  ret i32 %35, !insn.addr !123

; uselistorder directives
  uselistorder i32 %1, { 4, 1, 0, 2, 3 }
  uselistorder i32* %0, { 4, 3, 2, 1, 0 }
}

define i32 @BM1722_chain_inactive(i32 %arg1) local_unnamed_addr {
dec_label_pc_9390:
  %stack_var_-16 = alloca i8, align 1
  %0 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8330 to i32), i32 131072) to i8*)), !insn.addr !124
  store i8 83, i8* %stack_var_-16, align 1, !insn.addr !125
  %1 = call i32 @CRC5(i8* nonnull %stack_var_-16, i32 32), !insn.addr !126
  %2 = urem i32 %arg1, 256, !insn.addr !127
  %3 = call i32 @dcr_uart_send(i32 %2, i8* nonnull %stack_var_-16, i32 5), !insn.addr !128
  %4 = call i32 @usleep(i32 5000), !insn.addr !129
  ret i32 %4, !insn.addr !130
}

define i32 @BM1722_set_address(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9404:
  %stack_var_-16 = alloca i8, align 1
  store i8 64, i8* %stack_var_-16, align 1, !insn.addr !131
  %0 = call i32 @CRC5(i8* nonnull %stack_var_-16, i32 32), !insn.addr !132
  %1 = urem i32 %arg1, 256, !insn.addr !133
  %2 = call i32 @dcr_uart_send(i32 %1, i8* nonnull %stack_var_-16, i32 5), !insn.addr !134
  ret i32 %2, !insn.addr !135
}

define i32 @BM1722_set_address_all(i32 %arg1) local_unnamed_addr {
dec_label_pc_9460:
  %.lcssa.reg2mem = alloca i32, !insn.addr !136
  %stack_var_-12.02.reg2mem = alloca i32, !insn.addr !136
  %storemerge3.reg2mem = alloca i32, !insn.addr !136
  %0 = urem i32 %arg1, 256
  %1 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_833c to i32), i32 131072) to i8*)), !insn.addr !137
  %2 = call i32 @BM1722_chain_inactive(i32 %0), !insn.addr !138
  %3 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !139
  %4 = udiv i32 256, %3, !insn.addr !140
  %5 = icmp ugt i32 %3, 256, !insn.addr !141
  store i32 0, i32* %storemerge3.reg2mem, !insn.addr !142
  store i32 0, i32* %stack_var_-12.02.reg2mem, !insn.addr !142
  store i32 %4, i32* %.lcssa.reg2mem, !insn.addr !142
  br i1 %5, label %dec_label_pc_94e2, label %dec_label_pc_9498, !insn.addr !142

dec_label_pc_9498:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9498
  %stack_var_-12.02.reload = load i32, i32* %stack_var_-12.02.reg2mem
  %storemerge3.reload = load i32, i32* %storemerge3.reg2mem
  %6 = urem i32 %stack_var_-12.02.reload, 256, !insn.addr !143
  %7 = call i32 @BM1722_set_address(i32 %0, i32 %6), !insn.addr !144
  %8 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !145
  %9 = add i32 %8, %stack_var_-12.02.reload, !insn.addr !146
  %10 = call i32 @usleep(i32 5000), !insn.addr !147
  %11 = add i32 %storemerge3.reload, 1, !insn.addr !148
  %12 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !139
  %13 = udiv i32 256, %12, !insn.addr !140
  %14 = icmp ult i32 %13, %11, !insn.addr !141
  %15 = icmp ne i1 %14, true, !insn.addr !141
  %16 = icmp eq i32 %13, %11, !insn.addr !141
  %17 = icmp ne i1 %16, true, !insn.addr !142
  %18 = icmp eq i1 %15, %17, !insn.addr !142
  store i32 %11, i32* %storemerge3.reg2mem, !insn.addr !142
  store i32 %9, i32* %stack_var_-12.02.reg2mem, !insn.addr !142
  store i32 %13, i32* %.lcssa.reg2mem, !insn.addr !142
  br i1 %18, label %dec_label_pc_9498, label %dec_label_pc_94e2, !insn.addr !142

dec_label_pc_94e2:                                ; preds = %dec_label_pc_9498, %dec_label_pc_9460
  %.lcssa.reload = load i32, i32* %.lcssa.reg2mem
  ret i32 %.lcssa.reload, !insn.addr !149

; uselistorder directives
  uselistorder i32 %13, { 0, 2, 1 }
  uselistorder i32 %11, { 0, 2, 1 }
  uselistorder i32* %storemerge3.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-12.02.reg2mem, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9498, { 1, 0 }
}

define i32 @BM1722_open_core(i32 %arg1) local_unnamed_addr {
dec_label_pc_94ec:
  %stack_var_-16.4.reg2mem = alloca i32, !insn.addr !150
  %stack_var_-16.513.reg2mem = alloca i32, !insn.addr !150
  %storemerge14.reg2mem = alloca i32, !insn.addr !150
  %stack_var_-202 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %0 = urem i32 %arg1, 256
  %1 = call i32* @memset(i32* nonnull %stack_var_-204, i32 0, i32 184), !insn.addr !151
  store i32 -1, i32* %stack_var_-204, align 4, !insn.addr !152
  %2 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_833c to i32), i32 131072) to i8*)), !insn.addr !153
  %3 = add i32 %0, ptrtoint (i8** @global_var_35adc to i32), !insn.addr !154
  %4 = inttoptr i32 %3 to i8*, !insn.addr !154
  store i8 0, i8* %4, align 1, !insn.addr !154
  %5 = add i32 %0, ptrtoint (i8** @global_var_35ae0 to i32), !insn.addr !155
  %6 = inttoptr i32 %5 to i8*, !insn.addr !155
  store i8 1, i8* %6, align 1, !insn.addr !155
  store i32 32, i32* %stack_var_-204, align 4, !insn.addr !156
  %7 = call i32* @memset(i32* nonnull %stack_var_-202, i32 0, i32 180), !insn.addr !157
  %8 = call i32 @CRC16(i32* nonnull %stack_var_-204, i32 182), !insn.addr !158
  %9 = load i32, i32* @global_var_33684c, align 4, !insn.addr !159
  %10 = icmp eq i32 %9, 0, !insn.addr !160
  br i1 %10, label %dec_label_pc_96cc, label %dec_label_pc_958e.lr.ph, !insn.addr !161

dec_label_pc_958e.lr.ph:                          ; preds = %dec_label_pc_94ec
  %11 = bitcast i32* %stack_var_-204 to i8*
  store i32 0, i32* %storemerge14.reg2mem
  br label %dec_label_pc_958e

dec_label_pc_958e:                                ; preds = %dec_label_pc_958e.lr.ph, %dec_label_pc_968c
  %stack_var_-16.513.reload = load i32, i32* %stack_var_-16.513.reg2mem
  %storemerge14.reload = load i32, i32* %storemerge14.reg2mem
  %12 = icmp ult i32 %storemerge14.reload, 31, !insn.addr !162
  %13 = icmp ne i1 %12, true, !insn.addr !162
  %14 = icmp eq i32 %storemerge14.reload, 31, !insn.addr !162
  %15 = icmp ne i1 %14, true, !insn.addr !163
  %16 = icmp eq i1 %13, %15, !insn.addr !163
  br i1 %16, label %dec_label_pc_95c8, label %dec_label_pc_9596, !insn.addr !163

dec_label_pc_9596:                                ; preds = %dec_label_pc_958e
  %17 = icmp eq i32 %storemerge14.reload, 0, !insn.addr !164
  %stack_var_-16.5.op = mul i32 %stack_var_-16.513.reload, 2
  %stack_var_-16.5.op.op = or i32 %stack_var_-16.5.op, 1
  %18 = select i1 %17, i32 1, i32 %stack_var_-16.5.op.op, !insn.addr !165
  %19 = call i32 @set_BM1722_asic_register(i32 %0, i32 0, i32 80, i32 1, i32 %18), !insn.addr !166
  store i32 %18, i32* %stack_var_-16.4.reg2mem, !insn.addr !167
  br label %dec_label_pc_968c, !insn.addr !167

dec_label_pc_95c8:                                ; preds = %dec_label_pc_958e
  %20 = icmp ult i32 %storemerge14.reload, 63, !insn.addr !168
  %21 = icmp ne i1 %20, true, !insn.addr !168
  %22 = icmp eq i32 %storemerge14.reload, 63, !insn.addr !168
  %23 = icmp ne i1 %22, true, !insn.addr !169
  %24 = icmp eq i1 %21, %23, !insn.addr !169
  %25 = icmp ne i1 %13, true, !insn.addr !170
  %26 = or i1 %14, %25, !insn.addr !170
  %or.cond = or i1 %24, %26
  br i1 %or.cond, label %dec_label_pc_960a, label %dec_label_pc_95d8, !insn.addr !169

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95c8
  %27 = icmp eq i32 %storemerge14.reload, 32, !insn.addr !171
  %stack_var_-16.5.op10 = mul i32 %stack_var_-16.513.reload, 2
  %stack_var_-16.5.op10.op = or i32 %stack_var_-16.5.op10, 1
  %28 = select i1 %27, i32 1, i32 %stack_var_-16.5.op10.op, !insn.addr !172
  %29 = call i32 @set_BM1722_asic_register(i32 %0, i32 0, i32 84, i32 1, i32 %28), !insn.addr !173
  store i32 %28, i32* %stack_var_-16.4.reg2mem, !insn.addr !174
  br label %dec_label_pc_968c, !insn.addr !174

dec_label_pc_960a:                                ; preds = %dec_label_pc_95c8
  %30 = icmp ult i32 %storemerge14.reload, 95, !insn.addr !175
  %31 = icmp ne i1 %30, true, !insn.addr !175
  %32 = icmp eq i32 %storemerge14.reload, 95, !insn.addr !175
  %33 = icmp ne i1 %32, true, !insn.addr !176
  %34 = icmp eq i1 %31, %33, !insn.addr !176
  %35 = icmp ne i1 %21, true, !insn.addr !177
  %36 = or i1 %22, %35, !insn.addr !177
  %or.cond7 = or i1 %34, %36
  br i1 %or.cond7, label %dec_label_pc_964c, label %dec_label_pc_961a, !insn.addr !176

dec_label_pc_961a:                                ; preds = %dec_label_pc_960a
  %37 = icmp eq i32 %storemerge14.reload, 64, !insn.addr !178
  %stack_var_-16.5.op11 = mul i32 %stack_var_-16.513.reload, 2
  %stack_var_-16.5.op11.op = or i32 %stack_var_-16.5.op11, 1
  %38 = select i1 %37, i32 1, i32 %stack_var_-16.5.op11.op, !insn.addr !179
  %39 = call i32 @set_BM1722_asic_register(i32 %0, i32 0, i32 88, i32 1, i32 %38), !insn.addr !180
  store i32 %38, i32* %stack_var_-16.4.reg2mem, !insn.addr !181
  br label %dec_label_pc_968c, !insn.addr !181

dec_label_pc_964c:                                ; preds = %dec_label_pc_960a
  %40 = icmp ult i32 %storemerge14.reload, 127, !insn.addr !182
  %41 = icmp ne i1 %40, true, !insn.addr !182
  %42 = icmp eq i32 %storemerge14.reload, 127, !insn.addr !182
  %43 = icmp ne i1 %42, true, !insn.addr !183
  %44 = icmp eq i1 %41, %43, !insn.addr !183
  %45 = icmp ne i1 %31, true, !insn.addr !184
  %46 = or i1 %32, %45, !insn.addr !184
  %or.cond9 = or i1 %44, %46
  store i32 %stack_var_-16.513.reload, i32* %stack_var_-16.4.reg2mem, !insn.addr !183
  br i1 %or.cond9, label %dec_label_pc_968c, label %dec_label_pc_965c, !insn.addr !183

dec_label_pc_965c:                                ; preds = %dec_label_pc_964c
  %47 = icmp eq i32 %storemerge14.reload, 96, !insn.addr !185
  %stack_var_-16.5.op12 = mul i32 %stack_var_-16.513.reload, 2
  %stack_var_-16.5.op12.op = or i32 %stack_var_-16.5.op12, 1
  %48 = select i1 %47, i32 1, i32 %stack_var_-16.5.op12.op, !insn.addr !186
  %49 = call i32 @set_BM1722_asic_register(i32 %0, i32 0, i32 92, i32 1, i32 %48), !insn.addr !187
  store i32 %48, i32* %stack_var_-16.4.reg2mem, !insn.addr !187
  br label %dec_label_pc_968c, !insn.addr !187

dec_label_pc_968c:                                ; preds = %dec_label_pc_965c, %dec_label_pc_964c, %dec_label_pc_961a, %dec_label_pc_95d8, %dec_label_pc_9596
  %stack_var_-16.4.reload = load i32, i32* %stack_var_-16.4.reg2mem
  %50 = call i32 @dcr_uart_send(i32 %0, i8* nonnull %11, i32 184), !insn.addr !188
  %51 = load i32, i32* @global_var_3368a0, align 4, !insn.addr !189
  %52 = call i32 @usleep(i32 %51), !insn.addr !190
  %53 = add i32 %storemerge14.reload, 1, !insn.addr !191
  %54 = load i32, i32* @global_var_33684c, align 4, !insn.addr !159
  %55 = icmp ult i32 %54, %53, !insn.addr !160
  %56 = icmp ne i1 %55, true, !insn.addr !160
  %57 = icmp eq i32 %54, %53, !insn.addr !160
  %58 = icmp ne i1 %57, true, !insn.addr !161
  %59 = icmp eq i1 %56, %58, !insn.addr !161
  store i32 %53, i32* %storemerge14.reg2mem, !insn.addr !161
  store i32 %stack_var_-16.4.reload, i32* %stack_var_-16.513.reg2mem, !insn.addr !161
  br i1 %59, label %dec_label_pc_958e, label %dec_label_pc_96cc, !insn.addr !161

dec_label_pc_96cc:                                ; preds = %dec_label_pc_968c, %dec_label_pc_94ec
  %60 = call i32 @uart_flush_rx(i32 %0), !insn.addr !192
  store i8 0, i8* %6, align 1, !insn.addr !193
  store i8 1, i8* %4, align 1, !insn.addr !194
  ret i32 %60, !insn.addr !195

; uselistorder directives
  uselistorder i32 %54, { 1, 0 }
  uselistorder i32 %53, { 0, 2, 1 }
  uselistorder i32 %storemerge14.reload, { 0, 3, 1, 2, 6, 4, 5, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %stack_var_-16.513.reload, { 4, 0, 3, 2, 1 }
  uselistorder i32 %0, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-204, { 0, 1, 3, 4, 2 }
  uselistorder i32* %storemerge14.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16.513.reg2mem, { 1, 0 }
  uselistorder i32* %stack_var_-16.4.reg2mem, { 0, 4, 5, 3, 2, 1 }
  uselistorder label %dec_label_pc_958e, { 1, 0 }
}

define i32 @check_BM1722_asic_reg(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_96f8:
  %stack_var_-28.2.ph.reg2mem = alloca i32, !insn.addr !196
  %stack_var_-28.0.reg2mem = alloca i32, !insn.addr !196
  %.reg2mem20 = alloca i32, !insn.addr !196
  %.pre-phi9.reg2mem = alloca i32*, !insn.addr !196
  %.reg2mem = alloca i32, !insn.addr !196
  %.pre-phi.reg2mem = alloca i32, !insn.addr !196
  %stack_var_-28.14.reg2mem = alloca i32, !insn.addr !196
  %storemerge5.reg2mem = alloca i32, !insn.addr !196
  %stack_var_-20.03.reg2mem = alloca i32, !insn.addr !196
  %stack_var_-40 = alloca i8, align 1
  %0 = mul i32 %arg1, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !197
  %2 = urem i32 %arg3, 256
  store i8 0, i8* %stack_var_-40, align 1, !insn.addr !198
  %3 = call i32 @clear_register_value_buf(), !insn.addr !199
  %4 = trunc i32 %arg1 to i8, !insn.addr !200
  %5 = trunc i32 %arg2 to i8, !insn.addr !200
  %6 = trunc i32 %arg3 to i8, !insn.addr !200
  %7 = trunc i32 %arg4 to i8, !insn.addr !200
  %8 = call i32 @get_BM1722_asic_register(i8 %4, i8 %5, i8 %6, i8 %7), !insn.addr !200
  %9 = icmp eq i32 %2, 0, !insn.addr !201
  %10 = urem i32 %1, 256
  %11 = add i32 %10, add (i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 ptrtoint (i1* @global_var_100000 to i32)), i32 1208)
  %12 = inttoptr i32 %11 to i8*
  br i1 %9, label %dec_label_pc_974c, label %dec_label_pc_9ab4.preheader, !insn.addr !202

dec_label_pc_974c:                                ; preds = %dec_label_pc_96f8
  store i8 0, i8* %12, align 1, !insn.addr !203
  br label %dec_label_pc_9ab4.preheader, !insn.addr !204

dec_label_pc_9ab4.preheader:                      ; preds = %dec_label_pc_96f8, %dec_label_pc_974c
  %13 = trunc i32 %1 to i8
  %14 = bitcast i8* %stack_var_-40 to i32*
  store i32 -2147483648, i32* %stack_var_-28.2.ph.reg2mem
  br label %dec_label_pc_9ab4.outer

dec_label_pc_9766:                                ; preds = %dec_label_pc_9ab4.outer, %dec_label_pc_9ab4
  %15 = call i32 @usleep(i32 50000), !insn.addr !205
  %16 = call i32 @pthread_mutex_lock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !206
  %17 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !207
  %18 = add i32 %17, 8, !insn.addr !208
  %19 = inttoptr i32 %18 to i32*, !insn.addr !208
  %20 = load i32, i32* %19, align 4, !insn.addr !208
  %21 = call i32 @pthread_mutex_unlock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !209
  %22 = icmp eq i32 %20, 0, !insn.addr !210
  store i32 0, i32* %storemerge5.reg2mem, !insn.addr !211
  store i32 %stack_var_-28.2.ph.reload, i32* %stack_var_-28.14.reg2mem, !insn.addr !211
  br i1 %22, label %dec_label_pc_9ab4, label %dec_label_pc_97a6, !insn.addr !211

dec_label_pc_97a6:                                ; preds = %dec_label_pc_9766, %dec_label_pc_9a9c
  %stack_var_-28.14.reload = load i32, i32* %stack_var_-28.14.reg2mem
  %storemerge5.reload = load i32, i32* %storemerge5.reg2mem
  %23 = call i32 @pthread_mutex_lock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !212
  %24 = load i32, i32* @global_var_3367d8, align 4
  %25 = add i32 %24, 4, !insn.addr !213
  %26 = inttoptr i32 %25 to i32*, !insn.addr !213
  %27 = load i32, i32* %26, align 4, !insn.addr !213
  %28 = mul i32 %27, 10, !insn.addr !214
  %29 = add i32 %24, 25, !insn.addr !215
  %30 = add i32 %29, %28, !insn.addr !216
  %31 = inttoptr i32 %30 to i8*, !insn.addr !216
  %32 = load i8, i8* %31, align 1, !insn.addr !216
  %33 = icmp eq i8 %32, %13, !insn.addr !217
  br i1 %33, label %dec_label_pc_9868, label %dec_label_pc_97dc, !insn.addr !218

dec_label_pc_97dc:                                ; preds = %dec_label_pc_97a6
  %34 = add i32 %27, 1, !insn.addr !219
  store i32 %34, i32* %26, align 4, !insn.addr !220
  %35 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !221
  %36 = add i32 %35, 8, !insn.addr !222
  %37 = inttoptr i32 %36 to i32*, !insn.addr !222
  %38 = load i32, i32* %37, align 4, !insn.addr !222
  %39 = add i32 %38, -1, !insn.addr !223
  store i32 %39, i32* %37, align 4, !insn.addr !224
  %40 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !225
  %41 = add i32 %40, 4, !insn.addr !226
  %42 = inttoptr i32 %41 to i32*, !insn.addr !226
  %43 = load i32, i32* %42, align 4, !insn.addr !226
  %44 = icmp eq i32 %43, 513, !insn.addr !227
  br i1 %44, label %dec_label_pc_9810, label %dec_label_pc_981e, !insn.addr !228

dec_label_pc_9810:                                ; preds = %dec_label_pc_97dc
  store i32 0, i32* %42, align 4, !insn.addr !229
  br label %dec_label_pc_981e, !insn.addr !229

dec_label_pc_981e:                                ; preds = %dec_label_pc_97dc, %dec_label_pc_9810
  %45 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8354 to i32), i32 131072) to i8*)), !insn.addr !230
  %46 = call i32 @pthread_mutex_unlock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !231
  store i32 %stack_var_-28.14.reload, i32* %stack_var_-28.0.reg2mem, !insn.addr !232
  br label %dec_label_pc_9a9c, !insn.addr !232

dec_label_pc_9868:                                ; preds = %dec_label_pc_97a6
  %47 = call i32* @memset(i32* nonnull %14, i32 0, i32 7), !insn.addr !233
  %48 = load i32, i32* @global_var_3367d8, align 4
  %49 = add i32 %48, 4, !insn.addr !234
  %50 = inttoptr i32 %49 to i32*, !insn.addr !234
  %51 = load i32, i32* %50, align 4, !insn.addr !234
  %52 = mul i32 %51, 10, !insn.addr !235
  %53 = add i32 %48, 16, !insn.addr !236
  %54 = add i32 %53, %52, !insn.addr !237
  %55 = inttoptr i32 %54 to i32*, !insn.addr !238
  %56 = load i32, i32* %55, align 4, !insn.addr !238
  %57 = trunc i32 %56 to i8, !insn.addr !239
  store i8 %57, i8* %stack_var_-40, align 1, !insn.addr !239
  %58 = call i32 @CRC5(i8* nonnull %stack_var_-40, i32 51), !insn.addr !240
  %59 = load i32, i32* @global_var_3367d8, align 4
  %60 = add i32 %59, 4
  %61 = inttoptr i32 %60 to i32*
  %62 = load i32, i32* %61, align 4, !insn.addr !241
  %63 = mul i32 %62, 10
  %64 = add i32 %59, 24, !insn.addr !242
  %65 = add i32 %64, %63, !insn.addr !243
  %66 = inttoptr i32 %65 to i8*, !insn.addr !244
  %67 = load i8, i8* %66, align 1, !insn.addr !244
  %68 = zext i8 %67 to i32, !insn.addr !244
  %69 = icmp eq i32 %58, %68, !insn.addr !245
  br i1 %69, label %dec_label_pc_997a, label %dec_label_pc_98e0, !insn.addr !246

dec_label_pc_98e0:                                ; preds = %dec_label_pc_9868
  %70 = add i32 %62, 1, !insn.addr !247
  store i32 %70, i32* %61, align 4, !insn.addr !248
  %71 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !249
  %72 = add i32 %71, 8, !insn.addr !250
  %73 = inttoptr i32 %72 to i32*, !insn.addr !250
  %74 = load i32, i32* %73, align 4, !insn.addr !250
  %75 = add i32 %74, -1, !insn.addr !251
  store i32 %75, i32* %73, align 4, !insn.addr !252
  %76 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !253
  %77 = add i32 %76, 4, !insn.addr !254
  %78 = inttoptr i32 %77 to i32*, !insn.addr !254
  %79 = load i32, i32* %78, align 4, !insn.addr !254
  %80 = icmp eq i32 %79, 513, !insn.addr !255
  br i1 %80, label %dec_label_pc_9914, label %dec_label_pc_9922, !insn.addr !256

dec_label_pc_9914:                                ; preds = %dec_label_pc_98e0
  store i32 0, i32* %78, align 4, !insn.addr !257
  br label %dec_label_pc_9922, !insn.addr !257

dec_label_pc_9922:                                ; preds = %dec_label_pc_98e0, %dec_label_pc_9914
  %81 = call i32 @CRC5(i8* nonnull %stack_var_-40, i32 51), !insn.addr !258
  %82 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8398 to i32), i32 131072) to i8*)), !insn.addr !259
  %83 = call i32 @pthread_mutex_unlock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !260
  store i32 %stack_var_-28.14.reload, i32* %stack_var_-28.0.reg2mem, !insn.addr !261
  br label %dec_label_pc_9a9c, !insn.addr !261

dec_label_pc_997a:                                ; preds = %dec_label_pc_9868
  store i32 %63, i32* %.pre-phi.reg2mem, !insn.addr !262
  store i32 %62, i32* %.reg2mem, !insn.addr !262
  store i32* %61, i32** %.pre-phi9.reg2mem, !insn.addr !262
  store i32 %59, i32* %.reg2mem20, !insn.addr !262
  br i1 %9, label %dec_label_pc_9980, label %dec_label_pc_99b0, !insn.addr !262

dec_label_pc_9980:                                ; preds = %dec_label_pc_997a
  %84 = load i8, i8* %12, align 1, !insn.addr !263
  %85 = add i8 %84, 1
  store i8 %85, i8* %12, align 1, !insn.addr !264
  %.pre = load i32, i32* @global_var_3367d8, align 4
  %.pre7 = add i32 %.pre, 4, !insn.addr !265
  %.pre8 = inttoptr i32 %.pre7 to i32*, !insn.addr !265
  %.pre18 = load i32, i32* %.pre8, align 4
  %.pre19 = mul i32 %.pre18, 10, !insn.addr !266
  store i32 %.pre19, i32* %.pre-phi.reg2mem, !insn.addr !264
  store i32 %.pre18, i32* %.reg2mem, !insn.addr !264
  store i32* %.pre8, i32** %.pre-phi9.reg2mem, !insn.addr !264
  store i32 %.pre, i32* %.reg2mem20, !insn.addr !264
  br label %dec_label_pc_99b0, !insn.addr !264

dec_label_pc_99b0:                                ; preds = %dec_label_pc_997a, %dec_label_pc_9980
  %.reload21 = load i32, i32* %.reg2mem20
  %.pre-phi9.reload = load i32*, i32** %.pre-phi9.reg2mem
  %.reload = load i32, i32* %.reg2mem, !insn.addr !265
  %.pre-phi.reload = load i32, i32* %.pre-phi.reg2mem
  %86 = add i32 %.pre-phi.reload, %.reload21, !insn.addr !267
  %87 = add i32 %86, 16, !insn.addr !268
  %88 = inttoptr i32 %87 to i8*, !insn.addr !269
  %89 = load i8, i8* %88, align 1, !insn.addr !269
  %90 = add i32 %86, 17, !insn.addr !270
  %91 = inttoptr i32 %90 to i8*, !insn.addr !271
  %92 = load i8, i8* %91, align 1, !insn.addr !271
  %93 = add i32 %86, 18, !insn.addr !272
  %94 = inttoptr i32 %93 to i8*, !insn.addr !273
  %95 = load i8, i8* %94, align 1, !insn.addr !273
  %96 = add i32 %86, 19, !insn.addr !274
  %97 = inttoptr i32 %96 to i8*, !insn.addr !275
  %98 = load i8, i8* %97, align 1, !insn.addr !275
  %99 = add i32 %.reload, 1, !insn.addr !276
  store i32 %99, i32* %.pre-phi9.reload, align 4, !insn.addr !277
  %100 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !278
  %101 = add i32 %100, 8, !insn.addr !279
  %102 = inttoptr i32 %101 to i32*, !insn.addr !279
  %103 = load i32, i32* %102, align 4, !insn.addr !279
  %104 = add i32 %103, -1, !insn.addr !280
  store i32 %104, i32* %102, align 4, !insn.addr !281
  %105 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !282
  %106 = add i32 %105, 4, !insn.addr !283
  %107 = inttoptr i32 %106 to i32*, !insn.addr !283
  %108 = load i32, i32* %107, align 4, !insn.addr !283
  %109 = icmp eq i32 %108, 513, !insn.addr !284
  br i1 %109, label %dec_label_pc_9a82, label %dec_label_pc_9a90, !insn.addr !285

dec_label_pc_9a82:                                ; preds = %dec_label_pc_99b0
  store i32 0, i32* %107, align 4, !insn.addr !286
  br label %dec_label_pc_9a90, !insn.addr !286

dec_label_pc_9a90:                                ; preds = %dec_label_pc_99b0, %dec_label_pc_9a82
  %110 = zext i8 %89 to i32, !insn.addr !269
  %111 = mul i32 %110, 16777216, !insn.addr !287
  %112 = zext i8 %92 to i32, !insn.addr !271
  %113 = mul i32 %112, 65536, !insn.addr !288
  %114 = or i32 %113, %111, !insn.addr !289
  %115 = zext i8 %95 to i32, !insn.addr !273
  %116 = mul i32 %115, 256, !insn.addr !290
  %117 = or i32 %114, %116, !insn.addr !291
  %118 = zext i8 %98 to i32, !insn.addr !275
  %119 = or i32 %117, %118, !insn.addr !292
  %120 = call i32 @pthread_mutex_unlock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !293
  store i32 %119, i32* %stack_var_-28.0.reg2mem, !insn.addr !293
  br label %dec_label_pc_9a9c, !insn.addr !293

dec_label_pc_9a9c:                                ; preds = %dec_label_pc_9a90, %dec_label_pc_9922, %dec_label_pc_981e
  %stack_var_-28.0.reload = load i32, i32* %stack_var_-28.0.reg2mem
  %121 = add nuw i32 %storemerge5.reload, 1, !insn.addr !294
  %122 = icmp ult i32 %121, %20, !insn.addr !295
  store i32 %121, i32* %storemerge5.reg2mem, !insn.addr !296
  store i32 %stack_var_-28.0.reload, i32* %stack_var_-28.14.reg2mem, !insn.addr !296
  store i32 %stack_var_-28.0.reload, i32* %stack_var_-28.2.ph.reg2mem, !insn.addr !296
  br i1 %122, label %dec_label_pc_97a6, label %dec_label_pc_9ab4.outer, !insn.addr !296

dec_label_pc_9ab4.outer:                          ; preds = %dec_label_pc_9a9c, %dec_label_pc_9ab4.preheader
  %stack_var_-28.2.ph.reload = load i32, i32* %stack_var_-28.2.ph.reg2mem
  store i32 0, i32* %stack_var_-20.03.reg2mem
  br label %dec_label_pc_9766

dec_label_pc_9ab4:                                ; preds = %dec_label_pc_9766
  %stack_var_-20.03.reload = load i32, i32* %stack_var_-20.03.reg2mem
  %123 = add i32 %stack_var_-20.03.reload, 1, !insn.addr !297
  %124 = icmp ult i32 %123, 2, !insn.addr !298
  %125 = icmp ne i1 %124, true, !insn.addr !298
  %126 = icmp eq i32 %123, 2, !insn.addr !298
  %127 = icmp ne i1 %125, true, !insn.addr !299
  %128 = or i1 %126, %127, !insn.addr !299
  store i32 %123, i32* %stack_var_-20.03.reg2mem, !insn.addr !299
  br i1 %128, label %dec_label_pc_9766, label %dec_label_pc_9abc, !insn.addr !299

dec_label_pc_9abc:                                ; preds = %dec_label_pc_9ab4
  br i1 %9, label %dec_label_pc_9ac6, label %dec_label_pc_9b4c, !insn.addr !300

dec_label_pc_9ac6:                                ; preds = %dec_label_pc_9abc
  %129 = load i8, i8* %12, align 1, !insn.addr !301
  %130 = zext i8 %129 to i32, !insn.addr !301
  %131 = load i32, i32* @global_var_3367c8, align 4, !insn.addr !302
  %132 = icmp ugt i32 %131, %130, !insn.addr !303
  %133 = icmp ne i1 %132, true, !insn.addr !303
  %134 = icmp eq i32 %131, %130, !insn.addr !303
  %135 = icmp ne i1 %133, true, !insn.addr !304
  %136 = or i1 %134, %135, !insn.addr !304
  br i1 %136, label %dec_label_pc_9b1e, label %dec_label_pc_9af4, !insn.addr !304

dec_label_pc_9af4:                                ; preds = %dec_label_pc_9ac6
  store i32 %130, i32* @global_var_3367c8, align 4, !insn.addr !305
  br label %dec_label_pc_9b1e, !insn.addr !305

dec_label_pc_9b1e:                                ; preds = %dec_label_pc_9af4, %dec_label_pc_9ac6
  %137 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_83c0 to i32), i32 131072) to i8*)), !insn.addr !306
  br label %dec_label_pc_9b4c, !insn.addr !306

dec_label_pc_9b4c:                                ; preds = %dec_label_pc_9abc, %dec_label_pc_9b1e
  %138 = call i32 @clear_register_value_buf(), !insn.addr !307
  ret i32 %stack_var_-28.2.ph.reload, !insn.addr !308

; uselistorder directives
  uselistorder i32 %123, { 0, 2, 1 }
  uselistorder i32 %59, { 0, 2, 1 }
  uselistorder i32 %24, { 1, 0 }
  uselistorder i32 %stack_var_-28.14.reload, { 1, 0 }
  uselistorder i32 %1, { 1, 0 }
  uselistorder i8* %stack_var_-40, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-20.03.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge5.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28.14.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28.0.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9b4c, { 1, 0 }
  uselistorder label %dec_label_pc_9a90, { 1, 0 }
  uselistorder label %dec_label_pc_99b0, { 1, 0 }
  uselistorder label %dec_label_pc_9922, { 1, 0 }
  uselistorder label %dec_label_pc_981e, { 1, 0 }
  uselistorder label %dec_label_pc_97a6, { 1, 0 }
  uselistorder label %dec_label_pc_9766, { 1, 0 }
  uselistorder label %dec_label_pc_9ab4.preheader, { 1, 0 }
}

define i32 @singleAsicTest_BM1722() local_unnamed_addr {
dec_label_pc_9b5c:
  %r0.0.reg2mem = alloca i32, !insn.addr !309
  %.lcssa.reg2mem = alloca i32, !insn.addr !309
  %.reg2mem = alloca i32, !insn.addr !309
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %0 = load i32, i32* inttoptr (i32 or (i32 ptrtoint (i32* @global_var_8500 to i32), i32 ptrtoint (i32* @global_var_20000 to i32)) to i32*), align 4, !insn.addr !310
  store i32 %0, i32* %stack_var_-44, align 4, !insn.addr !311
  %1 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_83dc to i32), i32 131072) to i8*)), !insn.addr !312
  %2 = call i32 @system(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_83ec to i32), i32 131072) to i8*)), !insn.addr !313
  %3 = call i32 @putchar(i32 10), !insn.addr !314
  %4 = call i32 @reset_global_arg(), !insn.addr !315
  %5 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !316
  %6 = zext i8 %5 to i32, !insn.addr !316
  %7 = call i32 @chain_reset(i32 %6), !insn.addr !317
  %8 = call i32 @fan_control(i32 50), !insn.addr !318
  %9 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !319
  %10 = zext i8 %9 to i32, !insn.addr !319
  %11 = mul i32 %10, 2, !insn.addr !320
  %12 = add i32 %11, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !321
  %13 = inttoptr i32 %12 to i32*, !insn.addr !322
  %14 = call i32 @pthread_create(i32* nonnull @global_var_2b6314, i32* null, i32* (i32*)* inttoptr (i32 57653 to i32* (i32*)*), i32* %13), !insn.addr !322
  %15 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !323
  %16 = zext i8 %15 to i32, !insn.addr !323
  %17 = add i32 %16, ptrtoint (i8** @global_var_35ae4 to i32), !insn.addr !324
  %18 = inttoptr i32 %17 to i8*, !insn.addr !324
  store i8 1, i8* %18, align 1, !insn.addr !324
  %19 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !325
  %20 = zext i8 %19 to i32, !insn.addr !325
  %21 = mul i32 %20, 2, !insn.addr !326
  %22 = add i32 %21, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !327
  %23 = inttoptr i32 %22 to i32*, !insn.addr !328
  %24 = call i32 @pthread_create(i32* nonnull @global_var_2b6310, i32* null, i32* (i32*)* inttoptr (i32 60357 to i32* (i32*)*), i32* %23), !insn.addr !328
  %25 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !329
  %26 = zext i8 %25 to i32, !insn.addr !329
  %27 = call i32 @set_baud(i32 %26, i32 26), !insn.addr !330
  %28 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_83f4 to i32), i32 131072) to i8*)), !insn.addr !331
  %29 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !332
  %30 = zext i8 %29 to i32, !insn.addr !332
  %31 = call i32 @check_BM1722_asic_reg(i32 %30, i32 0, i32 0, i32 1), !insn.addr !333
  %32 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !334
  %33 = zext i8 %32 to i32, !insn.addr !334
  %34 = add i32 %33, add (i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 ptrtoint (i1* @global_var_100000 to i32)), i32 1208), !insn.addr !335
  %35 = inttoptr i32 %34 to i8*, !insn.addr !336
  %36 = load i8, i8* %35, align 1, !insn.addr !336
  %37 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_840c to i32), i32 131072) to i8*)), !insn.addr !337
  %38 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !338
  %39 = zext i8 %38 to i32, !insn.addr !338
  %40 = add i32 %39, add (i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 ptrtoint (i1* @global_var_100000 to i32)), i32 1208), !insn.addr !339
  %41 = inttoptr i32 %40 to i8*, !insn.addr !340
  %42 = load i8, i8* %41, align 1, !insn.addr !340
  %43 = zext i8 %42 to i32, !insn.addr !340
  %44 = load i32, i32* @global_var_336848, align 4, !insn.addr !341
  %45 = icmp eq i32 %44, %43, !insn.addr !342
  br i1 %45, label %dec_label_pc_9d80, label %dec_label_pc_9cbe, !insn.addr !343

dec_label_pc_9cbe:                                ; preds = %dec_label_pc_9b5c
  %46 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !344
  %47 = call i32 @pthread_cancel(i32 %46), !insn.addr !345
  %48 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !346
  %49 = call i32 @pthread_cancel(i32 %48), !insn.addr !347
  %50 = bitcast i32* %stack_var_-37 to i8*, !insn.addr !348
  %51 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %50, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_842c to i32), i32 131072) to i8*)), !insn.addr !348
  %52 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint (i32* @global_var_8430 to i32), i32 131072), i32 16), !insn.addr !349
  %53 = call i32 @write_lcd_no_memset(i32 1, i32* nonnull %stack_var_-44, i32 16), !insn.addr !350
  %54 = call i32 @write_lcd_no_memset(i32 2, i32* inttoptr (i32 or (i32 ptrtoint (i32* @global_var_8444 to i32), i32 131072) to i32*), i32 16), !insn.addr !351
  %55 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8458 to i32), i32 131072) to i8*)), !insn.addr !352
  store i32 %55, i32* %r0.0.reg2mem, !insn.addr !353
  br label %dec_label_pc_a056, !insn.addr !353

dec_label_pc_9d80:                                ; preds = %dec_label_pc_9b5c
  %56 = zext i8 %36 to i32, !insn.addr !336
  %57 = call i32 @calculate_timeout_and_baud(i32 %37, i32 %56, i32 %43, i32 %43), !insn.addr !354
  %58 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !355
  %59 = zext i8 %58 to i32, !insn.addr !355
  %60 = load i32, i32* @global_var_3368e0, align 4, !insn.addr !356
  %61 = urem i32 %60, 256, !insn.addr !357
  %62 = call i32 @set_baud(i32 %59, i32 %61), !insn.addr !358
  %63 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !359
  %64 = zext i8 %63 to i32, !insn.addr !359
  %65 = load i32, i32* @global_var_336820, align 4, !insn.addr !360
  %66 = call float @__asm_vldr(i32 %65), !insn.addr !360
  %67 = call float @__asm_vcvt.f32.u32(float %66), !insn.addr !361
  %68 = call float @__asm_vmov.f32(float %67), !insn.addr !362
  %69 = call i32 @set_BM1722_freq(i32 %64, i32 0, i32 1), !insn.addr !363
  %70 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !364
  %71 = zext i8 %70 to i32, !insn.addr !364
  %72 = call i32 @BM1722_set_address_all(i32 %71), !insn.addr !365
  %73 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !366
  %74 = zext i8 %73 to i32, !insn.addr !366
  %75 = call i32 @check_BM1722_asic_reg(i32 %74, i32 0, i32 0, i32 1), !insn.addr !367
  %76 = load i8, i8* @global_var_3368d8, align 1, !insn.addr !368
  %77 = icmp eq i8 %76, 1, !insn.addr !369
  br i1 %77, label %dec_label_pc_9e02, label %dec_label_pc_9e42, !insn.addr !370

dec_label_pc_9e02:                                ; preds = %dec_label_pc_9d80
  %78 = load i8, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !371
  %79 = icmp eq i8 %78, 0, !insn.addr !372
  %80 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4
  %81 = zext i8 %80 to i32
  br i1 %79, label %dec_label_pc_9e10, label %dec_label_pc_9e32, !insn.addr !373

dec_label_pc_9e10:                                ; preds = %dec_label_pc_9e02
  %82 = call i32 @get_temperature_offset_value_from_asic_chain(i32 %81), !insn.addr !374
  %83 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !375
  %84 = zext i8 %83 to i32, !insn.addr !375
  %85 = call i32 @set_default_temperature_offset_value_chain(i32 %84), !insn.addr !376
  br label %dec_label_pc_9e42, !insn.addr !377

dec_label_pc_9e32:                                ; preds = %dec_label_pc_9e02
  %86 = call i32 @set_default_temperature_offset_value_chain(i32 %81), !insn.addr !378
  br label %dec_label_pc_9e42, !insn.addr !378

dec_label_pc_9e42:                                ; preds = %dec_label_pc_9d80, %dec_label_pc_9e32, %dec_label_pc_9e10
  %87 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !379
  %88 = zext i8 %87 to i32, !insn.addr !379
  %89 = mul i32 %88, 2, !insn.addr !380
  %90 = add i32 %89, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !381
  %91 = inttoptr i32 %90 to i32*, !insn.addr !382
  %92 = call i32 @pthread_create(i32* nonnull @global_var_2b631c, i32* null, i32* (i32*)* inttoptr (i32 62281 to i32* (i32*)*), i32* %91), !insn.addr !382
  %93 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !383
  %94 = zext i8 %93 to i32, !insn.addr !383
  %95 = call i32 @set_BM1725_asic_register(i32 %94, i32 0, i32 20, i32 1, i32 38), !insn.addr !384
  %96 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !385
  %97 = zext i8 %96 to i32, !insn.addr !385
  %98 = call i32 @BM1722_open_core(i32 %97), !insn.addr !386
  %99 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8474 to i32), i32 131072) to i8*)), !insn.addr !387
  %100 = call i32 @system(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_83ec to i32), i32 131072) to i8*)), !insn.addr !388
  %101 = call i32 @putchar(i32 10), !insn.addr !389
  %102 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !390
  %103 = zext i8 %102 to i32, !insn.addr !390
  %104 = add i32 %103, ptrtoint (i8** @global_var_35ad8 to i32), !insn.addr !391
  %105 = inttoptr i32 %104 to i8*, !insn.addr !391
  %106 = load i8, i8* %105, align 1, !insn.addr !391
  %107 = icmp eq i8 %106, 1, !insn.addr !392
  store i32 %103, i32* %.reg2mem, !insn.addr !393
  store i32 %103, i32* %.lcssa.reg2mem, !insn.addr !393
  br i1 %107, label %dec_label_pc_9fa6, label %dec_label_pc_9ec0, !insn.addr !393

dec_label_pc_9ec0:                                ; preds = %dec_label_pc_9e42, %dec_label_pc_9f7e
  %.reload = load i32, i32* %.reg2mem
  %108 = mul i32 %.reload, 4, !insn.addr !394
  %109 = add i32 %108, ptrtoint (i32* @global_var_35ac8 to i32), !insn.addr !394
  %110 = inttoptr i32 %109 to i32*, !insn.addr !394
  %111 = load i32, i32* %110, align 4, !insn.addr !394
  %112 = load i32, i32* @global_var_3368b4, align 4, !insn.addr !395
  %113 = icmp ult i32 %111, %112, !insn.addr !396
  br i1 %113, label %dec_label_pc_9f7e, label %dec_label_pc_9ee8, !insn.addr !397

dec_label_pc_9ee8:                                ; preds = %dec_label_pc_9ec0
  %114 = load i32, i32* @global_var_2b631c, align 4, !insn.addr !398
  %115 = call i32 @pthread_cancel(i32 %114), !insn.addr !399
  %116 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !400
  %117 = call i32 @pthread_cancel(i32 %116), !insn.addr !401
  %118 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !402
  %119 = call i32 @pthread_cancel(i32 %118), !insn.addr !403
  %120 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8490 to i32), i32 131072) to i8*)), !insn.addr !404
  %121 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint (i32* @global_var_84c4 to i32), i32 131072), i32 16), !insn.addr !405
  %122 = call i32 @write_lcd_no_memset(i32 1, i32* inttoptr (i32 or (i32 ptrtoint (i32* @global_var_84d8 to i32), i32 131072) to i32*), i32 16), !insn.addr !406
  %123 = call i32 @write_lcd_no_memset(i32 2, i32* inttoptr (i32 or (i32 ptrtoint (i32* @global_var_84ec to i32), i32 131072) to i32*), i32 16), !insn.addr !407
  store i8 trunc (i32 and (i32 ptrtoint (i8* @global_var_35ac6 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !408
  store i32 %123, i32* %r0.0.reg2mem, !insn.addr !409
  br label %dec_label_pc_a056, !insn.addr !409

dec_label_pc_9f7e:                                ; preds = %dec_label_pc_9ec0
  %124 = call i32 @usleep(i32 10000), !insn.addr !410
  %125 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !390
  %126 = zext i8 %125 to i32, !insn.addr !390
  %127 = add i32 %126, ptrtoint (i8** @global_var_35ad8 to i32), !insn.addr !391
  %128 = inttoptr i32 %127 to i8*, !insn.addr !391
  %129 = load i8, i8* %128, align 1, !insn.addr !391
  %130 = icmp eq i8 %129, 1, !insn.addr !392
  store i32 %126, i32* %.reg2mem, !insn.addr !393
  store i32 %126, i32* %.lcssa.reg2mem, !insn.addr !393
  br i1 %130, label %dec_label_pc_9fa6, label %dec_label_pc_9ec0, !insn.addr !393

dec_label_pc_9fa6:                                ; preds = %dec_label_pc_9f7e, %dec_label_pc_9e42
  %.lcssa.reload = load i32, i32* %.lcssa.reg2mem
  %131 = mul i32 %.lcssa.reload, 2, !insn.addr !411
  %132 = add i32 %131, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !412
  %133 = inttoptr i32 %132 to i32*, !insn.addr !413
  %134 = call i32 @pthread_create(i32* nonnull @global_var_2b630c, i32* null, i32* (i32*)* inttoptr (i32 61273 to i32* (i32*)*), i32* %133), !insn.addr !413
  %135 = load i32, i32* @global_var_2b630c, align 4, !insn.addr !414
  %136 = call i32 @pthread_join(i32 %135, i32** null), !insn.addr !415
  %137 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !416
  %138 = call i32 @pthread_join(i32 %137, i32** null), !insn.addr !417
  %139 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !418
  %140 = call i32 @pthread_cancel(i32 %139), !insn.addr !419
  %141 = load i32, i32* @global_var_2b631c, align 4, !insn.addr !420
  %142 = call i32 @pthread_cancel(i32 %141), !insn.addr !421
  %143 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !422
  %144 = zext i8 %143 to i32, !insn.addr !422
  %145 = call i32 @single_asic_get_result(i32 %144), !insn.addr !423
  %146 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !424
  %147 = zext i8 %146 to i32, !insn.addr !424
  %148 = call i32 @single_asic_print_lcd(i32 %147, i32 %145), !insn.addr !425
  %149 = call i32 @fan_control(i32 0), !insn.addr !426
  store i32 %149, i32* %r0.0.reg2mem, !insn.addr !426
  br label %dec_label_pc_a056, !insn.addr !426

dec_label_pc_a056:                                ; preds = %dec_label_pc_9ee8, %dec_label_pc_9fa6, %dec_label_pc_9cbe
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !427

; uselistorder directives
  uselistorder i32* %.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r0.0.reg2mem, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_a056, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9ec0, { 1, 0 }
  uselistorder label %dec_label_pc_9e42, { 1, 2, 0 }
}

define i32 @singleBoardTest_BBD12601() local_unnamed_addr {
dec_label_pc_a064:
  %r0.0.reg2mem = alloca i32, !insn.addr !428
  %.lcssa.reg2mem = alloca i32, !insn.addr !428
  %.reg2mem = alloca i32, !insn.addr !428
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %0 = load i32, i32* inttoptr (i32 or (i32 ptrtoint (i32* @global_var_8500 to i32), i32 ptrtoint (i32* @global_var_20000 to i32)) to i32*), align 4, !insn.addr !429
  store i32 %0, i32* %stack_var_-44, align 4, !insn.addr !430
  %1 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_83dc to i32), i32 131072) to i8*)), !insn.addr !431
  %2 = call i32 @system(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_83ec to i32), i32 131072) to i8*)), !insn.addr !432
  %3 = call i32 @putchar(i32 10), !insn.addr !433
  %4 = call i32 @reset_global_arg(), !insn.addr !434
  %5 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !435
  %6 = zext i8 %5 to i32, !insn.addr !435
  %7 = call i32 @chain_reset(i32 %6), !insn.addr !436
  %8 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !437
  %9 = zext i8 %8 to i32, !insn.addr !437
  %10 = mul i32 %9, 2, !insn.addr !438
  %11 = add i32 %10, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !439
  %12 = inttoptr i32 %11 to i32*, !insn.addr !440
  %13 = call i32 @pthread_create(i32* nonnull @global_var_2b6314, i32* null, i32* (i32*)* inttoptr (i32 57653 to i32* (i32*)*), i32* %12), !insn.addr !440
  %14 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !441
  %15 = zext i8 %14 to i32, !insn.addr !441
  %16 = call i32 @chain_reset_low(i32 %15), !insn.addr !442
  %17 = call i32 @usleep(i32 ptrtoint (i32* @global_var_493e0 to i32)), !insn.addr !443
  %18 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !444
  %19 = zext i8 %18 to i32, !insn.addr !444
  %20 = call i32 @reset_PIC16F1704_pic(i32 %19, i32 0), !insn.addr !445
  %21 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !446
  %22 = zext i8 %21 to i32, !insn.addr !446
  %23 = call i32 @jump_from_loader_to_app_PIC16F1704(i32 %22, i32 0), !insn.addr !447
  %24 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !448
  %25 = zext i8 %24 to i32, !insn.addr !448
  %26 = call i32 @set_voltage(i32 %25, i32 0, i32 0, i32 0), !insn.addr !449
  %27 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !450
  %28 = zext i8 %27 to i32, !insn.addr !450
  %29 = call i32 @enable_PIC16F1704_dc_dc(i32 %28, i32 0, i32 1), !insn.addr !451
  %30 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !452
  %31 = zext i8 %30 to i32, !insn.addr !452
  %32 = mul i32 %31, 2, !insn.addr !453
  %33 = add i32 %32, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !454
  %34 = inttoptr i32 %33 to i32*, !insn.addr !455
  %35 = call i32 @pthread_create(i32* nonnull @global_var_2b6318, i32* null, i32* (i32*)* inttoptr (i32 82057 to i32* (i32*)*), i32* %34), !insn.addr !455
  %36 = call i32 @usleep(i32 100), !insn.addr !456
  %37 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !457
  %38 = zext i8 %37 to i32, !insn.addr !457
  %39 = call i32 @chain_reset_high(i32 %38), !insn.addr !458
  %40 = call i32 @usleep(i32 ptrtoint (i32* @global_var_493e0 to i32)), !insn.addr !459
  %41 = call i32 @fan_control(i32 50), !insn.addr !460
  %42 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !461
  %43 = zext i8 %42 to i32, !insn.addr !461
  %44 = call i32 @set_baud(i32 %43, i32 26), !insn.addr !462
  %45 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !463
  %46 = zext i8 %45 to i32, !insn.addr !463
  %47 = add i32 %46, ptrtoint (i8** @global_var_35ae4 to i32), !insn.addr !464
  %48 = inttoptr i32 %47 to i8*, !insn.addr !464
  store i8 1, i8* %48, align 1, !insn.addr !464
  %49 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !465
  %50 = zext i8 %49 to i32, !insn.addr !465
  %51 = mul i32 %50, 2, !insn.addr !466
  %52 = add i32 %51, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !467
  %53 = inttoptr i32 %52 to i32*, !insn.addr !468
  %54 = call i32 @pthread_create(i32* nonnull @global_var_2b6310, i32* null, i32* (i32*)* inttoptr (i32 60357 to i32* (i32*)*), i32* %53), !insn.addr !468
  %55 = call i32 @usleep(i32 5000), !insn.addr !469
  %56 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8510 to i32), i32 131072) to i8*)), !insn.addr !470
  %57 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !471
  %58 = zext i8 %57 to i32, !insn.addr !471
  %59 = call i32 @check_BM1722_asic_reg(i32 %58, i32 0, i32 0, i32 1), !insn.addr !472
  %60 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8530 to i32), i32 131072) to i8*)), !insn.addr !473
  %61 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !474
  %62 = zext i8 %61 to i32, !insn.addr !474
  %63 = add i32 %62, add (i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 ptrtoint (i1* @global_var_100000 to i32)), i32 1208), !insn.addr !475
  %64 = inttoptr i32 %63 to i8*, !insn.addr !476
  %65 = load i8, i8* %64, align 1, !insn.addr !476
  %66 = zext i8 %65 to i32, !insn.addr !476
  %67 = load i32, i32* @global_var_336848, align 4, !insn.addr !477
  %68 = icmp eq i32 %67, %66, !insn.addr !478
  br i1 %68, label %dec_label_pc_a3e4, label %dec_label_pc_a2b6, !insn.addr !479

dec_label_pc_a2b6:                                ; preds = %dec_label_pc_a064
  %69 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !480
  %70 = call i32 @pthread_cancel(i32 %69), !insn.addr !481
  %71 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !482
  %72 = call i32 @pthread_cancel(i32 %71), !insn.addr !483
  %73 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !484
  %74 = load i32, i32* @global_var_2b6318, align 4, !insn.addr !485
  %75 = call i32 @pthread_cancel(i32 %74), !insn.addr !486
  %76 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !487
  %77 = bitcast i32* %stack_var_-37 to i8*, !insn.addr !488
  %78 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %77, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_842c to i32), i32 131072) to i8*)), !insn.addr !488
  %79 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint (i32* @global_var_8430 to i32), i32 131072), i32 16), !insn.addr !489
  %80 = call i32 @write_lcd_no_memset(i32 1, i32* nonnull %stack_var_-44, i32 16), !insn.addr !490
  %81 = call i32 @write_lcd_no_memset(i32 2, i32* inttoptr (i32 or (i32 ptrtoint (i32* @global_var_8444 to i32), i32 131072) to i32*), i32 16), !insn.addr !491
  %82 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8558 to i32), i32 131072) to i8*)), !insn.addr !492
  %83 = load i32, i32* @global_var_3368e4, align 4, !insn.addr !493
  %84 = call i32 @sleep(i32 %83), !insn.addr !494
  %85 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !495
  %86 = zext i8 %85 to i32, !insn.addr !495
  %87 = call i32 @enable_PIC16F1704_dc_dc(i32 %86, i32 0, i32 0), !insn.addr !496
  store i32 %87, i32* %r0.0.reg2mem, !insn.addr !497
  br label %dec_label_pc_a950, !insn.addr !497

dec_label_pc_a3e4:                                ; preds = %dec_label_pc_a064
  %88 = call i32 @chain_reset(i32 %62), !insn.addr !498
  %89 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !499
  %90 = zext i8 %89 to i32, !insn.addr !499
  %91 = call i32 @uart_flush(i32 %90), !insn.addr !500
  %92 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !501
  %93 = zext i8 %92 to i32, !insn.addr !501
  %94 = call i32 @uart_set_baud(i32 %93, i32 26), !insn.addr !502
  %95 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8574 to i32), i32 131072) to i8*)), !insn.addr !503
  %96 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !504
  %97 = zext i8 %96 to i32, !insn.addr !504
  %98 = call i32 @check_BM1722_asic_reg(i32 %97, i32 0, i32 0, i32 1), !insn.addr !505
  %99 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !506
  %100 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8530 to i32), i32 131072) to i8*)), !insn.addr !507
  %101 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !508
  %102 = zext i8 %101 to i32, !insn.addr !508
  %103 = add i32 %102, add (i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 ptrtoint (i1* @global_var_100000 to i32)), i32 1208), !insn.addr !509
  %104 = inttoptr i32 %103 to i8*, !insn.addr !510
  %105 = load i8, i8* %104, align 1, !insn.addr !510
  %106 = zext i8 %105 to i32, !insn.addr !510
  %107 = load i32, i32* @global_var_336848, align 4, !insn.addr !511
  %108 = icmp eq i32 %107, %106, !insn.addr !512
  br i1 %108, label %dec_label_pc_a5c8, label %dec_label_pc_a4a6, !insn.addr !513

dec_label_pc_a4a6:                                ; preds = %dec_label_pc_a3e4
  %109 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !514
  %110 = call i32 @pthread_cancel(i32 %109), !insn.addr !515
  %111 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !516
  %112 = call i32 @pthread_cancel(i32 %111), !insn.addr !517
  %113 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !518
  %114 = load i32, i32* @global_var_2b6318, align 4, !insn.addr !519
  %115 = call i32 @pthread_cancel(i32 %114), !insn.addr !520
  %116 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !521
  %117 = bitcast i32* %stack_var_-37 to i8*, !insn.addr !522
  %118 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %117, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_842c to i32), i32 131072) to i8*)), !insn.addr !522
  %119 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint (i32* @global_var_8430 to i32), i32 131072), i32 16), !insn.addr !523
  %120 = call i32 @write_lcd_no_memset(i32 1, i32* nonnull %stack_var_-44, i32 16), !insn.addr !524
  %121 = call i32 @write_lcd_no_memset(i32 2, i32* inttoptr (i32 or (i32 ptrtoint (i32* @global_var_8444 to i32), i32 131072) to i32*), i32 16), !insn.addr !525
  %122 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8558 to i32), i32 131072) to i8*)), !insn.addr !526
  %123 = load i32, i32* @global_var_3368e4, align 4, !insn.addr !527
  %124 = call i32 @sleep(i32 %123), !insn.addr !528
  %125 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !529
  %126 = zext i8 %125 to i32, !insn.addr !529
  %127 = call i32 @enable_PIC16F1704_dc_dc(i32 %126, i32 0, i32 0), !insn.addr !530
  store i32 %127, i32* %r0.0.reg2mem, !insn.addr !531
  br label %dec_label_pc_a950, !insn.addr !531

dec_label_pc_a5c8:                                ; preds = %dec_label_pc_a3e4
  %128 = zext i8 %99 to i32, !insn.addr !506
  %129 = call i32 @calculate_timeout_and_baud(i32 %100, i32 %128, i32 %106, i32 %106), !insn.addr !532
  %130 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !533
  %131 = zext i8 %130 to i32, !insn.addr !533
  %132 = load i32, i32* @global_var_3368e0, align 4, !insn.addr !534
  %133 = urem i32 %132, 256, !insn.addr !535
  %134 = call i32 @set_baud(i32 %131, i32 %133), !insn.addr !536
  %135 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !537
  %136 = zext i8 %135 to i32, !insn.addr !537
  %137 = load i32, i32* @global_var_336820, align 4, !insn.addr !538
  %138 = call float @__asm_vldr(i32 %137), !insn.addr !538
  %139 = call float @__asm_vcvt.f32.u32(float %138), !insn.addr !539
  %140 = call float @__asm_vmov.f32(float %139), !insn.addr !540
  %141 = call i32 @set_BM1722_freq(i32 %136, i32 0, i32 1), !insn.addr !541
  %142 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !542
  %143 = zext i8 %142 to i32, !insn.addr !542
  %144 = call i32 @BM1722_set_address_all(i32 %143), !insn.addr !543
  %145 = load i8, i8* @global_var_3368d8, align 1, !insn.addr !544
  %146 = icmp eq i8 %145, 1, !insn.addr !545
  br i1 %146, label %dec_label_pc_a634, label %dec_label_pc_a674, !insn.addr !546

dec_label_pc_a634:                                ; preds = %dec_label_pc_a5c8
  %147 = load i8, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !547
  %148 = icmp eq i8 %147, 0, !insn.addr !548
  %149 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4
  %150 = zext i8 %149 to i32
  br i1 %148, label %dec_label_pc_a642, label %dec_label_pc_a664, !insn.addr !549

dec_label_pc_a642:                                ; preds = %dec_label_pc_a634
  %151 = call i32 @get_temperature_offset_value_from_asic_chain(i32 %150), !insn.addr !550
  %152 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !551
  %153 = zext i8 %152 to i32, !insn.addr !551
  %154 = call i32 @set_default_temperature_offset_value_chain(i32 %153), !insn.addr !552
  br label %dec_label_pc_a674, !insn.addr !553

dec_label_pc_a664:                                ; preds = %dec_label_pc_a634
  %155 = call i32 @set_default_temperature_offset_value_chain(i32 %150), !insn.addr !554
  br label %dec_label_pc_a674, !insn.addr !554

dec_label_pc_a674:                                ; preds = %dec_label_pc_a5c8, %dec_label_pc_a664, %dec_label_pc_a642
  %156 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !555
  %157 = zext i8 %156 to i32, !insn.addr !555
  %158 = mul i32 %157, 2, !insn.addr !556
  %159 = add i32 %158, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !557
  %160 = inttoptr i32 %159 to i32*, !insn.addr !558
  %161 = call i32 @pthread_create(i32* nonnull @global_var_2b631c, i32* null, i32* (i32*)* inttoptr (i32 62281 to i32* (i32*)*), i32* %160), !insn.addr !558
  %162 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !559
  %163 = zext i8 %162 to i32, !insn.addr !559
  %164 = call i32 @set_BM1722_asic_register(i32 %163, i32 0, i32 20, i32 1, i32 38), !insn.addr !560
  %165 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !561
  %166 = zext i8 %165 to i32, !insn.addr !561
  %167 = call i32 @BM1722_open_core(i32 %166), !insn.addr !562
  %168 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8474 to i32), i32 131072) to i8*)), !insn.addr !563
  %169 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !564
  %170 = zext i8 %169 to i32, !insn.addr !564
  %171 = add i32 %170, ptrtoint (i8** @global_var_35ad8 to i32), !insn.addr !565
  %172 = inttoptr i32 %171 to i8*, !insn.addr !565
  store i8 1, i8* %172, align 1, !insn.addr !565
  %173 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !566
  %174 = zext i8 %173 to i32, !insn.addr !566
  %175 = add i32 %174, ptrtoint (i8** @global_var_35ad8 to i32), !insn.addr !567
  %176 = inttoptr i32 %175 to i8*, !insn.addr !567
  %177 = load i8, i8* %176, align 1, !insn.addr !567
  %178 = icmp eq i8 %177, 1, !insn.addr !568
  store i32 %174, i32* %.reg2mem, !insn.addr !569
  store i32 %174, i32* %.lcssa.reg2mem, !insn.addr !569
  br i1 %178, label %dec_label_pc_a808, label %dec_label_pc_a6ea, !insn.addr !569

dec_label_pc_a6ea:                                ; preds = %dec_label_pc_a674, %dec_label_pc_a7de
  %.reload = load i32, i32* %.reg2mem
  %179 = mul i32 %.reload, 4, !insn.addr !570
  %180 = add i32 %179, ptrtoint (i32* @global_var_35ac8 to i32), !insn.addr !570
  %181 = inttoptr i32 %180 to i32*, !insn.addr !570
  %182 = load i32, i32* %181, align 4, !insn.addr !570
  %183 = load i32, i32* @global_var_3368b4, align 4, !insn.addr !571
  %184 = icmp ult i32 %182, %183, !insn.addr !572
  br i1 %184, label %dec_label_pc_a7de, label %dec_label_pc_a712, !insn.addr !573

dec_label_pc_a712:                                ; preds = %dec_label_pc_a6ea
  %185 = load i32, i32* @global_var_2b631c, align 4, !insn.addr !574
  %186 = call i32 @pthread_cancel(i32 %185), !insn.addr !575
  %187 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !576
  %188 = call i32 @pthread_cancel(i32 %187), !insn.addr !577
  %189 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !578
  %190 = call i32 @pthread_cancel(i32 %189), !insn.addr !579
  %191 = load i32, i32* @global_var_2b6318, align 4, !insn.addr !580
  %192 = call i32 @pthread_cancel(i32 %191), !insn.addr !581
  %193 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8490 to i32), i32 131072) to i8*)), !insn.addr !582
  %194 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint (i32* @global_var_84c4 to i32), i32 131072), i32 16), !insn.addr !583
  %195 = call i32 @write_lcd_no_memset(i32 1, i32* inttoptr (i32 or (i32 ptrtoint (i32* @global_var_8594 to i32), i32 131072) to i32*), i32 16), !insn.addr !584
  %196 = call i32 @write_lcd_no_memset(i32 2, i32* inttoptr (i32 or (i32 ptrtoint (i32* @global_var_84ec to i32), i32 131072) to i32*), i32 16), !insn.addr !585
  store i8 trunc (i32 and (i32 ptrtoint (i8* @global_var_35ac6 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !586
  %197 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !587
  %198 = zext i8 %197 to i32, !insn.addr !587
  %199 = call i32 @enable_PIC16F1704_dc_dc(i32 %198, i32 0, i32 0), !insn.addr !588
  store i32 %199, i32* %r0.0.reg2mem, !insn.addr !589
  br label %dec_label_pc_a950, !insn.addr !589

dec_label_pc_a7de:                                ; preds = %dec_label_pc_a6ea
  %200 = call i32 @usleep(i32 10000), !insn.addr !590
  %201 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !566
  %202 = zext i8 %201 to i32, !insn.addr !566
  %203 = add i32 %202, ptrtoint (i8** @global_var_35ad8 to i32), !insn.addr !567
  %204 = inttoptr i32 %203 to i8*, !insn.addr !567
  %205 = load i8, i8* %204, align 1, !insn.addr !567
  %206 = icmp eq i8 %205, 1, !insn.addr !568
  store i32 %202, i32* %.reg2mem, !insn.addr !569
  store i32 %202, i32* %.lcssa.reg2mem, !insn.addr !569
  br i1 %206, label %dec_label_pc_a808, label %dec_label_pc_a6ea, !insn.addr !569

dec_label_pc_a808:                                ; preds = %dec_label_pc_a7de, %dec_label_pc_a674
  %.lcssa.reload = load i32, i32* %.lcssa.reg2mem
  %207 = mul i32 %.lcssa.reload, 2, !insn.addr !591
  %208 = add i32 %207, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !592
  %209 = inttoptr i32 %208 to i32*, !insn.addr !593
  %210 = call i32 @pthread_create(i32* nonnull @global_var_2b630c, i32* null, i32* (i32*)* inttoptr (i32 61273 to i32* (i32*)*), i32* %209), !insn.addr !593
  %211 = load i32, i32* @global_var_2b630c, align 4, !insn.addr !594
  %212 = call i32 @pthread_join(i32 %211, i32** null), !insn.addr !595
  %213 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !596
  %214 = call i32 @pthread_join(i32 %213, i32** null), !insn.addr !597
  %215 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !598
  %216 = call i32 @pthread_cancel(i32 %215), !insn.addr !599
  %217 = load i32, i32* @global_var_2b631c, align 4, !insn.addr !600
  %218 = call i32 @pthread_cancel(i32 %217), !insn.addr !601
  %219 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !602
  %220 = zext i8 %219 to i32, !insn.addr !602
  %221 = call i32 @single_board_get_result(i32 %220), !insn.addr !603
  %222 = call i32 @single_board_print_lcd(i32 %221), !insn.addr !604
  %223 = icmp ne i32 %221, 7, !insn.addr !605
  %224 = load i8, i8* @global_var_3368bc, align 1, !insn.addr !606
  %225 = icmp eq i8 %224, 0, !insn.addr !607
  %or.cond = or i1 %223, %225
  br i1 %or.cond, label %dec_label_pc_a8da, label %dec_label_pc_a8da.thread, !insn.addr !608

dec_label_pc_a8da.thread:                         ; preds = %dec_label_pc_a808
  %226 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !609
  %227 = zext i8 %226 to i32, !insn.addr !609
  %228 = call i32 @set_voltage(i32 %227, i32 0, i32 1, i32 0), !insn.addr !610
  br label %dec_label_pc_a8fc

dec_label_pc_a8da:                                ; preds = %dec_label_pc_a808
  %229 = urem i32 %221, 2, !insn.addr !611
  %230 = icmp eq i32 %229, 0, !insn.addr !612
  br i1 %230, label %dec_label_pc_a8e4, label %dec_label_pc_a8fc, !insn.addr !613

dec_label_pc_a8e4:                                ; preds = %dec_label_pc_a8da
  %231 = load i8, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !614
  %232 = load i8, i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !615
  %233 = icmp ult i8 %231, %232, !insn.addr !616
  br i1 %233, label %dec_label_pc_a91c, label %dec_label_pc_a8fc, !insn.addr !617

dec_label_pc_a8fc:                                ; preds = %dec_label_pc_a8da.thread, %dec_label_pc_a8e4, %dec_label_pc_a8da
  %234 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !618
  %235 = zext i8 %234 to i32, !insn.addr !618
  %236 = call i32 @enable_PIC16F1704_dc_dc(i32 %235, i32 0, i32 0), !insn.addr !619
  br label %dec_label_pc_a91c, !insn.addr !619

dec_label_pc_a91c:                                ; preds = %dec_label_pc_a8e4, %dec_label_pc_a8fc
  %237 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !620
  %238 = load i32, i32* @global_var_2b6318, align 4, !insn.addr !621
  %239 = call i32 @pthread_cancel(i32 %238), !insn.addr !622
  %240 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !623
  %241 = call i32 @fan_control(i32 0), !insn.addr !624
  store i32 %241, i32* %r0.0.reg2mem, !insn.addr !624
  br label %dec_label_pc_a950, !insn.addr !624

dec_label_pc_a950:                                ; preds = %dec_label_pc_a91c, %dec_label_pc_a712, %dec_label_pc_a4a6, %dec_label_pc_a2b6
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !625

; uselistorder directives
  uselistorder i32* %.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r0.0.reg2mem, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @BM1722_open_core, { 1, 0 }
  uselistorder i32 (i32)* @BM1722_set_address_all, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @set_BM1722_freq, { 1, 0 }
  uselistorder label %dec_label_pc_a91c, { 1, 0 }
  uselistorder label %dec_label_pc_a8fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a6ea, { 1, 0 }
  uselistorder label %dec_label_pc_a674, { 1, 2, 0 }
}

define i32 @get_BM1725_asic_register(i8 %arg1, i8 %arg2, i8 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_a960:
  %stack_var_-16 = alloca i8, align 1
  %0 = icmp eq i8 %arg4, 0, !insn.addr !626
  %spec.select = select i1 %0, i8 66, i8 82
  store i8 %spec.select, i8* %stack_var_-16, align 1
  %1 = call i32 @CRC5(i8* nonnull %stack_var_-16, i32 32), !insn.addr !627
  %2 = zext i8 %arg1 to i32, !insn.addr !628
  %3 = call i32 @dcr_uart_send(i32 %2, i8* nonnull %stack_var_-16, i32 5), !insn.addr !629
  ret i32 %3, !insn.addr !630

; uselistorder directives
  uselistorder i8* %stack_var_-16, { 1, 2, 0 }
}

define i32 @set_BM1725_asic_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a9cc:
  %stack_var_-20 = alloca i8, align 1
  %0 = urem i32 %arg1, 256
  %1 = urem i32 %arg4, 256, !insn.addr !631
  %2 = icmp eq i32 %1, 0, !insn.addr !632
  %spec.select = select i1 %2, i8 65, i8 81
  store i8 %spec.select, i8* %stack_var_-20, align 1
  %3 = call i32 @CRC5(i8* nonnull %stack_var_-20, i32 64), !insn.addr !633
  %4 = call i32 @dcr_uart_send(i32 %0, i8* nonnull %stack_var_-20, i32 9), !insn.addr !634
  ret i32 %4, !insn.addr !635

; uselistorder directives
  uselistorder i8* %stack_var_-20, { 1, 2, 0 }
}

define i32 @BM1725_set_address(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_aa64:
  %stack_var_-16 = alloca i8, align 1
  store i8 64, i8* %stack_var_-16, align 1, !insn.addr !636
  %0 = call i32 @CRC5(i8* nonnull %stack_var_-16, i32 32), !insn.addr !637
  %1 = urem i32 %arg1, 256, !insn.addr !638
  %2 = call i32 @dcr_uart_send(i32 %1, i8* nonnull %stack_var_-16, i32 5), !insn.addr !639
  ret i32 %2, !insn.addr !640
}

define i32 @BM1725_chain_inactive(i32 %arg1) local_unnamed_addr {
dec_label_pc_aac0:
  %stack_var_-16 = alloca i8, align 1
  %0 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_864c to i32), i32 131072) to i8*)), !insn.addr !641
  store i8 83, i8* %stack_var_-16, align 1, !insn.addr !642
  %1 = call i32 @CRC5(i8* nonnull %stack_var_-16, i32 32), !insn.addr !643
  %2 = urem i32 %arg1, 256, !insn.addr !644
  %3 = call i32 @dcr_uart_send(i32 %2, i8* nonnull %stack_var_-16, i32 5), !insn.addr !645
  %4 = call i32 @usleep(i32 5000), !insn.addr !646
  ret i32 %4, !insn.addr !647
}

define i32 @BM1725_set_address_all(i32 %arg1) local_unnamed_addr {
dec_label_pc_ab34:
  %r0.0.lcssa.reg2mem = alloca i32, !insn.addr !648
  %stack_var_-9.02.reg2mem = alloca i8, !insn.addr !648
  %storemerge3.reg2mem = alloca i8, !insn.addr !648
  %0 = urem i32 %arg1, 256
  %1 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8658 to i32), i32 131072) to i8*)), !insn.addr !649
  %2 = call i32 @BM1725_chain_inactive(i32 %0), !insn.addr !650
  %3 = load i32, i32* @global_var_336848, align 4, !insn.addr !651
  %4 = icmp eq i32 %3, 0, !insn.addr !652
  store i8 0, i8* %storemerge3.reg2mem, !insn.addr !653
  store i8 0, i8* %stack_var_-9.02.reg2mem, !insn.addr !653
  store i32 %2, i32* %r0.0.lcssa.reg2mem, !insn.addr !653
  br i1 %4, label %dec_label_pc_aba8, label %dec_label_pc_ab6c, !insn.addr !653

dec_label_pc_ab6c:                                ; preds = %dec_label_pc_ab34, %dec_label_pc_ab6c
  %stack_var_-9.02.reload = load i8, i8* %stack_var_-9.02.reg2mem
  %storemerge3.reload = load i8, i8* %storemerge3.reg2mem
  %5 = zext i8 %stack_var_-9.02.reload to i32, !insn.addr !654
  %6 = call i32 @BM1725_set_address(i32 %0, i32 %5), !insn.addr !655
  %7 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !656
  %8 = trunc i32 %7 to i8
  %9 = add i8 %stack_var_-9.02.reload, %8, !insn.addr !657
  %10 = call i32 @usleep(i32 5000), !insn.addr !658
  %11 = add i8 %storemerge3.reload, 1, !insn.addr !659
  %12 = zext i8 %11 to i32, !insn.addr !660
  %13 = load i32, i32* @global_var_336848, align 4, !insn.addr !651
  %14 = icmp ugt i32 %13, %12, !insn.addr !652
  store i8 %11, i8* %storemerge3.reg2mem, !insn.addr !653
  store i8 %9, i8* %stack_var_-9.02.reg2mem, !insn.addr !653
  store i32 %10, i32* %r0.0.lcssa.reg2mem, !insn.addr !653
  br i1 %14, label %dec_label_pc_ab6c, label %dec_label_pc_aba8, !insn.addr !653

dec_label_pc_aba8:                                ; preds = %dec_label_pc_ab6c, %dec_label_pc_ab34
  %r0.0.lcssa.reload = load i32, i32* %r0.0.lcssa.reg2mem
  ret i32 %r0.0.lcssa.reload, !insn.addr !661

; uselistorder directives
  uselistorder i8 %stack_var_-9.02.reload, { 1, 0 }
  uselistorder i8* %storemerge3.reg2mem, { 2, 0, 1 }
  uselistorder i8* %stack_var_-9.02.reg2mem, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab6c, { 1, 0 }
}

define i32 @set_BM1725_freq(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_abb0:
  %0 = alloca i32
  %1 = alloca float
  %2 = load float, float* %1
  %3 = load i32, i32* %0
  call void @__asm_vstr(float %2, i32 %3), !insn.addr !662
  %4 = call float @__asm_vldr(i32 %3), !insn.addr !663
  ret i32 %arg1, !insn.addr !663

; uselistorder directives
  uselistorder i32 %3, { 1, 0 }
}

define i32 @function_abdc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_abdc:
  %0 = alloca i1
  %r0.0.reg2mem = alloca i32, !insn.addr !664
  %1 = load i1, i1* %0
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !664
  br i1 %1, label %4, label %2, !insn.addr !664

; <label>:2:                                      ; preds = %dec_label_pc_abdc
  %3 = call i32 @function_ffa066c0(), !insn.addr !664
  store i32 %3, i32* %r0.0.reg2mem, !insn.addr !664
  br label %4, !insn.addr !664

; <label>:4:                                      ; preds = %2, %dec_label_pc_abdc
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !665
}

define i32 @function_abf8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_abf8:
  ret i32 %arg1, !insn.addr !666
}

define i32 @function_ac0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ac0c:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = call i32 @get_pllparam_divider(i32 %arg1, i32 %arg2, i32 %arg4, i32 %arg4), !insn.addr !667
  %3 = add i32 %1, 20, !insn.addr !668
  %4 = inttoptr i32 %3 to i32*, !insn.addr !668
  store i32 %2, i32* %4, align 4, !insn.addr !668
  %5 = add i32 %1, 16, !insn.addr !669
  %6 = inttoptr i32 %5 to i32*, !insn.addr !669
  %7 = load i32, i32* %6, align 4, !insn.addr !669
  %8 = or i32 %7, -1073741824, !insn.addr !670
  store i32 %8, i32* %6, align 4, !insn.addr !671
  %9 = add i32 %1, 15, !insn.addr !672
  %10 = inttoptr i32 %9 to i8*, !insn.addr !672
  %11 = load i8, i8* %10, align 1, !insn.addr !672
  %12 = add i8 %11, -1
  store i8 %12, i8* %10, align 1, !insn.addr !673
  %13 = add i32 %1, 8, !insn.addr !674
  %14 = inttoptr i32 %13 to i32*, !insn.addr !674
  %15 = load i32, i32* %14, align 4, !insn.addr !674
  %16 = call float @__asm_vldr(i32 %15), !insn.addr !674
  ret i32 %2, !insn.addr !674

; uselistorder directives
  uselistorder i32 %2, { 1, 0 }
  uselistorder i32 %1, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @get_pllparam_divider, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @function_ac2c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ac2c:
  %0 = alloca i1
  %r0.1.reg2mem = alloca i32, !insn.addr !675
  %1 = load i1, i1* %0
  store i32 %arg1, i32* %r0.1.reg2mem, !insn.addr !675
  br i1 %1, label %5, label %2, !insn.addr !675

; <label>:2:                                      ; preds = %dec_label_pc_ac2c
  %3 = call i32 @function_ffa06710(), !insn.addr !675
  %4 = call i32 @function_4626c(), !insn.addr !676
  store i32 %4, i32* %r0.1.reg2mem, !insn.addr !676
  br label %5, !insn.addr !676

; <label>:5:                                      ; preds = %2, %dec_label_pc_ac2c
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  ret i32 %r0.1.reload, !insn.addr !677

; uselistorder directives
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 1 }
}

define i32 @function_ac48(i32 %arg1) local_unnamed_addr {
dec_label_pc_ac48:
  %0 = alloca i32
  %1 = alloca i1
  %r8.1.reg2mem = alloca i32, !insn.addr !678
  %sb.01.reg2mem = alloca i32, !insn.addr !678
  %2 = load i1, i1* %1
  %3 = load i1, i1* %1
  %4 = load i32, i32* %0
  %5 = load i32, i32* %0
  br i1 %2, label %.thread, label %6, !insn.addr !678

; <label>:6:                                      ; preds = %dec_label_pc_ac48
  %7 = add i32 %4, 20, !insn.addr !678
  %8 = inttoptr i32 %7 to i32*, !insn.addr !678
  %9 = load i32, i32* %8, align 4, !insn.addr !678
  %10 = add i32 %4, 28, !insn.addr !678
  %11 = add i32 %9, -24, !insn.addr !679
  %12 = inttoptr i32 %11 to i32*, !insn.addr !679
  %13 = load i32, i32* %12, align 4, !insn.addr !679
  store i32 %10, i32* %sb.01.reg2mem, !insn.addr !679
  store i32 %13, i32* %r8.1.reg2mem, !insn.addr !679
  br label %.thread, !insn.addr !679

.thread:                                          ; preds = %dec_label_pc_ac48, %6
  br i1 %3, label %14, label %16, !insn.addr !680

; <label>:14:                                     ; preds = %.thread
  %r8.1.reload = load i32, i32* %r8.1.reg2mem
  %sb.01.reload = load i32, i32* %sb.01.reg2mem
  %15 = inttoptr i32 %r8.1.reload to i32*, !insn.addr !680
  store i32 %sb.01.reload, i32* %15, align 4, !insn.addr !680
  br label %16, !insn.addr !680

; <label>:16:                                     ; preds = %.thread, %14
  call void @__asm_mrc2(i32 7, i32 5, i32 %5, i32 8, i32 15, i32 7), !insn.addr !681
  ret i32 %arg1, !insn.addr !682

; uselistorder directives
  uselistorder i1* %1, { 1, 0 }
  uselistorder i32* %0, { 1, 0 }
  uselistorder label %16, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_ac64() local_unnamed_addr {
dec_label_pc_ac64:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = add i32 %1, 15, !insn.addr !683
  %3 = inttoptr i32 %2 to i8*, !insn.addr !683
  %4 = load i8, i8* %3, align 1, !insn.addr !683
  %5 = zext i8 %4 to i32, !insn.addr !683
  %6 = add i32 %1, 7, !insn.addr !684
  %7 = inttoptr i32 %6 to i8*, !insn.addr !684
  %8 = load i8, i8* %7, align 1, !insn.addr !684
  %9 = zext i8 %8 to i32, !insn.addr !684
  %10 = add i32 %1, 6, !insn.addr !685
  %11 = inttoptr i32 %10 to i8*, !insn.addr !685
  %12 = load i8, i8* %11, align 1, !insn.addr !685
  %13 = zext i8 %12 to i32, !insn.addr !685
  %14 = add i32 %1, 5, !insn.addr !686
  %15 = inttoptr i32 %14 to i8*, !insn.addr !686
  %16 = load i8, i8* %15, align 1, !insn.addr !686
  %17 = zext i8 %16 to i32, !insn.addr !686
  %18 = call i32 @set_BM1725_asic_register(i32 %9, i32 %13, i32 112, i32 %17, i32 %5), !insn.addr !687
  %19 = call i32 @usleep(i32 1000), !insn.addr !688
  %20 = add i32 %1, 16, !insn.addr !689
  %21 = inttoptr i32 %20 to i32*, !insn.addr !689
  %22 = load i32, i32* %21, align 4, !insn.addr !689
  %23 = load i8, i8* %7, align 1, !insn.addr !690
  %24 = zext i8 %23 to i32, !insn.addr !690
  %25 = load i8, i8* %11, align 1, !insn.addr !691
  %26 = zext i8 %25 to i32, !insn.addr !691
  %27 = load i8, i8* %15, align 1, !insn.addr !692
  %28 = zext i8 %27 to i32, !insn.addr !692
  %29 = call i32 @set_BM1725_asic_register(i32 %24, i32 %26, i32 12, i32 %28, i32 %22), !insn.addr !693
  ret i32 %29, !insn.addr !694

; uselistorder directives
  uselistorder i32 %1, { 4, 2, 3, 1, 0 }
}

define i32 @BM1725_open_core(i32 %arg1) local_unnamed_addr {
dec_label_pc_aca0:
  %storemerge2.reg2mem = alloca i32, !insn.addr !695
  %stack_var_-202 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %0 = urem i32 %arg1, 256
  %1 = call i32* @memset(i32* nonnull %stack_var_-204, i32 0, i32 184), !insn.addr !696
  store i32 -1, i32* %stack_var_-204, align 4, !insn.addr !697
  %2 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8658 to i32), i32 131072) to i8*)), !insn.addr !698
  %3 = add i32 %0, ptrtoint (i8** @global_var_35adc to i32), !insn.addr !699
  %4 = inttoptr i32 %3 to i8*, !insn.addr !699
  store i8 0, i8* %4, align 1, !insn.addr !699
  %5 = add i32 %0, ptrtoint (i8** @global_var_35ae0 to i32), !insn.addr !700
  %6 = inttoptr i32 %5 to i8*, !insn.addr !700
  store i8 1, i8* %6, align 1, !insn.addr !700
  store i32 32, i32* %stack_var_-204, align 4, !insn.addr !701
  %7 = call i32* @memset(i32* nonnull %stack_var_-202, i32 0, i32 180), !insn.addr !702
  %8 = call i32 @CRC16(i32* nonnull %stack_var_-204, i32 182), !insn.addr !703
  %9 = bitcast i32* %stack_var_-204 to i8*
  store i32 0, i32* %storemerge2.reg2mem
  br label %dec_label_pc_ad42

dec_label_pc_ad42:                                ; preds = %dec_label_pc_aca0, %dec_label_pc_ad42
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %10 = mul i32 %storemerge2.reload, 65536, !insn.addr !704
  %11 = or i32 %10, or (i32 ptrtoint (i32* @global_var_8200 to i32), i32 1), !insn.addr !705
  %12 = call i32 @set_BM1725_asic_register(i32 %0, i32 0, i32 36, i32 1, i32 %11), !insn.addr !706
  %13 = call i32 @usleep(i32 100), !insn.addr !707
  %14 = call i32 @dcr_uart_send(i32 %0, i8* nonnull %9, i32 184), !insn.addr !708
  %15 = load i32, i32* @global_var_3368a0, align 4, !insn.addr !709
  %16 = call i32 @usleep(i32 %15), !insn.addr !710
  %17 = add i32 %storemerge2.reload, 1, !insn.addr !711
  %18 = icmp ult i32 %17, 275, !insn.addr !712
  %19 = icmp ne i1 %18, true, !insn.addr !712
  %20 = icmp eq i32 %17, 275, !insn.addr !712
  %21 = icmp ne i1 %19, true, !insn.addr !713
  %22 = or i1 %20, %21, !insn.addr !713
  store i32 %17, i32* %storemerge2.reg2mem, !insn.addr !713
  br i1 %22, label %dec_label_pc_ad42, label %dec_label_pc_ada6, !insn.addr !713

dec_label_pc_ada6:                                ; preds = %dec_label_pc_ad42
  %23 = call i32 @uart_flush_rx(i32 %0), !insn.addr !714
  store i8 0, i8* %6, align 1, !insn.addr !715
  store i8 1, i8* %4, align 1, !insn.addr !716
  ret i32 %23, !insn.addr !717

; uselistorder directives
  uselistorder i32 %17, { 0, 2, 1 }
  uselistorder i32 %0, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-204, { 0, 1, 3, 4, 2 }
  uselistorder i32* %storemerge2.reg2mem, { 1, 0, 2 }
  uselistorder i32 275, { 1, 0 }
  uselistorder label %dec_label_pc_ad42, { 1, 0 }
}

define i32 @check_BM1725_asic_reg(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_add4:
  %stack_var_-44.2.ph.reg2mem = alloca i32, !insn.addr !718
  %stack_var_-44.0.reg2mem = alloca i32, !insn.addr !718
  %.reg2mem20 = alloca i32, !insn.addr !718
  %.pre-phi9.reg2mem = alloca i32*, !insn.addr !718
  %.reg2mem = alloca i32, !insn.addr !718
  %.pre-phi.reg2mem = alloca i32, !insn.addr !718
  %stack_var_-44.14.reg2mem = alloca i32, !insn.addr !718
  %storemerge5.reg2mem = alloca i32, !insn.addr !718
  %stack_var_-36.03.reg2mem = alloca i32, !insn.addr !718
  %stack_var_-56 = alloca i32, align 4
  %0 = mul i32 %arg1, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !719
  %2 = urem i32 %arg3, 256
  store i32 0, i32* %stack_var_-56, align 4, !insn.addr !720
  %3 = call i32 @clear_register_value_buf(), !insn.addr !721
  %4 = trunc i32 %arg1 to i8, !insn.addr !722
  %5 = trunc i32 %arg2 to i8, !insn.addr !722
  %6 = trunc i32 %arg3 to i8, !insn.addr !722
  %7 = trunc i32 %arg4 to i8, !insn.addr !722
  %8 = call i32 @get_BM1725_asic_register(i8 %4, i8 %5, i8 %6, i8 %7), !insn.addr !722
  %9 = icmp eq i32 %2, 0, !insn.addr !723
  %10 = urem i32 %1, 256
  %11 = add i32 %10, add (i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 ptrtoint (i1* @global_var_100000 to i32)), i32 1208)
  %12 = inttoptr i32 %11 to i8*
  br i1 %9, label %dec_label_pc_ae16, label %dec_label_pc_b2ee.preheader, !insn.addr !724

dec_label_pc_ae16:                                ; preds = %dec_label_pc_add4
  store i8 0, i8* %12, align 1, !insn.addr !725
  br label %dec_label_pc_b2ee.preheader, !insn.addr !726

dec_label_pc_b2ee.preheader:                      ; preds = %dec_label_pc_add4, %dec_label_pc_ae16
  %13 = trunc i32 %1 to i8
  %14 = bitcast i32* %stack_var_-56 to i8*
  store i32 -2147483648, i32* %stack_var_-44.2.ph.reg2mem
  br label %dec_label_pc_b2ee.outer

dec_label_pc_ae30:                                ; preds = %dec_label_pc_b2ee.outer, %dec_label_pc_b2ee
  %15 = call i32 @usleep(i32 50000), !insn.addr !727
  %16 = call i32 @pthread_mutex_lock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !728
  %17 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !729
  %18 = add i32 %17, 8, !insn.addr !730
  %19 = inttoptr i32 %18 to i32*, !insn.addr !730
  %20 = load i32, i32* %19, align 4, !insn.addr !730
  %21 = call i32 @pthread_mutex_unlock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !731
  %22 = icmp eq i32 %20, 0, !insn.addr !732
  store i32 0, i32* %storemerge5.reg2mem, !insn.addr !733
  store i32 %stack_var_-44.2.ph.reload, i32* %stack_var_-44.14.reg2mem, !insn.addr !733
  br i1 %22, label %dec_label_pc_b2ee, label %dec_label_pc_ae70, !insn.addr !733

dec_label_pc_ae70:                                ; preds = %dec_label_pc_ae30, %dec_label_pc_b2d6
  %stack_var_-44.14.reload = load i32, i32* %stack_var_-44.14.reg2mem
  %storemerge5.reload = load i32, i32* %storemerge5.reg2mem
  %23 = call i32 @pthread_mutex_lock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !734
  %24 = load i32, i32* @global_var_3367d8, align 4
  %25 = add i32 %24, 4, !insn.addr !735
  %26 = inttoptr i32 %25 to i32*, !insn.addr !735
  %27 = load i32, i32* %26, align 4, !insn.addr !735
  %28 = mul i32 %27, 10, !insn.addr !736
  %29 = add i32 %24, 25, !insn.addr !737
  %30 = add i32 %29, %28, !insn.addr !738
  %31 = inttoptr i32 %30 to i8*, !insn.addr !738
  %32 = load i8, i8* %31, align 1, !insn.addr !738
  %33 = icmp eq i8 %32, %13, !insn.addr !739
  br i1 %33, label %dec_label_pc_af32, label %dec_label_pc_aea6, !insn.addr !740

dec_label_pc_aea6:                                ; preds = %dec_label_pc_ae70
  %34 = add i32 %27, 1, !insn.addr !741
  store i32 %34, i32* %26, align 4, !insn.addr !742
  %35 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !743
  %36 = add i32 %35, 8, !insn.addr !744
  %37 = inttoptr i32 %36 to i32*, !insn.addr !744
  %38 = load i32, i32* %37, align 4, !insn.addr !744
  %39 = add i32 %38, -1, !insn.addr !745
  store i32 %39, i32* %37, align 4, !insn.addr !746
  %40 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !747
  %41 = add i32 %40, 4, !insn.addr !748
  %42 = inttoptr i32 %41 to i32*, !insn.addr !748
  %43 = load i32, i32* %42, align 4, !insn.addr !748
  %44 = icmp eq i32 %43, 513, !insn.addr !749
  br i1 %44, label %dec_label_pc_aeda, label %dec_label_pc_aee8, !insn.addr !750

dec_label_pc_aeda:                                ; preds = %dec_label_pc_aea6
  store i32 0, i32* %42, align 4, !insn.addr !751
  br label %dec_label_pc_aee8, !insn.addr !751

dec_label_pc_aee8:                                ; preds = %dec_label_pc_aea6, %dec_label_pc_aeda
  %45 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_86b8 to i32), i32 131072) to i8*)), !insn.addr !752
  %46 = call i32 @pthread_mutex_unlock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !753
  store i32 %stack_var_-44.14.reload, i32* %stack_var_-44.0.reg2mem, !insn.addr !754
  br label %dec_label_pc_b2d6, !insn.addr !754

dec_label_pc_af32:                                ; preds = %dec_label_pc_ae70
  %47 = call i32* @memset(i32* nonnull %stack_var_-56, i32 0, i32 8), !insn.addr !755
  %48 = load i32, i32* @global_var_3367d8, align 4
  %49 = add i32 %48, 4, !insn.addr !756
  %50 = inttoptr i32 %49 to i32*, !insn.addr !756
  %51 = load i32, i32* %50, align 4, !insn.addr !756
  %52 = mul i32 %51, 10, !insn.addr !757
  %53 = add i32 %48, 16, !insn.addr !758
  %54 = add i32 %53, %52, !insn.addr !759
  %55 = inttoptr i32 %54 to i32*, !insn.addr !760
  %56 = load i32, i32* %55, align 4, !insn.addr !760
  store i32 %56, i32* %stack_var_-56, align 4, !insn.addr !761
  %57 = call i32 @CRC5(i8* nonnull %14, i32 59), !insn.addr !762
  %58 = load i32, i32* @global_var_3367d8, align 4
  %59 = add i32 %58, 4
  %60 = inttoptr i32 %59 to i32*
  %61 = load i32, i32* %60, align 4, !insn.addr !763
  %62 = mul i32 %61, 10
  %63 = add i32 %58, 24, !insn.addr !764
  %64 = add i32 %63, %62, !insn.addr !765
  %65 = inttoptr i32 %64 to i8*, !insn.addr !766
  %66 = load i8, i8* %65, align 1, !insn.addr !766
  %67 = zext i8 %66 to i32, !insn.addr !766
  %68 = icmp eq i32 %57, %67, !insn.addr !767
  br i1 %68, label %dec_label_pc_b03e, label %dec_label_pc_afa4, !insn.addr !768

dec_label_pc_afa4:                                ; preds = %dec_label_pc_af32
  %69 = add i32 %61, 1, !insn.addr !769
  store i32 %69, i32* %60, align 4, !insn.addr !770
  %70 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !771
  %71 = add i32 %70, 8, !insn.addr !772
  %72 = inttoptr i32 %71 to i32*, !insn.addr !772
  %73 = load i32, i32* %72, align 4, !insn.addr !772
  %74 = add i32 %73, -1, !insn.addr !773
  store i32 %74, i32* %72, align 4, !insn.addr !774
  %75 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !775
  %76 = add i32 %75, 4, !insn.addr !776
  %77 = inttoptr i32 %76 to i32*, !insn.addr !776
  %78 = load i32, i32* %77, align 4, !insn.addr !776
  %79 = icmp eq i32 %78, 513, !insn.addr !777
  br i1 %79, label %dec_label_pc_afd8, label %dec_label_pc_afe6, !insn.addr !778

dec_label_pc_afd8:                                ; preds = %dec_label_pc_afa4
  store i32 0, i32* %77, align 4, !insn.addr !779
  br label %dec_label_pc_afe6, !insn.addr !779

dec_label_pc_afe6:                                ; preds = %dec_label_pc_afa4, %dec_label_pc_afd8
  %80 = call i32 @CRC5(i8* nonnull %14, i32 59), !insn.addr !780
  %81 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_86fc to i32), i32 131072) to i8*)), !insn.addr !781
  %82 = call i32 @pthread_mutex_unlock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !782
  store i32 %stack_var_-44.14.reload, i32* %stack_var_-44.0.reg2mem, !insn.addr !783
  br label %dec_label_pc_b2d6, !insn.addr !783

dec_label_pc_b03e:                                ; preds = %dec_label_pc_af32
  store i32 %62, i32* %.pre-phi.reg2mem, !insn.addr !784
  store i32 %61, i32* %.reg2mem, !insn.addr !784
  store i32* %60, i32** %.pre-phi9.reg2mem, !insn.addr !784
  store i32 %58, i32* %.reg2mem20, !insn.addr !784
  br i1 %9, label %dec_label_pc_b046, label %dec_label_pc_b1ea, !insn.addr !784

dec_label_pc_b046:                                ; preds = %dec_label_pc_b03e
  %83 = load i8, i8* %12, align 1, !insn.addr !785
  %84 = add i8 %83, 1
  store i8 %84, i8* %12, align 1, !insn.addr !786
  %85 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8724 to i32), i32 131072) to i8*)), !insn.addr !787
  %.pre = load i32, i32* @global_var_3367d8, align 4
  %.pre7 = add i32 %.pre, 4, !insn.addr !788
  %.pre8 = inttoptr i32 %.pre7 to i32*, !insn.addr !788
  %.pre18 = load i32, i32* %.pre8, align 4
  %.pre19 = mul i32 %.pre18, 10, !insn.addr !789
  store i32 %.pre19, i32* %.pre-phi.reg2mem, !insn.addr !787
  store i32 %.pre18, i32* %.reg2mem, !insn.addr !787
  store i32* %.pre8, i32** %.pre-phi9.reg2mem, !insn.addr !787
  store i32 %.pre, i32* %.reg2mem20, !insn.addr !787
  br label %dec_label_pc_b1ea, !insn.addr !787

dec_label_pc_b1ea:                                ; preds = %dec_label_pc_b03e, %dec_label_pc_b046
  %.reload21 = load i32, i32* %.reg2mem20
  %.pre-phi9.reload = load i32*, i32** %.pre-phi9.reg2mem
  %.reload = load i32, i32* %.reg2mem, !insn.addr !788
  %.pre-phi.reload = load i32, i32* %.pre-phi.reg2mem
  %86 = add i32 %.pre-phi.reload, %.reload21, !insn.addr !790
  %87 = add i32 %86, 16, !insn.addr !791
  %88 = inttoptr i32 %87 to i8*, !insn.addr !792
  %89 = load i8, i8* %88, align 1, !insn.addr !792
  %90 = add i32 %86, 17, !insn.addr !793
  %91 = inttoptr i32 %90 to i8*, !insn.addr !794
  %92 = load i8, i8* %91, align 1, !insn.addr !794
  %93 = add i32 %86, 18, !insn.addr !795
  %94 = inttoptr i32 %93 to i8*, !insn.addr !796
  %95 = load i8, i8* %94, align 1, !insn.addr !796
  %96 = add i32 %86, 19, !insn.addr !797
  %97 = inttoptr i32 %96 to i8*, !insn.addr !798
  %98 = load i8, i8* %97, align 1, !insn.addr !798
  %99 = add i32 %.reload, 1, !insn.addr !799
  store i32 %99, i32* %.pre-phi9.reload, align 4, !insn.addr !800
  %100 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !801
  %101 = add i32 %100, 8, !insn.addr !802
  %102 = inttoptr i32 %101 to i32*, !insn.addr !802
  %103 = load i32, i32* %102, align 4, !insn.addr !802
  %104 = add i32 %103, -1, !insn.addr !803
  store i32 %104, i32* %102, align 4, !insn.addr !804
  %105 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !805
  %106 = add i32 %105, 4, !insn.addr !806
  %107 = inttoptr i32 %106 to i32*, !insn.addr !806
  %108 = load i32, i32* %107, align 4, !insn.addr !806
  %109 = icmp eq i32 %108, 513, !insn.addr !807
  br i1 %109, label %dec_label_pc_b2bc, label %dec_label_pc_b2ca, !insn.addr !808

dec_label_pc_b2bc:                                ; preds = %dec_label_pc_b1ea
  store i32 0, i32* %107, align 4, !insn.addr !809
  br label %dec_label_pc_b2ca, !insn.addr !809

dec_label_pc_b2ca:                                ; preds = %dec_label_pc_b1ea, %dec_label_pc_b2bc
  %110 = zext i8 %89 to i32, !insn.addr !792
  %111 = mul i32 %110, 16777216, !insn.addr !810
  %112 = zext i8 %92 to i32, !insn.addr !794
  %113 = mul i32 %112, 65536, !insn.addr !811
  %114 = or i32 %113, %111, !insn.addr !812
  %115 = zext i8 %95 to i32, !insn.addr !796
  %116 = mul i32 %115, 256, !insn.addr !813
  %117 = or i32 %114, %116, !insn.addr !814
  %118 = zext i8 %98 to i32, !insn.addr !798
  %119 = or i32 %117, %118, !insn.addr !815
  %120 = call i32 @pthread_mutex_unlock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !816
  store i32 %119, i32* %stack_var_-44.0.reg2mem, !insn.addr !816
  br label %dec_label_pc_b2d6, !insn.addr !816

dec_label_pc_b2d6:                                ; preds = %dec_label_pc_b2ca, %dec_label_pc_afe6, %dec_label_pc_aee8
  %stack_var_-44.0.reload = load i32, i32* %stack_var_-44.0.reg2mem
  %121 = add nuw i32 %storemerge5.reload, 1, !insn.addr !817
  %122 = icmp ult i32 %121, %20, !insn.addr !818
  store i32 %121, i32* %storemerge5.reg2mem, !insn.addr !819
  store i32 %stack_var_-44.0.reload, i32* %stack_var_-44.14.reg2mem, !insn.addr !819
  store i32 %stack_var_-44.0.reload, i32* %stack_var_-44.2.ph.reg2mem, !insn.addr !819
  br i1 %122, label %dec_label_pc_ae70, label %dec_label_pc_b2ee.outer, !insn.addr !819

dec_label_pc_b2ee.outer:                          ; preds = %dec_label_pc_b2d6, %dec_label_pc_b2ee.preheader
  %stack_var_-44.2.ph.reload = load i32, i32* %stack_var_-44.2.ph.reg2mem
  store i32 0, i32* %stack_var_-36.03.reg2mem
  br label %dec_label_pc_ae30

dec_label_pc_b2ee:                                ; preds = %dec_label_pc_ae30
  %stack_var_-36.03.reload = load i32, i32* %stack_var_-36.03.reg2mem
  %123 = add i32 %stack_var_-36.03.reload, 1, !insn.addr !820
  %124 = icmp ult i32 %123, 2, !insn.addr !821
  %125 = icmp ne i1 %124, true, !insn.addr !821
  %126 = icmp eq i32 %123, 2, !insn.addr !821
  %127 = icmp ne i1 %125, true, !insn.addr !822
  %128 = or i1 %126, %127, !insn.addr !822
  store i32 %123, i32* %stack_var_-36.03.reg2mem, !insn.addr !822
  br i1 %128, label %dec_label_pc_ae30, label %dec_label_pc_b2f6, !insn.addr !822

dec_label_pc_b2f6:                                ; preds = %dec_label_pc_b2ee
  br i1 %9, label %dec_label_pc_b300, label %dec_label_pc_b386, !insn.addr !823

dec_label_pc_b300:                                ; preds = %dec_label_pc_b2f6
  %129 = load i8, i8* %12, align 1, !insn.addr !824
  %130 = zext i8 %129 to i32, !insn.addr !824
  %131 = load i32, i32* @global_var_3367c8, align 4, !insn.addr !825
  %132 = icmp ugt i32 %131, %130, !insn.addr !826
  %133 = icmp ne i1 %132, true, !insn.addr !826
  %134 = icmp eq i32 %131, %130, !insn.addr !826
  %135 = icmp ne i1 %133, true, !insn.addr !827
  %136 = or i1 %134, %135, !insn.addr !827
  br i1 %136, label %dec_label_pc_b358, label %dec_label_pc_b32e, !insn.addr !827

dec_label_pc_b32e:                                ; preds = %dec_label_pc_b300
  store i32 %130, i32* @global_var_3367c8, align 4, !insn.addr !828
  br label %dec_label_pc_b358, !insn.addr !828

dec_label_pc_b358:                                ; preds = %dec_label_pc_b32e, %dec_label_pc_b300
  %137 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint ([14 x i8]* @global_var_878c to i32), i32 131072) to i8*)), !insn.addr !829
  br label %dec_label_pc_b386, !insn.addr !829

dec_label_pc_b386:                                ; preds = %dec_label_pc_b2f6, %dec_label_pc_b358
  %138 = call i32 @clear_register_value_buf(), !insn.addr !830
  ret i32 %stack_var_-44.2.ph.reload, !insn.addr !831

; uselistorder directives
  uselistorder i32 %123, { 0, 2, 1 }
  uselistorder i32 %58, { 0, 2, 1 }
  uselistorder i32 %24, { 1, 0 }
  uselistorder i32 %stack_var_-44.14.reload, { 1, 0 }
  uselistorder i32 %1, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-36.03.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge5.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-44.14.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-44.0.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32* @global_var_3367c8, { 0, 2, 1, 3 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_b386, { 1, 0 }
  uselistorder label %dec_label_pc_b2ca, { 1, 0 }
  uselistorder label %dec_label_pc_b1ea, { 1, 0 }
  uselistorder label %dec_label_pc_afe6, { 1, 0 }
  uselistorder label %dec_label_pc_aee8, { 1, 0 }
  uselistorder label %dec_label_pc_ae70, { 1, 0 }
  uselistorder label %dec_label_pc_ae30, { 1, 0 }
  uselistorder label %dec_label_pc_b2ee.preheader, { 1, 0 }
}

define i32 @singleAsicTest_BM1725() local_unnamed_addr {
dec_label_pc_b398:
  %r0.0.reg2mem = alloca i32, !insn.addr !832
  %.lcssa.reg2mem = alloca i32, !insn.addr !832
  %.reg2mem = alloca i32, !insn.addr !832
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %0 = load i32, i32* inttoptr (i32 or (i32 ptrtoint ([5 x i8]* @global_var_88cc to i32), i32 ptrtoint (i32* @global_var_20000 to i32)) to i32*), align 4, !insn.addr !833
  store i32 %0, i32* %stack_var_-44, align 4, !insn.addr !834
  %1 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_87a8 to i32), i32 131072) to i8*)), !insn.addr !835
  %2 = call i32 @system(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_87b8 to i32), i32 131072) to i8*)), !insn.addr !836
  %3 = call i32 @putchar(i32 10), !insn.addr !837
  %4 = call i32 @reset_global_arg(), !insn.addr !838
  %5 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !839
  %6 = zext i8 %5 to i32, !insn.addr !839
  %7 = call i32 @chain_reset(i32 %6), !insn.addr !840
  %8 = call i32 @fan_control(i32 50), !insn.addr !841
  %9 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !842
  %10 = zext i8 %9 to i32, !insn.addr !842
  %11 = mul i32 %10, 2, !insn.addr !843
  %12 = add i32 %11, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !844
  %13 = inttoptr i32 %12 to i32*, !insn.addr !845
  %14 = call i32 @pthread_create(i32* nonnull @global_var_2b6314, i32* null, i32* (i32*)* inttoptr (i32 57653 to i32* (i32*)*), i32* %13), !insn.addr !845
  %15 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !846
  %16 = zext i8 %15 to i32, !insn.addr !846
  %17 = add i32 %16, ptrtoint (i8** @global_var_35ae4 to i32), !insn.addr !847
  %18 = inttoptr i32 %17 to i8*, !insn.addr !847
  store i8 1, i8* %18, align 1, !insn.addr !847
  %19 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !848
  %20 = zext i8 %19 to i32, !insn.addr !848
  %21 = mul i32 %20, 2, !insn.addr !849
  %22 = add i32 %21, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !850
  %23 = inttoptr i32 %22 to i32*, !insn.addr !851
  %24 = call i32 @pthread_create(i32* nonnull @global_var_2b6310, i32* null, i32* (i32*)* inttoptr (i32 60357 to i32* (i32*)*), i32* %23), !insn.addr !851
  %25 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !852
  %26 = zext i8 %25 to i32, !insn.addr !852
  %27 = call i32 @set_baud(i32 %26, i32 26), !insn.addr !853
  %28 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint ([19 x i8]* @global_var_87c0 to i32), i32 131072) to i8*)), !insn.addr !854
  %29 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !855
  %30 = zext i8 %29 to i32, !insn.addr !855
  %31 = call i32 @check_BM1725_asic_reg(i32 %30, i32 0, i32 0, i32 1), !insn.addr !856
  %32 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !857
  %33 = zext i8 %32 to i32, !insn.addr !857
  %34 = add i32 %33, add (i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 ptrtoint (i1* @global_var_100000 to i32)), i32 1208), !insn.addr !858
  %35 = inttoptr i32 %34 to i8*, !insn.addr !859
  %36 = load i8, i8* %35, align 1, !insn.addr !859
  %37 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint ([17 x i8]* @global_var_87d8 to i32), i32 131072) to i8*)), !insn.addr !860
  %38 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !861
  %39 = zext i8 %38 to i32, !insn.addr !861
  %40 = add i32 %39, add (i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 ptrtoint (i1* @global_var_100000 to i32)), i32 1208), !insn.addr !862
  %41 = inttoptr i32 %40 to i8*, !insn.addr !863
  %42 = load i8, i8* %41, align 1, !insn.addr !863
  %43 = zext i8 %42 to i32, !insn.addr !863
  %44 = load i32, i32* @global_var_336848, align 4, !insn.addr !864
  %45 = icmp eq i32 %44, %43, !insn.addr !865
  br i1 %45, label %dec_label_pc_b5bc, label %dec_label_pc_b4fa, !insn.addr !866

dec_label_pc_b4fa:                                ; preds = %dec_label_pc_b398
  %46 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !867
  %47 = call i32 @pthread_cancel(i32 %46), !insn.addr !868
  %48 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !869
  %49 = call i32 @pthread_cancel(i32 %48), !insn.addr !870
  %50 = bitcast i32* %stack_var_-37 to i8*, !insn.addr !871
  %51 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %50, i8* inttoptr (i32 or (i32 ptrtoint ([16 x i8]* @global_var_87f8 to i32), i32 131072) to i8*)), !insn.addr !871
  %52 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint ([12 x i8]* @global_var_87fc to i32), i32 131072), i32 16), !insn.addr !872
  %53 = call i32 @write_lcd_no_memset(i32 1, i32* nonnull %stack_var_-44, i32 16), !insn.addr !873
  %54 = call i32 @write_lcd_no_memset(i32 2, i32* inttoptr (i32 or (i32 ptrtoint ([13 x i8]* @global_var_8810 to i32), i32 131072) to i32*), i32 16), !insn.addr !874
  %55 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_8824 to i32), i32 131072) to i8*)), !insn.addr !875
  store i32 %55, i32* %r0.0.reg2mem, !insn.addr !876
  br label %dec_label_pc_b8aa, !insn.addr !876

dec_label_pc_b5bc:                                ; preds = %dec_label_pc_b398
  %56 = zext i8 %36 to i32, !insn.addr !859
  %57 = call i32 @calculate_timeout_and_baud(i32 %37, i32 %56, i32 %43, i32 %43), !insn.addr !877
  %58 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !878
  %59 = zext i8 %58 to i32, !insn.addr !878
  %60 = load i32, i32* @global_var_3368e0, align 4, !insn.addr !879
  %61 = urem i32 %60, 256, !insn.addr !880
  %62 = call i32 @set_baud(i32 %59, i32 %61), !insn.addr !881
  %63 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !882
  %64 = zext i8 %63 to i32, !insn.addr !882
  %65 = load i32, i32* @global_var_336820, align 4, !insn.addr !883
  %66 = call float @__asm_vldr(i32 %65), !insn.addr !883
  %67 = call float @__asm_vcvt.f32.u32(float %66), !insn.addr !884
  %68 = call float @__asm_vmov.f32(float %67), !insn.addr !885
  %69 = call i32 @set_BM1725_freq(i32 %64, i32 0, i32 1), !insn.addr !886
  %70 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !887
  %71 = zext i8 %70 to i32, !insn.addr !887
  %72 = call i32 @BM1725_set_address_all(i32 %71), !insn.addr !888
  %73 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !889
  %74 = zext i8 %73 to i32, !insn.addr !889
  %75 = call i32 @check_BM1725_asic_reg(i32 %74, i32 0, i32 0, i32 1), !insn.addr !890
  %76 = load i8, i8* @global_var_3368d8, align 1, !insn.addr !891
  %77 = icmp eq i8 %76, 1, !insn.addr !892
  br i1 %77, label %dec_label_pc_b63e, label %dec_label_pc_b698, !insn.addr !893

dec_label_pc_b63e:                                ; preds = %dec_label_pc_b5bc
  %78 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !894
  %79 = zext i8 %78 to i32, !insn.addr !894
  %80 = call i32 @set_BM1725_asic_register(i32 %79, i32 0, i32 64, i32 0, i32 1), !insn.addr !895
  %81 = load i8, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !896
  %82 = icmp eq i8 %81, 0, !insn.addr !897
  %83 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4
  %84 = zext i8 %83 to i32
  br i1 %82, label %dec_label_pc_b666, label %dec_label_pc_b688, !insn.addr !898

dec_label_pc_b666:                                ; preds = %dec_label_pc_b63e
  %85 = call i32 @get_temperature_offset_value_from_asic_chain(i32 %84), !insn.addr !899
  %86 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !900
  %87 = zext i8 %86 to i32, !insn.addr !900
  %88 = call i32 @set_default_temperature_offset_value_chain(i32 %87), !insn.addr !901
  br label %dec_label_pc_b698, !insn.addr !902

dec_label_pc_b688:                                ; preds = %dec_label_pc_b63e
  %89 = call i32 @set_default_temperature_offset_value_chain(i32 %84), !insn.addr !903
  br label %dec_label_pc_b698, !insn.addr !903

dec_label_pc_b698:                                ; preds = %dec_label_pc_b5bc, %dec_label_pc_b688, %dec_label_pc_b666
  %90 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !904
  %91 = zext i8 %90 to i32, !insn.addr !904
  %92 = mul i32 %91, 2, !insn.addr !905
  %93 = add i32 %92, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !906
  %94 = inttoptr i32 %93 to i32*, !insn.addr !907
  %95 = call i32 @pthread_create(i32* nonnull @global_var_2b631c, i32* null, i32* (i32*)* inttoptr (i32 62281 to i32* (i32*)*), i32* %94), !insn.addr !907
  %96 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !908
  %97 = zext i8 %96 to i32, !insn.addr !908
  %98 = call i32 @set_BM1725_asic_register(i32 %97, i32 0, i32 20, i32 1, i32 38), !insn.addr !909
  %99 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !910
  %100 = zext i8 %99 to i32, !insn.addr !910
  %101 = call i32 @BM1725_open_core(i32 %100), !insn.addr !911
  %102 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_8840 to i32), i32 131072) to i8*)), !insn.addr !912
  %103 = call i32 @system(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_87b8 to i32), i32 131072) to i8*)), !insn.addr !913
  %104 = call i32 @putchar(i32 10), !insn.addr !914
  %105 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !915
  %106 = zext i8 %105 to i32, !insn.addr !915
  %107 = add i32 %106, ptrtoint (i8** @global_var_35ad8 to i32), !insn.addr !916
  %108 = inttoptr i32 %107 to i8*, !insn.addr !916
  %109 = load i8, i8* %108, align 1, !insn.addr !916
  %110 = icmp eq i8 %109, 1, !insn.addr !917
  store i32 %106, i32* %.reg2mem, !insn.addr !918
  store i32 %106, i32* %.lcssa.reg2mem, !insn.addr !918
  br i1 %110, label %dec_label_pc_b7fa, label %dec_label_pc_b714, !insn.addr !918

dec_label_pc_b714:                                ; preds = %dec_label_pc_b698, %dec_label_pc_b7d2
  %.reload = load i32, i32* %.reg2mem
  %111 = mul i32 %.reload, 4, !insn.addr !919
  %112 = add i32 %111, ptrtoint (i32* @global_var_35ac8 to i32), !insn.addr !919
  %113 = inttoptr i32 %112 to i32*, !insn.addr !919
  %114 = load i32, i32* %113, align 4, !insn.addr !919
  %115 = load i32, i32* @global_var_3368b4, align 4, !insn.addr !920
  %116 = icmp ult i32 %114, %115, !insn.addr !921
  br i1 %116, label %dec_label_pc_b7d2, label %dec_label_pc_b73c, !insn.addr !922

dec_label_pc_b73c:                                ; preds = %dec_label_pc_b714
  %117 = load i32, i32* @global_var_2b631c, align 4, !insn.addr !923
  %118 = call i32 @pthread_cancel(i32 %117), !insn.addr !924
  %119 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !925
  %120 = call i32 @pthread_cancel(i32 %119), !insn.addr !926
  %121 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !927
  %122 = call i32 @pthread_cancel(i32 %121), !insn.addr !928
  %123 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint ([6 x i8]* @global_var_885c to i32), i32 131072) to i8*)), !insn.addr !929
  %124 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint (i32* @global_var_8890 to i32), i32 131072), i32 16), !insn.addr !930
  %125 = call i32 @write_lcd_no_memset(i32 1, i32* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_88a4 to i32), i32 131072) to i32*), i32 16), !insn.addr !931
  %126 = call i32 @write_lcd_no_memset(i32 2, i32* inttoptr (i32 or (i32 ptrtoint ([7 x i8]* @global_var_88b8 to i32), i32 131072) to i32*), i32 16), !insn.addr !932
  store i8 trunc (i32 and (i32 ptrtoint (i8* @global_var_35ac6 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !933
  store i32 %126, i32* %r0.0.reg2mem, !insn.addr !934
  br label %dec_label_pc_b8aa, !insn.addr !934

dec_label_pc_b7d2:                                ; preds = %dec_label_pc_b714
  %127 = call i32 @usleep(i32 10000), !insn.addr !935
  %128 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !915
  %129 = zext i8 %128 to i32, !insn.addr !915
  %130 = add i32 %129, ptrtoint (i8** @global_var_35ad8 to i32), !insn.addr !916
  %131 = inttoptr i32 %130 to i8*, !insn.addr !916
  %132 = load i8, i8* %131, align 1, !insn.addr !916
  %133 = icmp eq i8 %132, 1, !insn.addr !917
  store i32 %129, i32* %.reg2mem, !insn.addr !918
  store i32 %129, i32* %.lcssa.reg2mem, !insn.addr !918
  br i1 %133, label %dec_label_pc_b7fa, label %dec_label_pc_b714, !insn.addr !918

dec_label_pc_b7fa:                                ; preds = %dec_label_pc_b7d2, %dec_label_pc_b698
  %.lcssa.reload = load i32, i32* %.lcssa.reg2mem
  %134 = mul i32 %.lcssa.reload, 2, !insn.addr !936
  %135 = add i32 %134, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !937
  %136 = inttoptr i32 %135 to i32*, !insn.addr !938
  %137 = call i32 @pthread_create(i32* nonnull @global_var_2b630c, i32* null, i32* (i32*)* inttoptr (i32 61273 to i32* (i32*)*), i32* %136), !insn.addr !938
  %138 = load i32, i32* @global_var_2b630c, align 4, !insn.addr !939
  %139 = call i32 @pthread_join(i32 %138, i32** null), !insn.addr !940
  %140 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !941
  %141 = call i32 @pthread_join(i32 %140, i32** null), !insn.addr !942
  %142 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !943
  %143 = call i32 @pthread_cancel(i32 %142), !insn.addr !944
  %144 = load i32, i32* @global_var_2b631c, align 4, !insn.addr !945
  %145 = call i32 @pthread_cancel(i32 %144), !insn.addr !946
  %146 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !947
  %147 = zext i8 %146 to i32, !insn.addr !947
  %148 = call i32 @single_asic_get_result(i32 %147), !insn.addr !948
  %149 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !949
  %150 = zext i8 %149 to i32, !insn.addr !949
  %151 = call i32 @single_asic_print_lcd(i32 %150, i32 %148), !insn.addr !950
  %152 = call i32 @fan_control(i32 0), !insn.addr !951
  store i32 %152, i32* %r0.0.reg2mem, !insn.addr !951
  br label %dec_label_pc_b8aa, !insn.addr !951

dec_label_pc_b8aa:                                ; preds = %dec_label_pc_b73c, %dec_label_pc_b7fa, %dec_label_pc_b4fa
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !952

; uselistorder directives
  uselistorder i32* %.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r0.0.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @single_asic_print_lcd, { 1, 0 }
  uselistorder i32 (i32)* @single_asic_get_result, { 1, 0 }
  uselistorder label %dec_label_pc_b8aa, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b714, { 1, 0 }
  uselistorder label %dec_label_pc_b698, { 1, 2, 0 }
}

define i32 @singleBoardTest_BBD25601() local_unnamed_addr {
dec_label_pc_b8b8:
  %r0.0.reg2mem = alloca i32, !insn.addr !953
  %.lcssa.reg2mem = alloca i32, !insn.addr !953
  %.reg2mem = alloca i32, !insn.addr !953
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %0 = load i32, i32* inttoptr (i32 or (i32 ptrtoint ([5 x i8]* @global_var_88cc to i32), i32 ptrtoint (i32* @global_var_20000 to i32)) to i32*), align 4, !insn.addr !954
  store i32 %0, i32* %stack_var_-44, align 4, !insn.addr !955
  %1 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_87a8 to i32), i32 131072) to i8*)), !insn.addr !956
  %2 = call i32 @system(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_87b8 to i32), i32 131072) to i8*)), !insn.addr !957
  %3 = call i32 @putchar(i32 10), !insn.addr !958
  %4 = call i32 @reset_global_arg(), !insn.addr !959
  %5 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !960
  %6 = zext i8 %5 to i32, !insn.addr !960
  %7 = call i32 @chain_reset(i32 %6), !insn.addr !961
  %8 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !962
  %9 = zext i8 %8 to i32, !insn.addr !962
  %10 = mul i32 %9, 2, !insn.addr !963
  %11 = add i32 %10, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !964
  %12 = inttoptr i32 %11 to i32*, !insn.addr !965
  %13 = call i32 @pthread_create(i32* nonnull @global_var_2b6314, i32* null, i32* (i32*)* inttoptr (i32 57653 to i32* (i32*)*), i32* %12), !insn.addr !965
  %14 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !966
  %15 = zext i8 %14 to i32, !insn.addr !966
  %16 = call i32 @chain_reset_low(i32 %15), !insn.addr !967
  %17 = call i32 @usleep(i32 ptrtoint (i32* @global_var_493e0 to i32)), !insn.addr !968
  %18 = call i32 @power_init(), !insn.addr !969
  %19 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !970
  %20 = zext i8 %19 to i32, !insn.addr !970
  %21 = call i32 @reset_PIC16F1704_pic(i32 %20, i32 0), !insn.addr !971
  %22 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !972
  %23 = zext i8 %22 to i32, !insn.addr !972
  %24 = call i32 @jump_from_loader_to_app_PIC16F1704(i32 %23, i32 0), !insn.addr !973
  %25 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !974
  %26 = zext i8 %25 to i32, !insn.addr !974
  %27 = mul i32 %26, 2, !insn.addr !975
  %28 = add i32 %27, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !976
  %29 = inttoptr i32 %28 to i32*, !insn.addr !977
  %30 = call i32 @pthread_create(i32* nonnull @global_var_2b6318, i32* null, i32* (i32*)* inttoptr (i32 82057 to i32* (i32*)*), i32* %29), !insn.addr !977
  %31 = call i32 @usleep(i32 100), !insn.addr !978
  %32 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !979
  %33 = zext i8 %32 to i32, !insn.addr !979
  %34 = call i32 @set_voltage(i32 %33, i32 255, i32 0, i32 %33), !insn.addr !980
  %35 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !981
  %36 = zext i8 %35 to i32, !insn.addr !981
  %37 = call i32 @enable_PIC16F1704_dc_dc(i32 %36, i32 0, i32 1), !insn.addr !982
  %38 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !983
  %39 = zext i8 %38 to i32, !insn.addr !983
  %40 = call i32 @chain_reset_high(i32 %39), !insn.addr !984
  %41 = call i32 @usleep(i32 ptrtoint (i32* @global_var_493e0 to i32)), !insn.addr !985
  %42 = call i32 @fan_control(i32 80), !insn.addr !986
  %43 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !987
  %44 = zext i8 %43 to i32, !insn.addr !987
  %45 = call i32 @set_baud(i32 %44, i32 26), !insn.addr !988
  %46 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !989
  %47 = zext i8 %46 to i32, !insn.addr !989
  %48 = add i32 %47, ptrtoint (i8** @global_var_35ae4 to i32), !insn.addr !990
  %49 = inttoptr i32 %48 to i8*, !insn.addr !990
  store i8 1, i8* %49, align 1, !insn.addr !990
  %50 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !991
  %51 = zext i8 %50 to i32, !insn.addr !991
  %52 = mul i32 %51, 2, !insn.addr !992
  %53 = add i32 %52, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !993
  %54 = inttoptr i32 %53 to i32*, !insn.addr !994
  %55 = call i32 @pthread_create(i32* nonnull @global_var_2b6310, i32* null, i32* (i32*)* inttoptr (i32 60357 to i32* (i32*)*), i32* %54), !insn.addr !994
  %56 = call i32 @usleep(i32 5000), !insn.addr !995
  %57 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_88dc to i32), i32 131072) to i8*)), !insn.addr !996
  %58 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !997
  %59 = zext i8 %58 to i32, !insn.addr !997
  %60 = call i32 @check_BM1725_asic_reg(i32 %59, i32 0, i32 0, i32 1), !insn.addr !998
  %61 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_88fc to i32), i32 131072) to i8*)), !insn.addr !999
  %62 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1000
  %63 = zext i8 %62 to i32, !insn.addr !1000
  %64 = add i32 %63, add (i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 ptrtoint (i1* @global_var_100000 to i32)), i32 1208), !insn.addr !1001
  %65 = inttoptr i32 %64 to i8*, !insn.addr !1002
  %66 = load i8, i8* %65, align 1, !insn.addr !1002
  %67 = zext i8 %66 to i32, !insn.addr !1002
  %68 = load i32, i32* @global_var_336848, align 4, !insn.addr !1003
  %69 = icmp eq i32 %68, %67, !insn.addr !1004
  br i1 %69, label %dec_label_pc_bc38, label %dec_label_pc_bb04, !insn.addr !1005

dec_label_pc_bb04:                                ; preds = %dec_label_pc_b8b8
  %70 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !1006
  %71 = call i32 @pthread_cancel(i32 %70), !insn.addr !1007
  %72 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !1008
  %73 = call i32 @pthread_cancel(i32 %72), !insn.addr !1009
  %74 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !1010
  %75 = load i32, i32* @global_var_2b6318, align 4, !insn.addr !1011
  %76 = call i32 @pthread_cancel(i32 %75), !insn.addr !1012
  %77 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !1013
  %78 = bitcast i32* %stack_var_-37 to i8*, !insn.addr !1014
  %79 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %78, i8* inttoptr (i32 or (i32 ptrtoint ([16 x i8]* @global_var_87f8 to i32), i32 131072) to i8*)), !insn.addr !1014
  %80 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint ([12 x i8]* @global_var_87fc to i32), i32 131072), i32 16), !insn.addr !1015
  %81 = call i32 @write_lcd_no_memset(i32 1, i32* nonnull %stack_var_-44, i32 16), !insn.addr !1016
  %82 = call i32 @write_lcd_no_memset(i32 2, i32* inttoptr (i32 or (i32 ptrtoint ([13 x i8]* @global_var_8810 to i32), i32 131072) to i32*), i32 16), !insn.addr !1017
  %83 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_8924 to i32), i32 131072) to i8*)), !insn.addr !1018
  %84 = load i32, i32* @global_var_3368e4, align 4, !insn.addr !1019
  %85 = call i32 @sleep(i32 %84), !insn.addr !1020
  %86 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1021
  %87 = zext i8 %86 to i32, !insn.addr !1021
  %88 = call i32 @enable_PIC16F1704_dc_dc(i32 %87, i32 0, i32 0), !insn.addr !1022
  %89 = call i32 @power_off(), !insn.addr !1023
  store i32 %89, i32* %r0.0.reg2mem, !insn.addr !1024
  br label %dec_label_pc_c204, !insn.addr !1024

dec_label_pc_bc38:                                ; preds = %dec_label_pc_b8b8
  %90 = call i32 @chain_reset(i32 %63), !insn.addr !1025
  %91 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1026
  %92 = zext i8 %91 to i32, !insn.addr !1026
  %93 = call i32 @uart_flush(i32 %92), !insn.addr !1027
  %94 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1028
  %95 = zext i8 %94 to i32, !insn.addr !1028
  %96 = call i32 @uart_set_baud(i32 %95, i32 26), !insn.addr !1029
  %97 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint ([6 x i8]* @global_var_8940 to i32), i32 131072) to i8*)), !insn.addr !1030
  %98 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1031
  %99 = zext i8 %98 to i32, !insn.addr !1031
  %100 = call i32 @check_BM1725_asic_reg(i32 %99, i32 0, i32 0, i32 1), !insn.addr !1032
  %101 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1033
  %102 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_88fc to i32), i32 131072) to i8*)), !insn.addr !1034
  %103 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1035
  %104 = zext i8 %103 to i32, !insn.addr !1035
  %105 = add i32 %104, add (i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 ptrtoint (i1* @global_var_100000 to i32)), i32 1208), !insn.addr !1036
  %106 = inttoptr i32 %105 to i8*, !insn.addr !1037
  %107 = load i8, i8* %106, align 1, !insn.addr !1037
  %108 = zext i8 %107 to i32, !insn.addr !1037
  %109 = load i32, i32* @global_var_336848, align 4, !insn.addr !1038
  %110 = icmp eq i32 %109, %108, !insn.addr !1039
  br i1 %110, label %dec_label_pc_be20, label %dec_label_pc_bcfa, !insn.addr !1040

dec_label_pc_bcfa:                                ; preds = %dec_label_pc_bc38
  %111 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !1041
  %112 = call i32 @pthread_cancel(i32 %111), !insn.addr !1042
  %113 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !1043
  %114 = call i32 @pthread_cancel(i32 %113), !insn.addr !1044
  %115 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !1045
  %116 = load i32, i32* @global_var_2b6318, align 4, !insn.addr !1046
  %117 = call i32 @pthread_cancel(i32 %116), !insn.addr !1047
  %118 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !1048
  %119 = bitcast i32* %stack_var_-37 to i8*, !insn.addr !1049
  %120 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %119, i8* inttoptr (i32 or (i32 ptrtoint ([16 x i8]* @global_var_87f8 to i32), i32 131072) to i8*)), !insn.addr !1049
  %121 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint ([12 x i8]* @global_var_87fc to i32), i32 131072), i32 16), !insn.addr !1050
  %122 = call i32 @write_lcd_no_memset(i32 1, i32* nonnull %stack_var_-44, i32 16), !insn.addr !1051
  %123 = call i32 @write_lcd_no_memset(i32 2, i32* inttoptr (i32 or (i32 ptrtoint ([13 x i8]* @global_var_8810 to i32), i32 131072) to i32*), i32 16), !insn.addr !1052
  %124 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_8924 to i32), i32 131072) to i8*)), !insn.addr !1053
  %125 = load i32, i32* @global_var_3368e4, align 4, !insn.addr !1054
  %126 = call i32 @sleep(i32 %125), !insn.addr !1055
  %127 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1056
  %128 = zext i8 %127 to i32, !insn.addr !1056
  %129 = call i32 @enable_PIC16F1704_dc_dc(i32 %128, i32 0, i32 0), !insn.addr !1057
  %130 = call i32 @power_off(), !insn.addr !1058
  store i32 %130, i32* %r0.0.reg2mem, !insn.addr !1059
  br label %dec_label_pc_c204, !insn.addr !1059

dec_label_pc_be20:                                ; preds = %dec_label_pc_bc38
  %131 = zext i8 %101 to i32, !insn.addr !1033
  %132 = call i32 @calculate_timeout_and_baud(i32 %102, i32 %131, i32 %108, i32 %108), !insn.addr !1060
  %133 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1061
  %134 = zext i8 %133 to i32, !insn.addr !1061
  %135 = load i32, i32* @global_var_3368e0, align 4, !insn.addr !1062
  %136 = urem i32 %135, 256, !insn.addr !1063
  %137 = call i32 @set_baud(i32 %134, i32 %136), !insn.addr !1064
  %138 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1065
  %139 = zext i8 %138 to i32, !insn.addr !1065
  %140 = load i32, i32* @global_var_336820, align 4, !insn.addr !1066
  %141 = call float @__asm_vldr(i32 %140), !insn.addr !1066
  %142 = call float @__asm_vcvt.f32.u32(float %141), !insn.addr !1067
  %143 = call float @__asm_vmov.f32(float %142), !insn.addr !1068
  %144 = call i32 @set_BM1725_freq(i32 %139, i32 0, i32 1), !insn.addr !1069
  %145 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1070
  %146 = zext i8 %145 to i32, !insn.addr !1070
  %147 = call i32 @BM1725_set_address_all(i32 %146), !insn.addr !1071
  %148 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1072
  %149 = zext i8 %148 to i32, !insn.addr !1072
  %150 = call i32 @check_BM1725_asic_reg(i32 %149, i32 0, i32 0, i32 1), !insn.addr !1073
  %151 = load i8, i8* @global_var_3368d8, align 1, !insn.addr !1074
  %152 = icmp eq i8 %151, 1, !insn.addr !1075
  br i1 %152, label %dec_label_pc_bea2, label %dec_label_pc_bee2, !insn.addr !1076

dec_label_pc_bea2:                                ; preds = %dec_label_pc_be20
  %153 = load i8, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !1077
  %154 = icmp eq i8 %153, 0, !insn.addr !1078
  %155 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4
  %156 = zext i8 %155 to i32
  br i1 %154, label %dec_label_pc_beb0, label %dec_label_pc_bed2, !insn.addr !1079

dec_label_pc_beb0:                                ; preds = %dec_label_pc_bea2
  %157 = call i32 @get_temperature_offset_value_from_asic_chain(i32 %156), !insn.addr !1080
  %158 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1081
  %159 = zext i8 %158 to i32, !insn.addr !1081
  %160 = call i32 @set_default_temperature_offset_value_chain(i32 %159), !insn.addr !1082
  br label %dec_label_pc_bee2, !insn.addr !1083

dec_label_pc_bed2:                                ; preds = %dec_label_pc_bea2
  %161 = call i32 @set_default_temperature_offset_value_chain(i32 %156), !insn.addr !1084
  br label %dec_label_pc_bee2, !insn.addr !1084

dec_label_pc_bee2:                                ; preds = %dec_label_pc_be20, %dec_label_pc_bed2, %dec_label_pc_beb0
  %162 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1085
  %163 = zext i8 %162 to i32, !insn.addr !1085
  %164 = mul i32 %163, 2, !insn.addr !1086
  %165 = add i32 %164, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !1087
  %166 = inttoptr i32 %165 to i32*, !insn.addr !1088
  %167 = call i32 @pthread_create(i32* nonnull @global_var_2b631c, i32* null, i32* (i32*)* inttoptr (i32 62281 to i32* (i32*)*), i32* %166), !insn.addr !1088
  %168 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1089
  %169 = zext i8 %168 to i32, !insn.addr !1089
  %170 = call i32 @set_BM1725_asic_register(i32 %169, i32 0, i32 20, i32 1, i32 38), !insn.addr !1090
  %171 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1091
  %172 = zext i8 %171 to i32, !insn.addr !1091
  %173 = call i32 @BM1725_open_core(i32 %172), !insn.addr !1092
  %174 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_8840 to i32), i32 131072) to i8*)), !insn.addr !1093
  %175 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1094
  %176 = zext i8 %175 to i32, !insn.addr !1094
  %177 = add i32 %176, ptrtoint (i8** @global_var_35ad8 to i32), !insn.addr !1095
  %178 = inttoptr i32 %177 to i8*, !insn.addr !1095
  %179 = load i8, i8* %178, align 1, !insn.addr !1095
  %180 = icmp eq i8 %179, 1, !insn.addr !1096
  store i32 %176, i32* %.reg2mem, !insn.addr !1097
  store i32 %176, i32* %.lcssa.reg2mem, !insn.addr !1097
  br i1 %180, label %dec_label_pc_c062, label %dec_label_pc_bf40, !insn.addr !1097

dec_label_pc_bf40:                                ; preds = %dec_label_pc_bee2, %dec_label_pc_c038
  %.reload = load i32, i32* %.reg2mem
  %181 = mul i32 %.reload, 4, !insn.addr !1098
  %182 = add i32 %181, ptrtoint (i32* @global_var_35ac8 to i32), !insn.addr !1098
  %183 = inttoptr i32 %182 to i32*, !insn.addr !1098
  %184 = load i32, i32* %183, align 4, !insn.addr !1098
  %185 = load i32, i32* @global_var_3368b4, align 4, !insn.addr !1099
  %186 = icmp ult i32 %184, %185, !insn.addr !1100
  br i1 %186, label %dec_label_pc_c038, label %dec_label_pc_bf68, !insn.addr !1101

dec_label_pc_bf68:                                ; preds = %dec_label_pc_bf40
  %187 = load i32, i32* @global_var_2b631c, align 4, !insn.addr !1102
  %188 = call i32 @pthread_cancel(i32 %187), !insn.addr !1103
  %189 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !1104
  %190 = call i32 @pthread_cancel(i32 %189), !insn.addr !1105
  %191 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !1106
  %192 = call i32 @pthread_cancel(i32 %191), !insn.addr !1107
  %193 = load i32, i32* @global_var_2b6318, align 4, !insn.addr !1108
  %194 = call i32 @pthread_cancel(i32 %193), !insn.addr !1109
  %195 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint ([6 x i8]* @global_var_885c to i32), i32 131072) to i8*)), !insn.addr !1110
  %196 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint (i32* @global_var_8890 to i32), i32 131072), i32 16), !insn.addr !1111
  %197 = call i32 @write_lcd_no_memset(i32 1, i32* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_88a4 to i32), i32 131072) to i32*), i32 16), !insn.addr !1112
  %198 = call i32 @write_lcd_no_memset(i32 2, i32* inttoptr (i32 or (i32 ptrtoint ([7 x i8]* @global_var_88b8 to i32), i32 131072) to i32*), i32 16), !insn.addr !1113
  store i8 trunc (i32 and (i32 ptrtoint (i8* @global_var_35ac6 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !1114
  %199 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1115
  %200 = zext i8 %199 to i32, !insn.addr !1115
  %201 = call i32 @enable_PIC16F1704_dc_dc(i32 %200, i32 0, i32 0), !insn.addr !1116
  %202 = call i32 @power_off(), !insn.addr !1117
  store i32 %202, i32* %r0.0.reg2mem, !insn.addr !1118
  br label %dec_label_pc_c204, !insn.addr !1118

dec_label_pc_c038:                                ; preds = %dec_label_pc_bf40
  %203 = call i32 @usleep(i32 10000), !insn.addr !1119
  %204 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1094
  %205 = zext i8 %204 to i32, !insn.addr !1094
  %206 = add i32 %205, ptrtoint (i8** @global_var_35ad8 to i32), !insn.addr !1095
  %207 = inttoptr i32 %206 to i8*, !insn.addr !1095
  %208 = load i8, i8* %207, align 1, !insn.addr !1095
  %209 = icmp eq i8 %208, 1, !insn.addr !1096
  store i32 %205, i32* %.reg2mem, !insn.addr !1097
  store i32 %205, i32* %.lcssa.reg2mem, !insn.addr !1097
  br i1 %209, label %dec_label_pc_c062, label %dec_label_pc_bf40, !insn.addr !1097

dec_label_pc_c062:                                ; preds = %dec_label_pc_c038, %dec_label_pc_bee2
  %.lcssa.reload = load i32, i32* %.lcssa.reg2mem
  %210 = mul i32 %.lcssa.reload, 2, !insn.addr !1120
  %211 = add i32 %210, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !1121
  %212 = inttoptr i32 %211 to i32*, !insn.addr !1122
  %213 = call i32 @pthread_create(i32* nonnull @global_var_2b630c, i32* null, i32* (i32*)* inttoptr (i32 61273 to i32* (i32*)*), i32* %212), !insn.addr !1122
  %214 = load i32, i32* @global_var_2b630c, align 4, !insn.addr !1123
  %215 = call i32 @pthread_join(i32 %214, i32** null), !insn.addr !1124
  %216 = load i32, i32* @global_var_2b6310, align 4, !insn.addr !1125
  %217 = call i32 @pthread_join(i32 %216, i32** null), !insn.addr !1126
  %218 = load i32, i32* @global_var_2b6314, align 4, !insn.addr !1127
  %219 = call i32 @pthread_cancel(i32 %218), !insn.addr !1128
  %220 = load i32, i32* @global_var_2b631c, align 4, !insn.addr !1129
  %221 = call i32 @pthread_cancel(i32 %220), !insn.addr !1130
  %222 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1131
  %223 = zext i8 %222 to i32, !insn.addr !1131
  %224 = call i32 @single_board_get_result(i32 %223), !insn.addr !1132
  %225 = icmp eq i32 %224, 7, !insn.addr !1133
  br i1 %225, label %dec_label_pc_c100, label %dec_label_pc_c16c, !insn.addr !1134

dec_label_pc_c100:                                ; preds = %dec_label_pc_c062
  %226 = load i32, i32* @global_var_336820, align 4, !insn.addr !1135
  %227 = load i32, i32* @global_var_336878, align 4, !insn.addr !1136
  %228 = call i32 @save_voltage_info_to_eeprom(i32 %226, i32 %227), !insn.addr !1137
  %229 = trunc i32 %228 to i8, !insn.addr !1138
  store i8 %229, i8* bitcast (i8** @global_var_235c3c to i8*), align 4, !insn.addr !1138
  %230 = urem i32 %228, 256, !insn.addr !1139
  %231 = icmp eq i32 %230, 1, !insn.addr !1140
  br i1 %231, label %dec_label_pc_c16c.thread, label %dec_label_pc_c140, !insn.addr !1141

dec_label_pc_c140:                                ; preds = %dec_label_pc_c100
  %232 = load i32, i32* @global_var_336820, align 4, !insn.addr !1142
  %233 = load i32, i32* @global_var_336878, align 4, !insn.addr !1143
  %234 = call i32 @save_voltage_info_to_eeprom(i32 %232, i32 %233), !insn.addr !1144
  %235 = trunc i32 %234 to i8, !insn.addr !1145
  store i8 %235, i8* bitcast (i8** @global_var_235c3c to i8*), align 4, !insn.addr !1145
  br label %dec_label_pc_c16c.thread, !insn.addr !1145

dec_label_pc_c16c.thread:                         ; preds = %dec_label_pc_c140, %dec_label_pc_c100
  %236 = call i32 @single_board_print_lcd(i32 7), !insn.addr !1146
  br label %dec_label_pc_c194

dec_label_pc_c16c:                                ; preds = %dec_label_pc_c062
  %237 = call i32 @single_board_print_lcd(i32 %224), !insn.addr !1146
  %238 = urem i32 %224, 2, !insn.addr !1147
  %239 = icmp eq i32 %238, 0, !insn.addr !1148
  br i1 %239, label %dec_label_pc_c17c, label %dec_label_pc_c194, !insn.addr !1149

dec_label_pc_c17c:                                ; preds = %dec_label_pc_c16c
  %240 = load i8, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !1150
  %241 = load i8, i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !1151
  %242 = icmp ult i8 %240, %241, !insn.addr !1152
  br i1 %242, label %dec_label_pc_c1d6, label %dec_label_pc_c194, !insn.addr !1153

dec_label_pc_c194:                                ; preds = %dec_label_pc_c16c.thread, %dec_label_pc_c17c, %dec_label_pc_c16c
  %243 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !1154
  %244 = zext i8 %243 to i32, !insn.addr !1154
  %245 = call i32 @enable_PIC16F1704_dc_dc(i32 %244, i32 0, i32 0), !insn.addr !1155
  %246 = call i32 @power_off(), !insn.addr !1156
  %247 = call i32 @fan_control(i32 0), !insn.addr !1157
  %248 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint ([5 x i8]* @global_var_8960 to i32), i32 131072) to i8*)), !insn.addr !1158
  br label %dec_label_pc_c1d6, !insn.addr !1158

dec_label_pc_c1d6:                                ; preds = %dec_label_pc_c17c, %dec_label_pc_c194
  %249 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !1159
  %250 = load i32, i32* @global_var_2b6318, align 4, !insn.addr !1160
  %251 = call i32 @pthread_cancel(i32 %250), !insn.addr !1161
  %252 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !1162
  store i32 %252, i32* %r0.0.reg2mem, !insn.addr !1162
  br label %dec_label_pc_c204, !insn.addr !1162

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1d6, %dec_label_pc_bf68, %dec_label_pc_bcfa, %dec_label_pc_bb04
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !1163

; uselistorder directives
  uselistorder i32 %33, { 1, 0 }
  uselistorder i32* %.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r0.0.reg2mem, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @single_board_print_lcd, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @save_voltage_info_to_eeprom, { 1, 0 }
  uselistorder i32 (i32)* @single_board_get_result, { 1, 0 }
  uselistorder i32* @global_var_2b630c, { 4, 0, 5, 1, 6, 2, 7, 3 }
  uselistorder i32 (i32)* @BM1725_open_core, { 1, 0 }
  uselistorder i32* @global_var_2b631c, { 4, 5, 0, 6, 7, 1, 8, 9, 2, 10, 11, 3 }
  uselistorder i32 (i32)* @set_default_temperature_offset_value_chain, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @get_temperature_offset_value_from_asic_chain, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @BM1725_set_address_all, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @set_BM1725_freq, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @calculate_timeout_and_baud, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @uart_flush, { 1, 0 }
  uselistorder i32 ()* @power_off, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @pthread_cancel, { 39, 34, 33, 38, 37, 36, 35, 32, 31, 30, 29, 28, 27, 23, 22, 26, 25, 24, 21, 20, 19, 14, 13, 18, 17, 16, 15, 12, 11, 10, 9, 8, 7, 3, 2, 6, 5, 4, 1, 0 }
  uselistorder i32* @global_var_2b6310, { 4, 5, 6, 7, 0, 8, 9, 10, 1, 11, 12, 13, 14, 2, 15, 16, 17, 3 }
  uselistorder i32 (i32, i32)* @set_baud, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @enable_PIC16F1704_dc_dc, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @set_voltage, { 2, 1, 0 }
  uselistorder i32* @global_var_2b6318, { 2, 3, 4, 5, 0, 6, 7, 8, 9, 1 }
  uselistorder i32 (i32, i32)* @jump_from_loader_to_app_PIC16F1704, { 1, 0 }
  uselistorder i32* @global_var_2b6314, { 4, 5, 6, 7, 0, 8, 9, 10, 1, 11, 12, 13, 14, 2, 15, 16, 17, 3 }
  uselistorder i32 (i32)* @chain_reset, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @reset_global_arg, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_c1d6, { 1, 0 }
  uselistorder label %dec_label_pc_c194, { 1, 2, 0 }
  uselistorder label %dec_label_pc_bf40, { 1, 0 }
  uselistorder label %dec_label_pc_bee2, { 1, 2, 0 }
}

define i32 @calculate_asic_number(i32 %arg1) local_unnamed_addr {
dec_label_pc_c214:
  %storemerge.reg2mem = alloca i32, !insn.addr !1164
  store i32 1, i32* %storemerge.reg2mem
  switch i32 %arg1, label %dec_label_pc_c238 [
    i32 1, label %dec_label_pc_c2ba
    i32 2, label %dec_label_pc_c232
  ]

dec_label_pc_c232:                                ; preds = %dec_label_pc_c214
  store i32 2, i32* %storemerge.reg2mem, !insn.addr !1165
  br label %dec_label_pc_c2ba, !insn.addr !1165

dec_label_pc_c238:                                ; preds = %dec_label_pc_c214
  %0 = icmp ult i32 %arg1, 2, !insn.addr !1166
  br i1 %0, label %dec_label_pc_c2a4, label %dec_label_pc_c23e, !insn.addr !1167

dec_label_pc_c23e:                                ; preds = %dec_label_pc_c238
  %1 = icmp ult i32 %arg1, 4
  %2 = icmp ne i1 %1, true
  %3 = icmp eq i32 %arg1, 4
  %4 = icmp ne i1 %3, true, !insn.addr !1168
  %5 = icmp eq i1 %2, %4, !insn.addr !1168
  store i32 4, i32* %storemerge.reg2mem, !insn.addr !1168
  br i1 %5, label %dec_label_pc_c24a, label %dec_label_pc_c2ba, !insn.addr !1168

dec_label_pc_c24a:                                ; preds = %dec_label_pc_c23e
  %6 = icmp ne i1 %2, true, !insn.addr !1169
  %7 = or i1 %3, %6, !insn.addr !1169
  br i1 %7, label %dec_label_pc_c25c, label %dec_label_pc_c250, !insn.addr !1169

dec_label_pc_c250:                                ; preds = %dec_label_pc_c24a
  %8 = icmp ult i32 %arg1, 8, !insn.addr !1170
  %9 = icmp ne i1 %8, true, !insn.addr !1170
  %10 = icmp eq i32 %arg1, 8, !insn.addr !1170
  %11 = icmp ne i1 %10, true, !insn.addr !1171
  %12 = icmp eq i1 %9, %11, !insn.addr !1171
  store i32 8, i32* %storemerge.reg2mem, !insn.addr !1171
  br i1 %12, label %dec_label_pc_c25c, label %dec_label_pc_c2ba, !insn.addr !1171

dec_label_pc_c25c:                                ; preds = %dec_label_pc_c250, %dec_label_pc_c24a
  %13 = icmp ult i32 %arg1, 8, !insn.addr !1172
  %14 = icmp ne i1 %13, true, !insn.addr !1172
  %15 = icmp eq i32 %arg1, 8, !insn.addr !1172
  %16 = icmp ne i1 %14, true, !insn.addr !1173
  %17 = or i1 %15, %16, !insn.addr !1173
  br i1 %17, label %dec_label_pc_c26e, label %dec_label_pc_c262, !insn.addr !1173

dec_label_pc_c262:                                ; preds = %dec_label_pc_c25c
  %18 = icmp ult i32 %arg1, 16, !insn.addr !1174
  %19 = icmp ne i1 %18, true, !insn.addr !1174
  %20 = icmp eq i32 %arg1, 16, !insn.addr !1174
  %21 = icmp ne i1 %20, true, !insn.addr !1175
  %22 = icmp eq i1 %19, %21, !insn.addr !1175
  store i32 16, i32* %storemerge.reg2mem, !insn.addr !1175
  br i1 %22, label %dec_label_pc_c26e, label %dec_label_pc_c2ba, !insn.addr !1175

dec_label_pc_c26e:                                ; preds = %dec_label_pc_c262, %dec_label_pc_c25c
  %23 = icmp ult i32 %arg1, 16, !insn.addr !1176
  %24 = icmp ne i1 %23, true, !insn.addr !1176
  %25 = icmp eq i32 %arg1, 16, !insn.addr !1176
  %26 = icmp ne i1 %24, true, !insn.addr !1177
  %27 = or i1 %25, %26, !insn.addr !1177
  br i1 %27, label %dec_label_pc_c280, label %dec_label_pc_c274, !insn.addr !1177

dec_label_pc_c274:                                ; preds = %dec_label_pc_c26e
  %28 = icmp ult i32 %arg1, 32, !insn.addr !1178
  %29 = icmp ne i1 %28, true, !insn.addr !1178
  %30 = icmp eq i32 %arg1, 32, !insn.addr !1178
  %31 = icmp ne i1 %30, true, !insn.addr !1179
  %32 = icmp eq i1 %29, %31, !insn.addr !1179
  store i32 32, i32* %storemerge.reg2mem, !insn.addr !1179
  br i1 %32, label %dec_label_pc_c280, label %dec_label_pc_c2ba, !insn.addr !1179

dec_label_pc_c280:                                ; preds = %dec_label_pc_c274, %dec_label_pc_c26e
  %33 = icmp ult i32 %arg1, 32, !insn.addr !1180
  %34 = icmp ne i1 %33, true, !insn.addr !1180
  %35 = icmp eq i32 %arg1, 32, !insn.addr !1180
  %36 = icmp ne i1 %34, true, !insn.addr !1181
  %37 = or i1 %35, %36, !insn.addr !1181
  br i1 %37, label %dec_label_pc_c292, label %dec_label_pc_c286, !insn.addr !1181

dec_label_pc_c286:                                ; preds = %dec_label_pc_c280
  %38 = icmp ult i32 %arg1, 64, !insn.addr !1182
  %39 = icmp ne i1 %38, true, !insn.addr !1182
  %40 = icmp eq i32 %arg1, 64, !insn.addr !1182
  %41 = icmp ne i1 %40, true, !insn.addr !1183
  %42 = icmp eq i1 %39, %41, !insn.addr !1183
  store i32 64, i32* %storemerge.reg2mem, !insn.addr !1183
  br i1 %42, label %dec_label_pc_c292, label %dec_label_pc_c2ba, !insn.addr !1183

dec_label_pc_c292:                                ; preds = %dec_label_pc_c286, %dec_label_pc_c280
  %43 = icmp ult i32 %arg1, 64, !insn.addr !1184
  %44 = icmp ne i1 %43, true, !insn.addr !1184
  %45 = icmp eq i32 %arg1, 64, !insn.addr !1184
  %46 = icmp ne i1 %44, true, !insn.addr !1185
  %47 = or i1 %45, %46, !insn.addr !1185
  br i1 %47, label %dec_label_pc_c2a4, label %dec_label_pc_c298, !insn.addr !1185

dec_label_pc_c298:                                ; preds = %dec_label_pc_c292
  %48 = icmp ult i32 %arg1, 128, !insn.addr !1186
  %49 = icmp ne i1 %48, true, !insn.addr !1186
  %50 = icmp eq i32 %arg1, 128, !insn.addr !1186
  %51 = icmp ne i1 %50, true, !insn.addr !1187
  %52 = icmp eq i1 %49, %51, !insn.addr !1187
  store i32 128, i32* %storemerge.reg2mem, !insn.addr !1187
  br i1 %52, label %dec_label_pc_c2a4, label %dec_label_pc_c2ba, !insn.addr !1187

dec_label_pc_c2a4:                                ; preds = %dec_label_pc_c238, %dec_label_pc_c298, %dec_label_pc_c292
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_28a10, i32 0, i32 0), i32 %arg1), !insn.addr !1188
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1189
  br label %dec_label_pc_c2ba, !insn.addr !1189

dec_label_pc_c2ba:                                ; preds = %dec_label_pc_c232, %dec_label_pc_c214, %dec_label_pc_c23e, %dec_label_pc_c250, %dec_label_pc_c262, %dec_label_pc_c274, %dec_label_pc_c286, %dec_label_pc_c298, %dec_label_pc_c2a4
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !1190

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 9, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %arg1, { 1, 5, 4, 2, 3, 9, 8, 6, 7, 13, 12, 10, 11, 17, 16, 14, 15, 19, 18, 20, 21, 22, 0 }
  uselistorder label %dec_label_pc_c2ba, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_c2a4, { 1, 2, 0 }
}

define i32 @read_config() local_unnamed_addr {
dec_label_pc_c2c4:
  %0 = alloca i8
  %r3.2.reg2mem = alloca i32, !insn.addr !1191
  %r3.1.reg2mem = alloca i32, !insn.addr !1191
  %r2.0.reg2mem = alloca i32, !insn.addr !1191
  %r1.2.reg2mem = alloca i32, !insn.addr !1191
  %r0.0.reg2mem = alloca i32, !insn.addr !1191
  %storemerge.lcssa.reg2mem = alloca i32, !insn.addr !1191
  %stack_var_-12.019.reg2mem = alloca i8*, !insn.addr !1191
  %storemerge20.reg2mem = alloca i32, !insn.addr !1191
  %.reg2mem = alloca i8, !insn.addr !1191
  %.in.reg2mem = alloca i8*, !insn.addr !1191
  %1 = load i8, i8* %0
  %stack_var_-1052 = alloca i32, align 4
  %2 = call i32* @memset(i32* nonnull %stack_var_-1052, i32 0, i32 1024), !insn.addr !1192
  %3 = call %_IO_FILE* @fopen(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8a3c to i32), i32 131072) to i8*), i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8a54 to i32), i32 131072) to i8*)), !insn.addr !1193
  %4 = bitcast i32* %stack_var_-1052 to i8*, !insn.addr !1194
  %5 = call i8* @fgets(i8* nonnull %4, i32 1023, %_IO_FILE* %3), !insn.addr !1194
  %6 = icmp eq i8* %5, null, !insn.addr !1195
  br i1 %6, label %dec_label_pc_d18c, label %dec_label_pc_c30c.lr.ph, !insn.addr !1196

dec_label_pc_c30c.lr.ph:                          ; preds = %dec_label_pc_c2c4
  %7 = ptrtoint %_IO_FILE* %3 to i32, !insn.addr !1197
  %8 = icmp eq i8 %1, 35, !insn.addr !1198
  store i8* %5, i8** %.in.reg2mem
  br label %dec_label_pc_c30c

dec_label_pc_c30c:                                ; preds = %dec_label_pc_c30c.lr.ph, %dec_label_pc_d174.backedge
  %9 = load i32, i32* %stack_var_-1052, align 4, !insn.addr !1199
  %10 = urem i32 %9, 256, !insn.addr !1199
  %11 = icmp eq i32 %10, 35, !insn.addr !1200
  %or.cond16 = or i1 %8, %11
  br i1 %or.cond16, label %dec_label_pc_d16e, label %dec_label_pc_c320, !insn.addr !1201

dec_label_pc_c320:                                ; preds = %dec_label_pc_c30c
  %12 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8a58 to i32), i32 131072) to i8*)), !insn.addr !1202
  %13 = icmp eq i8* %12, null, !insn.addr !1203
  br i1 %13, label %dec_label_pc_c4c8, label %dec_label_pc_c33e, !insn.addr !1204

dec_label_pc_c33e:                                ; preds = %dec_label_pc_c320
  %14 = ptrtoint i8* %12 to i32, !insn.addr !1202
  %15 = add i32 %14, 5, !insn.addr !1205
  %16 = inttoptr i32 %15 to i8*, !insn.addr !1206
  %.pre = load i8, i8* %16, align 1
  store i8 %.pre, i8* %.reg2mem
  store i32 0, i32* %storemerge20.reg2mem
  store i8* %16, i8** %stack_var_-12.019.reg2mem
  br label %dec_label_pc_c350

dec_label_pc_c350:                                ; preds = %dec_label_pc_c33e, %dec_label_pc_c380
  %stack_var_-12.019.reload = load i8*, i8** %stack_var_-12.019.reg2mem
  %storemerge20.reload = load i32, i32* %storemerge20.reg2mem
  %.reload = load i8, i8* %.reg2mem, !insn.addr !1207
  %17 = add i32 %storemerge20.reload, ptrtoint (i32* @global_var_3367dc to i32), !insn.addr !1208
  %18 = inttoptr i32 %17 to i8*, !insn.addr !1209
  store i8 %.reload, i8* %18, align 1, !insn.addr !1209
  %19 = ptrtoint i8* %stack_var_-12.019.reload to i32, !insn.addr !1210
  %20 = add i32 %19, 1, !insn.addr !1211
  %21 = inttoptr i32 %20 to i8*, !insn.addr !1212
  %22 = load i8, i8* %21, align 1, !insn.addr !1213
  store i32 %storemerge20.reload, i32* %storemerge.lcssa.reg2mem
  store i32 %storemerge20.reload, i32* %storemerge.lcssa.reg2mem
  switch i8 %22, label %dec_label_pc_c380 [
    i8 10, label %dec_label_pc_c392
    i8 13, label %dec_label_pc_c392
  ]

dec_label_pc_c380:                                ; preds = %dec_label_pc_c350
  %23 = add nuw nsw i32 %storemerge20.reload, 1, !insn.addr !1214
  %24 = icmp ult i32 %23, 64, !insn.addr !1215
  store i8 %22, i8* %.reg2mem, !insn.addr !1215
  store i32 %23, i32* %storemerge20.reg2mem, !insn.addr !1215
  store i8* %21, i8** %stack_var_-12.019.reg2mem, !insn.addr !1215
  store i32 64, i32* %storemerge.lcssa.reg2mem, !insn.addr !1215
  br i1 %24, label %dec_label_pc_c350, label %dec_label_pc_c392, !insn.addr !1215

dec_label_pc_c392:                                ; preds = %dec_label_pc_c350, %dec_label_pc_c350, %dec_label_pc_c380
  %storemerge.lcssa.reload = load i32, i32* %storemerge.lcssa.reg2mem
  %25 = add nuw i32 %storemerge.lcssa.reload, 1, !insn.addr !1216
  store i32 %25, i32* @global_var_35aec, align 4, !insn.addr !1217
  %26 = add i32 %storemerge.lcssa.reload, add (i32 ptrtoint (i32* @global_var_3367dc to i32), i32 1), !insn.addr !1218
  %27 = inttoptr i32 %26 to i8*, !insn.addr !1219
  store i8 0, i8* %27, align 1, !insn.addr !1219
  store i8 0, i8* bitcast (i8** @global_var_35aa8 to i8*), align 4, !insn.addr !1220
  store i8 0, i8* bitcast (i8** @global_var_35aa9 to i8*), align 4, !insn.addr !1221
  %28 = load i8, i8* bitcast (i32* @global_var_3367dc to i8*), align 4, !insn.addr !1222
  %29 = icmp eq i8 %28, 66, !insn.addr !1223
  %30 = load i8, i8* @global_var_3367dd, align 1, !insn.addr !1224
  %31 = icmp eq i8 %30, 66, !insn.addr !1225
  %or.cond = icmp eq i1 %29, %31
  %32 = load i8, i8* @global_var_3367de, align 1, !insn.addr !1226
  %33 = icmp eq i8 %32, 68, !insn.addr !1227
  %or.cond5 = icmp eq i1 %or.cond, %33
  %34 = load i8, i8* @global_var_3367df, align 1, !insn.addr !1228
  %35 = icmp eq i8 %34, 49, !insn.addr !1229
  %or.cond7 = icmp eq i1 %or.cond5, %35
  %36 = load i8, i8* @global_var_3367e0, align 1, !insn.addr !1230
  %37 = icmp eq i8 %36, 50, !insn.addr !1231
  %or.cond9 = icmp eq i1 %or.cond7, %37
  %38 = load i8, i8* @global_var_3367e1, align 1, !insn.addr !1232
  %39 = icmp eq i8 %38, 54, !insn.addr !1233
  %or.cond11 = icmp eq i1 %or.cond9, %39
  %40 = load i8, i8* @global_var_3367e2, align 1, !insn.addr !1234
  %41 = icmp eq i8 %40, 48, !insn.addr !1235
  %or.cond13 = icmp eq i1 %or.cond11, %41
  %42 = load i8, i8* @global_var_3367e3, align 1, !insn.addr !1236
  %43 = icmp eq i8 %42, 49, !insn.addr !1237
  %or.cond15 = icmp eq i1 %or.cond13, %43
  br i1 %or.cond15, label %dec_label_pc_c420, label %dec_label_pc_c444, !insn.addr !1238

dec_label_pc_c420:                                ; preds = %dec_label_pc_c392
  store i8 1, i8* bitcast (i8** @global_var_35aa8 to i8*), align 4, !insn.addr !1239
  %44 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8a60 to i32), i32 131072) to i8*)), !insn.addr !1240
  br label %dec_label_pc_d174.backedge, !insn.addr !1241

dec_label_pc_d174.backedge:                       ; preds = %dec_label_pc_c420, %dec_label_pc_c4e4, %dec_label_pc_c526, %dec_label_pc_c568, %dec_label_pc_c5aa, %dec_label_pc_c5ec, %dec_label_pc_c62e, %dec_label_pc_c670, %dec_label_pc_c6b2, %dec_label_pc_c6f4, %dec_label_pc_c736, %dec_label_pc_c778, %dec_label_pc_c7ba, %dec_label_pc_c7fc, %dec_label_pc_c83e, %dec_label_pc_c86e, %dec_label_pc_c8a6, %dec_label_pc_c8d6, %dec_label_pc_c90e, %dec_label_pc_c93e, %dec_label_pc_c976, %dec_label_pc_c9a6, %dec_label_pc_c9dc, %dec_label_pc_ca0c, %dec_label_pc_ca42, %dec_label_pc_ca72, %dec_label_pc_caa8, %dec_label_pc_cad8, %dec_label_pc_cb0e, %dec_label_pc_cb3e, %dec_label_pc_cb74, %dec_label_pc_cba4, %dec_label_pc_cbda, %dec_label_pc_cc1a, %dec_label_pc_cc5a, %dec_label_pc_cc9a, %dec_label_pc_ccdc, %dec_label_pc_cd0c, %dec_label_pc_cd40, %dec_label_pc_cd70, %dec_label_pc_cda4, %dec_label_pc_cdd4, %dec_label_pc_ce08, %dec_label_pc_ce48, %dec_label_pc_ce88, %dec_label_pc_cec8, %dec_label_pc_cf08, %dec_label_pc_cf48, %dec_label_pc_cf88, %dec_label_pc_cfc8, %dec_label_pc_d008, %dec_label_pc_d048, %dec_label_pc_d088, %dec_label_pc_d0c8, %dec_label_pc_d108, %dec_label_pc_d12c, %dec_label_pc_d148, %dec_label_pc_d16e, %dec_label_pc_d172
  %45 = call i8* @fgets(i8* nonnull %4, i32 1023, %_IO_FILE* %3), !insn.addr !1194
  %46 = icmp eq i8* %45, null, !insn.addr !1195
  store i8* %45, i8** %.in.reg2mem, !insn.addr !1196
  br i1 %46, label %dec_label_pc_d18c, label %dec_label_pc_c30c, !insn.addr !1196

dec_label_pc_c444:                                ; preds = %dec_label_pc_c392
  %47 = zext i8 %28 to i32, !insn.addr !1242
  store i32 %14, i32* %r0.0.reg2mem, !insn.addr !1243
  store i32 ptrtoint (i32* @global_var_3367dc to i32), i32* %r1.2.reg2mem, !insn.addr !1243
  store i32 0, i32* %r2.0.reg2mem, !insn.addr !1243
  store i32 %47, i32* %r3.1.reg2mem, !insn.addr !1243
  br i1 %29, label %dec_label_pc_c450, label %dec_label_pc_d172, !insn.addr !1243

dec_label_pc_c450:                                ; preds = %dec_label_pc_c444
  %48 = zext i8 %30 to i32, !insn.addr !1244
  store i32 %14, i32* %r0.0.reg2mem, !insn.addr !1245
  store i32 ptrtoint (i32* @global_var_3367dc to i32), i32* %r1.2.reg2mem, !insn.addr !1245
  store i32 0, i32* %r2.0.reg2mem, !insn.addr !1245
  store i32 %48, i32* %r3.1.reg2mem, !insn.addr !1245
  br i1 %31, label %dec_label_pc_c45c, label %dec_label_pc_d172, !insn.addr !1245

dec_label_pc_c45c:                                ; preds = %dec_label_pc_c450
  %49 = zext i8 %32 to i32, !insn.addr !1246
  store i32 %14, i32* %r0.0.reg2mem, !insn.addr !1247
  store i32 ptrtoint (i32* @global_var_3367dc to i32), i32* %r1.2.reg2mem, !insn.addr !1247
  store i32 0, i32* %r2.0.reg2mem, !insn.addr !1247
  store i32 %49, i32* %r3.1.reg2mem, !insn.addr !1247
  br i1 %33, label %dec_label_pc_c468, label %dec_label_pc_d172, !insn.addr !1247

dec_label_pc_c468:                                ; preds = %dec_label_pc_c45c
  %50 = zext i8 %34 to i32, !insn.addr !1248
  %51 = icmp eq i8 %34, 50, !insn.addr !1249
  store i32 %14, i32* %r0.0.reg2mem, !insn.addr !1250
  store i32 ptrtoint (i32* @global_var_3367dc to i32), i32* %r1.2.reg2mem, !insn.addr !1250
  store i32 0, i32* %r2.0.reg2mem, !insn.addr !1250
  store i32 %50, i32* %r3.1.reg2mem, !insn.addr !1250
  br i1 %51, label %dec_label_pc_c474, label %dec_label_pc_d172, !insn.addr !1250

dec_label_pc_c474:                                ; preds = %dec_label_pc_c468
  %52 = zext i8 %36 to i32, !insn.addr !1251
  %53 = icmp eq i8 %36, 53, !insn.addr !1252
  store i32 %14, i32* %r0.0.reg2mem, !insn.addr !1253
  store i32 ptrtoint (i32* @global_var_3367dc to i32), i32* %r1.2.reg2mem, !insn.addr !1253
  store i32 0, i32* %r2.0.reg2mem, !insn.addr !1253
  store i32 %52, i32* %r3.1.reg2mem, !insn.addr !1253
  br i1 %53, label %dec_label_pc_c480, label %dec_label_pc_d172, !insn.addr !1253

dec_label_pc_c480:                                ; preds = %dec_label_pc_c474
  %54 = zext i8 %38 to i32, !insn.addr !1254
  store i32 %14, i32* %r0.0.reg2mem, !insn.addr !1255
  store i32 ptrtoint (i32* @global_var_3367dc to i32), i32* %r1.2.reg2mem, !insn.addr !1255
  store i32 0, i32* %r2.0.reg2mem, !insn.addr !1255
  store i32 %54, i32* %r3.1.reg2mem, !insn.addr !1255
  br i1 %39, label %dec_label_pc_c48c, label %dec_label_pc_d172, !insn.addr !1255

dec_label_pc_c48c:                                ; preds = %dec_label_pc_c480
  %55 = zext i8 %40 to i32, !insn.addr !1256
  store i32 %14, i32* %r0.0.reg2mem, !insn.addr !1257
  store i32 ptrtoint (i32* @global_var_3367dc to i32), i32* %r1.2.reg2mem, !insn.addr !1257
  store i32 0, i32* %r2.0.reg2mem, !insn.addr !1257
  store i32 %55, i32* %r3.1.reg2mem, !insn.addr !1257
  br i1 %41, label %dec_label_pc_c498, label %dec_label_pc_d172, !insn.addr !1257

dec_label_pc_c498:                                ; preds = %dec_label_pc_c48c
  %56 = zext i8 %42 to i32, !insn.addr !1258
  store i32 %14, i32* %r0.0.reg2mem, !insn.addr !1259
  store i32 ptrtoint (i32* @global_var_3367dc to i32), i32* %r1.2.reg2mem, !insn.addr !1259
  store i32 0, i32* %r2.0.reg2mem, !insn.addr !1259
  store i32 %56, i32* %r3.1.reg2mem, !insn.addr !1259
  br i1 %43, label %dec_label_pc_c4a4, label %dec_label_pc_d172, !insn.addr !1259

dec_label_pc_c4a4:                                ; preds = %dec_label_pc_c498
  store i8 1, i8* bitcast (i8** @global_var_35aa9 to i8*), align 4, !insn.addr !1260
  %57 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8a80 to i32), i32 131072) to i8*)), !insn.addr !1261
  store i32 %57, i32* %r0.0.reg2mem, !insn.addr !1262
  store i32 ptrtoint ([12 x i8]* @global_var_28cfc to i32), i32* %r1.2.reg2mem, !insn.addr !1262
  store i32 1, i32* %r2.0.reg2mem, !insn.addr !1262
  store i32 ptrtoint (i8** @global_var_35aa9 to i32), i32* %r3.1.reg2mem, !insn.addr !1262
  br label %dec_label_pc_d172, !insn.addr !1262

dec_label_pc_c4c8:                                ; preds = %dec_label_pc_c320
  %58 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8aa0 to i32), i32 131072) to i8*)), !insn.addr !1263
  %59 = icmp eq i8* %58, null, !insn.addr !1264
  br i1 %59, label %dec_label_pc_c50a, label %dec_label_pc_c4e4, !insn.addr !1265

dec_label_pc_c4e4:                                ; preds = %dec_label_pc_c4c8
  %60 = ptrtoint i8* %58 to i32, !insn.addr !1266
  %61 = add i32 %60, 15, !insn.addr !1267
  %62 = inttoptr i32 %61 to i8*, !insn.addr !1268
  %63 = call i32 (i8*, i8*, ...) @sscanf(i8* %62, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1268
  br label %dec_label_pc_d174.backedge, !insn.addr !1269

dec_label_pc_c50a:                                ; preds = %dec_label_pc_c4c8
  %64 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab4 to i32), i32 131072) to i8*)), !insn.addr !1270
  %65 = icmp eq i8* %64, null, !insn.addr !1271
  br i1 %65, label %dec_label_pc_c54c, label %dec_label_pc_c526, !insn.addr !1272

dec_label_pc_c526:                                ; preds = %dec_label_pc_c50a
  %66 = ptrtoint i8* %64 to i32, !insn.addr !1273
  %67 = add i32 %66, 8, !insn.addr !1274
  %68 = inttoptr i32 %67 to i8*, !insn.addr !1275
  %69 = call i32 (i8*, i8*, ...) @sscanf(i8* %68, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1275
  br label %dec_label_pc_d174.backedge, !insn.addr !1276

dec_label_pc_c54c:                                ; preds = %dec_label_pc_c50a
  %70 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ac0 to i32), i32 131072) to i8*)), !insn.addr !1277
  %71 = icmp eq i8* %70, null, !insn.addr !1278
  br i1 %71, label %dec_label_pc_c58e, label %dec_label_pc_c568, !insn.addr !1279

dec_label_pc_c568:                                ; preds = %dec_label_pc_c54c
  %72 = ptrtoint i8* %70 to i32, !insn.addr !1280
  %73 = add i32 %72, 9, !insn.addr !1281
  %74 = inttoptr i32 %73 to i8*, !insn.addr !1282
  %75 = call i32 (i8*, i8*, ...) @sscanf(i8* %74, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1282
  br label %dec_label_pc_d174.backedge, !insn.addr !1283

dec_label_pc_c58e:                                ; preds = %dec_label_pc_c54c
  %76 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8acc to i32), i32 131072) to i8*)), !insn.addr !1284
  %77 = icmp eq i8* %76, null, !insn.addr !1285
  br i1 %77, label %dec_label_pc_c5d0, label %dec_label_pc_c5aa, !insn.addr !1286

dec_label_pc_c5aa:                                ; preds = %dec_label_pc_c58e
  %78 = ptrtoint i8* %76 to i32, !insn.addr !1287
  %79 = add i32 %78, 8, !insn.addr !1288
  %80 = inttoptr i32 %79 to i8*, !insn.addr !1289
  %81 = call i32 (i8*, i8*, ...) @sscanf(i8* %80, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1289
  br label %dec_label_pc_d174.backedge, !insn.addr !1290

dec_label_pc_c5d0:                                ; preds = %dec_label_pc_c58e
  %82 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ad8 to i32), i32 131072) to i8*)), !insn.addr !1291
  %83 = icmp eq i8* %82, null, !insn.addr !1292
  br i1 %83, label %dec_label_pc_c612, label %dec_label_pc_c5ec, !insn.addr !1293

dec_label_pc_c5ec:                                ; preds = %dec_label_pc_c5d0
  %84 = ptrtoint i8* %82 to i32, !insn.addr !1294
  %85 = add i32 %84, 6, !insn.addr !1295
  %86 = inttoptr i32 %85 to i8*, !insn.addr !1296
  %87 = call i32 (i8*, i8*, ...) @sscanf(i8* %86, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1296
  br label %dec_label_pc_d174.backedge, !insn.addr !1297

dec_label_pc_c612:                                ; preds = %dec_label_pc_c5d0
  %88 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ae0 to i32), i32 131072) to i8*)), !insn.addr !1298
  %89 = icmp eq i8* %88, null, !insn.addr !1299
  br i1 %89, label %dec_label_pc_c654, label %dec_label_pc_c62e, !insn.addr !1300

dec_label_pc_c62e:                                ; preds = %dec_label_pc_c612
  %90 = ptrtoint i8* %88 to i32, !insn.addr !1301
  %91 = add i32 %90, 6, !insn.addr !1302
  %92 = inttoptr i32 %91 to i8*, !insn.addr !1303
  %93 = call i32 (i8*, i8*, ...) @sscanf(i8* %92, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1303
  br label %dec_label_pc_d174.backedge, !insn.addr !1304

dec_label_pc_c654:                                ; preds = %dec_label_pc_c612
  %94 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ae8 to i32), i32 131072) to i8*)), !insn.addr !1305
  %95 = icmp eq i8* %94, null, !insn.addr !1306
  br i1 %95, label %dec_label_pc_c696, label %dec_label_pc_c670, !insn.addr !1307

dec_label_pc_c670:                                ; preds = %dec_label_pc_c654
  %96 = ptrtoint i8* %94 to i32, !insn.addr !1308
  %97 = add i32 %96, 6, !insn.addr !1309
  %98 = inttoptr i32 %97 to i8*, !insn.addr !1310
  %99 = call i32 (i8*, i8*, ...) @sscanf(i8* %98, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1310
  br label %dec_label_pc_d174.backedge, !insn.addr !1311

dec_label_pc_c696:                                ; preds = %dec_label_pc_c654
  %100 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8af0 to i32), i32 131072) to i8*)), !insn.addr !1312
  %101 = icmp eq i8* %100, null, !insn.addr !1313
  br i1 %101, label %dec_label_pc_c6d8, label %dec_label_pc_c6b2, !insn.addr !1314

dec_label_pc_c6b2:                                ; preds = %dec_label_pc_c696
  %102 = ptrtoint i8* %100 to i32, !insn.addr !1315
  %103 = add i32 %102, 6, !insn.addr !1316
  %104 = inttoptr i32 %103 to i8*, !insn.addr !1317
  %105 = call i32 (i8*, i8*, ...) @sscanf(i8* %104, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1317
  br label %dec_label_pc_d174.backedge, !insn.addr !1318

dec_label_pc_c6d8:                                ; preds = %dec_label_pc_c696
  %106 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8af8 to i32), i32 131072) to i8*)), !insn.addr !1319
  %107 = icmp eq i8* %106, null, !insn.addr !1320
  br i1 %107, label %dec_label_pc_c71a, label %dec_label_pc_c6f4, !insn.addr !1321

dec_label_pc_c6f4:                                ; preds = %dec_label_pc_c6d8
  %108 = ptrtoint i8* %106 to i32, !insn.addr !1322
  %109 = add i32 %108, 6, !insn.addr !1323
  %110 = inttoptr i32 %109 to i8*, !insn.addr !1324
  %111 = call i32 (i8*, i8*, ...) @sscanf(i8* %110, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1324
  br label %dec_label_pc_d174.backedge, !insn.addr !1325

dec_label_pc_c71a:                                ; preds = %dec_label_pc_c6d8
  %112 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b00 to i32), i32 131072) to i8*)), !insn.addr !1326
  %113 = icmp eq i8* %112, null, !insn.addr !1327
  br i1 %113, label %dec_label_pc_c75c, label %dec_label_pc_c736, !insn.addr !1328

dec_label_pc_c736:                                ; preds = %dec_label_pc_c71a
  %114 = ptrtoint i8* %112 to i32, !insn.addr !1329
  %115 = add i32 %114, 6, !insn.addr !1330
  %116 = inttoptr i32 %115 to i8*, !insn.addr !1331
  %117 = call i32 (i8*, i8*, ...) @sscanf(i8* %116, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1331
  br label %dec_label_pc_d174.backedge, !insn.addr !1332

dec_label_pc_c75c:                                ; preds = %dec_label_pc_c71a
  %118 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b08 to i32), i32 131072) to i8*)), !insn.addr !1333
  %119 = icmp eq i8* %118, null, !insn.addr !1334
  br i1 %119, label %dec_label_pc_c79e, label %dec_label_pc_c778, !insn.addr !1335

dec_label_pc_c778:                                ; preds = %dec_label_pc_c75c
  %120 = ptrtoint i8* %118 to i32, !insn.addr !1336
  %121 = add i32 %120, 6, !insn.addr !1337
  %122 = inttoptr i32 %121 to i8*, !insn.addr !1338
  %123 = call i32 (i8*, i8*, ...) @sscanf(i8* %122, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1338
  br label %dec_label_pc_d174.backedge, !insn.addr !1339

dec_label_pc_c79e:                                ; preds = %dec_label_pc_c75c
  %124 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b10 to i32), i32 131072) to i8*)), !insn.addr !1340
  %125 = icmp eq i8* %124, null, !insn.addr !1341
  br i1 %125, label %dec_label_pc_c7e0, label %dec_label_pc_c7ba, !insn.addr !1342

dec_label_pc_c7ba:                                ; preds = %dec_label_pc_c79e
  %126 = ptrtoint i8* %124 to i32, !insn.addr !1343
  %127 = add i32 %126, 6, !insn.addr !1344
  %128 = inttoptr i32 %127 to i8*, !insn.addr !1345
  %129 = call i32 (i8*, i8*, ...) @sscanf(i8* %128, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1345
  br label %dec_label_pc_d174.backedge, !insn.addr !1346

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c79e
  %130 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b18 to i32), i32 131072) to i8*)), !insn.addr !1347
  %131 = icmp eq i8* %130, null, !insn.addr !1348
  br i1 %131, label %dec_label_pc_c822, label %dec_label_pc_c7fc, !insn.addr !1349

dec_label_pc_c7fc:                                ; preds = %dec_label_pc_c7e0
  %132 = ptrtoint i8* %130 to i32, !insn.addr !1350
  %133 = add i32 %132, 6, !insn.addr !1351
  %134 = inttoptr i32 %133 to i8*, !insn.addr !1352
  %135 = call i32 (i8*, i8*, ...) @sscanf(i8* %134, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1352
  br label %dec_label_pc_d174.backedge, !insn.addr !1353

dec_label_pc_c822:                                ; preds = %dec_label_pc_c7e0
  %136 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b20 to i32), i32 131072) to i8*)), !insn.addr !1354
  %137 = icmp eq i8* %136, null, !insn.addr !1355
  br i1 %137, label %dec_label_pc_c88a, label %dec_label_pc_c83e, !insn.addr !1356

dec_label_pc_c83e:                                ; preds = %dec_label_pc_c822
  %138 = ptrtoint i8* %136 to i32, !insn.addr !1357
  %139 = add i32 %138, 9, !insn.addr !1358
  %140 = inttoptr i32 %139 to i8*, !insn.addr !1359
  %141 = call i32 (i8*, i8*, ...) @sscanf(i8* %140, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1359
  %142 = load i32, i32* @global_var_33687c, align 4, !insn.addr !1360
  %143 = icmp eq i32 %142, 0, !insn.addr !1361
  br i1 %143, label %dec_label_pc_d174.backedge, label %dec_label_pc_c86e, !insn.addr !1362

dec_label_pc_c86e:                                ; preds = %dec_label_pc_c83e
  store i8 trunc (i32 and (i32 ptrtoint (i8** @global_var_35ac5 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !1363
  br label %dec_label_pc_d174.backedge, !insn.addr !1364

dec_label_pc_c88a:                                ; preds = %dec_label_pc_c822
  %144 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b2c to i32), i32 131072) to i8*)), !insn.addr !1365
  %145 = icmp eq i8* %144, null, !insn.addr !1366
  br i1 %145, label %dec_label_pc_c8f2, label %dec_label_pc_c8a6, !insn.addr !1367

dec_label_pc_c8a6:                                ; preds = %dec_label_pc_c88a
  %146 = ptrtoint i8* %144 to i32, !insn.addr !1368
  %147 = add i32 %146, 9, !insn.addr !1369
  %148 = inttoptr i32 %147 to i8*, !insn.addr !1370
  %149 = call i32 (i8*, i8*, ...) @sscanf(i8* %148, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1370
  %150 = load i32, i32* @global_var_336880, align 4, !insn.addr !1371
  %151 = icmp eq i32 %150, 0, !insn.addr !1372
  br i1 %151, label %dec_label_pc_d174.backedge, label %dec_label_pc_c8d6, !insn.addr !1373

dec_label_pc_c8d6:                                ; preds = %dec_label_pc_c8a6
  store i8 trunc (i32 and (i32 ptrtoint (i8** @global_var_35ac5 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !1374
  br label %dec_label_pc_d174.backedge, !insn.addr !1375

dec_label_pc_c8f2:                                ; preds = %dec_label_pc_c88a
  %152 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b38 to i32), i32 131072) to i8*)), !insn.addr !1376
  %153 = icmp eq i8* %152, null, !insn.addr !1377
  br i1 %153, label %dec_label_pc_c95a, label %dec_label_pc_c90e, !insn.addr !1378

dec_label_pc_c90e:                                ; preds = %dec_label_pc_c8f2
  %154 = ptrtoint i8* %152 to i32, !insn.addr !1379
  %155 = add i32 %154, 9, !insn.addr !1380
  %156 = inttoptr i32 %155 to i8*, !insn.addr !1381
  %157 = call i32 (i8*, i8*, ...) @sscanf(i8* %156, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1381
  %158 = load i32, i32* @global_var_336884, align 4, !insn.addr !1382
  %159 = icmp eq i32 %158, 0, !insn.addr !1383
  br i1 %159, label %dec_label_pc_d174.backedge, label %dec_label_pc_c93e, !insn.addr !1384

dec_label_pc_c93e:                                ; preds = %dec_label_pc_c90e
  store i8 trunc (i32 and (i32 ptrtoint (i8** @global_var_35ac5 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !1385
  br label %dec_label_pc_d174.backedge, !insn.addr !1386

dec_label_pc_c95a:                                ; preds = %dec_label_pc_c8f2
  %160 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b44 to i32), i32 131072) to i8*)), !insn.addr !1387
  %161 = icmp eq i8* %160, null, !insn.addr !1388
  br i1 %161, label %dec_label_pc_c9c0, label %dec_label_pc_c976, !insn.addr !1389

dec_label_pc_c976:                                ; preds = %dec_label_pc_c95a
  %162 = ptrtoint i8* %160 to i32, !insn.addr !1390
  %163 = add i32 %162, 9, !insn.addr !1391
  %164 = inttoptr i32 %163 to i8*, !insn.addr !1392
  %165 = call i32 (i8*, i8*, ...) @sscanf(i8* %164, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1392
  %166 = load i32, i32* @global_var_336888, align 4, !insn.addr !1393
  %167 = icmp eq i32 %166, 0, !insn.addr !1394
  br i1 %167, label %dec_label_pc_d174.backedge, label %dec_label_pc_c9a6, !insn.addr !1395

dec_label_pc_c9a6:                                ; preds = %dec_label_pc_c976
  store i8 trunc (i32 and (i32 ptrtoint (i8** @global_var_35ac5 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !1396
  br label %dec_label_pc_d174.backedge, !insn.addr !1397

dec_label_pc_c9c0:                                ; preds = %dec_label_pc_c95a
  %168 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b50 to i32), i32 131072) to i8*)), !insn.addr !1398
  %169 = icmp eq i8* %168, null, !insn.addr !1399
  br i1 %169, label %dec_label_pc_ca26, label %dec_label_pc_c9dc, !insn.addr !1400

dec_label_pc_c9dc:                                ; preds = %dec_label_pc_c9c0
  %170 = ptrtoint i8* %168 to i32, !insn.addr !1401
  %171 = add i32 %170, 9, !insn.addr !1402
  %172 = inttoptr i32 %171 to i8*, !insn.addr !1403
  %173 = call i32 (i8*, i8*, ...) @sscanf(i8* %172, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1403
  %174 = load i32, i32* @global_var_33688c, align 4, !insn.addr !1404
  %175 = icmp eq i32 %174, 0, !insn.addr !1405
  br i1 %175, label %dec_label_pc_d174.backedge, label %dec_label_pc_ca0c, !insn.addr !1406

dec_label_pc_ca0c:                                ; preds = %dec_label_pc_c9dc
  store i8 trunc (i32 and (i32 ptrtoint (i8** @global_var_35ac5 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !1407
  br label %dec_label_pc_d174.backedge, !insn.addr !1408

dec_label_pc_ca26:                                ; preds = %dec_label_pc_c9c0
  %176 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b5c to i32), i32 131072) to i8*)), !insn.addr !1409
  %177 = icmp eq i8* %176, null, !insn.addr !1410
  br i1 %177, label %dec_label_pc_ca8c, label %dec_label_pc_ca42, !insn.addr !1411

dec_label_pc_ca42:                                ; preds = %dec_label_pc_ca26
  %178 = ptrtoint i8* %176 to i32, !insn.addr !1412
  %179 = add i32 %178, 9, !insn.addr !1413
  %180 = inttoptr i32 %179 to i8*, !insn.addr !1414
  %181 = call i32 (i8*, i8*, ...) @sscanf(i8* %180, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1414
  %182 = load i32, i32* @global_var_336890, align 4, !insn.addr !1415
  %183 = icmp eq i32 %182, 0, !insn.addr !1416
  br i1 %183, label %dec_label_pc_d174.backedge, label %dec_label_pc_ca72, !insn.addr !1417

dec_label_pc_ca72:                                ; preds = %dec_label_pc_ca42
  store i8 trunc (i32 and (i32 ptrtoint (i8** @global_var_35ac5 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !1418
  br label %dec_label_pc_d174.backedge, !insn.addr !1419

dec_label_pc_ca8c:                                ; preds = %dec_label_pc_ca26
  %184 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b68 to i32), i32 131072) to i8*)), !insn.addr !1420
  %185 = icmp eq i8* %184, null, !insn.addr !1421
  br i1 %185, label %dec_label_pc_caf2, label %dec_label_pc_caa8, !insn.addr !1422

dec_label_pc_caa8:                                ; preds = %dec_label_pc_ca8c
  %186 = ptrtoint i8* %184 to i32, !insn.addr !1423
  %187 = add i32 %186, 9, !insn.addr !1424
  %188 = inttoptr i32 %187 to i8*, !insn.addr !1425
  %189 = call i32 (i8*, i8*, ...) @sscanf(i8* %188, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1425
  %190 = load i32, i32* @global_var_336894, align 4, !insn.addr !1426
  %191 = icmp eq i32 %190, 0, !insn.addr !1427
  br i1 %191, label %dec_label_pc_d174.backedge, label %dec_label_pc_cad8, !insn.addr !1428

dec_label_pc_cad8:                                ; preds = %dec_label_pc_caa8
  store i8 trunc (i32 and (i32 ptrtoint (i8** @global_var_35ac5 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !1429
  br label %dec_label_pc_d174.backedge, !insn.addr !1430

dec_label_pc_caf2:                                ; preds = %dec_label_pc_ca8c
  %192 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b74 to i32), i32 131072) to i8*)), !insn.addr !1431
  %193 = icmp eq i8* %192, null, !insn.addr !1432
  br i1 %193, label %dec_label_pc_cb58, label %dec_label_pc_cb0e, !insn.addr !1433

dec_label_pc_cb0e:                                ; preds = %dec_label_pc_caf2
  %194 = ptrtoint i8* %192 to i32, !insn.addr !1434
  %195 = add i32 %194, 9, !insn.addr !1435
  %196 = inttoptr i32 %195 to i8*, !insn.addr !1436
  %197 = call i32 (i8*, i8*, ...) @sscanf(i8* %196, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1436
  %198 = load i32, i32* @global_var_336898, align 4, !insn.addr !1437
  %199 = icmp eq i32 %198, 0, !insn.addr !1438
  br i1 %199, label %dec_label_pc_d174.backedge, label %dec_label_pc_cb3e, !insn.addr !1439

dec_label_pc_cb3e:                                ; preds = %dec_label_pc_cb0e
  store i8 trunc (i32 and (i32 ptrtoint (i8** @global_var_35ac5 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !1440
  br label %dec_label_pc_d174.backedge, !insn.addr !1441

dec_label_pc_cb58:                                ; preds = %dec_label_pc_caf2
  %200 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b80 to i32), i32 131072) to i8*)), !insn.addr !1442
  %201 = icmp eq i8* %200, null, !insn.addr !1443
  br i1 %201, label %dec_label_pc_cbbe, label %dec_label_pc_cb74, !insn.addr !1444

dec_label_pc_cb74:                                ; preds = %dec_label_pc_cb58
  %202 = ptrtoint i8* %200 to i32, !insn.addr !1445
  %203 = add i32 %202, 9, !insn.addr !1446
  %204 = inttoptr i32 %203 to i8*, !insn.addr !1447
  %205 = call i32 (i8*, i8*, ...) @sscanf(i8* %204, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1447
  %206 = load i32, i32* @global_var_33689c, align 4, !insn.addr !1448
  %207 = icmp eq i32 %206, 0, !insn.addr !1449
  br i1 %207, label %dec_label_pc_d174.backedge, label %dec_label_pc_cba4, !insn.addr !1450

dec_label_pc_cba4:                                ; preds = %dec_label_pc_cb74
  store i8 trunc (i32 and (i32 ptrtoint (i8** @global_var_35ac5 to i32), i32 255) to i8), i8* bitcast (i8** @global_var_35ac4 to i8*), align 4, !insn.addr !1451
  br label %dec_label_pc_d174.backedge, !insn.addr !1452

dec_label_pc_cbbe:                                ; preds = %dec_label_pc_cb58
  %208 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b8c to i32), i32 131072) to i8*)), !insn.addr !1453
  %209 = icmp eq i8* %208, null, !insn.addr !1454
  br i1 %209, label %dec_label_pc_cbfe, label %dec_label_pc_cbda, !insn.addr !1455

dec_label_pc_cbda:                                ; preds = %dec_label_pc_cbbe
  %210 = ptrtoint i8* %208 to i32, !insn.addr !1456
  %211 = add i32 %210, 12, !insn.addr !1457
  %212 = inttoptr i32 %211 to i8*, !insn.addr !1458
  %213 = call i32 (i8*, i8*, ...) @sscanf(i8* %212, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1458
  br label %dec_label_pc_d174.backedge, !insn.addr !1459

dec_label_pc_cbfe:                                ; preds = %dec_label_pc_cbbe
  %214 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8b9c to i32), i32 131072) to i8*)), !insn.addr !1460
  %215 = icmp eq i8* %214, null, !insn.addr !1461
  br i1 %215, label %dec_label_pc_cc3e, label %dec_label_pc_cc1a, !insn.addr !1462

dec_label_pc_cc1a:                                ; preds = %dec_label_pc_cbfe
  %216 = ptrtoint i8* %214 to i32, !insn.addr !1463
  %217 = add i32 %216, 10, !insn.addr !1464
  %218 = inttoptr i32 %217 to i8*, !insn.addr !1465
  %219 = call i32 (i8*, i8*, ...) @sscanf(i8* %218, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1465
  br label %dec_label_pc_d174.backedge, !insn.addr !1466

dec_label_pc_cc3e:                                ; preds = %dec_label_pc_cbfe
  %220 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ba8 to i32), i32 131072) to i8*)), !insn.addr !1467
  %221 = icmp eq i8* %220, null, !insn.addr !1468
  br i1 %221, label %dec_label_pc_cc7e, label %dec_label_pc_cc5a, !insn.addr !1469

dec_label_pc_cc5a:                                ; preds = %dec_label_pc_cc3e
  %222 = ptrtoint i8* %220 to i32, !insn.addr !1470
  %223 = add i32 %222, 13, !insn.addr !1471
  %224 = inttoptr i32 %223 to i8*, !insn.addr !1472
  %225 = call i32 (i8*, i8*, ...) @sscanf(i8* %224, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8bb8 to i32), i32 131072) to i8*)), !insn.addr !1472
  br label %dec_label_pc_d174.backedge, !insn.addr !1473

dec_label_pc_cc7e:                                ; preds = %dec_label_pc_cc3e
  %226 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8bbc to i32), i32 131072) to i8*)), !insn.addr !1474
  %227 = icmp eq i8* %226, null, !insn.addr !1475
  br i1 %227, label %dec_label_pc_ccc0, label %dec_label_pc_cc9a, !insn.addr !1476

dec_label_pc_cc9a:                                ; preds = %dec_label_pc_cc7e
  %228 = ptrtoint i8* %226 to i32, !insn.addr !1477
  %229 = add i32 %228, 17, !insn.addr !1478
  %230 = inttoptr i32 %229 to i8*, !insn.addr !1479
  %231 = call i32 (i8*, i8*, ...) @sscanf(i8* %230, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8bb8 to i32), i32 131072) to i8*)), !insn.addr !1479
  br label %dec_label_pc_d174.backedge, !insn.addr !1480

dec_label_pc_ccc0:                                ; preds = %dec_label_pc_cc7e
  %232 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8bd0 to i32), i32 131072) to i8*)), !insn.addr !1481
  %233 = icmp eq i8* %232, null, !insn.addr !1482
  br i1 %233, label %dec_label_pc_cd24, label %dec_label_pc_ccdc, !insn.addr !1483

dec_label_pc_ccdc:                                ; preds = %dec_label_pc_ccc0
  %234 = ptrtoint i8* %232 to i32, !insn.addr !1484
  %235 = add i32 %234, 12, !insn.addr !1485
  %236 = inttoptr i32 %235 to i8*, !insn.addr !1486
  %237 = call i32 (i8*, i8*, ...) @sscanf(i8* %236, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8bb8 to i32), i32 131072) to i8*)), !insn.addr !1486
  %238 = load i8, i8* @global_var_3368ac, align 1, !insn.addr !1487
  %239 = icmp eq i8 %238, 0, !insn.addr !1488
  br i1 %239, label %dec_label_pc_d174.backedge, label %dec_label_pc_cd0c, !insn.addr !1489

dec_label_pc_cd0c:                                ; preds = %dec_label_pc_ccdc
  %240 = load i32, i32* @global_var_35af0, align 4, !insn.addr !1490
  %241 = add i32 %240, 1, !insn.addr !1491
  store i32 %241, i32* @global_var_35af0, align 4, !insn.addr !1492
  br label %dec_label_pc_d174.backedge, !insn.addr !1493

dec_label_pc_cd24:                                ; preds = %dec_label_pc_ccc0
  %242 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8be0 to i32), i32 131072) to i8*)), !insn.addr !1494
  %243 = icmp eq i8* %242, null, !insn.addr !1495
  br i1 %243, label %dec_label_pc_cd88, label %dec_label_pc_cd40, !insn.addr !1496

dec_label_pc_cd40:                                ; preds = %dec_label_pc_cd24
  %244 = ptrtoint i8* %242 to i32, !insn.addr !1497
  %245 = add i32 %244, 12, !insn.addr !1498
  %246 = inttoptr i32 %245 to i8*, !insn.addr !1499
  %247 = call i32 (i8*, i8*, ...) @sscanf(i8* %246, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8bb8 to i32), i32 131072) to i8*)), !insn.addr !1499
  %248 = load i8, i8* @global_var_3368ad, align 1, !insn.addr !1500
  %249 = icmp eq i8 %248, 0, !insn.addr !1501
  br i1 %249, label %dec_label_pc_d174.backedge, label %dec_label_pc_cd70, !insn.addr !1502

dec_label_pc_cd70:                                ; preds = %dec_label_pc_cd40
  %250 = load i32, i32* @global_var_35af0, align 4, !insn.addr !1503
  %251 = add i32 %250, 1, !insn.addr !1504
  store i32 %251, i32* @global_var_35af0, align 4, !insn.addr !1505
  br label %dec_label_pc_d174.backedge, !insn.addr !1506

dec_label_pc_cd88:                                ; preds = %dec_label_pc_cd24
  %252 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8bf0 to i32), i32 131072) to i8*)), !insn.addr !1507
  %253 = icmp eq i8* %252, null, !insn.addr !1508
  br i1 %253, label %dec_label_pc_cdec, label %dec_label_pc_cda4, !insn.addr !1509

dec_label_pc_cda4:                                ; preds = %dec_label_pc_cd88
  %254 = ptrtoint i8* %252 to i32, !insn.addr !1510
  %255 = add i32 %254, 12, !insn.addr !1511
  %256 = inttoptr i32 %255 to i8*, !insn.addr !1512
  %257 = call i32 (i8*, i8*, ...) @sscanf(i8* %256, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8bb8 to i32), i32 131072) to i8*)), !insn.addr !1512
  %258 = load i8, i8* @global_var_3368ae, align 1, !insn.addr !1513
  %259 = icmp eq i8 %258, 0, !insn.addr !1514
  br i1 %259, label %dec_label_pc_d174.backedge, label %dec_label_pc_cdd4, !insn.addr !1515

dec_label_pc_cdd4:                                ; preds = %dec_label_pc_cda4
  %260 = load i32, i32* @global_var_35af0, align 4, !insn.addr !1516
  %261 = add i32 %260, 1, !insn.addr !1517
  store i32 %261, i32* @global_var_35af0, align 4, !insn.addr !1518
  br label %dec_label_pc_d174.backedge, !insn.addr !1519

dec_label_pc_cdec:                                ; preds = %dec_label_pc_cd88
  %262 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8c00 to i32), i32 131072) to i8*)), !insn.addr !1520
  %263 = icmp eq i8* %262, null, !insn.addr !1521
  br i1 %263, label %dec_label_pc_ce2c, label %dec_label_pc_ce08, !insn.addr !1522

dec_label_pc_ce08:                                ; preds = %dec_label_pc_cdec
  %264 = ptrtoint i8* %262 to i32, !insn.addr !1523
  %265 = add i32 %264, 12, !insn.addr !1524
  %266 = inttoptr i32 %265 to i8*, !insn.addr !1525
  %267 = call i32 (i8*, i8*, ...) @sscanf(i8* %266, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1525
  br label %dec_label_pc_d174.backedge, !insn.addr !1526

dec_label_pc_ce2c:                                ; preds = %dec_label_pc_cdec
  %268 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8c10 to i32), i32 131072) to i8*)), !insn.addr !1527
  %269 = icmp eq i8* %268, null, !insn.addr !1528
  br i1 %269, label %dec_label_pc_ce6c, label %dec_label_pc_ce48, !insn.addr !1529

dec_label_pc_ce48:                                ; preds = %dec_label_pc_ce2c
  %270 = ptrtoint i8* %268 to i32, !insn.addr !1530
  %271 = add i32 %270, 10, !insn.addr !1531
  %272 = inttoptr i32 %271 to i8*, !insn.addr !1532
  %273 = call i32 (i8*, i8*, ...) @sscanf(i8* %272, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1532
  br label %dec_label_pc_d174.backedge, !insn.addr !1533

dec_label_pc_ce6c:                                ; preds = %dec_label_pc_ce2c
  %274 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8c1c to i32), i32 131072) to i8*)), !insn.addr !1534
  %275 = icmp eq i8* %274, null, !insn.addr !1535
  br i1 %275, label %dec_label_pc_ceac, label %dec_label_pc_ce88, !insn.addr !1536

dec_label_pc_ce88:                                ; preds = %dec_label_pc_ce6c
  %276 = ptrtoint i8* %274 to i32, !insn.addr !1537
  %277 = add i32 %276, 11, !insn.addr !1538
  %278 = inttoptr i32 %277 to i8*, !insn.addr !1539
  %279 = call i32 (i8*, i8*, ...) @sscanf(i8* %278, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1539
  br label %dec_label_pc_d174.backedge, !insn.addr !1540

dec_label_pc_ceac:                                ; preds = %dec_label_pc_ce6c
  %280 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8c28 to i32), i32 131072) to i8*)), !insn.addr !1541
  %281 = icmp eq i8* %280, null, !insn.addr !1542
  br i1 %281, label %dec_label_pc_ceec, label %dec_label_pc_cec8, !insn.addr !1543

dec_label_pc_cec8:                                ; preds = %dec_label_pc_ceac
  %282 = ptrtoint i8* %280 to i32, !insn.addr !1544
  %283 = add i32 %282, 26, !insn.addr !1545
  %284 = inttoptr i32 %283 to i8*, !insn.addr !1546
  %285 = call i32 (i8*, i8*, ...) @sscanf(i8* %284, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1546
  br label %dec_label_pc_d174.backedge, !insn.addr !1547

dec_label_pc_ceec:                                ; preds = %dec_label_pc_ceac
  %286 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8c44 to i32), i32 131072) to i8*)), !insn.addr !1548
  %287 = icmp eq i8* %286, null, !insn.addr !1549
  br i1 %287, label %dec_label_pc_cf2c, label %dec_label_pc_cf08, !insn.addr !1550

dec_label_pc_cf08:                                ; preds = %dec_label_pc_ceec
  %288 = ptrtoint i8* %286 to i32, !insn.addr !1551
  %289 = add i32 %288, 18, !insn.addr !1552
  %290 = inttoptr i32 %289 to i8*, !insn.addr !1553
  %291 = call i32 (i8*, i8*, ...) @sscanf(i8* %290, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1553
  br label %dec_label_pc_d174.backedge, !insn.addr !1554

dec_label_pc_cf2c:                                ; preds = %dec_label_pc_ceec
  %292 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8c58 to i32), i32 131072) to i8*)), !insn.addr !1555
  %293 = icmp eq i8* %292, null, !insn.addr !1556
  br i1 %293, label %dec_label_pc_cf6c, label %dec_label_pc_cf48, !insn.addr !1557

dec_label_pc_cf48:                                ; preds = %dec_label_pc_cf2c
  %294 = ptrtoint i8* %292 to i32, !insn.addr !1558
  %295 = add i32 %294, 10, !insn.addr !1559
  %296 = inttoptr i32 %295 to i8*, !insn.addr !1560
  %297 = call i32 (i8*, i8*, ...) @sscanf(i8* %296, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1560
  br label %dec_label_pc_d174.backedge, !insn.addr !1561

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf2c
  %298 = call i8* @strstr(i8* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_28c64, i32 0, i32 0)), !insn.addr !1562
  %299 = icmp eq i8* %298, null, !insn.addr !1563
  br i1 %299, label %dec_label_pc_cfac, label %dec_label_pc_cf88, !insn.addr !1564

dec_label_pc_cf88:                                ; preds = %dec_label_pc_cf6c
  %300 = ptrtoint i8* %298 to i32, !insn.addr !1565
  %301 = add i32 %300, 14, !insn.addr !1566
  %302 = inttoptr i32 %301 to i8*, !insn.addr !1567
  %303 = call i32 (i8*, i8*, ...) @sscanf(i8* %302, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1567
  br label %dec_label_pc_d174.backedge, !insn.addr !1568

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cf6c
  %304 = call i8* @strstr(i8* nonnull %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_28c74, i32 0, i32 0)), !insn.addr !1569
  %305 = icmp eq i8* %304, null, !insn.addr !1570
  br i1 %305, label %dec_label_pc_cfec, label %dec_label_pc_cfc8, !insn.addr !1571

dec_label_pc_cfc8:                                ; preds = %dec_label_pc_cfac
  %306 = ptrtoint i8* %304 to i32, !insn.addr !1572
  %307 = add i32 %306, 11, !insn.addr !1573
  %308 = inttoptr i32 %307 to i8*, !insn.addr !1574
  %309 = call i32 (i8*, i8*, ...) @sscanf(i8* %308, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1574
  br label %dec_label_pc_d174.backedge, !insn.addr !1575

dec_label_pc_cfec:                                ; preds = %dec_label_pc_cfac
  %310 = call i8* @strstr(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8c80 to i32), i32 131072) to i8*)), !insn.addr !1576
  %311 = icmp eq i8* %310, null, !insn.addr !1577
  br i1 %311, label %dec_label_pc_d02c, label %dec_label_pc_d008, !insn.addr !1578

dec_label_pc_d008:                                ; preds = %dec_label_pc_cfec
  %312 = ptrtoint i8* %310 to i32, !insn.addr !1579
  %313 = add i32 %312, 17, !insn.addr !1580
  %314 = inttoptr i32 %313 to i8*, !insn.addr !1581
  %315 = call i32 (i8*, i8*, ...) @sscanf(i8* %314, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1581
  br label %dec_label_pc_d174.backedge, !insn.addr !1582

dec_label_pc_d02c:                                ; preds = %dec_label_pc_cfec
  %316 = call i8* @strstr(i8* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_28c94, i32 0, i32 0)), !insn.addr !1583
  %317 = icmp eq i8* %316, null, !insn.addr !1584
  br i1 %317, label %dec_label_pc_d06c, label %dec_label_pc_d048, !insn.addr !1585

dec_label_pc_d048:                                ; preds = %dec_label_pc_d02c
  %318 = ptrtoint i8* %316 to i32, !insn.addr !1586
  %319 = add i32 %318, 17, !insn.addr !1587
  %320 = inttoptr i32 %319 to i8*, !insn.addr !1588
  %321 = call i32 (i8*, i8*, ...) @sscanf(i8* %320, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1588
  br label %dec_label_pc_d174.backedge, !insn.addr !1589

dec_label_pc_d06c:                                ; preds = %dec_label_pc_d02c
  %322 = call i8* @strstr(i8* nonnull %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_28ca8, i32 0, i32 0)), !insn.addr !1590
  %323 = icmp eq i8* %322, null, !insn.addr !1591
  br i1 %323, label %dec_label_pc_d0ac, label %dec_label_pc_d088, !insn.addr !1592

dec_label_pc_d088:                                ; preds = %dec_label_pc_d06c
  %324 = ptrtoint i8* %322 to i32, !insn.addr !1593
  %325 = add i32 %324, 21, !insn.addr !1594
  %326 = inttoptr i32 %325 to i8*, !insn.addr !1595
  %327 = call i32 (i8*, i8*, ...) @sscanf(i8* %326, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1595
  br label %dec_label_pc_d174.backedge, !insn.addr !1596

dec_label_pc_d0ac:                                ; preds = %dec_label_pc_d06c
  %328 = call i8* @strstr(i8* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_28cc0, i32 0, i32 0)), !insn.addr !1597
  %329 = icmp eq i8* %328, null, !insn.addr !1598
  br i1 %329, label %dec_label_pc_d0ec, label %dec_label_pc_d0c8, !insn.addr !1599

dec_label_pc_d0c8:                                ; preds = %dec_label_pc_d0ac
  %330 = ptrtoint i8* %328 to i32, !insn.addr !1600
  %331 = add i32 %330, 22, !insn.addr !1601
  %332 = inttoptr i32 %331 to i8*, !insn.addr !1602
  %333 = call i32 (i8*, i8*, ...) @sscanf(i8* %332, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1602
  br label %dec_label_pc_d174.backedge, !insn.addr !1603

dec_label_pc_d0ec:                                ; preds = %dec_label_pc_d0ac
  %334 = call i8* @strstr(i8* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_28cd8, i32 0, i32 0)), !insn.addr !1604
  %335 = icmp eq i8* %334, null, !insn.addr !1605
  br i1 %335, label %dec_label_pc_d12c, label %dec_label_pc_d108, !insn.addr !1606

dec_label_pc_d108:                                ; preds = %dec_label_pc_d0ec
  %336 = ptrtoint i8* %334 to i32, !insn.addr !1607
  %337 = add i32 %336, 12, !insn.addr !1608
  %338 = inttoptr i32 %337 to i8*, !insn.addr !1609
  %339 = call i32 (i8*, i8*, ...) @sscanf(i8* %338, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1609
  br label %dec_label_pc_d174.backedge, !insn.addr !1610

dec_label_pc_d12c:                                ; preds = %dec_label_pc_d0ec
  %340 = call i8* @strstr(i8* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_28ce8, i32 0, i32 0)), !insn.addr !1611
  %341 = icmp eq i8* %340, null, !insn.addr !1612
  br i1 %341, label %dec_label_pc_d174.backedge, label %dec_label_pc_d148, !insn.addr !1613

dec_label_pc_d148:                                ; preds = %dec_label_pc_d12c
  %342 = ptrtoint i8* %340 to i32, !insn.addr !1614
  %343 = add i32 %342, 18, !insn.addr !1615
  %344 = inttoptr i32 %343 to i8*, !insn.addr !1616
  %345 = call i32 (i8*, i8*, ...) @sscanf(i8* %344, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8ab0 to i32), i32 131072) to i8*)), !insn.addr !1616
  br label %dec_label_pc_d174.backedge, !insn.addr !1617

dec_label_pc_d16e:                                ; preds = %dec_label_pc_c30c
  %.in.reload = load i8*, i8** %.in.reg2mem
  %346 = ptrtoint i8* %.in.reload to i32
  %347 = call i32 @__asm_nop(i32 %346, i32 1023, i32 %7, i32 35), !insn.addr !1618
  br label %dec_label_pc_d174.backedge, !insn.addr !1619

dec_label_pc_d172:                                ; preds = %dec_label_pc_c498, %dec_label_pc_c48c, %dec_label_pc_c480, %dec_label_pc_c474, %dec_label_pc_c468, %dec_label_pc_c45c, %dec_label_pc_c450, %dec_label_pc_c444, %dec_label_pc_c4a4
  %r3.1.reload = load i32, i32* %r3.1.reg2mem
  %r2.0.reload = load i32, i32* %r2.0.reg2mem
  %r1.2.reload = load i32, i32* %r1.2.reg2mem
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %348 = call i32 @__asm_nop(i32 %r0.0.reload, i32 %r1.2.reload, i32 %r2.0.reload, i32 %r3.1.reload), !insn.addr !1620
  br label %dec_label_pc_d174.backedge, !insn.addr !1620

dec_label_pc_d18c:                                ; preds = %dec_label_pc_d174.backedge, %dec_label_pc_c2c4
  %349 = load i32, i32* @global_var_336848, align 4, !insn.addr !1621
  %350 = icmp eq i32 %349, 1, !insn.addr !1622
  br i1 %350, label %dec_label_pc_d196, label %dec_label_pc_d220, !insn.addr !1623

dec_label_pc_d196:                                ; preds = %dec_label_pc_d18c
  store i32 256, i32* @global_var_35ae8, align 4, !insn.addr !1624
  %351 = load i32, i32* @global_var_336850, align 4, !insn.addr !1625
  store i32 1725, i32* %r3.2.reg2mem
  switch i32 %351, label %dec_label_pc_d31c [
    i32 1722, label %dec_label_pc_d1b2
    i32 1725, label %dec_label_pc_d1f0
  ]

dec_label_pc_d1b2:                                ; preds = %dec_label_pc_d196
  %352 = load i32, i32* bitcast ([3 x i8*]* @global_var_35534 to i32*), align 4, !insn.addr !1626
  %353 = inttoptr i32 %352 to i8*, !insn.addr !1627
  %354 = call i8* @strcpy(i8* bitcast (i8** @global_var_2b632c to i8*), i8* %353), !insn.addr !1627
  %355 = load [7 x i8]*, [7 x i8]** @global_var_3553c, align 4, !insn.addr !1628
  %356 = getelementptr inbounds [7 x i8], [7 x i8]* %355, i32 0, i32 0, !insn.addr !1629
  %357 = call i8* @strcpy(i8* bitcast (i8** @global_var_2b636c to i8*), i8* %356), !insn.addr !1629
  store i32 120, i32* @global_var_33684c, align 4, !insn.addr !1630
  store i32 ptrtoint (i32* @global_var_3367dc to i32), i32* %r3.2.reg2mem, !insn.addr !1631
  br label %dec_label_pc_d31c, !insn.addr !1631

dec_label_pc_d1f0:                                ; preds = %dec_label_pc_d196
  %358 = load [39 x i8]*, [39 x i8]** @global_var_35538, align 4, !insn.addr !1632
  %359 = getelementptr inbounds [39 x i8], [39 x i8]* %358, i32 0, i32 0, !insn.addr !1633
  %360 = call i8* @strcpy(i8* bitcast (i8** @global_var_2b632c to i8*), i8* %359), !insn.addr !1633
  %361 = load [7 x i8]*, [7 x i8]** @global_var_3553c, align 4, !insn.addr !1634
  %362 = getelementptr inbounds [7 x i8], [7 x i8]* %361, i32 0, i32 0, !insn.addr !1635
  %363 = call i8* @strcpy(i8* bitcast (i8** @global_var_2b636c to i8*), i8* %362), !insn.addr !1635
  store i32 276, i32* @global_var_33684c, align 4, !insn.addr !1636
  store i32 ptrtoint (i32* @global_var_3367dc to i32), i32* %r3.2.reg2mem, !insn.addr !1637
  br label %dec_label_pc_d31c, !insn.addr !1637

dec_label_pc_d220:                                ; preds = %dec_label_pc_d18c
  %364 = load i8, i8* bitcast (i8** @global_var_35aa8 to i8*), align 4, !insn.addr !1638
  %365 = load i8, i8* bitcast (i8** @global_var_35aa9 to i8*), align 4, !insn.addr !1639
  %366 = or i8 %365, %364
  %367 = icmp eq i8 %366, 0
  store i32 0, i32* %r3.2.reg2mem, !insn.addr !1640
  br i1 %367, label %dec_label_pc_d31c, label %dec_label_pc_d23c, !insn.addr !1640

dec_label_pc_d23c:                                ; preds = %dec_label_pc_d220
  %368 = load i32, i32* @global_var_336850, align 4, !insn.addr !1641
  store i32 1725, i32* %r3.2.reg2mem
  switch i32 %368, label %dec_label_pc_d31c [
    i32 1722, label %dec_label_pc_d24a
    i32 1725, label %dec_label_pc_d2ba
  ]

dec_label_pc_d24a:                                ; preds = %dec_label_pc_d23c
  %369 = load i32, i32* bitcast ([3 x i8*]* @global_var_35534 to i32*), align 4, !insn.addr !1642
  %370 = inttoptr i32 %369 to i8*, !insn.addr !1643
  %371 = call i8* @strcpy(i8* bitcast (i8** @global_var_2b632c to i8*), i8* %370), !insn.addr !1643
  %372 = load [7 x i8]*, [7 x i8]** @global_var_3553c, align 4, !insn.addr !1644
  %373 = getelementptr inbounds [7 x i8], [7 x i8]* %372, i32 0, i32 0, !insn.addr !1645
  %374 = call i8* @strcpy(i8* bitcast (i8** @global_var_2b636c to i8*), i8* %373), !insn.addr !1645
  store i32 120, i32* @global_var_33684c, align 4, !insn.addr !1646
  store i32 1722, i32* @global_var_336850, align 4, !insn.addr !1647
  %375 = load i32, i32* @global_var_336848, align 4, !insn.addr !1648
  %376 = call i32 @calculate_asic_number(i32 %375), !insn.addr !1649
  %377 = sdiv i32 256, %376, !insn.addr !1650
  store i32 %377, i32* @global_var_35ae8, align 4, !insn.addr !1651
  store i32 ptrtoint (i32* @global_var_35ae8 to i32), i32* %r3.2.reg2mem, !insn.addr !1652
  br label %dec_label_pc_d31c, !insn.addr !1652

dec_label_pc_d2ba:                                ; preds = %dec_label_pc_d23c
  %378 = load [39 x i8]*, [39 x i8]** @global_var_35538, align 4, !insn.addr !1653
  %379 = getelementptr inbounds [39 x i8], [39 x i8]* %378, i32 0, i32 0, !insn.addr !1654
  %380 = call i8* @strcpy(i8* bitcast (i8** @global_var_2b632c to i8*), i8* %379), !insn.addr !1654
  %381 = load [7 x i8]*, [7 x i8]** @global_var_3553c, align 4, !insn.addr !1655
  %382 = getelementptr inbounds [7 x i8], [7 x i8]* %381, i32 0, i32 0, !insn.addr !1656
  %383 = call i8* @strcpy(i8* bitcast (i8** @global_var_2b636c to i8*), i8* %382), !insn.addr !1656
  store i32 276, i32* @global_var_33684c, align 4, !insn.addr !1657
  store i32 1725, i32* @global_var_336850, align 4, !insn.addr !1658
  %384 = load i32, i32* @global_var_336848, align 4, !insn.addr !1659
  %385 = call i32 @calculate_asic_number(i32 %384), !insn.addr !1660
  %386 = sdiv i32 256, %385, !insn.addr !1661
  store i32 %386, i32* @global_var_35ae8, align 4, !insn.addr !1662
  store i32 ptrtoint (i32* @global_var_35ae8 to i32), i32* %r3.2.reg2mem, !insn.addr !1662
  br label %dec_label_pc_d31c, !insn.addr !1662

dec_label_pc_d31c:                                ; preds = %dec_label_pc_d220, %dec_label_pc_d23c, %dec_label_pc_d196, %dec_label_pc_d2ba, %dec_label_pc_d24a, %dec_label_pc_d1f0, %dec_label_pc_d1b2
  %r3.2.reload = load i32, i32* %r3.2.reg2mem
  ret i32 %r3.2.reload, !insn.addr !1663

; uselistorder directives
  uselistorder i1 %43, { 1, 0 }
  uselistorder i1 %41, { 1, 0 }
  uselistorder i1 %39, { 1, 0 }
  uselistorder i8 %36, { 1, 0, 2 }
  uselistorder i8 %34, { 1, 0, 2 }
  uselistorder i1 %33, { 1, 0 }
  uselistorder i1 %31, { 1, 0 }
  uselistorder i1 %29, { 1, 0 }
  uselistorder i32 %storemerge20.reload, { 3, 0, 1, 2 }
  uselistorder i32 %14, { 7, 6, 5, 4, 3, 2, 1, 0, 8 }
  uselistorder i8* %12, { 1, 0 }
  uselistorder i8* %4, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 0 }
  uselistorder %_IO_FILE* %3, { 2, 1, 0 }
  uselistorder i32* %stack_var_-1052, { 2, 0, 1 }
  uselistorder i8* %.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge20.reg2mem, { 1, 0, 2 }
  uselistorder i8** %stack_var_-12.019.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r0.0.reg2mem, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* %r1.2.reg2mem, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* %r2.0.reg2mem, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* %r3.1.reg2mem, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* %r3.2.reg2mem, { 0, 4, 5, 2, 1, 6, 7, 3 }
  uselistorder i32 (i32)* @calculate_asic_number, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_35ac4 to i8*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 11, 10, 9 }
  uselistorder i32 ptrtoint (i8** @global_var_35ac5 to i32), { 1, 0 }
  uselistorder i32 (i8*, i8*, ...)* @sscanf, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 50, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_35aa8 to i8*), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_3367dc to i32), { 0, 1, 9, 8, 7, 6, 5, 4, 3, 2, 11, 10 }
  uselistorder label %dec_label_pc_d31c, { 3, 4, 1, 0, 5, 6, 2 }
  uselistorder label %dec_label_pc_d172, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_d174.backedge, { 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_c392, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c350, { 1, 0 }
  uselistorder label %dec_label_pc_c30c, { 1, 0 }
}

define i32 @CRC5(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d334:
  %0 = alloca i8
  %stack_var_-16.0.lcssa.reg2mem = alloca i8, !insn.addr !1664
  %stack_var_-20.0.lcssa.reg2mem = alloca i8, !insn.addr !1664
  %stack_var_-36.0.reg2mem = alloca i8*, !insn.addr !1664
  %stack_var_-11.0.reg2mem = alloca i8, !insn.addr !1664
  %stack_var_-10.0.reg2mem = alloca i8, !insn.addr !1664
  %stack_var_-16.06.reg2mem = alloca i8, !insn.addr !1664
  %stack_var_-10.17.reg2mem = alloca i8, !insn.addr !1664
  %stack_var_-11.18.reg2mem = alloca i8, !insn.addr !1664
  %stack_var_-36.19.reg2mem = alloca i8*, !insn.addr !1664
  %storemerge10.reg2mem = alloca i8, !insn.addr !1664
  %1 = load i8, i8* %0
  %2 = load i8, i8* %0
  %3 = load i8, i8* %0
  %4 = urem i32 %arg2, 256
  %5 = icmp eq i32 %4, 0, !insn.addr !1665
  store i8 0, i8* %storemerge10.reg2mem, !insn.addr !1666
  store i8* %arg1, i8** %stack_var_-36.19.reg2mem, !insn.addr !1666
  store i8 0, i8* %stack_var_-11.18.reg2mem, !insn.addr !1666
  store i8 -128, i8* %stack_var_-10.17.reg2mem, !insn.addr !1666
  store i8 1, i8* %stack_var_-16.06.reg2mem, !insn.addr !1666
  store i8 1, i8* %stack_var_-20.0.lcssa.reg2mem, !insn.addr !1666
  store i8 16, i8* %stack_var_-16.0.lcssa.reg2mem, !insn.addr !1666
  br i1 %5, label %dec_label_pc_d3fc, label %dec_label_pc_d37e, !insn.addr !1666

dec_label_pc_d37e:                                ; preds = %dec_label_pc_d334, %dec_label_pc_d3dc
  %stack_var_-16.06.reload = load i8, i8* %stack_var_-16.06.reg2mem
  %stack_var_-10.17.reload = load i8, i8* %stack_var_-10.17.reg2mem
  %stack_var_-11.18.reload = load i8, i8* %stack_var_-11.18.reg2mem
  %stack_var_-36.19.reload = load i8*, i8** %stack_var_-36.19.reg2mem
  %storemerge10.reload = load i8, i8* %storemerge10.reg2mem
  %6 = udiv i8 %stack_var_-10.17.reload, 2
  %7 = add i8 %stack_var_-11.18.reload, 1, !insn.addr !1667
  %8 = icmp eq i8 %stack_var_-11.18.reload, 7, !insn.addr !1668
  store i8 %6, i8* %stack_var_-10.0.reg2mem, !insn.addr !1669
  store i8 %7, i8* %stack_var_-11.0.reg2mem, !insn.addr !1669
  store i8* %stack_var_-36.19.reload, i8** %stack_var_-36.0.reg2mem, !insn.addr !1669
  br i1 %8, label %dec_label_pc_d3ce, label %dec_label_pc_d3dc, !insn.addr !1669

dec_label_pc_d3ce:                                ; preds = %dec_label_pc_d37e
  %9 = ptrtoint i8* %stack_var_-36.19.reload to i32, !insn.addr !1670
  %10 = add i32 %9, 1, !insn.addr !1671
  %11 = inttoptr i32 %10 to i8*, !insn.addr !1672
  store i8 -128, i8* %stack_var_-10.0.reg2mem, !insn.addr !1672
  store i8 0, i8* %stack_var_-11.0.reg2mem, !insn.addr !1672
  store i8* %11, i8** %stack_var_-36.0.reg2mem, !insn.addr !1672
  br label %dec_label_pc_d3dc, !insn.addr !1672

dec_label_pc_d3dc:                                ; preds = %dec_label_pc_d37e, %dec_label_pc_d3ce
  %stack_var_-36.0.reload = load i8*, i8** %stack_var_-36.0.reg2mem
  %stack_var_-11.0.reload = load i8, i8* %stack_var_-11.0.reg2mem
  %stack_var_-10.0.reload = load i8, i8* %stack_var_-10.0.reg2mem
  %12 = add i8 %storemerge10.reload, 1, !insn.addr !1673
  %13 = zext i8 %12 to i32, !insn.addr !1674
  %14 = icmp ugt i32 %4, %13, !insn.addr !1665
  store i8 %12, i8* %storemerge10.reg2mem, !insn.addr !1666
  store i8* %stack_var_-36.0.reload, i8** %stack_var_-36.19.reg2mem, !insn.addr !1666
  store i8 %stack_var_-11.0.reload, i8* %stack_var_-11.18.reg2mem, !insn.addr !1666
  store i8 %stack_var_-10.0.reload, i8* %stack_var_-10.17.reg2mem, !insn.addr !1666
  br i1 %14, label %dec_label_pc_d37e, label %dec_label_pc_d3f4.dec_label_pc_d3fc_crit_edge, !insn.addr !1666

dec_label_pc_d3f4.dec_label_pc_d3fc_crit_edge:    ; preds = %dec_label_pc_d3dc
  %15 = load i8, i8* %stack_var_-36.19.reload, align 1, !insn.addr !1675
  %16 = and i8 %15, %stack_var_-10.17.reload
  %17 = icmp ne i8 %16, 0, !insn.addr !1676
  %..le = zext i1 %17 to i8
  %phitmp = icmp ne i8 %stack_var_-16.06.reload, %..le
  %phitmp13 = zext i1 %phitmp to i8
  %phitmp14 = icmp eq i8 %1, 0
  %phitmp15 = select i1 %phitmp14, i8 0, i8 16
  store i8 %phitmp13, i8* %stack_var_-20.0.lcssa.reg2mem
  store i8 %phitmp15, i8* %stack_var_-16.0.lcssa.reg2mem
  br label %dec_label_pc_d3fc

dec_label_pc_d3fc:                                ; preds = %dec_label_pc_d334, %dec_label_pc_d3f4.dec_label_pc_d3fc_crit_edge
  %stack_var_-16.0.lcssa.reload = load i8, i8* %stack_var_-16.0.lcssa.reg2mem
  %stack_var_-20.0.lcssa.reload = load i8, i8* %stack_var_-20.0.lcssa.reg2mem
  %18 = icmp eq i8 %1, 0, !insn.addr !1677
  %19 = or i8 %stack_var_-16.0.lcssa.reload, 8
  %stack_var_-12.1 = select i1 %18, i8 %stack_var_-16.0.lcssa.reload, i8 %19
  %20 = icmp eq i8 %2, 0, !insn.addr !1678
  %21 = or i8 %stack_var_-12.1, 4
  %spec.select4 = select i1 %20, i8 %stack_var_-12.1, i8 %21
  %22 = icmp eq i8 %3, 0, !insn.addr !1679
  %23 = or i8 %spec.select4, 2
  %stack_var_-12.3 = select i1 %22, i8 %spec.select4, i8 %23
  %spec.select5 = or i8 %stack_var_-12.3, %stack_var_-20.0.lcssa.reload
  %24 = zext i8 %spec.select5 to i32, !insn.addr !1680
  ret i32 %24, !insn.addr !1681

; uselistorder directives
  uselistorder i8* %stack_var_-36.19.reload, { 2, 1, 0 }
  uselistorder i8* %storemerge10.reg2mem, { 2, 0, 1 }
  uselistorder i8** %stack_var_-36.19.reg2mem, { 2, 0, 1 }
  uselistorder i8* %stack_var_-11.18.reg2mem, { 2, 0, 1 }
  uselistorder i8* %stack_var_-10.17.reg2mem, { 2, 0, 1 }
  uselistorder i8* %stack_var_-10.0.reg2mem, { 0, 2, 1 }
  uselistorder i8* %stack_var_-11.0.reg2mem, { 0, 2, 1 }
  uselistorder i8** %stack_var_-36.0.reg2mem, { 0, 2, 1 }
  uselistorder i8* %stack_var_-20.0.lcssa.reg2mem, { 0, 2, 1 }
  uselistorder i8* %stack_var_-16.0.lcssa.reg2mem, { 0, 2, 1 }
  uselistorder i8* %0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d3fc, { 1, 0 }
  uselistorder label %dec_label_pc_d3dc, { 1, 0 }
  uselistorder label %dec_label_pc_d37e, { 1, 0 }
}

define i32 @crc_itu_t_byte(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d454:
  %0 = mul i32 %arg1, 256, !insn.addr !1682
  %1 = udiv i32 %arg1, 256, !insn.addr !1683
  %2 = and i32 %1, and (i32 ptrtoint (i32* @global_var_ffff to i32), i32 255), !insn.addr !1684
  %3 = urem i32 %arg2, 256, !insn.addr !1685
  %4 = xor i32 %3, %2, !insn.addr !1686
  %5 = mul i32 %4, 2, !insn.addr !1687
  %6 = add i32 %5, ptrtoint ([256 x i16]* @CRC_16_CCITT_poly_0x1021_at_28d10 to i32), !insn.addr !1687
  %7 = inttoptr i32 %6 to i16*, !insn.addr !1687
  %8 = load i16, i16* %7, align 2, !insn.addr !1687
  %9 = zext i16 %8 to i32, !insn.addr !1687
  %.masked1 = and i32 %0, 65280
  %10 = xor i32 %.masked1, %9, !insn.addr !1688
  ret i32 %10, !insn.addr !1689

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @CRC16(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d498:
  %storemerge.lcssa.reg2mem = alloca i32, !insn.addr !1690
  %stack_var_-24.02.reg2mem = alloca i32, !insn.addr !1690
  %stack_var_-20.03.reg2mem = alloca i32, !insn.addr !1690
  %storemerge4.reg2mem = alloca i32, !insn.addr !1690
  %0 = icmp eq i32 %arg2, 0, !insn.addr !1691
  store i32 65535, i32* %storemerge.lcssa.reg2mem, !insn.addr !1692
  br i1 %0, label %dec_label_pc_d4d8, label %dec_label_pc_d4aa.lr.ph, !insn.addr !1692

dec_label_pc_d4aa.lr.ph:                          ; preds = %dec_label_pc_d498
  %1 = ptrtoint i32* %arg1 to i32
  store i32 65535, i32* %storemerge4.reg2mem
  store i32 %1, i32* %stack_var_-20.03.reg2mem
  store i32 %arg2, i32* %stack_var_-24.02.reg2mem
  br label %dec_label_pc_d4aa

dec_label_pc_d4aa:                                ; preds = %dec_label_pc_d4aa.lr.ph, %dec_label_pc_d4aa
  %stack_var_-24.02.reload = load i32, i32* %stack_var_-24.02.reg2mem
  %stack_var_-20.03.reload = load i32, i32* %stack_var_-20.03.reg2mem
  %storemerge4.reload = load i32, i32* %storemerge4.reg2mem
  %2 = add i32 %stack_var_-24.02.reload, -1, !insn.addr !1693
  %3 = inttoptr i32 %stack_var_-20.03.reload to i8*, !insn.addr !1694
  %4 = load i8, i8* %3, align 1, !insn.addr !1694
  %5 = zext i8 %4 to i32, !insn.addr !1694
  %6 = add i32 %stack_var_-20.03.reload, 1, !insn.addr !1695
  %7 = call i32 @crc_itu_t_byte(i32 %storemerge4.reload, i32 %5), !insn.addr !1696
  %phitmp = urem i32 %7, 65536
  %8 = icmp eq i32 %2, 0, !insn.addr !1691
  store i32 %phitmp, i32* %storemerge4.reg2mem, !insn.addr !1692
  store i32 %6, i32* %stack_var_-20.03.reg2mem, !insn.addr !1692
  store i32 %2, i32* %stack_var_-24.02.reg2mem, !insn.addr !1692
  store i32 %phitmp, i32* %storemerge.lcssa.reg2mem, !insn.addr !1692
  br i1 %8, label %dec_label_pc_d4d8, label %dec_label_pc_d4aa, !insn.addr !1692

dec_label_pc_d4d8:                                ; preds = %dec_label_pc_d4aa, %dec_label_pc_d498
  %storemerge.lcssa.reload = load i32, i32* %storemerge.lcssa.reg2mem
  %9 = call i32 @__asm_ite(), !insn.addr !1692
  ret i32 %storemerge.lcssa.reload, !insn.addr !1697

; uselistorder directives
  uselistorder i32 %stack_var_-20.03.reload, { 1, 0 }
  uselistorder i32* %storemerge4.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-20.03.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-24.02.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d4aa, { 1, 0 }
}

define i32 @InitElapsedTime() local_unnamed_addr {
dec_label_pc_d4e8:
  %0 = call i32 @gettimeofday(%timeval* bitcast (%timeval** @global_var_235c24 to %timeval*), %timezone* null), !insn.addr !1698
  ret i32 %0, !insn.addr !1699
}

define i32 @PrintElapsedTime(i32 %arg1) local_unnamed_addr {
dec_label_pc_d4fc:
  %.reg2mem = alloca i32, !insn.addr !1700
  %0 = call i32 @gettimeofday(%timeval* bitcast (%timeval** @global_var_235c2c to %timeval*), %timezone* null), !insn.addr !1701
  %1 = load %timeval*, %timeval** @global_var_235c2c, align 4, !insn.addr !1702
  %2 = ptrtoint %timeval* %1 to i32, !insn.addr !1702
  %3 = load %timeval*, %timeval** @global_var_235c24, align 4, !insn.addr !1703
  %4 = ptrtoint %timeval* %3 to i32, !insn.addr !1703
  %5 = sub i32 %2, %4, !insn.addr !1704
  store i32 %5, i32* @global_var_235c34, align 4, !insn.addr !1705
  %6 = load i32, i32* @global_var_235c30, align 4, !insn.addr !1706
  %7 = load i32, i32* @global_var_235c28, align 4, !insn.addr !1707
  %8 = sub i32 %6, %7, !insn.addr !1708
  store i32 %8, i32* @global_var_235c38, align 4, !insn.addr !1709
  %9 = icmp slt i32 %8, 0, !insn.addr !1710
  store i32 %5, i32* %.reg2mem, !insn.addr !1711
  br i1 %9, label %dec_label_pc_d560, label %dec_label_pc_d592, !insn.addr !1711

dec_label_pc_d560:                                ; preds = %dec_label_pc_d4fc
  %10 = add i32 %5, -1, !insn.addr !1712
  store i32 %10, i32* @global_var_235c34, align 4, !insn.addr !1713
  store i32 ptrtoint (i32* @global_var_f4240 to i32), i32* @global_var_235c38, align 4, !insn.addr !1714
  store i32 %10, i32* %.reg2mem, !insn.addr !1714
  br label %dec_label_pc_d592, !insn.addr !1714

dec_label_pc_d592:                                ; preds = %dec_label_pc_d4fc, %dec_label_pc_d560
  %.reload = load i32, i32* %.reg2mem, !insn.addr !1715
  %11 = inttoptr i32 %arg1 to i8*, !insn.addr !1716
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_28f6c, i32 0, i32 0), i8* %11, i32 %.reload), !insn.addr !1716
  ret i32 %12, !insn.addr !1717

; uselistorder directives
  uselistorder i32 %5, { 1, 0, 2 }
  uselistorder %timeval** @global_var_235c24, { 1, 0 }
  uselistorder i32 (%timeval*, %timezone*)* @gettimeofday, { 1, 0 }
  uselistorder %timeval** @global_var_235c2c, { 1, 0 }
  uselistorder label %dec_label_pc_d592, { 1, 0 }
}

define i32 @cgpu_init() local_unnamed_addr {
dec_label_pc_d5b4:
  %r3.0.reg2mem = alloca i32, !insn.addr !1718
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !1718
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_28f84, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2a038, i32 0, i32 0)), !insn.addr !1719
  %1 = call i32* @memset(i32* nonnull @global_var_23630c, i32 0, i32 ptrtoint (i32* @global_var_1004c4 to i32)), !insn.addr !1720
  %2 = call i32 @check_chain(), !insn.addr !1721
  %3 = icmp eq i32 %2, 0, !insn.addr !1722
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !1723
  br i1 %3, label %dec_label_pc_d610, label %dec_label_pc_d5f8, !insn.addr !1723

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5b4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_28f8c, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2a038, i32 0, i32 0)), !insn.addr !1724
  store i32 1, i32* %stack_var_-12.0.reg2mem, !insn.addr !1725
  br label %dec_label_pc_d610, !insn.addr !1725

dec_label_pc_d610:                                ; preds = %dec_label_pc_d5f8, %dec_label_pc_d5b4
  %5 = call i32 @open_key(), !insn.addr !1726
  %6 = icmp sgt i32 %5, 0, !insn.addr !1727
  br i1 %6, label %dec_label_pc_d63a, label %dec_label_pc_d61c, !insn.addr !1727

dec_label_pc_d61c:                                ; preds = %dec_label_pc_d610
  %7 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8fa8 to i32), i32 131072) to i8*)), !insn.addr !1728
  %8 = call i32 @close_key(), !insn.addr !1729
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !1730
  br label %dec_label_pc_d6ae, !insn.addr !1730

dec_label_pc_d63a:                                ; preds = %dec_label_pc_d610
  %9 = call i32 @open_i2c(), !insn.addr !1731
  %10 = icmp sgt i32 %9, 0, !insn.addr !1732
  br i1 %10, label %dec_label_pc_d668, label %dec_label_pc_d646, !insn.addr !1732

dec_label_pc_d646:                                ; preds = %dec_label_pc_d63a
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_28fc8, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2a038, i32 0, i32 0)), !insn.addr !1733
  %12 = call i32 @close_i2c(), !insn.addr !1734
  %13 = call i32 @close_key(), !insn.addr !1735
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !1736
  br label %dec_label_pc_d6ae, !insn.addr !1736

dec_label_pc_d668:                                ; preds = %dec_label_pc_d63a
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  %14 = call i32* @memset(i32* inttoptr (i32 or (i32 ptrtoint ([6 x i8]* @global_var_8940 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*), i32 32, i32 64), !insn.addr !1737
  %15 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint ([6 x i8]* @global_var_8940 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)), i32 64), !insn.addr !1738
  %16 = icmp eq i32 %stack_var_-12.0.reload, 1, !insn.addr !1739
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !1740
  br i1 %16, label %dec_label_pc_d68e, label %dec_label_pc_d6ae, !insn.addr !1740

dec_label_pc_d68e:                                ; preds = %dec_label_pc_d668
  %17 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_8fe0 to i32), i32 131072) to i8*)), !insn.addr !1741
  %18 = call i32 @write_lcd(i32 0, i32 ptrtoint ([13 x i8]* @global_var_28ff4 to i32), i32 16), !insn.addr !1742
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !1742
  br label %dec_label_pc_d6ae, !insn.addr !1742

dec_label_pc_d6ae:                                ; preds = %dec_label_pc_d68e, %dec_label_pc_d668, %dec_label_pc_d646, %dec_label_pc_d61c
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !1743

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 1, 2, 4, 3 }
  uselistorder i32 ()* @close_key, { 1, 0 }
}

define i32 @malloc_register_buf() local_unnamed_addr {
dec_label_pc_d6b8:
  %storemerge.reg2mem = alloca i32, !insn.addr !1744
  %0 = call i32* @malloc(i32 5136), !insn.addr !1745
  %1 = ptrtoint i32* %0 to i32, !insn.addr !1745
  store i32 %1, i32* @global_var_3367d8, align 4, !insn.addr !1746
  %2 = icmp eq i32* %0, null, !insn.addr !1747
  br i1 %2, label %dec_label_pc_d6e0, label %dec_label_pc_d6f6, !insn.addr !1748

dec_label_pc_d6e0:                                ; preds = %dec_label_pc_d6b8
  %3 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_9004 to i32), i32 131072) to i8*)), !insn.addr !1749
  store i32 %3, i32* %storemerge.reg2mem, !insn.addr !1750
  br label %dec_label_pc_d70c, !insn.addr !1750

dec_label_pc_d6f6:                                ; preds = %dec_label_pc_d6b8
  %4 = call i32* @memset(i32* nonnull %0, i32 0, i32 5136), !insn.addr !1751
  %5 = ptrtoint i32* %4 to i32, !insn.addr !1751
  store i32 %5, i32* %storemerge.reg2mem, !insn.addr !1751
  br label %dec_label_pc_d70c, !insn.addr !1751

dec_label_pc_d70c:                                ; preds = %dec_label_pc_d6f6, %dec_label_pc_d6e0
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !1752

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
}

define i32 @configMiner() local_unnamed_addr {
dec_label_pc_d710:
  %storemerge.reg2mem = alloca i32, !insn.addr !1753
  %0 = call i32 @read_config(), !insn.addr !1754
  %1 = call i32 @get_works(), !insn.addr !1755
  %2 = icmp slt i32 %1, 0, !insn.addr !1756
  store i32 -14, i32* %storemerge.reg2mem, !insn.addr !1757
  br i1 %2, label %dec_label_pc_d732, label %dec_label_pc_d72c, !insn.addr !1757

dec_label_pc_d72c:                                ; preds = %dec_label_pc_d710
  %3 = call i32 @malloc_register_buf(), !insn.addr !1758
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !1759
  br label %dec_label_pc_d732, !insn.addr !1759

dec_label_pc_d732:                                ; preds = %dec_label_pc_d710, %dec_label_pc_d72c
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !1760

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d732, { 1, 0 }
}

define i32 @display_arguments() local_unnamed_addr {
dec_label_pc_d73c:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %0 = call i32* @memset(i32* nonnull %stack_var_-72, i32 0, i32 64), !insn.addr !1761
  %1 = call i32* @memset(i32* nonnull %stack_var_-72, i32 32, i32 64), !insn.addr !1762
  %2 = load i32, i32* @global_var_35aec, align 4, !insn.addr !1763
  %3 = call i32* @memcpy(i32* nonnull %stack_var_-72, i32* nonnull @global_var_3367dc, i32 %2), !insn.addr !1764
  %4 = bitcast i32* %stack_var_-56 to i8*, !insn.addr !1765
  %5 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %4, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_9028 to i32), i32 131072) to i8*)), !insn.addr !1765
  %6 = load i32, i32* @global_var_336824, align 4, !insn.addr !1766
  %7 = load i32, i32* @global_var_33684c, align 4, !insn.addr !1767
  %8 = bitcast i32* %stack_var_-40 to i8*, !insn.addr !1768
  %9 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_29038, i32 0, i32 0), i32 %6, i32 %7), !insn.addr !1768
  %10 = load i32, i32* @global_var_33687c, align 4, !insn.addr !1769
  %11 = bitcast i32* %stack_var_-24 to i8*, !insn.addr !1770
  %12 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2904c, i32 0, i32 0), i32 %10), !insn.addr !1770
  %13 = ptrtoint i32* %stack_var_-72 to i32, !insn.addr !1771
  %14 = call i32 @write_lcd(i32 0, i32 %13, i32 64), !insn.addr !1772
  ret i32 %14, !insn.addr !1773

; uselistorder directives
  uselistorder i32* %stack_var_-72, { 3, 0, 1, 2 }
  uselistorder i32* @global_var_35aec, { 1, 0 }
}

define i32 @clear_register_value_buf() local_unnamed_addr {
dec_label_pc_d7f8:
  %0 = call i32 @pthread_mutex_lock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !1774
  %1 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !1775
  %2 = inttoptr i32 %1 to i32*, !insn.addr !1776
  store i32 0, i32* %2, align 4, !insn.addr !1776
  %3 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !1777
  %4 = add i32 %3, 4, !insn.addr !1778
  %5 = inttoptr i32 %4 to i32*, !insn.addr !1778
  store i32 0, i32* %5, align 4, !insn.addr !1778
  %6 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !1779
  %7 = add i32 %6, 8, !insn.addr !1780
  %8 = inttoptr i32 %7 to i32*, !insn.addr !1780
  store i32 0, i32* %8, align 4, !insn.addr !1780
  %9 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !1781
  %10 = add i32 %9, 12, !insn.addr !1782
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1782
  store i32 0, i32* %11, align 4, !insn.addr !1782
  %12 = call i32 @pthread_mutex_unlock(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*)), !insn.addr !1783
  %13 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !1784
  %14 = add i32 %13, 16, !insn.addr !1785
  %15 = inttoptr i32 %14 to i32*, !insn.addr !1786
  %16 = call i32* @memset(i32* %15, i32 0, i32 5120), !insn.addr !1786
  %17 = ptrtoint i32* %16 to i32, !insn.addr !1786
  ret i32 %17, !insn.addr !1787
}

define i32 @calculate_core_number(i32 %arg1) local_unnamed_addr {
dec_label_pc_d868:
  %storemerge.reg2mem = alloca i32, !insn.addr !1788
  store i32 1, i32* %storemerge.reg2mem
  switch i32 %arg1, label %dec_label_pc_d88c [
    i32 1, label %dec_label_pc_d944
    i32 2, label %dec_label_pc_d886
  ]

dec_label_pc_d886:                                ; preds = %dec_label_pc_d868
  store i32 2, i32* %storemerge.reg2mem, !insn.addr !1789
  br label %dec_label_pc_d944, !insn.addr !1789

dec_label_pc_d88c:                                ; preds = %dec_label_pc_d868
  %0 = icmp ult i32 %arg1, 2, !insn.addr !1790
  br i1 %0, label %dec_label_pc_d926, label %dec_label_pc_d892, !insn.addr !1791

dec_label_pc_d892:                                ; preds = %dec_label_pc_d88c
  %1 = icmp ult i32 %arg1, 4
  %2 = icmp ne i1 %1, true
  %3 = icmp eq i32 %arg1, 4
  %4 = icmp ne i1 %3, true, !insn.addr !1792
  %5 = icmp eq i1 %2, %4, !insn.addr !1792
  store i32 4, i32* %storemerge.reg2mem, !insn.addr !1792
  br i1 %5, label %dec_label_pc_d89e, label %dec_label_pc_d944, !insn.addr !1792

dec_label_pc_d89e:                                ; preds = %dec_label_pc_d892
  %6 = icmp ne i1 %2, true, !insn.addr !1793
  %7 = or i1 %3, %6, !insn.addr !1793
  br i1 %7, label %dec_label_pc_d8b0, label %dec_label_pc_d8a4, !insn.addr !1793

dec_label_pc_d8a4:                                ; preds = %dec_label_pc_d89e
  %8 = icmp ult i32 %arg1, 8, !insn.addr !1794
  %9 = icmp ne i1 %8, true, !insn.addr !1794
  %10 = icmp eq i32 %arg1, 8, !insn.addr !1794
  %11 = icmp ne i1 %10, true, !insn.addr !1795
  %12 = icmp eq i1 %9, %11, !insn.addr !1795
  store i32 8, i32* %storemerge.reg2mem, !insn.addr !1795
  br i1 %12, label %dec_label_pc_d8b0, label %dec_label_pc_d944, !insn.addr !1795

dec_label_pc_d8b0:                                ; preds = %dec_label_pc_d8a4, %dec_label_pc_d89e
  %13 = icmp ult i32 %arg1, 8, !insn.addr !1796
  %14 = icmp ne i1 %13, true, !insn.addr !1796
  %15 = icmp eq i32 %arg1, 8, !insn.addr !1796
  %16 = icmp ne i1 %14, true, !insn.addr !1797
  %17 = or i1 %15, %16, !insn.addr !1797
  br i1 %17, label %dec_label_pc_d8c2, label %dec_label_pc_d8b6, !insn.addr !1797

dec_label_pc_d8b6:                                ; preds = %dec_label_pc_d8b0
  %18 = icmp ult i32 %arg1, 16, !insn.addr !1798
  %19 = icmp ne i1 %18, true, !insn.addr !1798
  %20 = icmp eq i32 %arg1, 16, !insn.addr !1798
  %21 = icmp ne i1 %20, true, !insn.addr !1799
  %22 = icmp eq i1 %19, %21, !insn.addr !1799
  store i32 16, i32* %storemerge.reg2mem, !insn.addr !1799
  br i1 %22, label %dec_label_pc_d8c2, label %dec_label_pc_d944, !insn.addr !1799

dec_label_pc_d8c2:                                ; preds = %dec_label_pc_d8b6, %dec_label_pc_d8b0
  %23 = icmp ult i32 %arg1, 16, !insn.addr !1800
  %24 = icmp ne i1 %23, true, !insn.addr !1800
  %25 = icmp eq i32 %arg1, 16, !insn.addr !1800
  %26 = icmp ne i1 %24, true, !insn.addr !1801
  %27 = or i1 %25, %26, !insn.addr !1801
  br i1 %27, label %dec_label_pc_d8d4, label %dec_label_pc_d8c8, !insn.addr !1801

dec_label_pc_d8c8:                                ; preds = %dec_label_pc_d8c2
  %28 = icmp ult i32 %arg1, 32, !insn.addr !1802
  %29 = icmp ne i1 %28, true, !insn.addr !1802
  %30 = icmp eq i32 %arg1, 32, !insn.addr !1802
  %31 = icmp ne i1 %30, true, !insn.addr !1803
  %32 = icmp eq i1 %29, %31, !insn.addr !1803
  store i32 32, i32* %storemerge.reg2mem, !insn.addr !1803
  br i1 %32, label %dec_label_pc_d8d4, label %dec_label_pc_d944, !insn.addr !1803

dec_label_pc_d8d4:                                ; preds = %dec_label_pc_d8c8, %dec_label_pc_d8c2
  %33 = icmp ult i32 %arg1, 32, !insn.addr !1804
  %34 = icmp ne i1 %33, true, !insn.addr !1804
  %35 = icmp eq i32 %arg1, 32, !insn.addr !1804
  %36 = icmp ne i1 %34, true, !insn.addr !1805
  %37 = or i1 %35, %36, !insn.addr !1805
  br i1 %37, label %dec_label_pc_d8e6, label %dec_label_pc_d8da, !insn.addr !1805

dec_label_pc_d8da:                                ; preds = %dec_label_pc_d8d4
  %38 = icmp ult i32 %arg1, 64, !insn.addr !1806
  %39 = icmp ne i1 %38, true, !insn.addr !1806
  %40 = icmp eq i32 %arg1, 64, !insn.addr !1806
  %41 = icmp ne i1 %40, true, !insn.addr !1807
  %42 = icmp eq i1 %39, %41, !insn.addr !1807
  store i32 64, i32* %storemerge.reg2mem, !insn.addr !1807
  br i1 %42, label %dec_label_pc_d8e6, label %dec_label_pc_d944, !insn.addr !1807

dec_label_pc_d8e6:                                ; preds = %dec_label_pc_d8da, %dec_label_pc_d8d4
  %43 = icmp ult i32 %arg1, 64, !insn.addr !1808
  %44 = icmp ne i1 %43, true, !insn.addr !1808
  %45 = icmp eq i32 %arg1, 64, !insn.addr !1808
  %46 = icmp ne i1 %44, true, !insn.addr !1809
  %47 = or i1 %45, %46, !insn.addr !1809
  br i1 %47, label %dec_label_pc_d8f8, label %dec_label_pc_d8ec, !insn.addr !1809

dec_label_pc_d8ec:                                ; preds = %dec_label_pc_d8e6
  %48 = icmp ult i32 %arg1, 128, !insn.addr !1810
  %49 = icmp ne i1 %48, true, !insn.addr !1810
  %50 = icmp eq i32 %arg1, 128, !insn.addr !1810
  %51 = icmp ne i1 %50, true, !insn.addr !1811
  %52 = icmp eq i1 %49, %51, !insn.addr !1811
  store i32 128, i32* %storemerge.reg2mem, !insn.addr !1811
  br i1 %52, label %dec_label_pc_d8f8, label %dec_label_pc_d944, !insn.addr !1811

dec_label_pc_d8f8:                                ; preds = %dec_label_pc_d8ec, %dec_label_pc_d8e6
  %53 = icmp ult i32 %arg1, 128, !insn.addr !1812
  %54 = icmp ne i1 %53, true, !insn.addr !1812
  %55 = icmp eq i32 %arg1, 128, !insn.addr !1812
  %56 = icmp ne i1 %54, true, !insn.addr !1813
  %57 = or i1 %55, %56, !insn.addr !1813
  br i1 %57, label %dec_label_pc_d90e, label %dec_label_pc_d8fe, !insn.addr !1813

dec_label_pc_d8fe:                                ; preds = %dec_label_pc_d8f8
  %58 = icmp ult i32 %arg1, 256, !insn.addr !1814
  %59 = icmp ne i1 %58, true, !insn.addr !1814
  %60 = icmp eq i32 %arg1, 256, !insn.addr !1814
  %61 = icmp ne i1 %60, true, !insn.addr !1815
  %62 = icmp eq i1 %59, %61, !insn.addr !1815
  store i32 256, i32* %storemerge.reg2mem, !insn.addr !1815
  br i1 %62, label %dec_label_pc_d90e, label %dec_label_pc_d944, !insn.addr !1815

dec_label_pc_d90e:                                ; preds = %dec_label_pc_d8fe, %dec_label_pc_d8f8
  %63 = icmp ult i32 %arg1, 256, !insn.addr !1816
  %64 = icmp ne i1 %63, true, !insn.addr !1816
  %65 = icmp eq i32 %arg1, 256, !insn.addr !1816
  %66 = icmp ne i1 %64, true, !insn.addr !1817
  %67 = or i1 %65, %66, !insn.addr !1817
  br i1 %67, label %dec_label_pc_d926, label %dec_label_pc_d916, !insn.addr !1817

dec_label_pc_d916:                                ; preds = %dec_label_pc_d90e
  %68 = icmp ult i32 %arg1, 512, !insn.addr !1818
  %69 = icmp ne i1 %68, true, !insn.addr !1818
  %70 = icmp eq i32 %arg1, 512, !insn.addr !1818
  %71 = icmp ne i1 %70, true, !insn.addr !1819
  %72 = icmp eq i1 %69, %71, !insn.addr !1819
  store i32 512, i32* %storemerge.reg2mem, !insn.addr !1819
  br i1 %72, label %dec_label_pc_d926, label %dec_label_pc_d944, !insn.addr !1819

dec_label_pc_d926:                                ; preds = %dec_label_pc_d88c, %dec_label_pc_d916, %dec_label_pc_d90e
  %73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_29058, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2a00c, i32 0, i32 0), i32 %arg1), !insn.addr !1820
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !1821
  br label %dec_label_pc_d944, !insn.addr !1821

dec_label_pc_d944:                                ; preds = %dec_label_pc_d886, %dec_label_pc_d868, %dec_label_pc_d892, %dec_label_pc_d8a4, %dec_label_pc_d8b6, %dec_label_pc_d8c8, %dec_label_pc_d8da, %dec_label_pc_d8ec, %dec_label_pc_d8fe, %dec_label_pc_d916, %dec_label_pc_d926
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !1822

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 11, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 %arg1, { 1, 5, 4, 2, 3, 9, 8, 6, 7, 13, 12, 10, 11, 17, 16, 14, 15, 21, 20, 18, 19, 25, 24, 22, 23, 27, 26, 28, 29, 30, 0 }
  uselistorder label %dec_label_pc_d944, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d926, { 1, 2, 0 }
}

define i32 @calculate_how_many_nonce_per_asic_get(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d950:
  %stack_var_-12.0.lcssa.reg2mem = alloca i32, !insn.addr !1823
  %stack_var_-12.03.reg2mem = alloca i32, !insn.addr !1823
  %storemerge4.reg2mem = alloca i32, !insn.addr !1823
  %0 = icmp eq i32 %arg3, 0, !insn.addr !1824
  store i32 0, i32* %stack_var_-12.0.lcssa.reg2mem, !insn.addr !1825
  br i1 %0, label %dec_label_pc_d99c, label %dec_label_pc_d96e.lr.ph, !insn.addr !1825

dec_label_pc_d96e.lr.ph:                          ; preds = %dec_label_pc_d950
  %1 = urem i32 %arg2, 256
  %2 = mul i32 %arg1, 256
  %3 = and i32 %2, 65280
  %4 = or i32 %3, %1, !insn.addr !1826
  %5 = mul i32 %4, 512, !insn.addr !1827
  store i32 0, i32* %storemerge4.reg2mem
  store i32 0, i32* %stack_var_-12.03.reg2mem
  br label %dec_label_pc_d96e

dec_label_pc_d96e:                                ; preds = %dec_label_pc_d96e.lr.ph, %dec_label_pc_d96e
  %stack_var_-12.03.reload = load i32, i32* %stack_var_-12.03.reg2mem
  %storemerge4.reload = load i32, i32* %storemerge4.reg2mem
  %6 = add i32 %storemerge4.reload, %5, !insn.addr !1828
  %7 = mul i32 %6, 4, !insn.addr !1829
  %8 = add i32 %7, ptrtoint (i32* @global_var_35b34 to i32), !insn.addr !1829
  %9 = inttoptr i32 %8 to i32*, !insn.addr !1829
  %10 = load i32, i32* %9, align 4, !insn.addr !1829
  %11 = add i32 %10, %stack_var_-12.03.reload, !insn.addr !1830
  %12 = add nuw i32 %storemerge4.reload, 1, !insn.addr !1831
  %13 = icmp ult i32 %12, %arg3, !insn.addr !1824
  store i32 %12, i32* %storemerge4.reg2mem, !insn.addr !1825
  store i32 %11, i32* %stack_var_-12.03.reg2mem, !insn.addr !1825
  store i32 %11, i32* %stack_var_-12.0.lcssa.reg2mem, !insn.addr !1825
  br i1 %13, label %dec_label_pc_d96e, label %dec_label_pc_d99c, !insn.addr !1825

dec_label_pc_d99c:                                ; preds = %dec_label_pc_d96e, %dec_label_pc_d950
  %stack_var_-12.0.lcssa.reload = load i32, i32* %stack_var_-12.0.lcssa.reg2mem
  ret i32 %stack_var_-12.0.lcssa.reload, !insn.addr !1832

; uselistorder directives
  uselistorder i32* %storemerge4.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12.03.reg2mem, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_d96e, { 1, 0 }
}

define i32 @display_level_result_on_lcd() local_unnamed_addr {
dec_label_pc_d9ac:
  %storemerge2.reg2mem = alloca i32, !insn.addr !1833
  %stack_var_-20 = alloca i8*, align 4
  store i8* inttoptr (i32 538976288 to i8*), i8** %stack_var_-20, align 4, !insn.addr !1834
  %0 = bitcast i8** %stack_var_-20 to i8*, !insn.addr !1835
  %1 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_29088, i32 0, i32 0), i32 ptrtoint (i8* @global_var_35ac6 to i32)), !insn.addr !1835
  %2 = ptrtoint i8** %stack_var_-20 to i32, !insn.addr !1836
  store i32 0, i32* %storemerge2.reg2mem
  br label %dec_label_pc_d9e8

dec_label_pc_d9e8:                                ; preds = %dec_label_pc_d9ac, %dec_label_pc_d9e8
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %3 = add i32 %storemerge2.reload, %2, !insn.addr !1837
  %4 = inttoptr i32 %3 to i8*, !insn.addr !1838
  %5 = load i8, i8* %4, align 1, !insn.addr !1838
  %6 = add i32 %storemerge2.reload, add (i32 or (i32 ptrtoint ([6 x i8]* @global_var_8980 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)), i32 10), !insn.addr !1839
  %7 = inttoptr i32 %6 to i8*, !insn.addr !1839
  store i8 %5, i8* %7, align 1, !insn.addr !1839
  %8 = add i32 %storemerge2.reload, 1, !insn.addr !1840
  %9 = icmp ult i32 %8, 2, !insn.addr !1841
  %10 = icmp ne i1 %9, true, !insn.addr !1841
  %11 = icmp eq i32 %8, 2, !insn.addr !1841
  %12 = icmp ne i1 %10, true, !insn.addr !1842
  %13 = or i1 %11, %12, !insn.addr !1842
  store i32 %8, i32* %storemerge2.reg2mem, !insn.addr !1842
  br i1 %13, label %dec_label_pc_d9e8, label %dec_label_pc_da0c, !insn.addr !1842

dec_label_pc_da0c:                                ; preds = %dec_label_pc_d9e8
  %14 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint ([6 x i8]* @global_var_8980 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)), i32 16), !insn.addr !1843
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2908c, i32 0, i32 0), i32 ptrtoint (i8* @global_var_35ac6 to i32)), !insn.addr !1844
  ret i32 %15, !insn.addr !1845

; uselistorder directives
  uselistorder i32 %8, { 0, 2, 1 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %storemerge2.reg2mem, { 1, 0, 2 }
  uselistorder i32 or (i32 ptrtoint ([6 x i8]* @global_var_8980 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)), { 1, 0 }
  uselistorder label %dec_label_pc_d9e8, { 1, 0 }
}

define i32 @reset_global_arg() local_unnamed_addr {
dec_label_pc_da40:
  %.reg2mem18 = alloca i32, !insn.addr !1846
  %.reg2mem16 = alloca i32, !insn.addr !1846
  %storemerge34.reg2mem = alloca i32, !insn.addr !1846
  %.reg2mem14 = alloca i32, !insn.addr !1846
  %storemerge25.reg2mem = alloca i32, !insn.addr !1846
  %storemerge17.reg2mem = alloca i32, !insn.addr !1846
  %.reg2mem12 = alloca i32, !insn.addr !1846
  %.reg2mem = alloca i32, !insn.addr !1846
  %storemerge9.reg2mem = alloca i32, !insn.addr !1846
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_290a0, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_29ff8, i32 0, i32 0)), !insn.addr !1847
  %1 = call i32* @memset(i32* inttoptr (i32 or (i32 ptrtoint ([6 x i8]* @global_var_8940 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*), i32 32, i32 64), !insn.addr !1848
  %2 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint ([6 x i8]* @global_var_8940 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)), i32 64), !insn.addr !1849
  %3 = call i32* @memset(i32* nonnull @global_var_35af4, i32 0, i32 16), !insn.addr !1850
  %4 = call i32* @memset(i32* nonnull @global_var_35b04, i32 0, i32 16), !insn.addr !1851
  %5 = call i32* @memset(i32* nonnull @global_var_35b14, i32 0, i32 16), !insn.addr !1852
  %6 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !1853
  %7 = inttoptr i32 %6 to i32*, !insn.addr !1854
  %8 = call i32* @memset(i32* %7, i32 0, i32 5136), !insn.addr !1854
  %9 = call i32* @memset(i32* nonnull @global_var_336948, i32 0, i32 2040), !insn.addr !1855
  %10 = call i32 @pthread_mutex_init(i32* inttoptr (i32 or (i32 ptrtoint ([12 x i8]* @global_var_8928 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*), i32* null), !insn.addr !1856
  store i32 0, i32* %storemerge9.reg2mem
  br label %dec_label_pc_daf6

dec_label_pc_daf6:                                ; preds = %dec_label_pc_da40, %dec_label_pc_ddbc
  %storemerge9.reload = load i32, i32* %storemerge9.reg2mem
  %11 = mul i32 %storemerge9.reload, 4, !insn.addr !1857
  %12 = add i32 %11, ptrtoint (i32* @global_var_35ac8 to i32), !insn.addr !1857
  %13 = inttoptr i32 %12 to i32*, !insn.addr !1857
  store i32 0, i32* %13, align 4, !insn.addr !1857
  %14 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_235b50 to i32), !insn.addr !1858
  %15 = inttoptr i32 %14 to i8*, !insn.addr !1859
  store i8 0, i8* %15, align 1, !insn.addr !1859
  %16 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_35adc to i32), !insn.addr !1860
  %17 = inttoptr i32 %16 to i8*, !insn.addr !1861
  store i8 0, i8* %17, align 1, !insn.addr !1861
  %18 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_35ad8 to i32), !insn.addr !1862
  %19 = inttoptr i32 %18 to i8*, !insn.addr !1863
  store i8 0, i8* %19, align 1, !insn.addr !1863
  %20 = load i8, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !1864
  %21 = icmp eq i8 %20, 0, !insn.addr !1865
  br i1 %21, label %dec_label_pc_db44, label %dec_label_pc_db74, !insn.addr !1866

dec_label_pc_db44:                                ; preds = %dec_label_pc_daf6
  %22 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_235b58 to i32), !insn.addr !1867
  %23 = inttoptr i32 %22 to i8*, !insn.addr !1868
  store i8 0, i8* %23, align 1, !insn.addr !1868
  %24 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_235b5c to i32), !insn.addr !1869
  %25 = inttoptr i32 %24 to i8*, !insn.addr !1870
  store i8 0, i8* %25, align 1, !insn.addr !1870
  %26 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_235b60 to i32), !insn.addr !1871
  %27 = inttoptr i32 %26 to i8*, !insn.addr !1872
  store i8 0, i8* %27, align 1, !insn.addr !1872
  br label %dec_label_pc_db74, !insn.addr !1872

dec_label_pc_db74:                                ; preds = %dec_label_pc_daf6, %dec_label_pc_db44
  %28 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_35540 to i32), !insn.addr !1873
  %29 = inttoptr i32 %28 to i8*, !insn.addr !1874
  store i8 1, i8* %29, align 1, !insn.addr !1874
  %30 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_35544 to i32), !insn.addr !1875
  %31 = inttoptr i32 %30 to i8*, !insn.addr !1876
  store i8 1, i8* %31, align 1, !insn.addr !1876
  %32 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_35548 to i32), !insn.addr !1877
  %33 = inttoptr i32 %32 to i8*, !insn.addr !1878
  store i8 1, i8* %33, align 1, !insn.addr !1878
  %34 = add i32 %11, ptrtoint (i32* @global_var_235b64 to i32), !insn.addr !1879
  %35 = inttoptr i32 %34 to i32*, !insn.addr !1879
  store i32 0, i32* %35, align 4, !insn.addr !1879
  %36 = add i32 %11, ptrtoint (i32* @global_var_235b74 to i32), !insn.addr !1880
  %37 = inttoptr i32 %36 to i32*, !insn.addr !1880
  store i32 0, i32* %37, align 4, !insn.addr !1880
  %38 = add i32 %11, ptrtoint (i32* @global_var_235b84 to i32), !insn.addr !1881
  %39 = inttoptr i32 %38 to i32*, !insn.addr !1881
  store i32 0, i32* %39, align 4, !insn.addr !1881
  %40 = add i32 %11, ptrtoint (i32* @global_var_235b94 to i32), !insn.addr !1882
  %41 = inttoptr i32 %40 to i32*, !insn.addr !1882
  store i32 0, i32* %41, align 4, !insn.addr !1882
  %42 = add i32 %11, ptrtoint (i32* @global_var_235ba4 to i32), !insn.addr !1883
  %43 = inttoptr i32 %42 to i32*, !insn.addr !1883
  store i32 0, i32* %43, align 4, !insn.addr !1883
  %44 = add i32 %11, ptrtoint (i32* @global_var_235bb4 to i32), !insn.addr !1884
  %45 = inttoptr i32 %44 to i32*, !insn.addr !1884
  store i32 0, i32* %45, align 4, !insn.addr !1884
  %46 = add i32 %11, ptrtoint (i32* @global_var_235bc4 to i32), !insn.addr !1885
  %47 = inttoptr i32 %46 to i32*, !insn.addr !1885
  store i32 0, i32* %47, align 4, !insn.addr !1885
  %48 = add i32 %11, ptrtoint (i32* @global_var_235bd4 to i32), !insn.addr !1886
  %49 = inttoptr i32 %48 to i32*, !insn.addr !1886
  store i32 0, i32* %49, align 4, !insn.addr !1886
  %50 = add i32 %11, ptrtoint (i32* @global_var_235be4 to i32), !insn.addr !1887
  %51 = inttoptr i32 %50 to i32*, !insn.addr !1887
  store i32 0, i32* %51, align 4, !insn.addr !1887
  %52 = add i32 %11, ptrtoint (i32* @global_var_235bf4 to i32), !insn.addr !1888
  %53 = inttoptr i32 %52 to i32*, !insn.addr !1888
  store i32 0, i32* %53, align 4, !insn.addr !1888
  %54 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_235c04 to i32), !insn.addr !1889
  %55 = inttoptr i32 %54 to i8*, !insn.addr !1890
  store i8 0, i8* %55, align 1, !insn.addr !1890
  %56 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_235c08 to i32), !insn.addr !1891
  %57 = inttoptr i32 %56 to i8*, !insn.addr !1892
  store i8 0, i8* %57, align 1, !insn.addr !1892
  %58 = add i32 %11, ptrtoint (i32* @global_var_235c0c to i32), !insn.addr !1893
  %59 = inttoptr i32 %58 to i32*, !insn.addr !1893
  store i32 0, i32* %59, align 4, !insn.addr !1893
  %60 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_235c1c to i32), !insn.addr !1894
  %61 = inttoptr i32 %60 to i8*, !insn.addr !1895
  store i8 1, i8* %61, align 1, !insn.addr !1895
  %62 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_235c20 to i32), !insn.addr !1896
  %63 = inttoptr i32 %62 to i8*, !insn.addr !1897
  store i8 0, i8* %63, align 1, !insn.addr !1897
  %64 = add i32 %storemerge9.reload, ptrtoint (i8** @global_var_235b54 to i32), !insn.addr !1898
  %65 = inttoptr i32 %64 to i8*, !insn.addr !1899
  store i8 0, i8* %65, align 1, !insn.addr !1899
  %66 = mul i32 %storemerge9.reload, 24, !insn.addr !1900
  %67 = add i32 %66, ptrtoint (i32* @global_var_3368e8 to i32), !insn.addr !1901
  %68 = inttoptr i32 %67 to i32*, !insn.addr !1902
  %69 = call i32 @pthread_mutex_init(i32* %68, i32* null), !insn.addr !1902
  %70 = add i32 %storemerge9.reload, add (i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 ptrtoint (i1* @global_var_100000 to i32)), i32 1208), !insn.addr !1903
  %71 = inttoptr i32 %70 to i8*, !insn.addr !1904
  store i8 0, i8* %71, align 1, !insn.addr !1904
  %72 = add i32 %11, ptrtoint (i32* @global_var_235b34 to i32), !insn.addr !1905
  %73 = inttoptr i32 %72 to i32*, !insn.addr !1905
  store i32 0, i32* %73, align 4, !insn.addr !1905
  %74 = add i32 %11, ptrtoint (i32* @global_var_35b04 to i32), !insn.addr !1906
  %75 = inttoptr i32 %74 to i32*, !insn.addr !1906
  store i32 0, i32* %75, align 4, !insn.addr !1906
  %76 = add i32 %11, ptrtoint (i32* @global_var_35b24 to i32), !insn.addr !1907
  %77 = inttoptr i32 %76 to i32*, !insn.addr !1907
  store i32 0, i32* %77, align 4, !insn.addr !1907
  %78 = load i32, i32* @global_var_336848, align 4, !insn.addr !1908
  %79 = icmp eq i32 %78, 0, !insn.addr !1909
  br i1 %79, label %dec_label_pc_ddbc, label %dec_label_pc_dd0e.lr.ph, !insn.addr !1910

dec_label_pc_dd0e.lr.ph:                          ; preds = %dec_label_pc_db74
  %80 = mul i32 %storemerge9.reload, 256
  %81 = add i32 %11, 188
  %.pre = load i32, i32* @global_var_33684c, align 4
  store i32 %78, i32* %.reg2mem
  store i32 %.pre, i32* %.reg2mem12
  store i32 0, i32* %storemerge17.reg2mem
  br label %dec_label_pc_dd0e

dec_label_pc_dd0e:                                ; preds = %dec_label_pc_dd0e.lr.ph, %dec_label_pc_dda6
  %storemerge17.reload = load i32, i32* %storemerge17.reg2mem
  %.reload13 = load i32, i32* %.reg2mem12, !insn.addr !1911
  %.reload = load i32, i32* %.reg2mem
  %82 = icmp eq i32 %.reload13, 0, !insn.addr !1912
  store i32 %.reload, i32* %.reg2mem16, !insn.addr !1913
  store i32 0, i32* %.reg2mem18, !insn.addr !1913
  br i1 %82, label %dec_label_pc_dda6, label %dec_label_pc_dd2a.lr.ph, !insn.addr !1913

dec_label_pc_dd2a.lr.ph:                          ; preds = %dec_label_pc_dd0e
  %83 = mul i32 %storemerge17.reload, 4, !insn.addr !1914
  %84 = add i32 %83, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 524448), !insn.addr !1915
  %85 = inttoptr i32 %84 to i32*, !insn.addr !1915
  %86 = load i32, i32* %85, align 4, !insn.addr !1915
  %87 = add i32 %storemerge17.reload, %80, !insn.addr !1916
  %88 = mul i32 %87, 512, !insn.addr !1917
  %89 = add i32 %81, %86
  store i32 0, i32* %storemerge25.reg2mem
  br label %dec_label_pc_dd2a

dec_label_pc_dd2a:                                ; preds = %dec_label_pc_dd2a.lr.ph, %dec_label_pc_dd90
  %storemerge25.reload = load i32, i32* %storemerge25.reg2mem
  %90 = add i32 %storemerge25.reload, %88, !insn.addr !1918
  %91 = mul i32 %90, 4, !insn.addr !1919
  %92 = add i32 %91, ptrtoint (i32* @global_var_35b34 to i32), !insn.addr !1919
  %93 = inttoptr i32 %92 to i32*, !insn.addr !1919
  store i32 0, i32* %93, align 4, !insn.addr !1919
  %94 = load i32, i32* @global_var_33681c, align 4, !insn.addr !1920
  %95 = icmp eq i32 %94, 0, !insn.addr !1921
  store i32 %94, i32* %.reg2mem14, !insn.addr !1922
  store i32 0, i32* %storemerge34.reg2mem, !insn.addr !1922
  br i1 %95, label %dec_label_pc_dd90, label %dec_label_pc_dd4c, !insn.addr !1922

dec_label_pc_dd4c:                                ; preds = %dec_label_pc_dd2a, %dec_label_pc_dd4c
  %storemerge34.reload = load i32, i32* %storemerge34.reg2mem
  %.reload15 = load i32, i32* %.reg2mem14
  %96 = mul i32 %.reload15, %storemerge25.reload, !insn.addr !1923
  %97 = add i32 %96, %storemerge34.reload, !insn.addr !1924
  %98 = mul i32 %97, 204, !insn.addr !1925
  %99 = add i32 %89, %98, !insn.addr !1926
  %100 = inttoptr i32 %99 to i32*, !insn.addr !1926
  store i32 0, i32* %100, align 4, !insn.addr !1926
  %101 = add i32 %storemerge34.reload, 1, !insn.addr !1927
  %102 = load i32, i32* @global_var_33681c, align 4, !insn.addr !1920
  %103 = icmp ult i32 %102, %101, !insn.addr !1921
  %104 = icmp ne i1 %103, true, !insn.addr !1921
  %105 = icmp eq i32 %102, %101, !insn.addr !1921
  %106 = icmp ne i1 %105, true, !insn.addr !1922
  %107 = icmp eq i1 %104, %106, !insn.addr !1922
  store i32 %102, i32* %.reg2mem14, !insn.addr !1922
  store i32 %101, i32* %storemerge34.reg2mem, !insn.addr !1922
  br i1 %107, label %dec_label_pc_dd4c, label %dec_label_pc_dd90, !insn.addr !1922

dec_label_pc_dd90:                                ; preds = %dec_label_pc_dd4c, %dec_label_pc_dd2a
  %108 = add i32 %storemerge25.reload, 1, !insn.addr !1928
  %109 = load i32, i32* @global_var_33684c, align 4, !insn.addr !1911
  %110 = icmp ult i32 %109, %108, !insn.addr !1912
  %111 = icmp ne i1 %110, true, !insn.addr !1912
  %112 = icmp eq i32 %109, %108, !insn.addr !1912
  %113 = icmp ne i1 %112, true, !insn.addr !1913
  %114 = icmp eq i1 %111, %113, !insn.addr !1913
  store i32 %108, i32* %storemerge25.reg2mem, !insn.addr !1913
  br i1 %114, label %dec_label_pc_dd2a, label %dec_label_pc_dd96.dec_label_pc_dda6_crit_edge, !insn.addr !1913

dec_label_pc_dd96.dec_label_pc_dda6_crit_edge:    ; preds = %dec_label_pc_dd90
  %.pre11 = load i32, i32* @global_var_336848, align 4
  store i32 %.pre11, i32* %.reg2mem16
  store i32 %109, i32* %.reg2mem18
  br label %dec_label_pc_dda6

dec_label_pc_dda6:                                ; preds = %dec_label_pc_dd0e, %dec_label_pc_dd96.dec_label_pc_dda6_crit_edge
  %.reload19 = load i32, i32* %.reg2mem18
  %.reload17 = load i32, i32* %.reg2mem16, !insn.addr !1908
  %115 = add i32 %storemerge17.reload, 1, !insn.addr !1929
  %116 = icmp ult i32 %.reload17, %115, !insn.addr !1909
  %117 = icmp ne i1 %116, true, !insn.addr !1909
  %118 = icmp eq i32 %.reload17, %115, !insn.addr !1909
  %119 = icmp ne i1 %118, true, !insn.addr !1910
  %120 = icmp eq i1 %117, %119, !insn.addr !1910
  store i32 %.reload17, i32* %.reg2mem, !insn.addr !1910
  store i32 %.reload19, i32* %.reg2mem12, !insn.addr !1910
  store i32 %115, i32* %storemerge17.reg2mem, !insn.addr !1910
  br i1 %120, label %dec_label_pc_dd0e, label %dec_label_pc_ddbc, !insn.addr !1910

dec_label_pc_ddbc:                                ; preds = %dec_label_pc_dda6, %dec_label_pc_db74
  %121 = add i32 %storemerge9.reload, 1, !insn.addr !1930
  %122 = icmp ult i32 %121, 3, !insn.addr !1931
  %123 = icmp ne i1 %122, true, !insn.addr !1931
  %124 = icmp eq i32 %121, 3, !insn.addr !1931
  %125 = icmp ne i1 %123, true, !insn.addr !1932
  %126 = or i1 %124, %125, !insn.addr !1932
  store i32 %121, i32* %storemerge9.reg2mem, !insn.addr !1932
  br i1 %126, label %dec_label_pc_daf6, label %dec_label_pc_ddca, !insn.addr !1932

dec_label_pc_ddca:                                ; preds = %dec_label_pc_ddbc
  %127 = call i32 @clear_register_value_buf(), !insn.addr !1933
  ret i32 %127, !insn.addr !1934

; uselistorder directives
  uselistorder i32 %121, { 0, 2, 1 }
  uselistorder i32 %115, { 0, 2, 1 }
  uselistorder i32 %.reload17, { 2, 1, 0 }
  uselistorder i32 %109, { 0, 2, 1 }
  uselistorder i32 %108, { 0, 2, 1 }
  uselistorder i32 %102, { 0, 2, 1 }
  uselistorder i32 %101, { 0, 2, 1 }
  uselistorder i32 %storemerge34.reload, { 1, 0 }
  uselistorder i32 %storemerge25.reload, { 0, 2, 1 }
  uselistorder i32 %11, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge9.reload, { 16, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17 }
  uselistorder i32* %storemerge9.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem12, { 1, 0, 2 }
  uselistorder i32* %storemerge17.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge25.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem14, { 2, 0, 1 }
  uselistorder i32* %storemerge34.reg2mem, { 2, 0, 1 }
  uselistorder i32 ()* @clear_register_value_buf, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_dda6, { 1, 0 }
  uselistorder label %dec_label_pc_dd4c, { 1, 0 }
  uselistorder label %dec_label_pc_dd2a, { 1, 0 }
  uselistorder label %dec_label_pc_dd0e, { 1, 0 }
  uselistorder label %dec_label_pc_db74, { 1, 0 }
  uselistorder label %dec_label_pc_daf6, { 1, 0 }
}

define i32 @rev(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ddd8:
  %stack_var_-9.02.reg2mem = alloca i8, !insn.addr !1935
  %storemerge3.reg2mem = alloca i8, !insn.addr !1935
  %0 = trunc i32 %arg2 to i8
  %storemerge1 = add i8 %0, -1
  %1 = icmp eq i8 %storemerge1, 0, !insn.addr !1936
  store i8 %storemerge1, i8* %storemerge3.reg2mem, !insn.addr !1937
  store i8 0, i8* %stack_var_-9.02.reg2mem, !insn.addr !1937
  br i1 %1, label %dec_label_pc_de28, label %dec_label_pc_ddf0, !insn.addr !1937

dec_label_pc_ddf0:                                ; preds = %dec_label_pc_ddd8, %dec_label_pc_ddf0
  %stack_var_-9.02.reload = load i8, i8* %stack_var_-9.02.reg2mem
  %storemerge3.reload = load i8, i8* %storemerge3.reg2mem
  %2 = zext i8 %stack_var_-9.02.reload to i32, !insn.addr !1938
  %3 = add i32 %2, %arg1, !insn.addr !1939
  %4 = inttoptr i32 %3 to i8*, !insn.addr !1940
  %5 = load i8, i8* %4, align 1, !insn.addr !1940
  %6 = zext i8 %storemerge3.reload to i32, !insn.addr !1941
  %7 = add i32 %6, %arg1, !insn.addr !1942
  %8 = inttoptr i32 %7 to i8*, !insn.addr !1943
  %9 = load i8, i8* %8, align 1, !insn.addr !1943
  store i8 %9, i8* %4, align 1, !insn.addr !1944
  store i8 %5, i8* %8, align 1, !insn.addr !1945
  %10 = add nuw i8 %stack_var_-9.02.reload, 1, !insn.addr !1946
  %storemerge = add i8 %storemerge3.reload, -1
  %11 = icmp ult i8 %10, %storemerge, !insn.addr !1936
  store i8 %storemerge, i8* %storemerge3.reg2mem, !insn.addr !1937
  store i8 %10, i8* %stack_var_-9.02.reg2mem, !insn.addr !1937
  br i1 %11, label %dec_label_pc_ddf0, label %dec_label_pc_de28, !insn.addr !1937

dec_label_pc_de28:                                ; preds = %dec_label_pc_ddf0, %dec_label_pc_ddd8
  ret i32 %arg1, !insn.addr !1947

; uselistorder directives
  uselistorder i8 %storemerge3.reload, { 1, 0 }
  uselistorder i8* %storemerge3.reg2mem, { 2, 0, 1 }
  uselistorder i8* %stack_var_-9.02.reg2mem, { 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ddf0, { 1, 0 }
}

define i32 @target_to_dcrdiff(i32* %arg1) local_unnamed_addr {
dec_label_pc_de34:
  %storemerge2.in.reg2mem = alloca i8, !insn.addr !1948
  %stack_var_-9.18.reg2mem = alloca i8, !insn.addr !1948
  %storemerge9.reg2mem = alloca i32, !insn.addr !1948
  %stack_var_-9.06.reg2mem = alloca i8, !insn.addr !1948
  %storemerge17.reg2mem = alloca i32, !insn.addr !1948
  %0 = ptrtoint i32* %arg1 to i32
  store i32 7, i32* %storemerge9.reg2mem
  store i8 0, i8* %stack_var_-9.18.reg2mem
  br label %dec_label_pc_de76.preheader

dec_label_pc_de4c:                                ; preds = %dec_label_pc_de76.preheader, %dec_label_pc_de64
  %stack_var_-9.06.reload = load i8, i8* %stack_var_-9.06.reg2mem
  %storemerge17.reload = load i32, i32* %storemerge17.reg2mem
  %1 = shl i32 1, %storemerge17.reload
  %2 = and i32 %1, %12
  %3 = icmp eq i32 %2, 0, !insn.addr !1949
  store i8 %stack_var_-9.06.reload, i8* %storemerge2.in.reg2mem, !insn.addr !1950
  br i1 %3, label %dec_label_pc_de64, label %dec_label_pc_de8a, !insn.addr !1950

dec_label_pc_de64:                                ; preds = %dec_label_pc_de4c
  %4 = add i8 %stack_var_-9.06.reload, 1, !insn.addr !1951
  %5 = add nsw i32 %storemerge17.reload, -1, !insn.addr !1952
  %6 = icmp eq i32 %storemerge17.reload, 0, !insn.addr !1953
  store i32 %5, i32* %storemerge17.reg2mem, !insn.addr !1954
  store i8 %4, i8* %stack_var_-9.06.reg2mem, !insn.addr !1954
  br i1 %6, label %dec_label_pc_de7c, label %dec_label_pc_de4c, !insn.addr !1954

dec_label_pc_de7c:                                ; preds = %dec_label_pc_de64
  %7 = add nsw i32 %storemerge9.reload, -1, !insn.addr !1955
  %8 = icmp eq i32 %storemerge9.reload, 0, !insn.addr !1956
  store i32 %7, i32* %storemerge9.reg2mem, !insn.addr !1957
  store i8 %4, i8* %stack_var_-9.18.reg2mem, !insn.addr !1957
  store i8 %4, i8* %storemerge2.in.reg2mem, !insn.addr !1957
  br i1 %8, label %dec_label_pc_de8a, label %dec_label_pc_de76.preheader, !insn.addr !1957

dec_label_pc_de76.preheader:                      ; preds = %dec_label_pc_de34, %dec_label_pc_de7c
  %stack_var_-9.18.reload = load i8, i8* %stack_var_-9.18.reg2mem
  %storemerge9.reload = load i32, i32* %storemerge9.reg2mem
  %9 = mul i32 %storemerge9.reload, 4, !insn.addr !1958
  %10 = add i32 %9, %0, !insn.addr !1959
  %11 = inttoptr i32 %10 to i32*, !insn.addr !1960
  %12 = load i32, i32* %11, align 4, !insn.addr !1960
  store i32 31, i32* %storemerge17.reg2mem
  store i8 %stack_var_-9.18.reload, i8* %stack_var_-9.06.reg2mem
  br label %dec_label_pc_de4c

dec_label_pc_de8a:                                ; preds = %dec_label_pc_de7c, %dec_label_pc_de4c
  %storemerge2.in.reload = load i8, i8* %storemerge2.in.reg2mem
  %storemerge2 = zext i8 %storemerge2.in.reload to i32
  ret i32 %storemerge2, !insn.addr !1961

; uselistorder directives
  uselistorder i32 %storemerge9.reload, { 2, 0, 1 }
  uselistorder i32 %storemerge17.reload, { 2, 0, 1 }
  uselistorder i8 %stack_var_-9.06.reload, { 1, 0 }
  uselistorder i32* %storemerge17.reg2mem, { 2, 1, 0 }
  uselistorder i8* %stack_var_-9.06.reg2mem, { 2, 1, 0 }
  uselistorder label %dec_label_pc_de76.preheader, { 1, 0 }
}

define i32 @decred_hash_simple(i32* %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_de98:
  %0 = ptrtoint i32* %arg2 to i32
  %1 = ptrtoint i32* %arg1 to i32
  %stack_var_-132 = alloca i32, align 4
  %2 = call i32 @sph_blake256_init(i32* nonnull %stack_var_-132), !insn.addr !1962
  %3 = call i32 @sph_blake256(i32* nonnull %stack_var_-132, i32 %0, i32 180), !insn.addr !1963
  %4 = call i32 @sph_blake256_close(i32* nonnull %stack_var_-132, i32 %1), !insn.addr !1964
  ret i32 %4, !insn.addr !1965
}

define i32 @check_hw(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ded0:
  %storemerge.reg2mem = alloca i32, !insn.addr !1966
  %storemerge34.reg2mem = alloca i32, !insn.addr !1966
  %stack_var_-228 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %0 = call i32* @memset(i32* nonnull %stack_var_-196, i32 0, i32 180), !insn.addr !1967
  %1 = call i32* @memset(i32* nonnull %stack_var_-196, i32 0, i32 180), !insn.addr !1968
  %2 = add i32 %arg1, 8
  %3 = inttoptr i32 %2 to i32*, !insn.addr !1969
  %4 = call i32* @memcpy(i32* nonnull %stack_var_-196, i32* %3, i32 180), !insn.addr !1969
  %5 = call i32 @decred_hash_simple(i32* nonnull %stack_var_-228, i32* nonnull %stack_var_-196), !insn.addr !1970
  %6 = call i32 @target_to_dcrdiff(i32* nonnull %stack_var_-228), !insn.addr !1971
  %7 = urem i32 %6, 256, !insn.addr !1972
  %8 = icmp ult i32 %7, 37, !insn.addr !1973
  %9 = icmp ne i1 %8, true, !insn.addr !1973
  %10 = icmp eq i32 %7, 37, !insn.addr !1973
  %11 = icmp ne i1 %9, true, !insn.addr !1974
  %12 = or i1 %10, %11, !insn.addr !1974
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !1974
  br i1 %12, label %dec_label_pc_df82, label %dec_label_pc_dff2, !insn.addr !1974

dec_label_pc_df82:                                ; preds = %dec_label_pc_ded0
  %13 = urem i32 %arg4, 256
  %14 = icmp eq i32 %13, 0, !insn.addr !1975
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !1976
  br i1 %14, label %dec_label_pc_dff2, label %dec_label_pc_df88, !insn.addr !1976

dec_label_pc_df88:                                ; preds = %dec_label_pc_df82
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_290ac, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_29fec, i32 0, i32 0)), !insn.addr !1977
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_290bc, i32 0, i32 0)), !insn.addr !1978
  store i32 0, i32* %storemerge34.reg2mem
  br label %dec_label_pc_dfb0

dec_label_pc_dfb0:                                ; preds = %dec_label_pc_df88, %dec_label_pc_dfb0
  %storemerge34.reload = load i32, i32* %storemerge34.reg2mem
  %17 = add i32 %storemerge34.reload, %2, !insn.addr !1979
  %18 = inttoptr i32 %17 to i8*, !insn.addr !1980
  %19 = load i8, i8* %18, align 1, !insn.addr !1980
  %20 = zext i8 %19 to i32, !insn.addr !1980
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_290c4, i32 0, i32 0), i32 %20), !insn.addr !1981
  %22 = add i32 %storemerge34.reload, 1, !insn.addr !1982
  %23 = icmp ult i32 %22, 179, !insn.addr !1983
  %24 = icmp ne i1 %23, true, !insn.addr !1983
  %25 = icmp eq i32 %22, 179, !insn.addr !1983
  %26 = icmp ne i1 %24, true, !insn.addr !1984
  %27 = or i1 %25, %26, !insn.addr !1984
  store i32 %22, i32* %storemerge34.reg2mem, !insn.addr !1984
  br i1 %27, label %dec_label_pc_dfb0, label %dec_label_pc_dfdc, !insn.addr !1984

dec_label_pc_dfdc:                                ; preds = %dec_label_pc_dfb0
  %28 = add i32 %arg1, 4, !insn.addr !1985
  %29 = inttoptr i32 %28 to i32*, !insn.addr !1985
  %30 = load i32, i32* %29, align 4, !insn.addr !1985
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @global_var_290cc, i32 0, i32 0), i32 %arg2, i32 %30), !insn.addr !1986
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !1986
  br label %dec_label_pc_dff2, !insn.addr !1986

dec_label_pc_dff2:                                ; preds = %dec_label_pc_df82, %dec_label_pc_dfdc, %dec_label_pc_ded0
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !1987

; uselistorder directives
  uselistorder i32 %22, { 0, 2, 1 }
  uselistorder i32 %7, { 1, 0 }
  uselistorder i32* %storemerge34.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_dff2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dfb0, { 1, 0 }
}

define i32 @calculate_timeout_and_baud(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dffc:
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_28f84, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_29fd0, i32 0, i32 0)), !insn.addr !1988
  %1 = load i32, i32* @global_var_33684c, align 4, !insn.addr !1989
  %2 = call i32 @calculate_core_number(i32 %1), !insn.addr !1990
  %3 = load i8, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !1991
  %4 = icmp ult i8 %3, 8, !insn.addr !1992
  %5 = icmp ne i1 %4, true, !insn.addr !1992
  %6 = icmp eq i8 %3, 8, !insn.addr !1992
  %7 = icmp ne i1 %6, true, !insn.addr !1993
  %8 = icmp eq i1 %5, %7, !insn.addr !1993
  br i1 %8, label %dec_label_pc_e0ee, label %dec_label_pc_e044, !insn.addr !1993

dec_label_pc_e044:                                ; preds = %dec_label_pc_dffc
  %9 = call i32 @__asm_adr(i32 4), !insn.addr !1994
  ret i32 %2, !insn.addr !1995

dec_label_pc_e0ee:                                ; preds = %dec_label_pc_dffc
  %10 = zext i8 %3 to i32, !insn.addr !1996
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_29104, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_29fd0, i32 0, i32 0), i32 %10), !insn.addr !1997
  %12 = call i32 @__asm_nop(i32 %11, i32 ptrtoint ([27 x i8]* @global_var_29fd0 to i32), i32 %10, i32 %10), !insn.addr !1998
  store i32 0, i32* @global_var_336820, align 4, !insn.addr !1999
  store i32 0, i32* @global_var_3368e0, align 4, !insn.addr !2000
  ret i32 %12, !insn.addr !2001

; uselistorder directives
  uselistorder i32 %10, { 2, 1, 0 }
  uselistorder [27 x i8]* @global_var_29fd0, { 1, 0 }
}

define i32 @show_status_func(i32 %arg1) local_unnamed_addr {
dec_label_pc_e134:
  %0 = alloca i32
  %storemerge.reg2mem = alloca i32, !insn.addr !2002
  %1 = load i32, i32* %0
  %2 = urem i32 %1, 256, !insn.addr !2003
  %3 = mul i32 %2, 4, !insn.addr !2004
  %4 = add i32 %3, ptrtoint (i32* @global_var_35ac8 to i32), !insn.addr !2004
  %5 = inttoptr i32 %4 to i32*, !insn.addr !2004
  %6 = add i32 %3, ptrtoint (i32* @global_var_35b04 to i32)
  %7 = inttoptr i32 %6 to i32*
  %8 = add i32 %3, ptrtoint (i32* @global_var_35b14 to i32)
  %9 = inttoptr i32 %8 to i32*
  %10 = add i32 %2, ptrtoint (i8** @global_var_235c1c to i32)
  %11 = inttoptr i32 %10 to i8*
  %12 = add i32 %2, ptrtoint (i8** @global_var_35adc to i32)
  %13 = inttoptr i32 %12 to i8*
  %14 = add i32 %3, ptrtoint (i32* @global_var_235bc4 to i32)
  %15 = inttoptr i32 %14 to i32*
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2004
  br label %dec_label_pc_e156, !insn.addr !2004

dec_label_pc_e156:                                ; preds = %dec_label_pc_e204, %dec_label_pc_e134
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  store i32 %storemerge.reload, i32* %5, align 4
  %16 = call i32* @memset(i32* inttoptr (i32 or (i32 ptrtoint ([6 x i8]* @global_var_8940 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i32*), i32 32, i32 64), !insn.addr !2005
  %17 = load i32, i32* %5, align 4, !insn.addr !2006
  %18 = call i32 (i8*, i8*, ...) @sprintf(i8* inttoptr (i32 or (i32 ptrtoint ([6 x i8]* @global_var_8940 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)) to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2912c, i32 0, i32 0), i32 %17), !insn.addr !2007
  %19 = load i32, i32* %7, align 4, !insn.addr !2008
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* bitcast (i8** @global_var_338950 to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_29138, i32 0, i32 0), i32 %19), !insn.addr !2009
  %21 = load i32, i32* %9, align 4, !insn.addr !2010
  %22 = call i32 (i8*, i8*, ...) @sprintf(i8* bitcast (i8** @global_var_338960 to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_29144, i32 0, i32 0), i32 %21), !insn.addr !2011
  %23 = load i8, i8* %11, align 1, !insn.addr !2012
  %24 = icmp eq i8 %23, 0, !insn.addr !2013
  br i1 %24, label %dec_label_pc_e204, label %dec_label_pc_e1d6, !insn.addr !2014

dec_label_pc_e1d6:                                ; preds = %dec_label_pc_e156
  %25 = load i8, i8* %13, align 1, !insn.addr !2015
  %26 = icmp eq i8 %25, 0, !insn.addr !2016
  br i1 %26, label %dec_label_pc_e204, label %dec_label_pc_e1e6, !insn.addr !2017

dec_label_pc_e1e6:                                ; preds = %dec_label_pc_e1d6
  %27 = load i32, i32* %15, align 4, !insn.addr !2018
  %28 = call i32 (i8*, i8*, ...) @sprintf(i8* bitcast (i8** @global_var_338970 to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_29150, i32 0, i32 0), i32 %27), !insn.addr !2019
  br label %dec_label_pc_e204, !insn.addr !2019

dec_label_pc_e204:                                ; preds = %dec_label_pc_e1e6, %dec_label_pc_e1d6, %dec_label_pc_e156
  %29 = call i32 @write_lcd(i32 0, i32 or (i32 ptrtoint ([6 x i8]* @global_var_8940 to i32), i32 ptrtoint (i8** @global_var_330000 to i32)), i32 64), !insn.addr !2020
  %30 = call i32 @usleep(i32 ptrtoint (i32* @global_var_f4240 to i32)), !insn.addr !2021
  %31 = load i32, i32* %5, align 4, !insn.addr !2022
  %32 = add i32 %31, 1, !insn.addr !2023
  store i32 %32, i32* %storemerge.reg2mem, !insn.addr !2024
  br label %dec_label_pc_e156, !insn.addr !2024

; uselistorder directives
  uselistorder i32* %5, { 1, 2, 0 }
  uselistorder i32 %3, { 3, 2, 1, 0 }
  uselistorder i32 %2, { 2, 1, 0 }
  uselistorder i32* %storemerge.reg2mem, { 1, 0, 2 }
}

define i32 @set_voltage(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e24c:
  %0 = load i8, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4, !insn.addr !2025
  %1 = icmp ult i8 %0, 8, !insn.addr !2026
  %2 = icmp ne i1 %1, true, !insn.addr !2026
  %3 = icmp eq i8 %0, 8, !insn.addr !2026
  %4 = icmp ne i1 %3, true, !insn.addr !2027
  %5 = icmp eq i1 %2, %4, !insn.addr !2027
  br i1 %5, label %dec_label_pc_e33c, label %dec_label_pc_e280, !insn.addr !2027

dec_label_pc_e280:                                ; preds = %dec_label_pc_e24c
  %6 = call i32 @__asm_adr(i32 4), !insn.addr !2028
  ret i32 %arg1, !insn.addr !2029

dec_label_pc_e33c:                                ; preds = %dec_label_pc_e24c
  %7 = urem i32 %arg3, 256
  %8 = load i32, i32* @global_var_33687c, align 4, !insn.addr !2030
  %9 = zext i8 %0 to i32, !insn.addr !2031
  %10 = inttoptr i32 %9 to i8*, !insn.addr !2032
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_29160, i32 0, i32 0), i8* %10, i32 0), !insn.addr !2032
  %12 = call i32 @__asm_nop(i32 %11, i32 %9, i32 0, i32 %9), !insn.addr !2033
  store i32 %8, i32* @global_var_336878, align 4, !insn.addr !2034
  %13 = icmp eq i32 %7, 0, !insn.addr !2035
  %14 = load i32, i32* @global_var_3368c0, align 4
  %15 = select i1 %13, i32 0, i32 %14
  %stack_var_-20.0 = add i32 %15, %8
  %16 = load i32, i32* @global_var_336850, align 4, !insn.addr !2036
  switch i32 %16, label %dec_label_pc_e3f8 [
    i32 1722, label %dec_label_pc_e39c
    i32 1725, label %dec_label_pc_e3d4
  ]

dec_label_pc_e39c:                                ; preds = %dec_label_pc_e33c
  %17 = call float @__asm_vldr(i32 %stack_var_-20.0), !insn.addr !2037
  ret i32 %12, !insn.addr !2037

dec_label_pc_e3d4:                                ; preds = %dec_label_pc_e33c
  %18 = call float @__asm_vldr(i32 %stack_var_-20.0), !insn.addr !2038
  ret i32 %12, !insn.addr !2038

dec_label_pc_e3f8:                                ; preds = %dec_label_pc_e33c
  %19 = call double @__asm_vldr.70(i32 0), !insn.addr !2039
  %20 = call double @__asm_vldr.70(i32 1081073664), !insn.addr !2040
  ret i32 %12, !insn.addr !2040

; uselistorder directives
  uselistorder i32 %9, { 2, 1, 0 }
}

define i32 @function_e400() local_unnamed_addr {
dec_label_pc_e400:
  %0 = alloca i1
  %1 = load i1, i1* %0
  br i1 %1, label %dec_label_pc_e404, label %.critedge, !insn.addr !2041

dec_label_pc_e404:                                ; preds = %dec_label_pc_e400
  %2 = call i32 @function_ff209ed8(), !insn.addr !2041
  %3 = call i32 @unknown_449fd0(), !insn.addr !2042
  br label %dec_label_pc_e41c

.critedge:                                        ; preds = %dec_label_pc_e400
  %4 = call i32 @unknown_449fd0(), !insn.addr !2042
  %5 = call i32 @function_149a78(), !insn.addr !2043
  %6 = call i32 @function_ff049ef4(), !insn.addr !2044
  br label %dec_label_pc_e41c, !insn.addr !2044

dec_label_pc_e41c:                                ; preds = %dec_label_pc_e404, %.critedge
  %7 = call i32 @unknown_449fe8(), !insn.addr !2045
  ret i32 %7, !insn.addr !2045

; uselistorder directives
  uselistorder label %dec_label_pc_e41c, { 1, 0 }
}

define i32 @function_e420() local_unnamed_addr {
dec_label_pc_e420:
  %0 = alloca i32
  %1 = alloca i1
  %2 = load i1, i1* %1
  %3 = load i32, i32* %0
  %4 = load i32, i32* %0
  %5 = add i32 %3, 16
  %6 = inttoptr i32 %5 to i32*
  br i1 %2, label %dec_label_pc_e422, label %dec_label_pc_e42e, !insn.addr !2046

dec_label_pc_e422:                                ; preds = %dec_label_pc_e420
  store i32 0, i32* %6, align 4, !insn.addr !2047
  %7 = add i32 %3, 20, !insn.addr !2047
  %8 = inttoptr i32 %7 to i32*, !insn.addr !2047
  store i32 0, i32* %8, align 4, !insn.addr !2047
  br label %dec_label_pc_e42e, !insn.addr !2047

dec_label_pc_e42e:                                ; preds = %dec_label_pc_e420, %dec_label_pc_e422
  %9 = load i32, i32* %6, align 4, !insn.addr !2048
  %10 = call double @__asm_vldr.70(i32 %9), !insn.addr !2048
  ret i32 %4, !insn.addr !2048

; uselistorder directives
  uselistorder i32 %3, { 1, 0 }
  uselistorder i32* %0, { 1, 0 }
  uselistorder label %dec_label_pc_e42e, { 1, 0 }
}

define i32 @function_e432(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e432:
  %0 = alloca i32
  %1 = alloca i1
  %2 = load i1, i1* %1
  %3 = load i1, i1* %1
  %4 = load i32, i32* %0
  br i1 %2, label %5, label %dec_label_pc_e436, !insn.addr !2049

; <label>:5:                                      ; preds = %dec_label_pc_e432
  %6 = call i32 @function_ff20a02a(), !insn.addr !2049
  br label %dec_label_pc_e436, !insn.addr !2049

dec_label_pc_e436:                                ; preds = %5, %dec_label_pc_e432
  br i1 %3, label %dec_label_pc_e43a, label %7, !insn.addr !2050

; <label>:7:                                      ; preds = %dec_label_pc_e436
  %8 = call i32 @function_fe449c96(), !insn.addr !2050
  br label %dec_label_pc_e43a, !insn.addr !2050

dec_label_pc_e43a:                                ; preds = %dec_label_pc_e436, %7
  br i1 %2, label %dec_label_pc_e43e, label %9, !insn.addr !2051

; <label>:9:                                      ; preds = %dec_label_pc_e43a
  %10 = call i32 @function_ffe6b02e(), !insn.addr !2051
  br label %dec_label_pc_e43e, !insn.addr !2051

dec_label_pc_e43e:                                ; preds = %dec_label_pc_e43a, %9
  %11 = add i32 %4, 16, !insn.addr !2052
  %12 = inttoptr i32 %11 to i64*, !insn.addr !2052
  %13 = load i64, i64* %12, align 4, !insn.addr !2052
  %14 = trunc i64 %13 to i32, !insn.addr !2052
  %15 = add i32 %4, 12, !insn.addr !2053
  %16 = inttoptr i32 %15 to i32*, !insn.addr !2053
  %17 = load i32, i32* %16, align 4, !insn.addr !2053
  %18 = sext i32 %14 to i64, !insn.addr !2054
  %19 = bitcast i64 %18 to double, !insn.addr !2054
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_29180, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_29fc4, i32 0, i32 0), i32 %17, double %19, i32 %14), !insn.addr !2054
  %21 = load i32, i32* @global_var_336850, align 4, !insn.addr !2055
  switch i32 %21, label %dec_label_pc_e49c [
    i32 1722, label %dec_label_pc_e470
    i32 1725, label %dec_label_pc_e494
  ]

dec_label_pc_e470:                                ; preds = %dec_label_pc_e43e
  %22 = add i32 %4, 7, !insn.addr !2056
  %23 = inttoptr i32 %22 to i8*, !insn.addr !2056
  %24 = load i8, i8* %23, align 1, !insn.addr !2056
  %25 = zext i8 %24 to i32, !insn.addr !2056
  %26 = add i32 %4, 6, !insn.addr !2057
  %27 = inttoptr i32 %26 to i8*, !insn.addr !2057
  %28 = load i8, i8* %27, align 1, !insn.addr !2057
  %29 = zext i8 %28 to i32, !insn.addr !2057
  %30 = add i32 %4, 11, !insn.addr !2058
  %31 = inttoptr i32 %30 to i8*, !insn.addr !2058
  %32 = load i8, i8* %31, align 1, !insn.addr !2058
  %33 = zext i8 %32 to i32, !insn.addr !2058
  %34 = call i32 @set_PIC16F1704_voltage(i32 %25, i32 %29, i32 %33), !insn.addr !2059
  br label %dec_label_pc_e49c, !insn.addr !2060

dec_label_pc_e494:                                ; preds = %dec_label_pc_e43e
  %35 = add i32 %4, 11, !insn.addr !2061
  %36 = inttoptr i32 %35 to i8*, !insn.addr !2061
  %37 = load i8, i8* %36, align 1, !insn.addr !2061
  %38 = zext i8 %37 to i32, !insn.addr !2061
  %39 = call i32 @power_set_voltage(i32 %38), !insn.addr !2062
  br label %dec_label_pc_e49c, !insn.addr !2062

dec_label_pc_e49c:                                ; preds = %dec_label_pc_e43e, %dec_label_pc_e494, %dec_label_pc_e470
  %40 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !2063
  ret i32 %40, !insn.addr !2064

; uselistorder directives
  uselistorder i32 %4, { 5, 2, 3, 4, 0, 1 }
  uselistorder i1 %2, { 1, 0 }
  uselistorder i1* %1, { 1, 0 }
  uselistorder label %dec_label_pc_e49c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e43e, { 1, 0 }
  uselistorder label %dec_label_pc_e43a, { 1, 0 }
}

define i32 @"$d"(i32 %arg1) local_unnamed_addr {
dec_label_pc_e4b0:
  %0 = alloca i32
  %1 = alloca i1
  %r0.0.reg2mem = alloca i32, !insn.addr !2065
  %2 = load i1, i1* %1
  %3 = load i1, i1* %1
  %4 = load i32, i32* %0
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !2065
  br i1 %2, label %dec_label_pc_e4b4, label %5, !insn.addr !2065

; <label>:5:                                      ; preds = %dec_label_pc_e4b0
  %6 = call i32 @function_dc7064(), !insn.addr !2065
  store i32 %6, i32* %r0.0.reg2mem, !insn.addr !2065
  br label %dec_label_pc_e4b4, !insn.addr !2065

dec_label_pc_e4b4:                                ; preds = %dec_label_pc_e4b0, %5
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %7 = sub i32 %4, %r0.0.reload
  %spec.select = select i1 %3, i32 %7, i32 %r0.0.reload
  ret i32 %spec.select, !insn.addr !2066

; uselistorder directives
  uselistorder i32 %r0.0.reload, { 1, 0 }
  uselistorder i1* %1, { 1, 0 }
  uselistorder label %dec_label_pc_e4b4, { 1, 0 }
}

define i32 @function_e4c2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e4c2:
  %0 = alloca i1
  %r0.1.reg2mem = alloca i32, !insn.addr !2067
  %r0.0.reg2mem = alloca i32, !insn.addr !2067
  %1 = load i1, i1* %0
  %2 = load i1, i1* %0
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !2067
  br i1 %1, label %dec_label_pc_e4c6, label %3, !insn.addr !2067

; <label>:3:                                      ; preds = %dec_label_pc_e4c2
  %4 = call i32 @function_fffccc36(), !insn.addr !2067
  store i32 %4, i32* %r0.0.reg2mem, !insn.addr !2067
  br label %dec_label_pc_e4c6, !insn.addr !2067

dec_label_pc_e4c6:                                ; preds = %dec_label_pc_e4c2, %3
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  store i32 %r0.0.reload, i32* %r0.1.reg2mem, !insn.addr !2068
  br i1 %2, label %5, label %dec_label_pc_e4ca, !insn.addr !2068

; <label>:5:                                      ; preds = %dec_label_pc_e4c6
  %6 = call i32 @function_145e726(), !insn.addr !2068
  store i32 %6, i32* %r0.1.reg2mem, !insn.addr !2068
  br label %dec_label_pc_e4ca, !insn.addr !2068

dec_label_pc_e4ca:                                ; preds = %5, %dec_label_pc_e4c6
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %7 = add i32 %r0.1.reload, %arg2, !insn.addr !2069
  %8 = inttoptr i32 %7 to i8*, !insn.addr !2069
  %9 = load i8, i8* %8, align 1, !insn.addr !2069
  %10 = sext i8 %9 to i32, !insn.addr !2069
  %11 = shl i32 %10, %arg4, !insn.addr !2070
  ret i32 %11, !insn.addr !2071

; uselistorder directives
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 1 }
  uselistorder i1* %0, { 1, 0 }
  uselistorder label %dec_label_pc_e4c6, { 1, 0 }
}

define i32 @set_baud(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e4e0:
  %.pre-phi.reg2mem = alloca i32, !insn.addr !2072
  %0 = mul i32 %arg1, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !2073
  %2 = urem i32 %arg2, 256
  %3 = urem i32 %arg1, 256, !insn.addr !2074
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_291c4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_29fb8, i32 0, i32 0), i32 %3, i32 %2), !insn.addr !2075
  %5 = load i32, i32* @global_var_336850, align 4, !insn.addr !2076
  switch i32 %5, label %dec_label_pc_e4e0.dec_label_pc_e574_crit_edge [
    i32 1722, label %dec_label_pc_e518
    i32 1725, label %dec_label_pc_e550
  ]

dec_label_pc_e4e0.dec_label_pc_e574_crit_edge:    ; preds = %dec_label_pc_e4e0
  %.pre = urem i32 %1, 256, !insn.addr !2077
  store i32 %.pre, i32* %.pre-phi.reg2mem
  br label %dec_label_pc_e574

dec_label_pc_e518:                                ; preds = %dec_label_pc_e4e0
  %6 = mul i32 %arg2, 256
  %7 = and i32 %6, 57088, !insn.addr !2078
  %8 = or i32 %7, 117448705, !insn.addr !2079
  %9 = urem i32 %1, 256
  %10 = call i32 @set_BM1722_asic_register(i32 %9, i32 0, i32 28, i32 1, i32 %8), !insn.addr !2080
  store i32 %9, i32* %.pre-phi.reg2mem, !insn.addr !2081
  br label %dec_label_pc_e574, !insn.addr !2081

dec_label_pc_e550:                                ; preds = %dec_label_pc_e4e0
  %11 = mul i32 %arg2, 256
  %12 = and i32 %11, 57088, !insn.addr !2082
  %13 = or i32 %12, 117448705, !insn.addr !2083
  %14 = urem i32 %1, 256
  %15 = call i32 @set_BM1725_asic_register(i32 %14, i32 0, i32 28, i32 1, i32 %13), !insn.addr !2084
  store i32 %14, i32* %.pre-phi.reg2mem, !insn.addr !2084
  br label %dec_label_pc_e574, !insn.addr !2084

dec_label_pc_e574:                                ; preds = %dec_label_pc_e4e0.dec_label_pc_e574_crit_edge, %dec_label_pc_e550, %dec_label_pc_e518
  %.pre-phi.reload = load i32, i32* %.pre-phi.reg2mem
  %16 = call i32 @usleep(i32 50000), !insn.addr !2085
  %17 = call i32 @uart_set_baud(i32 %.pre-phi.reload, i32 %2), !insn.addr !2086
  ret i32 %17, !insn.addr !2087

; uselistorder directives
  uselistorder i32* %.pre-phi.reg2mem, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32)* @uart_set_baud, { 2, 1, 0 }
  uselistorder i32 57088, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_e574, { 1, 2, 0 }
}

define i32 @is_nonce_or_reg_value(i32 %arg1) local_unnamed_addr {
dec_label_pc_e590:
  %0 = urem i32 %arg1, 256, !insn.addr !2088
  %1 = call i32 @__asm_sxtb(i32 %0), !insn.addr !2089
  %2 = icmp slt i32 %1, 0, !insn.addr !2090
  %. = zext i1 %2 to i32
  ret i32 %., !insn.addr !2091
}

define i32 @check_nonce(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e5b4:
  %0 = alloca i32
  %r3.0.reg2mem = alloca i32, !insn.addr !2092
  %storemerge4.reg2mem = alloca i32, !insn.addr !2092
  %.reg2mem = alloca i32, !insn.addr !2092
  %stack_var_-28.0.shrunk.reg2mem = alloca i8, !insn.addr !2092
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !2092
  %stack_var_-20.0.reg2mem = alloca i32, !insn.addr !2092
  %1 = load i32, i32* %0
  %2 = load i32, i32* @global_var_336850, align 4, !insn.addr !2093
  store i32 0, i32* %stack_var_-20.0.reg2mem
  store i32 0, i32* %stack_var_-24.0.reg2mem
  store i8 0, i8* %stack_var_-28.0.shrunk.reg2mem
  store i32 0, i32* %.reg2mem
  switch i32 %2, label %dec_label_pc_e6d6 [
    i32 1722, label %dec_label_pc_e5fa
    i32 1725, label %dec_label_pc_e66c
  ]

dec_label_pc_e5fa:                                ; preds = %dec_label_pc_e5b4
  %3 = urem i32 %1, 256, !insn.addr !2094
  %4 = add i32 %arg2, 1, !insn.addr !2095
  %5 = inttoptr i32 %4 to i8*, !insn.addr !2096
  %6 = load i8, i8* %5, align 1, !insn.addr !2096
  %7 = zext i8 %6 to i32, !insn.addr !2096
  %8 = mul i32 %7, 256, !insn.addr !2097
  %9 = or i32 %8, %3, !insn.addr !2098
  %10 = add i32 %arg2, 2, !insn.addr !2099
  %11 = inttoptr i32 %10 to i8*, !insn.addr !2100
  %12 = load i8, i8* %11, align 1, !insn.addr !2100
  %13 = zext i8 %12 to i32, !insn.addr !2100
  %14 = mul i32 %13, 65536, !insn.addr !2101
  %15 = or i32 %9, %14, !insn.addr !2102
  %16 = add i32 %arg2, 3, !insn.addr !2103
  %17 = inttoptr i32 %16 to i8*, !insn.addr !2104
  %18 = load i8, i8* %17, align 1, !insn.addr !2104
  %19 = zext i8 %18 to i32, !insn.addr !2104
  %20 = mul i32 %19, 16777216, !insn.addr !2105
  %21 = or i32 %15, %20, !insn.addr !2106
  %22 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2107
  %23 = udiv i32 %19, %22, !insn.addr !2108
  %24 = urem i32 %1, 128, !insn.addr !2109
  %25 = add i32 %arg2, 5, !insn.addr !2110
  %26 = inttoptr i32 %25 to i8*, !insn.addr !2111
  %27 = load i8, i8* %26, align 1, !insn.addr !2111
  %28 = urem i8 %27, -128
  store i32 %23, i32* %stack_var_-20.0.reg2mem, !insn.addr !2112
  store i32 %24, i32* %stack_var_-24.0.reg2mem, !insn.addr !2112
  store i8 %28, i8* %stack_var_-28.0.shrunk.reg2mem, !insn.addr !2112
  store i32 %21, i32* %.reg2mem, !insn.addr !2112
  br label %dec_label_pc_e6d6, !insn.addr !2112

dec_label_pc_e66c:                                ; preds = %dec_label_pc_e5b4
  %29 = urem i32 %1, 256, !insn.addr !2113
  %30 = add i32 %arg2, 1, !insn.addr !2114
  %31 = inttoptr i32 %30 to i8*, !insn.addr !2115
  %32 = load i8, i8* %31, align 1, !insn.addr !2115
  %33 = zext i8 %32 to i32, !insn.addr !2115
  %34 = mul i32 %33, 256, !insn.addr !2116
  %35 = or i32 %34, %29, !insn.addr !2117
  %36 = add i32 %arg2, 2, !insn.addr !2118
  %37 = inttoptr i32 %36 to i8*, !insn.addr !2119
  %38 = load i8, i8* %37, align 1, !insn.addr !2119
  %39 = zext i8 %38 to i32, !insn.addr !2119
  %40 = mul i32 %39, 65536, !insn.addr !2120
  %41 = or i32 %35, %40, !insn.addr !2121
  %42 = add i32 %arg2, 3, !insn.addr !2122
  %43 = inttoptr i32 %42 to i8*, !insn.addr !2123
  %44 = load i8, i8* %43, align 1, !insn.addr !2123
  %45 = zext i8 %44 to i32, !insn.addr !2123
  %46 = mul i32 %45, 16777216, !insn.addr !2124
  %47 = or i32 %41, %46, !insn.addr !2125
  %48 = add i32 %arg2, 4, !insn.addr !2126
  %49 = inttoptr i32 %48 to i8*, !insn.addr !2127
  %50 = load i8, i8* %49, align 1, !insn.addr !2127
  %51 = zext i8 %50 to i32, !insn.addr !2127
  %52 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2128
  %53 = udiv i32 %51, %52, !insn.addr !2129
  %54 = urem i8 %38, 2
  %55 = zext i8 %54 to i32, !insn.addr !2130
  %56 = mul i32 %55, 256, !insn.addr !2131
  %57 = or i32 %56, %45, !insn.addr !2132
  %58 = add i32 %arg2, 6, !insn.addr !2133
  %59 = inttoptr i32 %58 to i8*, !insn.addr !2134
  %60 = load i8, i8* %59, align 1, !insn.addr !2134
  %61 = urem i8 %60, -128
  store i32 %53, i32* %stack_var_-20.0.reg2mem, !insn.addr !2135
  store i32 %57, i32* %stack_var_-24.0.reg2mem, !insn.addr !2135
  store i8 %61, i8* %stack_var_-28.0.shrunk.reg2mem, !insn.addr !2135
  store i32 %47, i32* %.reg2mem, !insn.addr !2135
  br label %dec_label_pc_e6d6, !insn.addr !2135

dec_label_pc_e6d6:                                ; preds = %dec_label_pc_e5b4, %dec_label_pc_e66c, %dec_label_pc_e5fa
  %stack_var_-20.0.reload = load i32, i32* %stack_var_-20.0.reg2mem
  %62 = load i32, i32* @global_var_336848, align 4, !insn.addr !2136
  %63 = icmp ult i32 %62, %stack_var_-20.0.reload, !insn.addr !2137
  %64 = icmp ne i1 %63, true, !insn.addr !2137
  %65 = icmp eq i32 %62, %stack_var_-20.0.reload, !insn.addr !2137
  %66 = icmp ne i1 %65, true, !insn.addr !2138
  %67 = icmp eq i1 %64, %66, !insn.addr !2138
  br i1 %67, label %dec_label_pc_e734, label %dec_label_pc_e6e6, !insn.addr !2138

dec_label_pc_e6e6:                                ; preds = %dec_label_pc_e6d6
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_291e4, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_29fac, i32 0, i32 0), i32 %stack_var_-20.0.reload), !insn.addr !2139
  %69 = urem i32 %1, 256, !insn.addr !2140
  %70 = add i32 %arg2, 1, !insn.addr !2141
  %71 = inttoptr i32 %70 to i8*, !insn.addr !2142
  %72 = load i8, i8* %71, align 1, !insn.addr !2142
  %73 = zext i8 %72 to i32, !insn.addr !2142
  %74 = add i32 %arg2, 2, !insn.addr !2143
  %75 = inttoptr i32 %74 to i8*, !insn.addr !2144
  %76 = load i8, i8* %75, align 1, !insn.addr !2144
  %77 = zext i8 %76 to i32, !insn.addr !2144
  %78 = add i32 %arg2, 3, !insn.addr !2145
  %79 = inttoptr i32 %78 to i8*, !insn.addr !2146
  %80 = load i8, i8* %79, align 1, !insn.addr !2146
  %81 = zext i8 %80 to i32, !insn.addr !2146
  %82 = add i32 %arg2, 4, !insn.addr !2147
  %83 = inttoptr i32 %82 to i8*, !insn.addr !2148
  %84 = load i8, i8* %83, align 1, !insn.addr !2148
  %85 = zext i8 %84 to i32, !insn.addr !2148
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_var_2920c, i32 0, i32 0), i32 %69, i32 %73, i32 %77, i32 %81, i32 %85), !insn.addr !2149
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !2150
  br label %dec_label_pc_e9f8, !insn.addr !2150

dec_label_pc_e734:                                ; preds = %dec_label_pc_e6d6
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %87 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2151
  %88 = icmp ult i32 %87, %stack_var_-24.0.reload, !insn.addr !2152
  %89 = icmp ne i1 %88, true, !insn.addr !2152
  %90 = icmp eq i32 %87, %stack_var_-24.0.reload, !insn.addr !2152
  %91 = icmp ne i1 %90, true, !insn.addr !2153
  %92 = icmp eq i1 %89, %91, !insn.addr !2153
  br i1 %92, label %dec_label_pc_e79c, label %dec_label_pc_e744, !insn.addr !2153

dec_label_pc_e744:                                ; preds = %dec_label_pc_e734
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_29238, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_29fac, i32 0, i32 0), i32 %stack_var_-24.0.reload), !insn.addr !2154
  %94 = urem i32 %1, 256, !insn.addr !2155
  %95 = add i32 %arg2, 1, !insn.addr !2156
  %96 = inttoptr i32 %95 to i8*, !insn.addr !2157
  %97 = load i8, i8* %96, align 1, !insn.addr !2157
  %98 = zext i8 %97 to i32, !insn.addr !2157
  %99 = add i32 %arg2, 2, !insn.addr !2158
  %100 = inttoptr i32 %99 to i8*, !insn.addr !2159
  %101 = load i8, i8* %100, align 1, !insn.addr !2159
  %102 = zext i8 %101 to i32, !insn.addr !2159
  %103 = add i32 %arg2, 3, !insn.addr !2160
  %104 = inttoptr i32 %103 to i8*, !insn.addr !2161
  %105 = load i8, i8* %104, align 1, !insn.addr !2161
  %106 = zext i8 %105 to i32, !insn.addr !2161
  %107 = add i32 %arg2, 4, !insn.addr !2162
  %108 = inttoptr i32 %107 to i8*, !insn.addr !2163
  %109 = load i8, i8* %108, align 1, !insn.addr !2163
  %110 = zext i8 %109 to i32, !insn.addr !2163
  %111 = add i32 %arg2, 5, !insn.addr !2164
  %112 = inttoptr i32 %111 to i8*, !insn.addr !2165
  %113 = load i8, i8* %112, align 1, !insn.addr !2165
  %114 = zext i8 %113 to i32, !insn.addr !2165
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_29260, i32 0, i32 0), i32 %94, i32 %98, i32 %102, i32 %106, i32 %110, i32 %114), !insn.addr !2166
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !2167
  br label %dec_label_pc_e9f8, !insn.addr !2167

dec_label_pc_e79c:                                ; preds = %dec_label_pc_e734
  %stack_var_-28.0.shrunk.reload = load i8, i8* %stack_var_-28.0.shrunk.reg2mem
  %stack_var_-28.0 = zext i8 %stack_var_-28.0.shrunk.reload to i32
  %116 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2168
  %117 = icmp ult i32 %116, %stack_var_-28.0, !insn.addr !2169
  %118 = icmp ne i1 %117, true, !insn.addr !2169
  %119 = icmp eq i32 %116, %stack_var_-28.0, !insn.addr !2169
  %120 = icmp ne i1 %119, true, !insn.addr !2170
  %121 = icmp eq i1 %118, %120, !insn.addr !2170
  br i1 %121, label %dec_label_pc_e804, label %dec_label_pc_e7ac, !insn.addr !2170

dec_label_pc_e7ac:                                ; preds = %dec_label_pc_e79c
  %122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @global_var_29290, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_29fac, i32 0, i32 0), i32 %stack_var_-28.0), !insn.addr !2171
  %123 = urem i32 %1, 256, !insn.addr !2172
  %124 = add i32 %arg2, 1, !insn.addr !2173
  %125 = inttoptr i32 %124 to i8*, !insn.addr !2174
  %126 = load i8, i8* %125, align 1, !insn.addr !2174
  %127 = zext i8 %126 to i32, !insn.addr !2174
  %128 = add i32 %arg2, 2, !insn.addr !2175
  %129 = inttoptr i32 %128 to i8*, !insn.addr !2176
  %130 = load i8, i8* %129, align 1, !insn.addr !2176
  %131 = zext i8 %130 to i32, !insn.addr !2176
  %132 = add i32 %arg2, 3, !insn.addr !2177
  %133 = inttoptr i32 %132 to i8*, !insn.addr !2178
  %134 = load i8, i8* %133, align 1, !insn.addr !2178
  %135 = zext i8 %134 to i32, !insn.addr !2178
  %136 = add i32 %arg2, 4, !insn.addr !2179
  %137 = inttoptr i32 %136 to i8*, !insn.addr !2180
  %138 = load i8, i8* %137, align 1, !insn.addr !2180
  %139 = zext i8 %138 to i32, !insn.addr !2180
  %140 = add i32 %arg2, 5, !insn.addr !2181
  %141 = inttoptr i32 %140 to i8*, !insn.addr !2182
  %142 = load i8, i8* %141, align 1, !insn.addr !2182
  %143 = zext i8 %142 to i32, !insn.addr !2182
  %144 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_29260, i32 0, i32 0), i32 %123, i32 %127, i32 %131, i32 %135, i32 %139, i32 %143), !insn.addr !2183
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !2184
  br label %dec_label_pc_e9f8, !insn.addr !2184

dec_label_pc_e804:                                ; preds = %dec_label_pc_e79c
  %.reload = load i32, i32* %.reg2mem, !insn.addr !2185
  %145 = mul i32 %stack_var_-20.0.reload, 4, !insn.addr !2186
  %146 = add i32 %145, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 524448), !insn.addr !2187
  %147 = inttoptr i32 %146 to i32*, !insn.addr !2187
  %148 = load i32, i32* %147, align 4, !insn.addr !2187
  %149 = mul i32 %116, %stack_var_-24.0.reload, !insn.addr !2188
  %150 = add i32 %149, %stack_var_-28.0, !insn.addr !2189
  %151 = mul i32 %150, 204, !insn.addr !2190
  %152 = add i32 %148, %151, !insn.addr !2191
  %153 = add i32 %152, 4, !insn.addr !2192
  %154 = inttoptr i32 %153 to i32*, !insn.addr !2192
  %155 = load i32, i32* %154, align 4, !insn.addr !2192
  %156 = mul i32 %arg1, 4
  %157 = and i32 %156, 1020
  %158 = add i32 %157, ptrtoint (i32* @global_var_35af4 to i32), !insn.addr !2193
  %159 = inttoptr i32 %158 to i32*, !insn.addr !2193
  %160 = load i32, i32* %159, align 4, !insn.addr !2193
  %161 = add i32 %160, 1, !insn.addr !2194
  store i32 %161, i32* %159, align 4, !insn.addr !2195
  %162 = icmp eq i32 %.reload, %155, !insn.addr !2196
  br i1 %162, label %dec_label_pc_e864, label %dec_label_pc_e91c, !insn.addr !2197

dec_label_pc_e864:                                ; preds = %dec_label_pc_e804
  %163 = add nuw nsw i32 %157, 188
  %164 = add i32 %163, %152
  %165 = inttoptr i32 %164 to i32*
  %166 = load i32, i32* %165, align 4, !insn.addr !2198
  %167 = icmp eq i32 %166, 0, !insn.addr !2199
  br i1 %167, label %dec_label_pc_e8ae, label %dec_label_pc_e874, !insn.addr !2200

dec_label_pc_e874:                                ; preds = %dec_label_pc_e864
  %168 = add i32 %157, ptrtoint (i32* @global_var_235b34 to i32), !insn.addr !2201
  %169 = inttoptr i32 %168 to i32*, !insn.addr !2201
  %170 = load i32, i32* %169, align 4, !insn.addr !2201
  %171 = add i32 %170, 1, !insn.addr !2202
  store i32 %171, i32* %169, align 4, !insn.addr !2203
  %172 = load i32, i32* %165, align 4, !insn.addr !2204
  %173 = add i32 %172, 1, !insn.addr !2205
  store i32 %173, i32* %165, align 4, !insn.addr !2206
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !2207
  br label %dec_label_pc_e9f8, !insn.addr !2207

dec_label_pc_e8ae:                                ; preds = %dec_label_pc_e864
  store i32 1, i32* %165, align 4, !insn.addr !2208
  %174 = add i32 %157, ptrtoint (i32* @global_var_35b04 to i32), !insn.addr !2209
  %175 = inttoptr i32 %174 to i32*, !insn.addr !2209
  %176 = load i32, i32* %175, align 4, !insn.addr !2209
  %177 = add i32 %176, 1, !insn.addr !2210
  store i32 %177, i32* %175, align 4, !insn.addr !2211
  %178 = mul i32 %arg1, 256
  %179 = and i32 %178, 65280
  %180 = add nsw i32 %stack_var_-20.0.reload, %179, !insn.addr !2212
  %181 = mul i32 %180, 512, !insn.addr !2213
  %182 = add nsw i32 %181, %stack_var_-24.0.reload, !insn.addr !2214
  %183 = mul i32 %182, 4, !insn.addr !2215
  %184 = add i32 %183, ptrtoint (i32* @global_var_35b34 to i32), !insn.addr !2215
  %185 = inttoptr i32 %184 to i32*, !insn.addr !2215
  %186 = load i32, i32* %185, align 4, !insn.addr !2215
  %187 = add i32 %186, 1, !insn.addr !2216
  store i32 %187, i32* %185, align 4, !insn.addr !2217
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !2218
  br label %dec_label_pc_e9f8, !insn.addr !2218

dec_label_pc_e91c:                                ; preds = %dec_label_pc_e804
  %188 = urem i32 %arg1, 256
  %189 = mul nuw nsw i32 %188, 24, !insn.addr !2219
  %190 = add i32 %189, ptrtoint (i32* @global_var_3368e8 to i32), !insn.addr !2220
  %191 = inttoptr i32 %190 to i32*, !insn.addr !2221
  %192 = call i32 @pthread_mutex_lock(i32* %191), !insn.addr !2221
  %193 = add i32 %188, ptrtoint (i8** @global_var_235b50 to i32), !insn.addr !2222
  %194 = inttoptr i32 %193 to i8*, !insn.addr !2222
  %195 = load i8, i8* %194, align 1, !insn.addr !2222
  %196 = icmp eq i8 %195, 0, !insn.addr !2223
  br i1 %196, label %dec_label_pc_e994.thread8, label %dec_label_pc_e93c.lr.ph, !insn.addr !2223

dec_label_pc_e994.thread8:                        ; preds = %dec_label_pc_e91c
  %197 = call i32 @pthread_mutex_unlock(i32* %191), !insn.addr !2224
  store i32 0, i32* %r3.0.reg2mem
  br label %dec_label_pc_e9f8

dec_label_pc_e93c.lr.ph:                          ; preds = %dec_label_pc_e91c
  %198 = mul nuw nsw i32 %188, 2040, !insn.addr !2225
  %199 = add i32 %198, ptrtoint (i32* @global_var_336948 to i32), !insn.addr !2226
  %200 = add i32 %arg2, 4, !insn.addr !2227
  %201 = inttoptr i32 %200 to i8*, !insn.addr !2228
  store i32 0, i32* %storemerge4.reg2mem
  br label %dec_label_pc_e93c

dec_label_pc_e93c:                                ; preds = %dec_label_pc_e93c.lr.ph, %dec_label_pc_e97c
  %storemerge4.reload = load i32, i32* %storemerge4.reg2mem
  %202 = mul nuw nsw i32 %storemerge4.reload, 204, !insn.addr !2229
  %203 = add i32 %199, %202, !insn.addr !2230
  %204 = load i8, i8* %201, align 1, !insn.addr !2228
  %205 = zext i8 %204 to i32, !insn.addr !2228
  %206 = call i32 @check_hw(i32 %203, i32 %.reload, i32 %205, i32 0), !insn.addr !2231
  %207 = icmp eq i32 %206, 0, !insn.addr !2232
  br i1 %207, label %dec_label_pc_e994.thread, label %dec_label_pc_e97c, !insn.addr !2233

dec_label_pc_e97c:                                ; preds = %dec_label_pc_e93c
  %208 = add nuw nsw i32 %storemerge4.reload, 1, !insn.addr !2234
  %209 = load i8, i8* %194, align 1, !insn.addr !2222
  %210 = zext i8 %209 to i32, !insn.addr !2222
  %211 = icmp ult i32 %208, %210, !insn.addr !2223
  store i32 %208, i32* %storemerge4.reg2mem, !insn.addr !2223
  br i1 %211, label %dec_label_pc_e93c, label %dec_label_pc_e994, !insn.addr !2223

dec_label_pc_e994.thread:                         ; preds = %dec_label_pc_e93c
  %212 = call i32 @__asm_nop(i32 0, i32 %.reload, i32 %205, i32 0), !insn.addr !2185
  %213 = call i32 @pthread_mutex_unlock(i32* %191), !insn.addr !2224
  store i32 0, i32* %r3.0.reg2mem
  br label %dec_label_pc_e9f8

dec_label_pc_e994:                                ; preds = %dec_label_pc_e97c
  %phitmp = icmp eq i32 %206, 1
  %214 = call i32 @pthread_mutex_unlock(i32* %191), !insn.addr !2224
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !2235
  br i1 %phitmp, label %dec_label_pc_e9b4, label %dec_label_pc_e9f8, !insn.addr !2235

dec_label_pc_e9b4:                                ; preds = %dec_label_pc_e994
  %215 = add i32 %157, ptrtoint (i32* @global_var_35b14 to i32), !insn.addr !2236
  %216 = inttoptr i32 %215 to i32*, !insn.addr !2236
  %217 = load i32, i32* %216, align 4, !insn.addr !2236
  %218 = add i32 %217, 1, !insn.addr !2237
  store i32 %218, i32* %216, align 4, !insn.addr !2238
  %219 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_292c0, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_29fac, i32 0, i32 0), i32 %188, i32 %stack_var_-20.0.reload, i32 %stack_var_-24.0.reload, i32 %.reload), !insn.addr !2239
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !2239
  br label %dec_label_pc_e9f8, !insn.addr !2239

dec_label_pc_e9f8:                                ; preds = %dec_label_pc_e994.thread8, %dec_label_pc_e994.thread, %dec_label_pc_e874, %dec_label_pc_e8ae, %dec_label_pc_e9b4, %dec_label_pc_e994, %dec_label_pc_e7ac, %dec_label_pc_e744, %dec_label_pc_e6e6
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !2240

; uselistorder directives
  uselistorder i8* %194, { 1, 0 }
  uselistorder i32* %191, { 2, 1, 0, 3 }
  uselistorder i32 %188, { 3, 1, 2, 0 }
  uselistorder i32* %165, { 0, 2, 1, 3 }
  uselistorder i32 %157, { 2, 3, 0, 1, 4 }
  uselistorder i32 %.reload, { 2, 3, 1, 0 }
  uselistorder i32 %116, { 0, 2, 1 }
  uselistorder i32 %stack_var_-28.0, { 0, 1, 3, 2 }
  uselistorder i32 %87, { 1, 0 }
  uselistorder i32 %stack_var_-24.0.reload, { 3, 5, 4, 0, 2, 1 }
  uselistorder i32 %62, { 1, 0 }
  uselistorder i32 %stack_var_-20.0.reload, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %45, { 1, 0 }
  uselistorder i32 %19, { 1, 0 }
  uselistorder i32 %1, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-20.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-24.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder i8* %stack_var_-28.0.shrunk.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %storemerge4.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r3.0.reg2mem, { 0, 5, 6, 2, 1, 4, 3, 9, 8, 7 }
  uselistorder i32 %arg2, { 19, 18, 16, 17, 15, 14, 13, 11, 12, 10, 9, 7, 8, 6, 5, 0, 1, 4, 3, 2, 20, 23, 22, 21 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e9f8, { 4, 5, 1, 0, 3, 2, 6, 7, 8 }
  uselistorder label %dec_label_pc_e93c, { 1, 0 }
  uselistorder label %dec_label_pc_e6d6, { 1, 2, 0 }
}

define i32 @check_register_value(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ea04:
  %storemerge.reg2mem = alloca i32, !insn.addr !2241
  %0 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !2242
  %1 = add i32 %0, 8, !insn.addr !2243
  %2 = inttoptr i32 %1 to i32*, !insn.addr !2243
  %3 = load i32, i32* %2, align 4, !insn.addr !2243
  %4 = icmp ult i32 %3, 511, !insn.addr !2244
  %5 = icmp ne i1 %4, true, !insn.addr !2244
  %6 = icmp eq i32 %3, 511, !insn.addr !2244
  %7 = icmp ne i1 %6, true, !insn.addr !2245
  %8 = icmp eq i1 %5, %7, !insn.addr !2245
  br i1 %8, label %dec_label_pc_eb22, label %dec_label_pc_ea56, !insn.addr !2245

dec_label_pc_ea56:                                ; preds = %dec_label_pc_ea04
  %9 = load i32, i32* @global_var_336850, align 4, !insn.addr !2246
  %switch.selectcmp = icmp eq i32 %9, 1725
  %switch.select = select i1 %switch.selectcmp, i32 8, i32 0
  %switch.selectcmp2 = icmp eq i32 %9, 1722
  %switch.select3 = select i1 %switch.selectcmp2, i32 7, i32 %switch.select
  %10 = inttoptr i32 %0 to i32*, !insn.addr !2247
  %11 = load i32, i32* %10, align 4, !insn.addr !2247
  %12 = mul i32 %11, 10, !insn.addr !2248
  %13 = add i32 %0, 16, !insn.addr !2249
  %14 = add i32 %13, %12, !insn.addr !2250
  %15 = inttoptr i32 %14 to i32*, !insn.addr !2251
  %16 = inttoptr i32 %arg2 to i32*, !insn.addr !2251
  %17 = call i32* @memcpy(i32* %15, i32* %16, i32 %switch.select3), !insn.addr !2251
  %18 = load i32, i32* @global_var_3367d8, align 4
  %19 = inttoptr i32 %18 to i32*, !insn.addr !2252
  %20 = load i32, i32* %19, align 4, !insn.addr !2252
  %21 = add i32 %arg2, -1, !insn.addr !2253
  %22 = add i32 %21, %switch.select3, !insn.addr !2254
  %23 = inttoptr i32 %22 to i8*, !insn.addr !2255
  %24 = load i8, i8* %23, align 1, !insn.addr !2255
  %25 = urem i8 %24, 32
  %26 = mul i32 %20, 10, !insn.addr !2256
  %27 = add i32 %18, 24, !insn.addr !2257
  %28 = add i32 %27, %26, !insn.addr !2258
  %29 = inttoptr i32 %28 to i8*, !insn.addr !2259
  store i8 %25, i8* %29, align 1, !insn.addr !2259
  %30 = load i32, i32* @global_var_3367d8, align 4
  %31 = inttoptr i32 %30 to i32*, !insn.addr !2260
  %32 = load i32, i32* %31, align 4, !insn.addr !2260
  %33 = mul i32 %32, 10, !insn.addr !2261
  %34 = trunc i32 %arg1 to i8, !insn.addr !2262
  %35 = add i32 %30, 25, !insn.addr !2263
  %36 = add i32 %35, %33, !insn.addr !2262
  %37 = inttoptr i32 %36 to i8*, !insn.addr !2262
  store i8 %34, i8* %37, align 1, !insn.addr !2262
  %38 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !2264
  %39 = inttoptr i32 %38 to i32*, !insn.addr !2265
  %40 = load i32, i32* %39, align 4, !insn.addr !2265
  %41 = add i32 %40, 1, !insn.addr !2266
  store i32 %41, i32* %39, align 4, !insn.addr !2267
  %42 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !2268
  %43 = add i32 %42, 8, !insn.addr !2269
  %44 = inttoptr i32 %43 to i32*, !insn.addr !2269
  %45 = load i32, i32* %44, align 4, !insn.addr !2269
  %46 = add i32 %45, 1, !insn.addr !2270
  store i32 %46, i32* %44, align 4, !insn.addr !2271
  %47 = load i32, i32* @global_var_3367d8, align 4, !insn.addr !2272
  %48 = inttoptr i32 %47 to i32*, !insn.addr !2273
  %49 = load i32, i32* %48, align 4, !insn.addr !2273
  %50 = icmp ult i32 %49, 512, !insn.addr !2274
  %51 = icmp ne i1 %50, true, !insn.addr !2274
  %52 = icmp eq i32 %49, 512, !insn.addr !2274
  %53 = icmp ne i1 %51, true, !insn.addr !2275
  %54 = or i1 %52, %53, !insn.addr !2275
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2275
  br i1 %54, label %dec_label_pc_eb3a, label %dec_label_pc_eb10, !insn.addr !2275

dec_label_pc_eb10:                                ; preds = %dec_label_pc_ea56
  store i32 0, i32* %48, align 4, !insn.addr !2276
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !2276
  br label %dec_label_pc_eb3a, !insn.addr !2276

dec_label_pc_eb22:                                ; preds = %dec_label_pc_ea04
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_292f8, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_29f94, i32 0, i32 0)), !insn.addr !2277
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !2278
  br label %dec_label_pc_eb3a, !insn.addr !2278

dec_label_pc_eb3a:                                ; preds = %dec_label_pc_ea56, %dec_label_pc_eb10, %dec_label_pc_eb22
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2279

; uselistorder directives
  uselistorder i32 %49, { 1, 0 }
  uselistorder i32 %30, { 1, 0 }
  uselistorder i32 %18, { 1, 0 }
  uselistorder i32 %3, { 1, 0 }
  uselistorder i32* %storemerge.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32* @global_var_3367d8, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder label %dec_label_pc_eb3a, { 2, 1, 0 }
}

define i32 @add_point(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_eb44:
  %0 = ptrtoint i32* %arg1 to i32
  %1 = add i32 %0, 1, !insn.addr !2280
  %2 = icmp ult i32 %0, %arg2, !insn.addr !2281
  %spec.select = select i1 %2, i32 %1, i32 0
  store i32 %spec.select, i32* %arg1, align 4
  ret i32 %0, !insn.addr !2282
}

define i32 @use_point_sub_1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_eb74:
  %0 = icmp eq i32 %arg1, 0, !insn.addr !2283
  %storemerge.in = select i1 %0, i32 %arg2, i32 %arg1
  %storemerge = add i32 %storemerge.in, -1
  ret i32 %storemerge, !insn.addr !2284
}

define i32 @use_point_add_1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_eb9c:
  %0 = add i32 %arg2, -1, !insn.addr !2285
  %1 = icmp ult i32 %0, %arg1, !insn.addr !2286
  %2 = icmp ne i1 %1, true, !insn.addr !2286
  %3 = icmp eq i32 %0, %arg1, !insn.addr !2286
  %4 = icmp ne i1 %2, true, !insn.addr !2287
  %5 = or i1 %3, %4, !insn.addr !2287
  %6 = add i32 %arg1, 1
  %storemerge = select i1 %5, i32 0, i32 %6
  ret i32 %storemerge, !insn.addr !2288

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @receive_func(i32 %arg1) local_unnamed_addr {
dec_label_pc_ebc4:
  %0 = alloca i32
  %r3.0.reg2mem = alloca i32, !insn.addr !2289
  %r1.6.ph33.reg2mem = alloca i32, !insn.addr !2289
  %.reg2mem83 = alloca i8, !insn.addr !2289
  %.reg2mem81 = alloca i32, !insn.addr !2289
  %r1.5.lcssa.reg2mem = alloca i32, !insn.addr !2289
  %.reg2mem79 = alloca i32, !insn.addr !2289
  %stack_var_-20.0.ph27.reg2mem = alloca i32, !insn.addr !2289
  %r1.5.ph29.reg2mem = alloca i32, !insn.addr !2289
  %.reg2mem77 = alloca i32, !insn.addr !2289
  %storemerge.reg2mem = alloca i32, !insn.addr !2289
  %r1.5.be.reg2mem = alloca i32, !insn.addr !2289
  %stack_var_-20.0.be.reg2mem = alloca i32, !insn.addr !2289
  %.reg2mem75 = alloca i32, !insn.addr !2289
  %r1.4.reg2mem = alloca i32, !insn.addr !2289
  %storemerge1.lcssa.reg2mem = alloca i32, !insn.addr !2289
  %.reg2mem73 = alloca i32, !insn.addr !2289
  %storemerge114.reg2mem = alloca i32, !insn.addr !2289
  %r1.2.reg2mem = alloca i32, !insn.addr !2289
  %.reg2mem71 = alloca i32, !insn.addr !2289
  %storemerge20.reg2mem = alloca i32, !insn.addr !2289
  %stack_var_-20.021.reg2mem = alloca i32, !insn.addr !2289
  %r1.522.reg2mem = alloca i32, !insn.addr !2289
  %.reg2mem69 = alloca i32, !insn.addr !2289
  %r1.0.lcssa.reg2mem = alloca i32, !insn.addr !2289
  %.reg2mem67 = alloca i32, !insn.addr !2289
  %storemerge312.reg2mem = alloca i32, !insn.addr !2289
  %r1.613.reg2mem = alloca i32, !insn.addr !2289
  %.reg2mem65 = alloca i8, !insn.addr !2289
  %.reg2mem = alloca i32, !insn.addr !2289
  %1 = load i32, i32* %0
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %2 = add i32 %arg1, 1, !insn.addr !2290
  %3 = inttoptr i32 %2 to i8*, !insn.addr !2290
  %4 = load i8, i8* %3, align 1, !insn.addr !2290
  store i32 0, i32* %stack_var_-68, align 4, !insn.addr !2291
  store i32 0, i32* %stack_var_-72, align 4, !insn.addr !2292
  %5 = load i32, i32* @global_var_336850, align 4, !insn.addr !2293
  %switch.selectcmp = icmp eq i32 %5, 1725
  %switch.select = select i1 %switch.selectcmp, i32 10, i32 0
  %switch.selectcmp5 = icmp eq i32 %5, 1722
  %switch.select6 = select i1 %switch.selectcmp5, i32 9, i32 %switch.select
  %6 = mul nuw nsw i32 %switch.select6, 200, !insn.addr !2294
  %7 = call i32* @malloc(i32 %6), !insn.addr !2295
  %8 = ptrtoint i32* %7 to i32, !insn.addr !2295
  %9 = icmp eq i32* %7, null, !insn.addr !2296
  br i1 %9, label %dec_label_pc_ec4a, label %dec_label_pc_ec60, !insn.addr !2297

dec_label_pc_ec4a:                                ; preds = %dec_label_pc_ebc4
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_2931c, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_29f84, i32 0, i32 0)), !insn.addr !2298
  store i32 %8, i32* %r3.0.reg2mem, !insn.addr !2299
  br label %dec_label_pc_ef4e, !insn.addr !2299

dec_label_pc_ec60:                                ; preds = %dec_label_pc_ebc4
  %11 = mul nuw nsw i32 %switch.select6, 100, !insn.addr !2300
  %12 = call i32* @malloc(i32 %11), !insn.addr !2301
  %13 = ptrtoint i32* %12 to i32, !insn.addr !2301
  %14 = icmp eq i32* %12, null, !insn.addr !2302
  br i1 %14, label %dec_label_pc_ec78, label %dec_label_pc_ec94, !insn.addr !2303

dec_label_pc_ec78:                                ; preds = %dec_label_pc_ec60
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_2931c, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_29f84, i32 0, i32 0)), !insn.addr !2304
  call void @free(i32* nonnull %7), !insn.addr !2305
  store i32 %13, i32* %r3.0.reg2mem, !insn.addr !2306
  br label %dec_label_pc_ef4e, !insn.addr !2306

dec_label_pc_ec94:                                ; preds = %dec_label_pc_ec60
  %16 = call i32* @malloc(i32 %switch.select6), !insn.addr !2307
  %17 = ptrtoint i32* %16 to i32, !insn.addr !2307
  %18 = icmp eq i32* %16, null, !insn.addr !2308
  br i1 %18, label %dec_label_pc_eca4, label %dec_label_pc_ecc6, !insn.addr !2309

dec_label_pc_eca4:                                ; preds = %dec_label_pc_ec94
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_2931c, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_29f84, i32 0, i32 0)), !insn.addr !2310
  call void @free(i32* nonnull %12), !insn.addr !2311
  call void @free(i32* nonnull %7), !insn.addr !2312
  store i32 %17, i32* %r3.0.reg2mem, !insn.addr !2313
  br label %dec_label_pc_ef4e, !insn.addr !2313

dec_label_pc_ecc6:                                ; preds = %dec_label_pc_ec94
  %20 = urem i32 %1, 256, !insn.addr !2314
  %21 = zext i8 %4 to i32, !insn.addr !2315
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_29338, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_29f84, i32 0, i32 0), i32 %20, i32 %21), !insn.addr !2316
  %23 = call i32 @uart_flush_rx(i32 %20), !insn.addr !2317
  %24 = add i32 %20, ptrtoint (i8** @global_var_35ae4 to i32), !insn.addr !2318
  %25 = inttoptr i32 %24 to i8*, !insn.addr !2318
  %26 = load i8, i8* %25, align 1, !insn.addr !2318
  %27 = icmp eq i8 %26, 0, !insn.addr !2319
  br i1 %27, label %dec_label_pc_ef30, label %dec_label_pc_ed02.lr.ph.lr.ph, !insn.addr !2320

dec_label_pc_ed02.lr.ph.lr.ph:                    ; preds = %dec_label_pc_ecc6
  %28 = add i32 %20, ptrtoint (i8** @global_var_35ae0 to i32)
  %29 = inttoptr i32 %28 to i8*
  %30 = add nsw i32 %switch.select6, -1
  %31 = icmp eq i32 %30, 0
  %32 = icmp eq i32 %switch.select6, 0
  %33 = add i32 %30, %17
  %34 = inttoptr i32 %33 to i8*
  %35 = add i32 %20, ptrtoint (i8** @global_var_35ad8 to i32)
  %36 = inttoptr i32 %35 to i8*
  %37 = add i32 %20, ptrtoint (i8** @global_var_35adc to i32)
  %38 = inttoptr i32 %37 to i8*
  %39 = add i32 %17, 2
  store i32 %23, i32* %.reg2mem81
  store i8 %26, i8* %.reg2mem83
  store i32 ptrtoint ([13 x i8]* @global_var_29f84 to i32), i32* %r1.6.ph33.reg2mem
  br label %dec_label_pc_ed02.lr.ph

dec_label_pc_ecf8:                                ; preds = %dec_label_pc_ed02, %dec_label_pc_ecf8
  %40 = call i32 @usleep(i32 2000), !insn.addr !2321
  %41 = load i8, i8* %29, align 1, !insn.addr !2322
  %42 = icmp eq i8 %41, 0, !insn.addr !2323
  br i1 %42, label %dec_label_pc_ed16, label %dec_label_pc_ecf8, !insn.addr !2324

dec_label_pc_ed02:                                ; preds = %dec_label_pc_ed02.lr.ph, %dec_label_pc_ef14
  %r1.613.reload = load i32, i32* %r1.613.reg2mem
  %.reload66 = load i8, i8* %.reg2mem65
  %.reload = load i32, i32* %.reg2mem, !insn.addr !2325
  %43 = zext i8 %.reload66 to i32, !insn.addr !2318
  %44 = call i32 @__asm_nop(i32 %.reload, i32 %r1.613.reload, i32 %20, i32 %43), !insn.addr !2325
  %45 = load i8, i8* %29, align 1, !insn.addr !2322
  %46 = icmp eq i8 %45, 0, !insn.addr !2323
  br i1 %46, label %dec_label_pc_ed16, label %dec_label_pc_ecf8, !insn.addr !2324

dec_label_pc_ed16:                                ; preds = %dec_label_pc_ecf8, %dec_label_pc_ed02
  %47 = call i32 @usleep(i32 300), !insn.addr !2326
  %48 = call i32 @uart_receive(i32 %20, i32 %8, i32 %switch.select6, i32 %20), !insn.addr !2327
  %49 = icmp eq i32 %48, 0, !insn.addr !2328
  store i32 0, i32* %storemerge312.reg2mem, !insn.addr !2329
  store i32 0, i32* %.reg2mem67, !insn.addr !2329
  store i32 %8, i32* %r1.0.lcssa.reg2mem, !insn.addr !2329
  br i1 %49, label %dec_label_pc_ed60, label %dec_label_pc_ed36, !insn.addr !2329

dec_label_pc_ed36:                                ; preds = %dec_label_pc_ed16, %dec_label_pc_ed36
  %storemerge312.reload = load i32, i32* %storemerge312.reg2mem
  %50 = load i32, i32* %stack_var_-68, align 4, !insn.addr !2330
  %51 = add i32 %50, %13, !insn.addr !2331
  %52 = add i32 %storemerge312.reload, %8, !insn.addr !2332
  %53 = inttoptr i32 %52 to i8*, !insn.addr !2333
  %54 = load i8, i8* %53, align 1, !insn.addr !2333
  %55 = inttoptr i32 %51 to i8*, !insn.addr !2334
  store i8 %54, i8* %55, align 1, !insn.addr !2334
  %56 = call i32 @add_point(i32* nonnull %stack_var_-68, i32 %11), !insn.addr !2335
  %57 = add nuw i32 %storemerge312.reload, 1, !insn.addr !2336
  %58 = icmp ult i32 %57, %48, !insn.addr !2328
  store i32 %57, i32* %storemerge312.reg2mem, !insn.addr !2329
  store i32 %56, i32* %.reg2mem67, !insn.addr !2329
  store i32 %11, i32* %r1.0.lcssa.reg2mem, !insn.addr !2329
  br i1 %58, label %dec_label_pc_ed36, label %dec_label_pc_ed60, !insn.addr !2329

dec_label_pc_ed60:                                ; preds = %dec_label_pc_ed36, %dec_label_pc_ed16
  %r1.0.lcssa.reload = load i32, i32* %r1.0.lcssa.reg2mem
  %.reload68 = load i32, i32* %.reg2mem67, !insn.addr !2337
  %59 = load i32, i32* %stack_var_-72, align 4, !insn.addr !2338
  %60 = load i32, i32* %stack_var_-68, align 4, !insn.addr !2339
  %61 = icmp eq i32 %60, %59, !insn.addr !2340
  br i1 %61, label %dec_label_pc_ef14, label %dec_label_pc_ed6a, !insn.addr !2341

dec_label_pc_ed6a:                                ; preds = %dec_label_pc_ed60
  %62 = icmp ult i32 %60, %59, !insn.addr !2342
  %storemerge2.p.v = select i1 %62, i32 %11, i32 0
  %storemerge2.p = sub i32 %60, %59
  %storemerge2 = add i32 %storemerge2.p.v, %storemerge2.p
  %63 = icmp ult i32 %storemerge2, %switch.select6, !insn.addr !2343
  store i32 %.reload68, i32* %.reg2mem77, !insn.addr !2344
  store i32 %r1.0.lcssa.reload, i32* %r1.5.ph29.reg2mem, !insn.addr !2344
  store i32 %storemerge2, i32* %stack_var_-20.0.ph27.reg2mem, !insn.addr !2344
  store i32 %.reload68, i32* %.reg2mem79, !insn.addr !2344
  store i32 %r1.0.lcssa.reload, i32* %r1.5.lcssa.reg2mem, !insn.addr !2344
  br i1 %63, label %dec_label_pc_ef16.loopexit, label %dec_label_pc_ed8e.lr.ph, !insn.addr !2344

dec_label_pc_ed8e:                                ; preds = %dec_label_pc_ed8e.lr.ph, %dec_label_pc_ef08.backedge
  %stack_var_-20.021.reload = load i32, i32* %stack_var_-20.021.reg2mem
  %r1.522.reload = load i32, i32* %r1.522.reg2mem
  %.reload70 = load i32, i32* %.reg2mem69
  %64 = load i32, i32* %stack_var_-72, align 4, !insn.addr !2345
  %65 = add i32 %64, %13, !insn.addr !2346
  %66 = inttoptr i32 %65 to i8*, !insn.addr !2347
  %67 = load i8, i8* %66, align 1, !insn.addr !2347
  %68 = icmp eq i8 %67, -86, !insn.addr !2348
  store i32 %.reload70, i32* %.reg2mem71, !insn.addr !2349
  store i32 %r1.522.reload, i32* %r1.2.reg2mem, !insn.addr !2349
  br i1 %68, label %dec_label_pc_ed9a, label %dec_label_pc_ede2, !insn.addr !2349

dec_label_pc_ed9a:                                ; preds = %dec_label_pc_ed8e
  %69 = call i32 @use_point_add_1(i32 %64, i32 %11), !insn.addr !2350
  %70 = add i32 %69, %13, !insn.addr !2351
  %71 = inttoptr i32 %70 to i8*, !insn.addr !2352
  %72 = load i8, i8* %71, align 1, !insn.addr !2352
  %73 = icmp eq i8 %72, 85, !insn.addr !2353
  store i32 %69, i32* %.reg2mem71, !insn.addr !2354
  store i32 %11, i32* %r1.2.reg2mem, !insn.addr !2354
  br i1 %73, label %dec_label_pc_edd8.preheader, label %dec_label_pc_ede2, !insn.addr !2354

dec_label_pc_edd8.preheader:                      ; preds = %dec_label_pc_ed9a
  store i32 0, i32* %storemerge20.reg2mem, !insn.addr !2355
  br i1 %32, label %dec_label_pc_ee84, label %dec_label_pc_edb6, !insn.addr !2355

dec_label_pc_edb6:                                ; preds = %dec_label_pc_edd8.preheader, %dec_label_pc_edb6
  %storemerge20.reload = load i32, i32* %storemerge20.reg2mem
  %74 = add i32 %storemerge20.reload, %17, !insn.addr !2356
  %75 = load i32, i32* %stack_var_-72, align 4, !insn.addr !2357
  %76 = add i32 %75, %13, !insn.addr !2358
  %77 = inttoptr i32 %76 to i8*, !insn.addr !2359
  %78 = load i8, i8* %77, align 1, !insn.addr !2359
  %79 = inttoptr i32 %74 to i8*, !insn.addr !2360
  store i8 %78, i8* %79, align 1, !insn.addr !2360
  %80 = call i32 @add_point(i32* nonnull %stack_var_-72, i32 %11), !insn.addr !2361
  %81 = add nuw nsw i32 %storemerge20.reload, 1, !insn.addr !2362
  %82 = icmp ult i32 %81, %switch.select6, !insn.addr !2363
  store i32 %81, i32* %storemerge20.reg2mem, !insn.addr !2355
  br i1 %82, label %dec_label_pc_edb6, label %dec_label_pc_ee84, !insn.addr !2355

dec_label_pc_ede2:                                ; preds = %dec_label_pc_ed9a, %dec_label_pc_ed8e
  %r1.2.reload = load i32, i32* %r1.2.reg2mem
  %.reload72 = load i32, i32* %.reg2mem71
  store i32 0, i32* %storemerge114.reg2mem, !insn.addr !2364
  store i32 %.reload72, i32* %.reg2mem73, !insn.addr !2364
  store i32 0, i32* %storemerge1.lcssa.reg2mem, !insn.addr !2364
  store i32 %r1.2.reload, i32* %r1.4.reg2mem, !insn.addr !2364
  br i1 %31, label %dec_label_pc_ee7a, label %dec_label_pc_ede8, !insn.addr !2364

dec_label_pc_ede8:                                ; preds = %dec_label_pc_ede2, %dec_label_pc_ee0a
  %storemerge114.reload = load i32, i32* %storemerge114.reg2mem
  %83 = load i32, i32* %stack_var_-72, align 4, !insn.addr !2365
  %84 = add i32 %83, %13, !insn.addr !2366
  %85 = inttoptr i32 %84 to i8*, !insn.addr !2367
  %86 = load i8, i8* %85, align 1, !insn.addr !2367
  %87 = icmp eq i8 %86, -86, !insn.addr !2368
  br i1 %87, label %dec_label_pc_edf4, label %dec_label_pc_ee0a, !insn.addr !2369

dec_label_pc_edf4:                                ; preds = %dec_label_pc_ede8
  %88 = call i32 @use_point_add_1(i32 %83, i32 %11), !insn.addr !2370
  %89 = add i32 %88, %13, !insn.addr !2371
  %90 = inttoptr i32 %89 to i8*, !insn.addr !2372
  %91 = load i8, i8* %90, align 1, !insn.addr !2372
  %92 = icmp eq i8 %91, 85, !insn.addr !2373
  store i32 %88, i32* %.reg2mem73, !insn.addr !2374
  store i32 %storemerge114.reload, i32* %storemerge1.lcssa.reg2mem, !insn.addr !2374
  store i32 %11, i32* %r1.4.reg2mem, !insn.addr !2374
  br i1 %92, label %dec_label_pc_ee7a, label %dec_label_pc_ee0a, !insn.addr !2374

dec_label_pc_ee0a:                                ; preds = %dec_label_pc_ede8, %dec_label_pc_edf4
  %93 = call i32 @add_point(i32* nonnull %stack_var_-72, i32 %11), !insn.addr !2375
  %94 = load i32, i32* %stack_var_-72, align 4, !insn.addr !2376
  %95 = call i32 @use_point_sub_1(i32 %94, i32 %11), !insn.addr !2377
  %96 = add i32 %95, %13, !insn.addr !2378
  %97 = inttoptr i32 %96 to i8*, !insn.addr !2379
  %98 = load i8, i8* %97, align 1, !insn.addr !2379
  %99 = zext i8 %98 to i32, !insn.addr !2379
  %100 = load i32, i32* %stack_var_-72, align 4
  %101 = add i32 %100, %13, !insn.addr !2380
  %102 = inttoptr i32 %101 to i8*, !insn.addr !2381
  %103 = load i8, i8* %102, align 1, !insn.addr !2381
  %104 = zext i8 %103 to i32, !insn.addr !2381
  %105 = call i32 @use_point_add_1(i32 %100, i32 %11), !insn.addr !2382
  %106 = add i32 %105, %13, !insn.addr !2383
  %107 = inttoptr i32 %106 to i8*, !insn.addr !2384
  %108 = load i8, i8* %107, align 1, !insn.addr !2384
  %109 = zext i8 %108 to i32, !insn.addr !2384
  %110 = load i32, i32* %stack_var_-72, align 4, !insn.addr !2385
  %111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_29360, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_29f84, i32 0, i32 0), i32 %99, i32 %104, i32 %109, i32 %110), !insn.addr !2386
  %112 = add i32 %storemerge114.reload, 1, !insn.addr !2387
  %113 = icmp ult i32 %30, %112, !insn.addr !2388
  %114 = icmp ne i1 %113, true, !insn.addr !2388
  %115 = icmp eq i32 %30, %112, !insn.addr !2388
  %116 = icmp ne i1 %115, true, !insn.addr !2364
  %117 = icmp eq i1 %114, %116, !insn.addr !2364
  store i32 %112, i32* %storemerge114.reg2mem, !insn.addr !2364
  store i32 %111, i32* %.reg2mem73, !insn.addr !2364
  store i32 %112, i32* %storemerge1.lcssa.reg2mem, !insn.addr !2364
  store i32 ptrtoint ([13 x i8]* @global_var_29f84 to i32), i32* %r1.4.reg2mem, !insn.addr !2364
  br i1 %117, label %dec_label_pc_ede8, label %dec_label_pc_ee7a, !insn.addr !2364

dec_label_pc_ee7a:                                ; preds = %dec_label_pc_ee0a, %dec_label_pc_edf4, %dec_label_pc_ede2
  %r1.4.reload = load i32, i32* %r1.4.reg2mem
  %storemerge1.lcssa.reload = load i32, i32* %storemerge1.lcssa.reg2mem
  %.reload74 = load i32, i32* %.reg2mem73
  %118 = sub i32 %stack_var_-20.021.reload, %storemerge1.lcssa.reload, !insn.addr !2389
  store i32 %.reload74, i32* %.reg2mem75, !insn.addr !2390
  store i32 %118, i32* %stack_var_-20.0.be.reg2mem, !insn.addr !2390
  store i32 %r1.4.reload, i32* %r1.5.be.reg2mem, !insn.addr !2390
  br label %dec_label_pc_ef08.backedge, !insn.addr !2390

dec_label_pc_ef08.backedge:                       ; preds = %dec_label_pc_ee7a, %dec_label_pc_eea2, %dec_label_pc_eeb4
  %r1.5.be.reload = load i32, i32* %r1.5.be.reg2mem
  %stack_var_-20.0.be.reload = load i32, i32* %stack_var_-20.0.be.reg2mem
  %.reload76 = load i32, i32* %.reg2mem75
  %119 = icmp ult i32 %stack_var_-20.0.be.reload, %switch.select6, !insn.addr !2343
  store i32 %.reload76, i32* %.reg2mem69, !insn.addr !2344
  store i32 %r1.5.be.reload, i32* %r1.522.reg2mem, !insn.addr !2344
  store i32 %stack_var_-20.0.be.reload, i32* %stack_var_-20.021.reg2mem, !insn.addr !2344
  store i32 %.reload76, i32* %.reg2mem79, !insn.addr !2344
  store i32 %r1.5.be.reload, i32* %r1.5.lcssa.reg2mem, !insn.addr !2344
  br i1 %119, label %dec_label_pc_ef16.loopexit, label %dec_label_pc_ed8e, !insn.addr !2344

dec_label_pc_ee84:                                ; preds = %dec_label_pc_edb6, %dec_label_pc_edd8.preheader
  %120 = sub i32 %stack_var_-20.021.reload, %switch.select6, !insn.addr !2391
  %121 = load i8, i8* %34, align 1, !insn.addr !2392
  %122 = zext i8 %121 to i32, !insn.addr !2392
  %123 = call i32 @is_nonce_or_reg_value(i32 %122), !insn.addr !2393
  %124 = icmp eq i32 %123, 0, !insn.addr !2394
  br i1 %124, label %dec_label_pc_eee8, label %dec_label_pc_eea2, !insn.addr !2395

dec_label_pc_eea2:                                ; preds = %dec_label_pc_ee84
  %125 = load i8, i8* %36, align 1, !insn.addr !2396
  %126 = icmp eq i8 %125, 0, !insn.addr !2397
  store i32 %123, i32* %.reg2mem75, !insn.addr !2398
  store i32 %120, i32* %stack_var_-20.0.be.reg2mem, !insn.addr !2398
  store i32 %11, i32* %r1.5.be.reg2mem, !insn.addr !2398
  br i1 %126, label %dec_label_pc_ef08.backedge, label %dec_label_pc_eeb4, !insn.addr !2398

dec_label_pc_eeb4:                                ; preds = %dec_label_pc_eea2
  %127 = load i8, i8* %38, align 1, !insn.addr !2399
  %128 = icmp eq i8 %127, 0, !insn.addr !2400
  store i32 %123, i32* %.reg2mem75, !insn.addr !2401
  store i32 %120, i32* %stack_var_-20.0.be.reg2mem, !insn.addr !2401
  store i32 %11, i32* %r1.5.be.reg2mem, !insn.addr !2401
  br i1 %128, label %dec_label_pc_ef08.backedge, label %dec_label_pc_eec6, !insn.addr !2401

dec_label_pc_eec6:                                ; preds = %dec_label_pc_eeb4
  %129 = call i32 @check_nonce(i32 %20, i32 %39), !insn.addr !2402
  store i32 %129, i32* %storemerge.reg2mem
  br label %dec_label_pc_ef08.outer.backedge

dec_label_pc_ef08.outer.backedge:                 ; preds = %dec_label_pc_eec6, %dec_label_pc_eee8
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %130 = icmp ult i32 %120, %switch.select6, !insn.addr !2343
  store i32 %storemerge.reload, i32* %.reg2mem77, !insn.addr !2344
  store i32 %39, i32* %r1.5.ph29.reg2mem, !insn.addr !2344
  store i32 %120, i32* %stack_var_-20.0.ph27.reg2mem, !insn.addr !2344
  store i32 %storemerge.reload, i32* %.reg2mem79, !insn.addr !2344
  store i32 %39, i32* %r1.5.lcssa.reg2mem, !insn.addr !2344
  br i1 %130, label %dec_label_pc_ef16.loopexit, label %dec_label_pc_ed8e.lr.ph, !insn.addr !2344

dec_label_pc_eee8:                                ; preds = %dec_label_pc_ee84
  %131 = call i32 @check_register_value(i32 %20, i32 %39), !insn.addr !2403
  store i32 %131, i32* %storemerge.reg2mem
  br label %dec_label_pc_ef08.outer.backedge

dec_label_pc_ed8e.lr.ph:                          ; preds = %dec_label_pc_ed6a, %dec_label_pc_ef08.outer.backedge
  %stack_var_-20.0.ph27.reload = load i32, i32* %stack_var_-20.0.ph27.reg2mem
  %r1.5.ph29.reload = load i32, i32* %r1.5.ph29.reg2mem
  %.reload78 = load i32, i32* %.reg2mem77
  store i32 %.reload78, i32* %.reg2mem69
  store i32 %r1.5.ph29.reload, i32* %r1.522.reg2mem
  store i32 %stack_var_-20.0.ph27.reload, i32* %stack_var_-20.021.reg2mem
  br label %dec_label_pc_ed8e

dec_label_pc_ef14:                                ; preds = %dec_label_pc_ed60
  %132 = call i32 @__asm_nop(i32 %.reload68, i32 %r1.0.lcssa.reload, i32 %59, i32 %59), !insn.addr !2337
  %133 = load i8, i8* %25, align 1, !insn.addr !2318
  %134 = icmp eq i8 %133, 0, !insn.addr !2319
  store i32 %132, i32* %.reg2mem, !insn.addr !2320
  store i8 %133, i8* %.reg2mem65, !insn.addr !2320
  store i32 %r1.0.lcssa.reload, i32* %r1.613.reg2mem, !insn.addr !2320
  br i1 %134, label %dec_label_pc_ef30, label %dec_label_pc_ed02, !insn.addr !2320

dec_label_pc_ef16.loopexit:                       ; preds = %dec_label_pc_ef08.outer.backedge, %dec_label_pc_ef08.backedge, %dec_label_pc_ed6a
  %r1.5.lcssa.reload = load i32, i32* %r1.5.lcssa.reg2mem
  %.reload80 = load i32, i32* %.reg2mem79
  %135 = load i8, i8* %25, align 1, !insn.addr !2318
  %136 = icmp eq i8 %135, 0, !insn.addr !2319
  store i32 %.reload80, i32* %.reg2mem81, !insn.addr !2320
  store i8 %135, i8* %.reg2mem83, !insn.addr !2320
  store i32 %r1.5.lcssa.reload, i32* %r1.6.ph33.reg2mem, !insn.addr !2320
  br i1 %136, label %dec_label_pc_ef30, label %dec_label_pc_ed02.lr.ph, !insn.addr !2320

dec_label_pc_ed02.lr.ph:                          ; preds = %dec_label_pc_ed02.lr.ph.lr.ph, %dec_label_pc_ef16.loopexit
  %r1.6.ph33.reload = load i32, i32* %r1.6.ph33.reg2mem
  %.reload84 = load i8, i8* %.reg2mem83
  %.reload82 = load i32, i32* %.reg2mem81
  store i32 %.reload82, i32* %.reg2mem
  store i8 %.reload84, i8* %.reg2mem65
  store i32 %r1.6.ph33.reload, i32* %r1.613.reg2mem
  br label %dec_label_pc_ed02

dec_label_pc_ef30:                                ; preds = %dec_label_pc_ef16.loopexit, %dec_label_pc_ef14, %dec_label_pc_ecc6
  call void @free(i32* nonnull %16), !insn.addr !2404
  call void @free(i32* nonnull %12), !insn.addr !2405
  call void @free(i32* nonnull %7), !insn.addr !2406
  store i32 %8, i32* %r3.0.reg2mem, !insn.addr !2406
  br label %dec_label_pc_ef4e, !insn.addr !2406

dec_label_pc_ef4e:                                ; preds = %dec_label_pc_ef30, %dec_label_pc_eca4, %dec_label_pc_ec78, %dec_label_pc_ec4a
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !2407

; uselistorder directives
  uselistorder i32 %120, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-20.0.be.reload, { 1, 0 }
  uselistorder i32 %112, { 0, 1, 3, 2 }
  uselistorder i32 %100, { 1, 0 }
  uselistorder i32 %83, { 1, 0 }
  uselistorder i32 %storemerge114.reload, { 1, 0 }
  uselistorder i32 %64, { 1, 0 }
  uselistorder i32 %stack_var_-20.021.reload, { 1, 0 }
  uselistorder i32 %59, { 2, 4, 0, 1, 3 }
  uselistorder i32 %.reload68, { 2, 0, 1 }
  uselistorder i32 %r1.0.lcssa.reload, { 3, 2, 0, 1 }
  uselistorder i32 %48, { 1, 0 }
  uselistorder i32 %39, { 2, 0, 1, 3 }
  uselistorder i32 %30, { 2, 3, 0, 1 }
  uselistorder i8* %25, { 1, 2, 0 }
  uselistorder i32 %20, { 3, 2, 4, 5, 8, 1, 0, 6, 7, 9, 10 }
  uselistorder i32 %17, { 2, 3, 1, 0 }
  uselistorder i32 %13, { 2, 3, 4, 5, 6, 1, 7, 8, 9, 0 }
  uselistorder i32* %12, { 1, 0, 2, 3 }
  uselistorder i32 %11, { 0, 1, 12, 10, 11, 2, 9, 8, 3, 7, 5, 4, 6, 13 }
  uselistorder i32 %8, { 0, 3, 2, 4, 1 }
  uselistorder i32* %7, { 2, 1, 0, 3, 4 }
  uselistorder i32 %switch.select6, { 2, 8, 7, 9, 1, 6, 0, 10, 5, 4, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-72, { 2, 3, 4, 0, 5, 1, 6, 7, 8, 9 }
  uselistorder i32* %.reg2mem, { 2, 1, 0 }
  uselistorder i8* %.reg2mem65, { 2, 1, 0 }
  uselistorder i32* %r1.613.reg2mem, { 2, 1, 0 }
  uselistorder i32* %storemerge312.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem69, { 2, 1, 0 }
  uselistorder i32* %r1.522.reg2mem, { 2, 1, 0 }
  uselistorder i32* %stack_var_-20.021.reg2mem, { 2, 1, 0 }
  uselistorder i32* %storemerge20.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem71, { 0, 2, 1 }
  uselistorder i32* %r1.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge114.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem73, { 0, 2, 1, 3 }
  uselistorder i32* %storemerge1.lcssa.reg2mem, { 0, 2, 1, 3 }
  uselistorder i32* %r1.4.reg2mem, { 0, 2, 1, 3 }
  uselistorder i32* %.reg2mem75, { 2, 3, 0, 1 }
  uselistorder i32* %stack_var_-20.0.be.reg2mem, { 2, 3, 0, 1 }
  uselistorder i32* %r1.5.be.reg2mem, { 2, 3, 0, 1 }
  uselistorder i32* %storemerge.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem77, { 0, 2, 1 }
  uselistorder i32* %r1.5.ph29.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20.0.ph27.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @use_point_add_1, { 2, 1, 0 }
  uselistorder i32 (i32*, i32)* @add_point, { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_29f84 to i32), { 1, 0 }
  uselistorder i32 (i32)* @uart_flush_rx, { 2, 1, 0 }
  uselistorder [13 x i8]* @global_var_29f84, { 1, 0 }
  uselistorder label %dec_label_pc_ed02.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_ed8e.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_ef08.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_ef08.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ee0a, { 1, 0 }
  uselistorder label %dec_label_pc_ede8, { 1, 0 }
  uselistorder label %dec_label_pc_edb6, { 1, 0 }
  uselistorder label %dec_label_pc_ed36, { 1, 0 }
  uselistorder label %dec_label_pc_ed16, { 1, 0 }
}

define i32 @send_func(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef58:
  %0 = alloca i32
  %.reg2mem64 = alloca i32, !insn.addr !2408
  %.reg2mem62 = alloca i32, !insn.addr !2408
  %.reg2mem60 = alloca i32, !insn.addr !2408
  %.lcssa.reg2mem = alloca i32, !insn.addr !2408
  %.reg2mem58 = alloca i32, !insn.addr !2408
  %.reg2mem56 = alloca i32, !insn.addr !2408
  %.pre-phi.reg2mem = alloca i32, !insn.addr !2408
  %.pre-phi25.reg2mem = alloca i32*, !insn.addr !2408
  %.reg2mem54 = alloca i32, !insn.addr !2408
  %.reg2mem52 = alloca i32, !insn.addr !2408
  %.reg2mem50 = alloca i32, !insn.addr !2408
  %storemerge111.reg2mem = alloca i32, !insn.addr !2408
  %.reg2mem48 = alloca i32, !insn.addr !2408
  %.reg2mem46 = alloca i32, !insn.addr !2408
  %.reg2mem44 = alloca i32, !insn.addr !2408
  %.reg2mem42 = alloca i32, !insn.addr !2408
  %storemerge39.reg2mem = alloca i32, !insn.addr !2408
  %storemerge48.reg2mem = alloca i32, !insn.addr !2408
  %storemerge210.reg2mem = alloca i32, !insn.addr !2408
  %.reg2mem40 = alloca i32, !insn.addr !2408
  %storemerge13.reg2mem = alloca i32, !insn.addr !2408
  %.reg2mem38 = alloca i32, !insn.addr !2408
  %.reg2mem36 = alloca i32, !insn.addr !2408
  %.reg2mem = alloca i32, !insn.addr !2408
  %1 = load i32, i32* %0
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-244 = alloca i32, align 4
  %2 = call i32* @memset(i32* nonnull %stack_var_-244, i32 0, i32 184), !insn.addr !2409
  %3 = load i32, i32* @global_var_336848, align 4, !insn.addr !2410
  %4 = icmp eq i32 %3, 0, !insn.addr !2411
  br i1 %4, label %dec_label_pc_ef58.dec_label_pc_f250.preheader_crit_edge, label %dec_label_pc_efaa.lr.ph, !insn.addr !2412

dec_label_pc_ef58.dec_label_pc_f250.preheader_crit_edge: ; preds = %dec_label_pc_ef58
  %.pre18 = load i32, i32* @global_var_33684c, align 4
  %.pre19 = urem i32 %1, 256, !insn.addr !2413
  %.pre20 = mul i32 %.pre19, 4, !insn.addr !2414
  %.pre22 = add i32 %.pre20, ptrtoint (i32* @global_var_35b24 to i32), !insn.addr !2414
  %.pre24 = inttoptr i32 %.pre22 to i32*, !insn.addr !2414
  store i32* %.pre24, i32** %.pre-phi25.reg2mem
  store i32 %.pre19, i32* %.pre-phi.reg2mem
  store i32 0, i32* %.reg2mem56
  store i32 %.pre18, i32* %.reg2mem58
  br label %dec_label_pc_f250.preheader

dec_label_pc_efaa.lr.ph:                          ; preds = %dec_label_pc_ef58
  %5 = urem i32 %1, 256
  %6 = add i32 %5, ptrtoint (i8** @global_var_235b50 to i32)
  %7 = inttoptr i32 %6 to i8*
  %8 = ptrtoint i32* %stack_var_-16 to i32
  %9 = add i32 %8, -226
  %10 = bitcast i32* %stack_var_-244 to i8*
  %11 = mul nuw nsw i32 %5, 24
  %12 = add i32 %11, ptrtoint (i32* @global_var_3368e8 to i32)
  %13 = inttoptr i32 %12 to i32*
  %14 = mul nuw nsw i32 %5, 2040
  %15 = add i32 %14, ptrtoint (i32* @global_var_336948 to i32)
  %16 = inttoptr i32 %15 to i32*
  %17 = mul i32 %5, 4
  %18 = add i32 %17, ptrtoint (i32* @global_var_35b24 to i32)
  %19 = inttoptr i32 %18 to i32*
  %.pre = load i32, i32* @global_var_33684c, align 4
  store i32 %3, i32* %.reg2mem
  store i32 %.pre, i32* %.reg2mem36
  store i32 %.pre, i32* %.reg2mem38
  store i32 0, i32* %storemerge13.reg2mem
  br label %dec_label_pc_efaa

dec_label_pc_efaa:                                ; preds = %dec_label_pc_efaa.lr.ph, %dec_label_pc_f232
  %storemerge13.reload = load i32, i32* %storemerge13.reg2mem
  %.reload39 = load i32, i32* %.reg2mem38, !insn.addr !2415
  %.reload37 = load i32, i32* %.reg2mem36
  %.reload = load i32, i32* %.reg2mem
  %20 = mul i32 %storemerge13.reload, 4, !insn.addr !2416
  %21 = add i32 %20, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 524448), !insn.addr !2417
  %22 = inttoptr i32 %21 to i32*, !insn.addr !2417
  %23 = load i32, i32* %22, align 4, !insn.addr !2417
  %24 = icmp eq i32 %.reload39, 0, !insn.addr !2418
  store i32 %.reload, i32* %.reg2mem50, !insn.addr !2419
  store i32 %.reload37, i32* %.reg2mem52, !insn.addr !2419
  store i32 0, i32* %.reg2mem54, !insn.addr !2419
  br i1 %24, label %dec_label_pc_f232, label %dec_label_pc_f200.preheader.lr.ph, !insn.addr !2419

dec_label_pc_f200.preheader.lr.ph:                ; preds = %dec_label_pc_efaa
  %.pre15 = load i32, i32* @global_var_33681c, align 4
  store i32 %.reload37, i32* %.reg2mem46
  store i32 %.pre15, i32* %.reg2mem48
  store i32 0, i32* %storemerge111.reg2mem
  br label %dec_label_pc_f200.preheader

dec_label_pc_efd4:                                ; preds = %dec_label_pc_f200.preheader, %dec_label_pc_f148
  %storemerge210.reload = load i32, i32* %storemerge210.reg2mem
  %.reload41 = load i32, i32* %.reg2mem40
  store i32 48, i32* %stack_var_-244, align 4, !insn.addr !2420
  %25 = load i32, i32* @global_var_336850, align 4, !insn.addr !2421
  %26 = icmp eq i32 %25, 1725, !insn.addr !2422
  br i1 %26, label %dec_label_pc_f02e, label %dec_label_pc_f03c, !insn.addr !2423

dec_label_pc_f02e:                                ; preds = %dec_label_pc_efd4
  %27 = urem i32 %storemerge210.reload, 256, !insn.addr !2424
  %28 = call i32 @__asm_orn(i32 %27, i32 127), !insn.addr !2425
  br label %dec_label_pc_f03c, !insn.addr !2426

dec_label_pc_f03c:                                ; preds = %dec_label_pc_efd4, %dec_label_pc_f02e
  %29 = mul i32 %.reload41, %storemerge111.reload, !insn.addr !2427
  %30 = add i32 %29, %storemerge210.reload, !insn.addr !2428
  %31 = mul i32 %30, 204, !insn.addr !2429
  %32 = add i32 %31, %23, !insn.addr !2430
  %33 = add i32 %32, 8, !insn.addr !2431
  store i32 0, i32* %storemerge48.reg2mem
  br label %dec_label_pc_f044

dec_label_pc_f044:                                ; preds = %dec_label_pc_f03c, %dec_label_pc_f044
  %storemerge48.reload = load i32, i32* %storemerge48.reg2mem
  %34 = add i32 %33, %storemerge48.reload, !insn.addr !2432
  %35 = inttoptr i32 %34 to i8*, !insn.addr !2433
  %36 = load i8, i8* %35, align 1, !insn.addr !2433
  %37 = add i32 %9, %storemerge48.reload, !insn.addr !2434
  %38 = inttoptr i32 %37 to i8*, !insn.addr !2434
  store i8 %36, i8* %38, align 1, !insn.addr !2434
  %39 = add nuw nsw i32 %storemerge48.reload, 1, !insn.addr !2435
  %40 = icmp ult i32 %39, 180, !insn.addr !2436
  store i32 %39, i32* %storemerge48.reg2mem, !insn.addr !2436
  br i1 %40, label %dec_label_pc_f044, label %dec_label_pc_f074, !insn.addr !2436

dec_label_pc_f074:                                ; preds = %dec_label_pc_f044
  %41 = call i32 @CRC16(i32* nonnull %stack_var_-244, i32 182), !insn.addr !2437
  %42 = call i32 @dcr_uart_send(i32 %5, i8* nonnull %10, i32 184), !insn.addr !2438
  %43 = call i32 @pthread_mutex_lock(i32* %13), !insn.addr !2439
  store i32 8, i32* %storemerge39.reg2mem
  br label %dec_label_pc_f0e0

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_f074, %dec_label_pc_f0e0
  %storemerge39.reload = load i32, i32* %storemerge39.reg2mem
  %44 = mul nuw nsw i32 %storemerge39.reload, 204, !insn.addr !2440
  %45 = add nuw nsw i32 %44, %14, !insn.addr !2441
  %46 = add i32 %45, add (i32 ptrtoint (i32* @global_var_336948 to i32), i32 204), !insn.addr !2442
  %47 = add i32 %45, ptrtoint (i32* @global_var_336948 to i32), !insn.addr !2443
  %48 = inttoptr i32 %46 to i32*, !insn.addr !2444
  %49 = inttoptr i32 %47 to i32*, !insn.addr !2444
  %50 = call i32* @memcpy(i32* %48, i32* %49, i32 204), !insn.addr !2444
  %51 = add nsw i32 %storemerge39.reload, -1, !insn.addr !2445
  %52 = icmp eq i32 %storemerge39.reload, 0, !insn.addr !2446
  store i32 %51, i32* %storemerge39.reg2mem, !insn.addr !2447
  br i1 %52, label %dec_label_pc_f148, label %dec_label_pc_f0e0, !insn.addr !2447

dec_label_pc_f148:                                ; preds = %dec_label_pc_f0e0
  %53 = load i8, i8* %7, align 1, !insn.addr !2448
  %54 = add i8 %53, 1
  %55 = icmp ult i8 %54, 8, !insn.addr !2449
  %56 = icmp ne i1 %55, true, !insn.addr !2449
  %57 = icmp eq i8 %54, 8, !insn.addr !2449
  %58 = icmp ne i1 %56, true, !insn.addr !2450
  %59 = or i1 %57, %58, !insn.addr !2450
  %spec.store.select = select i1 %59, i8 %54, i8 9
  store i8 %spec.store.select, i8* %7, align 1
  %60 = inttoptr i32 %32 to i32*, !insn.addr !2451
  %61 = call i32* @memcpy(i32* %16, i32* %60, i32 204), !insn.addr !2451
  %62 = call i32 @pthread_mutex_unlock(i32* %13), !insn.addr !2452
  %63 = load i32, i32* %19, align 4, !insn.addr !2453
  %64 = add i32 %63, 1, !insn.addr !2454
  store i32 %64, i32* %19, align 4, !insn.addr !2455
  %65 = load i32, i32* @global_var_3368a4, align 4, !insn.addr !2456
  %66 = call i32 @usleep(i32 %65), !insn.addr !2457
  %67 = add i32 %storemerge210.reload, 1, !insn.addr !2458
  %68 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2459
  %69 = icmp ult i32 %68, %67, !insn.addr !2460
  %70 = icmp ne i1 %69, true, !insn.addr !2460
  %71 = icmp eq i32 %68, %67, !insn.addr !2460
  %72 = icmp ne i1 %71, true, !insn.addr !2461
  %73 = icmp eq i1 %70, %72, !insn.addr !2461
  store i32 %68, i32* %.reg2mem40, !insn.addr !2461
  store i32 %67, i32* %storemerge210.reg2mem, !insn.addr !2461
  br i1 %73, label %dec_label_pc_efd4, label %dec_label_pc_f200.dec_label_pc_f214_crit_edge, !insn.addr !2461

dec_label_pc_f200.dec_label_pc_f214_crit_edge:    ; preds = %dec_label_pc_f148
  %.pre16 = load i32, i32* @global_var_33684c, align 4
  store i32 %.pre16, i32* %.reg2mem42
  store i32 %68, i32* %.reg2mem44
  br label %dec_label_pc_f214

dec_label_pc_f214:                                ; preds = %dec_label_pc_f200.preheader, %dec_label_pc_f200.dec_label_pc_f214_crit_edge
  %.reload45 = load i32, i32* %.reg2mem44
  %.reload43 = load i32, i32* %.reg2mem42, !insn.addr !2415
  %74 = add i32 %storemerge111.reload, 1, !insn.addr !2462
  %75 = icmp ult i32 %.reload43, %74, !insn.addr !2418
  %76 = icmp ne i1 %75, true, !insn.addr !2418
  %77 = icmp eq i32 %.reload43, %74, !insn.addr !2418
  %78 = icmp ne i1 %77, true, !insn.addr !2419
  %79 = icmp eq i1 %76, %78, !insn.addr !2419
  store i32 %.reload43, i32* %.reg2mem46, !insn.addr !2419
  store i32 %.reload45, i32* %.reg2mem48, !insn.addr !2419
  store i32 %74, i32* %storemerge111.reg2mem, !insn.addr !2419
  br i1 %79, label %dec_label_pc_f200.preheader, label %dec_label_pc_f21e.dec_label_pc_f232_crit_edge, !insn.addr !2419

dec_label_pc_f200.preheader:                      ; preds = %dec_label_pc_f200.preheader.lr.ph, %dec_label_pc_f214
  %storemerge111.reload = load i32, i32* %storemerge111.reg2mem
  %.reload49 = load i32, i32* %.reg2mem48, !insn.addr !2459
  %.reload47 = load i32, i32* %.reg2mem46
  %80 = icmp eq i32 %.reload49, 0, !insn.addr !2460
  store i32 %.reload49, i32* %.reg2mem40, !insn.addr !2461
  store i32 0, i32* %storemerge210.reg2mem, !insn.addr !2461
  store i32 %.reload47, i32* %.reg2mem42, !insn.addr !2461
  store i32 0, i32* %.reg2mem44, !insn.addr !2461
  br i1 %80, label %dec_label_pc_f214, label %dec_label_pc_efd4, !insn.addr !2461

dec_label_pc_f21e.dec_label_pc_f232_crit_edge:    ; preds = %dec_label_pc_f214
  %.pre17 = load i32, i32* @global_var_336848, align 4
  store i32 %.pre17, i32* %.reg2mem50
  store i32 %.reload43, i32* %.reg2mem52
  store i32 %.reload43, i32* %.reg2mem54
  br label %dec_label_pc_f232

dec_label_pc_f232:                                ; preds = %dec_label_pc_efaa, %dec_label_pc_f21e.dec_label_pc_f232_crit_edge
  %.reload55 = load i32, i32* %.reg2mem54
  %.reload53 = load i32, i32* %.reg2mem52
  %.reload51 = load i32, i32* %.reg2mem50, !insn.addr !2410
  %81 = add i32 %storemerge13.reload, 1, !insn.addr !2463
  %82 = icmp ult i32 %.reload51, %81, !insn.addr !2411
  %83 = icmp ne i1 %82, true, !insn.addr !2411
  %84 = icmp eq i32 %.reload51, %81, !insn.addr !2411
  %85 = icmp ne i1 %84, true, !insn.addr !2412
  %86 = icmp eq i1 %83, %85, !insn.addr !2412
  store i32 %.reload51, i32* %.reg2mem, !insn.addr !2412
  store i32 %.reload53, i32* %.reg2mem36, !insn.addr !2412
  store i32 %.reload55, i32* %.reg2mem38, !insn.addr !2412
  store i32 %81, i32* %storemerge13.reg2mem, !insn.addr !2412
  store i32* %19, i32** %.pre-phi25.reg2mem, !insn.addr !2412
  store i32 %5, i32* %.pre-phi.reg2mem, !insn.addr !2412
  store i32 %.reload51, i32* %.reg2mem56, !insn.addr !2412
  store i32 %.reload53, i32* %.reg2mem58, !insn.addr !2412
  br i1 %86, label %dec_label_pc_efaa, label %dec_label_pc_f250.preheader, !insn.addr !2412

dec_label_pc_f250.preheader:                      ; preds = %dec_label_pc_f232, %dec_label_pc_ef58.dec_label_pc_f250.preheader_crit_edge
  %.reload59 = load i32, i32* %.reg2mem58, !insn.addr !2464
  %.reload57 = load i32, i32* %.reg2mem56, !insn.addr !2465
  %.pre-phi.reload = load i32, i32* %.pre-phi.reg2mem
  %.pre-phi25.reload = load i32*, i32** %.pre-phi25.reg2mem
  %87 = load i32, i32* %.pre-phi25.reload, align 4, !insn.addr !2414
  %88 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2466
  %89 = mul i32 %.reload59, %.reload57, !insn.addr !2467
  %90 = mul i32 %89, %88, !insn.addr !2468
  %91 = icmp ult i32 %87, %90, !insn.addr !2469
  store i32 %87, i32* %.lcssa.reg2mem, !insn.addr !2470
  store i32 %.reload57, i32* %.reg2mem60, !insn.addr !2470
  store i32 %88, i32* %.reg2mem62, !insn.addr !2470
  store i32 %87, i32* %.reg2mem64, !insn.addr !2470
  br i1 %91, label %dec_label_pc_f2f0, label %dec_label_pc_f28a, !insn.addr !2470

dec_label_pc_f28a:                                ; preds = %dec_label_pc_f2f0, %dec_label_pc_f250.preheader
  %.lcssa.reload = load i32, i32* %.lcssa.reg2mem
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_293bc, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_29f78, i32 0, i32 0), i32 %.pre-phi.reload, i32 %.lcssa.reload), !insn.addr !2471
  %93 = call i32 @__asm_nop(i32 %92, i32 ptrtoint ([10 x i8]* @global_var_29f78 to i32), i32 %.pre-phi.reload, i32 %.lcssa.reload), !insn.addr !2472
  %94 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_9418 to i32), i32 131072) to i8*)), !insn.addr !2473
  %95 = call i32 @system(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_29430, i32 0, i32 0)), !insn.addr !2474
  %96 = call i32 @putchar(i32 10), !insn.addr !2475
  %97 = add i32 %.pre-phi.reload, ptrtoint (i8** @global_var_35ae4 to i32), !insn.addr !2476
  %98 = inttoptr i32 %97 to i8*, !insn.addr !2476
  store i8 0, i8* %98, align 1, !insn.addr !2476
  %99 = call i32 @puts(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_29438, i32 0, i32 0)), !insn.addr !2477
  ret i32 ptrtoint (i8** @global_var_35ae4 to i32), !insn.addr !2478

dec_label_pc_f2f0:                                ; preds = %dec_label_pc_f250.preheader, %dec_label_pc_f2f0
  %.reload65 = load i32, i32* %.reg2mem64
  %.reload63 = load i32, i32* %.reg2mem62
  %.reload61 = load i32, i32* %.reg2mem60
  %100 = mul i32 %.reload61, 276, !insn.addr !2479
  %101 = mul i32 %100, %.reload63, !insn.addr !2480
  %102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_293e4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_29f78, i32 0, i32 0), i32 %.pre-phi.reload, i32 %.reload65, i32 %101), !insn.addr !2481
  %103 = load i32, i32* %.pre-phi25.reload, align 4, !insn.addr !2414
  %104 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2466
  %105 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2464
  %106 = load i32, i32* @global_var_336848, align 4, !insn.addr !2465
  %107 = mul i32 %105, %104, !insn.addr !2467
  %108 = mul i32 %107, %106, !insn.addr !2468
  %109 = icmp ult i32 %103, %108, !insn.addr !2469
  store i32 %103, i32* %.lcssa.reg2mem, !insn.addr !2470
  store i32 %106, i32* %.reg2mem60, !insn.addr !2470
  store i32 %104, i32* %.reg2mem62, !insn.addr !2470
  store i32 %103, i32* %.reg2mem64, !insn.addr !2470
  br i1 %109, label %dec_label_pc_f2f0, label %dec_label_pc_f28a, !insn.addr !2470

; uselistorder directives
  uselistorder i32 %.lcssa.reload, { 1, 0 }
  uselistorder i32* %.pre-phi25.reload, { 1, 0 }
  uselistorder i32 %.pre-phi.reload, { 3, 0, 2, 1 }
  uselistorder i32 %81, { 0, 2, 1 }
  uselistorder i32 %.reload51, { 0, 3, 2, 1 }
  uselistorder i32 %.reload49, { 1, 0 }
  uselistorder i32 %storemerge111.reload, { 1, 0 }
  uselistorder i32 %74, { 0, 2, 1 }
  uselistorder i32 %.reload43, { 0, 1, 2, 4, 3 }
  uselistorder i32 %68, { 0, 1, 3, 2 }
  uselistorder i32 %67, { 0, 2, 1 }
  uselistorder i8 %54, { 0, 2, 1 }
  uselistorder i32 %storemerge39.reload, { 2, 0, 1 }
  uselistorder i32 %storemerge48.reload, { 2, 0, 1 }
  uselistorder i32 %storemerge210.reload, { 1, 0, 2 }
  uselistorder i32 %.reload37, { 1, 0 }
  uselistorder i32 %5, { 0, 5, 1, 3, 4, 2 }
  uselistorder i32* %stack_var_-244, { 1, 3, 0, 2 }
  uselistorder i32 %1, { 1, 0 }
  uselistorder i32* %.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem36, { 1, 0, 2 }
  uselistorder i32* %.reg2mem38, { 1, 0, 2 }
  uselistorder i32* %storemerge13.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem40, { 1, 2, 0 }
  uselistorder i32* %storemerge210.reg2mem, { 1, 2, 0 }
  uselistorder i32* %storemerge48.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge39.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem42, { 2, 0, 1 }
  uselistorder i32* %.reg2mem44, { 2, 0, 1 }
  uselistorder i32* %.lcssa.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem60, { 2, 0, 1 }
  uselistorder i32* %.reg2mem62, { 2, 0, 1 }
  uselistorder i32* %.reg2mem64, { 2, 0, 1 }
  uselistorder [10 x i8]* @global_var_29f78, { 1, 0 }
  uselistorder i32 (i32, i8*, i32)* @dcr_uart_send, { 10, 8, 7, 6, 5, 9, 2, 1, 0, 3, 4 }
  uselistorder i32 (i32*, i32)* @CRC16, { 2, 1, 0 }
  uselistorder i32* @global_var_336948, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_336948 to i32), { 3, 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_35b24 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_f2f0, { 1, 0 }
  uselistorder label %dec_label_pc_f232, { 1, 0 }
  uselistorder label %dec_label_pc_f200.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_f0e0, { 1, 0 }
  uselistorder label %dec_label_pc_f044, { 1, 0 }
  uselistorder label %dec_label_pc_f03c, { 1, 0 }
  uselistorder label %dec_label_pc_efaa, { 1, 0 }
}

define i32 @read_temp_func(i32 %arg1) local_unnamed_addr {
dec_label_pc_f348:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = urem i32 %1, 256, !insn.addr !2482
  %3 = add i32 %2, ptrtoint (i8** @global_var_235c1c to i32), !insn.addr !2483
  %4 = inttoptr i32 %3 to i8*, !insn.addr !2483
  %5 = add i32 %2, ptrtoint (i8** @global_var_35adc to i32)
  %6 = inttoptr i32 %5 to i8*
  %7 = add i32 %2, ptrtoint (i8** @global_var_235c20 to i32)
  %8 = inttoptr i32 %7 to i8*
  %9 = add i32 %2, ptrtoint (i8** @global_var_235b54 to i32)
  %10 = inttoptr i32 %9 to i8*
  br label %dec_label_pc_f35a, !insn.addr !2484

dec_label_pc_f35a:                                ; preds = %dec_label_pc_f3fa, %dec_label_pc_f348
  %11 = load i8, i8* %4, align 1, !insn.addr !2483
  %12 = icmp eq i8 %11, 0, !insn.addr !2485
  br i1 %12, label %dec_label_pc_f3fa, label %dec_label_pc_f36a, !insn.addr !2486

dec_label_pc_f36a:                                ; preds = %dec_label_pc_f35a
  %13 = load i8, i8* %6, align 1, !insn.addr !2487
  %14 = icmp eq i8 %13, 0, !insn.addr !2488
  br i1 %14, label %dec_label_pc_f3fa, label %dec_label_pc_f37a, !insn.addr !2489

dec_label_pc_f37a:                                ; preds = %dec_label_pc_f36a
  store i8 1, i8* %8, align 1, !insn.addr !2490
  %15 = load i32, i32* @global_var_3368a4, align 4, !insn.addr !2491
  %16 = mul i32 %15, 15, !insn.addr !2492
  %17 = call i32 @usleep(i32 %16), !insn.addr !2493
  %18 = load i8, i8* @global_var_3368d8, align 1, !insn.addr !2494
  %19 = icmp eq i8 %18, 1, !insn.addr !2495
  br i1 %19, label %dec_label_pc_f3b0, label %dec_label_pc_f3ba, !insn.addr !2496

dec_label_pc_f3b0:                                ; preds = %dec_label_pc_f37a
  %20 = call i32 @read_asic_temperature(i32 %2), !insn.addr !2497
  br label %dec_label_pc_f3ce, !insn.addr !2498

dec_label_pc_f3ba:                                ; preds = %dec_label_pc_f37a
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_29448, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_29f68, i32 0, i32 0)), !insn.addr !2499
  br label %dec_label_pc_f3ce, !insn.addr !2499

dec_label_pc_f3ce:                                ; preds = %dec_label_pc_f3ba, %dec_label_pc_f3b0
  %22 = load i8, i8* %10, align 1, !insn.addr !2500
  %23 = icmp eq i8 %22, 1, !insn.addr !2501
  br i1 %23, label %dec_label_pc_f3ec, label %dec_label_pc_f3e4, !insn.addr !2502

dec_label_pc_f3e4:                                ; preds = %dec_label_pc_f3ce
  %24 = call i32 @set_PWM_according_to_temperature(), !insn.addr !2503
  br label %dec_label_pc_f3ec, !insn.addr !2503

dec_label_pc_f3ec:                                ; preds = %dec_label_pc_f3e4, %dec_label_pc_f3ce
  store i8 0, i8* %8, align 1, !insn.addr !2504
  br label %dec_label_pc_f3fa, !insn.addr !2504

dec_label_pc_f3fa:                                ; preds = %dec_label_pc_f3ec, %dec_label_pc_f36a, %dec_label_pc_f35a
  %25 = call i32 @usleep(i32 ptrtoint (i32* @global_var_f4240 to i32)), !insn.addr !2505
  br label %dec_label_pc_f35a, !insn.addr !2506

; uselistorder directives
  uselistorder i32 %2, { 1, 0, 2, 3, 4 }
  uselistorder i8* @global_var_3368d8, { 4, 3, 2, 1, 0 }
}

define i32 @single_asic_print_lcd(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f408:
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-32 = alloca i8*, align 4
  store i8* inttoptr (i32 538976288 to i8*), i8** %stack_var_-32, align 4, !insn.addr !2507
  %0 = call i32 @display_level_result_on_lcd(), !insn.addr !2508
  %1 = urem i32 %arg2, 2, !insn.addr !2509
  %2 = icmp eq i32 %1, 0, !insn.addr !2510
  br i1 %2, label %dec_label_pc_f44a, label %dec_label_pc_f438, !insn.addr !2511

dec_label_pc_f438:                                ; preds = %dec_label_pc_f408
  %3 = call i32 @write_lcd_no_memset(i32 2, i32* bitcast ([17 x i8]* @global_var_29478 to i32*), i32 16), !insn.addr !2512
  br label %dec_label_pc_f45a, !insn.addr !2513

dec_label_pc_f44a:                                ; preds = %dec_label_pc_f408
  %4 = call i32 @write_lcd_no_memset(i32 2, i32* bitcast ([17 x i8]* @global_var_2948c to i32*), i32 16), !insn.addr !2514
  br label %dec_label_pc_f45a, !insn.addr !2514

dec_label_pc_f45a:                                ; preds = %dec_label_pc_f44a, %dec_label_pc_f438
  %5 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !2515
  %6 = zext i8 %5 to i32, !insn.addr !2515
  %7 = mul i32 %6, 4, !insn.addr !2516
  %8 = add i32 %7, ptrtoint (i32* @global_var_35b14 to i32), !insn.addr !2516
  %9 = inttoptr i32 %8 to i32*, !insn.addr !2516
  %10 = load i32, i32* %9, align 4, !insn.addr !2516
  %11 = bitcast i32* %stack_var_-22 to i8*, !insn.addr !2517
  %12 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_294a0, i32 0, i32 0), i32 %10), !insn.addr !2517
  %13 = bitcast i8** %stack_var_-32 to i32*, !insn.addr !2518
  %14 = call i32 @write_lcd_no_memset(i32 1, i32* nonnull %13, i32 16), !insn.addr !2518
  ret i32 %14, !insn.addr !2519

; uselistorder directives
  uselistorder i8** %stack_var_-32, { 1, 0 }
}

define i32 @single_board_print_lcd(i32 %arg1) local_unnamed_addr {
dec_label_pc_f4a0:
  %storemerge.reg2mem = alloca i32, !insn.addr !2520
  %storemerge1.reg2mem = alloca i8, !insn.addr !2520
  %0 = call i32 @display_level_result_on_lcd(), !insn.addr !2521
  %1 = urem i32 %arg1, 2, !insn.addr !2522
  %2 = icmp eq i32 %1, 0, !insn.addr !2523
  br i1 %2, label %dec_label_pc_f4d4, label %dec_label_pc_f4b6, !insn.addr !2524

dec_label_pc_f4b6:                                ; preds = %dec_label_pc_f4a0
  %3 = call i32 @write_lcd_no_memset(i32 1, i32* bitcast ([17 x i8]* @global_var_29478 to i32*), i32 16), !insn.addr !2525
  store i8 0, i8* %storemerge1.reg2mem, !insn.addr !2526
  br label %dec_label_pc_f4fc, !insn.addr !2526

dec_label_pc_f4d4:                                ; preds = %dec_label_pc_f4a0
  %4 = call i32 @write_lcd_no_memset(i32 1, i32* bitcast ([17 x i8]* @global_var_2948c to i32*), i32 16), !insn.addr !2527
  store i8 trunc (i32 and (i32 ptrtoint (i8* @global_var_35ac6 to i32), i32 255) to i8), i8* %storemerge1.reg2mem, !insn.addr !2528
  br label %dec_label_pc_f4fc, !insn.addr !2528

dec_label_pc_f4fc:                                ; preds = %dec_label_pc_f4d4, %dec_label_pc_f4b6
  %storemerge1.reload = load i8, i8* %storemerge1.reg2mem
  store i8 %storemerge1.reload, i8* bitcast (i8** @global_var_35ac5 to i8*), align 4
  %5 = load i8, i8* bitcast (i8** @global_var_235c3c to i8*), align 4, !insn.addr !2529
  %6 = icmp eq i8 %5, 0, !insn.addr !2530
  br i1 %6, label %dec_label_pc_f528, label %dec_label_pc_f50a, !insn.addr !2531

dec_label_pc_f50a:                                ; preds = %dec_label_pc_f4fc
  %7 = call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_294b4, i32 0, i32 0)), !insn.addr !2532
  %8 = call i32 @write_lcd_no_memset(i32 2, i32* bitcast ([14 x i8]* @global_var_294c0 to i32*), i32 16), !insn.addr !2533
  br label %dec_label_pc_f544, !insn.addr !2534

dec_label_pc_f528:                                ; preds = %dec_label_pc_f4fc
  %9 = call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_294d0, i32 0, i32 0)), !insn.addr !2535
  %10 = call i32 @write_lcd_no_memset(i32 2, i32* bitcast ([14 x i8]* @global_var_294dc to i32*), i32 16), !insn.addr !2536
  br label %dec_label_pc_f544, !insn.addr !2536

dec_label_pc_f544:                                ; preds = %dec_label_pc_f528, %dec_label_pc_f50a
  %11 = and i32 %arg1, 4, !insn.addr !2537
  %12 = icmp eq i32 %11, 0, !insn.addr !2538
  br i1 %12, label %dec_label_pc_f560, label %dec_label_pc_f54e, !insn.addr !2539

dec_label_pc_f54e:                                ; preds = %dec_label_pc_f544
  %13 = call i32 @write_lcd_no_memset(i32 3, i32* bitcast ([17 x i8]* @global_var_294ec to i32*), i32 16), !insn.addr !2540
  store i32 %13, i32* %storemerge.reg2mem, !insn.addr !2541
  br label %dec_label_pc_f570, !insn.addr !2541

dec_label_pc_f560:                                ; preds = %dec_label_pc_f544
  %14 = call i32 @write_lcd_no_memset(i32 3, i32* bitcast ([17 x i8]* @global_var_29500 to i32*), i32 16), !insn.addr !2542
  store i32 %14, i32* %storemerge.reg2mem, !insn.addr !2542
  br label %dec_label_pc_f570, !insn.addr !2542

dec_label_pc_f570:                                ; preds = %dec_label_pc_f560, %dec_label_pc_f54e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !2543

; uselistorder directives
  uselistorder i8* %storemerge1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i8* bitcast (i8** @global_var_235c3c to i8*), { 2, 0, 1 }
  uselistorder i8* bitcast (i8** @global_var_35ac5 to i8*), { 0, 16, 15, 14, 13, 1, 12, 2, 11, 10, 3, 9, 4, 8, 5, 7, 6 }
  uselistorder i32 ptrtoint (i8* @global_var_35ac6 to i32), { 2, 1, 0 }
  uselistorder i32 (i32, i32*, i32)* @write_lcd_no_memset, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @display_level_result_on_lcd, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @single_asic_get_result(i32 %arg1) local_unnamed_addr {
dec_label_pc_f578:
  %stack_var_-28.0.lcssa.reg2mem = alloca i32, !insn.addr !2544
  %stack_var_-28.010.reg2mem = alloca i32, !insn.addr !2544
  %storemerge311.reg2mem = alloca i32, !insn.addr !2544
  %storemerge12.reg2mem = alloca i64, !insn.addr !2544
  %.reg2mem45 = alloca i32, !insn.addr !2544
  %stack_var_-24.0.lcssa.reg2mem = alloca i32, !insn.addr !2544
  %stack_var_-24.013.reg2mem = alloca i32, !insn.addr !2544
  %storemerge614.reg2mem = alloca i32, !insn.addr !2544
  %storemerge516.reg2mem = alloca i64, !insn.addr !2544
  %.reg2mem43 = alloca i32, !insn.addr !2544
  %stack_var_-20.1.lcssa.reg2mem = alloca i32, !insn.addr !2544
  %stack_var_-20.0.reg2mem = alloca i32, !insn.addr !2544
  %.reg2mem41 = alloca i32, !insn.addr !2544
  %.reg2mem39 = alloca i32, !insn.addr !2544
  %storemerge817.reg2mem = alloca i32, !insn.addr !2544
  %.reg2mem37 = alloca i32, !insn.addr !2544
  %stack_var_-20.118.reg2mem = alloca i32, !insn.addr !2544
  %storemerge7.off019.reg2mem = alloca i32, !insn.addr !2544
  %.reg2mem35 = alloca i32, !insn.addr !2544
  %storemerge923.reg2mem = alloca i64, !insn.addr !2544
  %.reg2mem = alloca i32, !insn.addr !2544
  %0 = call i32 @puts(i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_29514, i32 0, i32 0)), !insn.addr !2545
  %1 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2546
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_29580, i32 0, i32 0), i32 %1), !insn.addr !2547
  %3 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_95a8 to i32), i32 131072) to i8*)), !insn.addr !2548
  %4 = load i32, i32* @global_var_2b63ac, align 4, !insn.addr !2549
  %5 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2550
  %6 = icmp eq i32 %5, 0, !insn.addr !2551
  br i1 %6, label %dec_label_pc_f63e, label %dec_label_pc_f5da.lr.ph, !insn.addr !2552

dec_label_pc_f5da.lr.ph:                          ; preds = %dec_label_pc_f578
  %7 = mul i32 %arg1, 131072
  %8 = and i32 %7, 33423360
  store i32 0, i32* %.reg2mem
  store i64 0, i64* %storemerge923.reg2mem
  br label %dec_label_pc_f5da

dec_label_pc_f5da:                                ; preds = %dec_label_pc_f5da.lr.ph, %dec_label_pc_f5fe
  %storemerge923.reload = load i64, i64* %storemerge923.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %9 = and i64 %storemerge923.reload, 4294967295, !insn.addr !2553
  %10 = mul nuw i64 %9, 3435973837, !insn.addr !2553
  %11 = udiv i64 %10, 34359738368, !insn.addr !2553
  %12 = trunc i64 %11 to i32, !insn.addr !2554
  %.tr = trunc i64 %11 to i32
  %13 = mul i32 %.tr, 4, !insn.addr !2555
  %14 = add nuw i32 %13, %12, !insn.addr !2556
  %15 = mul i32 %14, 2, !insn.addr !2557
  %16 = icmp eq i32 %15, %.reload, !insn.addr !2558
  br i1 %16, label %dec_label_pc_f5f8, label %dec_label_pc_f5fe, !insn.addr !2559

dec_label_pc_f5f8:                                ; preds = %dec_label_pc_f5da
  %17 = call i32 @putchar(i32 10), !insn.addr !2560
  br label %dec_label_pc_f5fe, !insn.addr !2560

dec_label_pc_f5fe:                                ; preds = %dec_label_pc_f5da, %dec_label_pc_f5f8
  %18 = add i32 %.reload, %8, !insn.addr !2561
  %19 = mul i32 %18, 4, !insn.addr !2562
  %20 = add i32 %19, ptrtoint (i32* @global_var_35b34 to i32), !insn.addr !2562
  %21 = inttoptr i32 %20 to i32*, !insn.addr !2562
  %22 = load i32, i32* %21, align 4, !insn.addr !2562
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_295d4, i32 0, i32 0), i32 %.reload, i32 %22), !insn.addr !2563
  %24 = add i32 %.reload, 1, !insn.addr !2564
  %25 = sext i32 %24 to i64, !insn.addr !2565
  %26 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2550
  %27 = icmp ult i32 %26, %24, !insn.addr !2551
  %28 = icmp ne i1 %27, true, !insn.addr !2551
  %29 = icmp eq i32 %26, %24, !insn.addr !2551
  %30 = icmp ne i1 %29, true, !insn.addr !2552
  %31 = icmp eq i1 %28, %30, !insn.addr !2552
  store i32 %24, i32* %.reg2mem, !insn.addr !2552
  store i64 %25, i64* %storemerge923.reg2mem, !insn.addr !2552
  br i1 %31, label %dec_label_pc_f5da, label %dec_label_pc_f63e, !insn.addr !2552

dec_label_pc_f63e:                                ; preds = %dec_label_pc_f5fe, %dec_label_pc_f578
  %32 = call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_295e8, i32 0, i32 0)), !insn.addr !2566
  %33 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2567
  %34 = icmp eq i32 %33, 0, !insn.addr !2568
  store i32 1, i32* %stack_var_-20.1.lcssa.reg2mem, !insn.addr !2569
  br i1 %34, label %dec_label_pc_f720, label %dec_label_pc_f650.lr.ph, !insn.addr !2569

dec_label_pc_f650.lr.ph:                          ; preds = %dec_label_pc_f63e
  %35 = mul i32 %arg1, 131072
  %36 = and i32 %35, 33423360
  %37 = mul i32 %arg1, 4
  %38 = and i32 %37, 1020
  %39 = add i32 %4, 188
  %40 = add i32 %39, %38
  store i32 %33, i32* %.reg2mem35
  store i32 0, i32* %storemerge7.off019.reg2mem
  store i32 1, i32* %stack_var_-20.118.reg2mem
  br label %dec_label_pc_f650

dec_label_pc_f650:                                ; preds = %dec_label_pc_f650.lr.ph, %dec_label_pc_f70a
  %stack_var_-20.118.reload = load i32, i32* %stack_var_-20.118.reg2mem
  %storemerge7.off019.reload = load i32, i32* %storemerge7.off019.reg2mem
  %.reload36 = load i32, i32* %.reg2mem35
  %41 = add i32 %storemerge7.off019.reload, %36, !insn.addr !2570
  %42 = mul i32 %41, 4, !insn.addr !2571
  %43 = add i32 %42, ptrtoint (i32* @global_var_35b34 to i32), !insn.addr !2571
  %44 = inttoptr i32 %43 to i32*, !insn.addr !2571
  %45 = load i32, i32* %44, align 4, !insn.addr !2571
  %46 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2572
  %47 = icmp ult i32 %45, %46, !insn.addr !2573
  store i32 %.reload36, i32* %.reg2mem41, !insn.addr !2574
  store i32 %stack_var_-20.118.reload, i32* %stack_var_-20.0.reg2mem, !insn.addr !2574
  br i1 %47, label %dec_label_pc_f678, label %dec_label_pc_f70a, !insn.addr !2574

dec_label_pc_f678:                                ; preds = %dec_label_pc_f650
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_295ec, i32 0, i32 0), i32 %storemerge7.off019.reload, i32 %45), !insn.addr !2575
  %49 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2576
  %50 = icmp eq i32 %49, 0, !insn.addr !2577
  store i32 %49, i32* %.reg2mem37, !insn.addr !2578
  store i32 0, i32* %storemerge817.reg2mem, !insn.addr !2578
  br i1 %50, label %dec_label_pc_f704, label %dec_label_pc_f6b0, !insn.addr !2578

dec_label_pc_f6b0:                                ; preds = %dec_label_pc_f678, %dec_label_pc_f6ee
  %storemerge817.reload = load i32, i32* %storemerge817.reg2mem
  %.reload38 = load i32, i32* %.reg2mem37
  %51 = mul i32 %.reload38, %storemerge7.off019.reload, !insn.addr !2579
  %52 = add i32 %51, %storemerge817.reload, !insn.addr !2580
  %53 = mul i32 %52, 204, !insn.addr !2581
  %54 = add i32 %40, %53, !insn.addr !2582
  %55 = inttoptr i32 %54 to i32*, !insn.addr !2582
  %56 = load i32, i32* %55, align 4, !insn.addr !2582
  %57 = icmp eq i32 %56, 0, !insn.addr !2583
  store i32 %.reload38, i32* %.reg2mem39, !insn.addr !2584
  br i1 %57, label %dec_label_pc_f6e0, label %dec_label_pc_f6ee, !insn.addr !2584

dec_label_pc_f6e0:                                ; preds = %dec_label_pc_f6b0
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_29620, i32 0, i32 0), i32 %storemerge817.reload), !insn.addr !2585
  %.pre = load i32, i32* @global_var_33681c, align 4
  store i32 %.pre, i32* %.reg2mem39, !insn.addr !2585
  br label %dec_label_pc_f6ee, !insn.addr !2585

dec_label_pc_f6ee:                                ; preds = %dec_label_pc_f6b0, %dec_label_pc_f6e0
  %.reload40 = load i32, i32* %.reg2mem39, !insn.addr !2576
  %59 = add i32 %storemerge817.reload, 1, !insn.addr !2586
  %60 = icmp ult i32 %.reload40, %59, !insn.addr !2577
  %61 = icmp ne i1 %60, true, !insn.addr !2577
  %62 = icmp eq i32 %.reload40, %59, !insn.addr !2577
  %63 = icmp ne i1 %62, true, !insn.addr !2578
  %64 = icmp eq i1 %61, %63, !insn.addr !2578
  store i32 %.reload40, i32* %.reg2mem37, !insn.addr !2578
  store i32 %59, i32* %storemerge817.reg2mem, !insn.addr !2578
  br i1 %64, label %dec_label_pc_f6b0, label %dec_label_pc_f704, !insn.addr !2578

dec_label_pc_f704:                                ; preds = %dec_label_pc_f6ee, %dec_label_pc_f678
  %65 = and i32 %stack_var_-20.118.reload, -2, !insn.addr !2587
  %66 = call i32 @putchar(i32 10), !insn.addr !2588
  %.pre25 = load i32, i32* @global_var_33684c, align 4
  store i32 %.pre25, i32* %.reg2mem41, !insn.addr !2588
  store i32 %65, i32* %stack_var_-20.0.reg2mem, !insn.addr !2588
  br label %dec_label_pc_f70a, !insn.addr !2588

dec_label_pc_f70a:                                ; preds = %dec_label_pc_f650, %dec_label_pc_f704
  %stack_var_-20.0.reload = load i32, i32* %stack_var_-20.0.reg2mem
  %.reload42 = load i32, i32* %.reg2mem41, !insn.addr !2567
  %67 = add i32 %storemerge7.off019.reload, 1, !insn.addr !2589
  %68 = icmp ult i32 %.reload42, %67, !insn.addr !2568
  %69 = icmp ne i1 %68, true, !insn.addr !2568
  %70 = icmp eq i32 %.reload42, %67, !insn.addr !2568
  %71 = icmp ne i1 %70, true, !insn.addr !2569
  %72 = icmp eq i1 %69, %71, !insn.addr !2569
  store i32 %.reload42, i32* %.reg2mem35, !insn.addr !2569
  store i32 %67, i32* %storemerge7.off019.reg2mem, !insn.addr !2569
  store i32 %stack_var_-20.0.reload, i32* %stack_var_-20.118.reg2mem, !insn.addr !2569
  store i32 %stack_var_-20.0.reload, i32* %stack_var_-20.1.lcssa.reg2mem, !insn.addr !2569
  br i1 %72, label %dec_label_pc_f650, label %dec_label_pc_f720, !insn.addr !2569

dec_label_pc_f720:                                ; preds = %dec_label_pc_f70a, %dec_label_pc_f63e
  %stack_var_-20.1.lcssa.reload = load i32, i32* %stack_var_-20.1.lcssa.reg2mem
  %73 = call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_29628, i32 0, i32 0)), !insn.addr !2590
  %74 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2591
  %75 = icmp eq i32 %74, 0, !insn.addr !2592
  %.pre31 = mul i32 %arg1, 4
  %.pre32 = and i32 %.pre31, 1020
  br i1 %75, label %dec_label_pc_f7ce, label %dec_label_pc_f732.lr.ph, !insn.addr !2593

dec_label_pc_f732.lr.ph:                          ; preds = %dec_label_pc_f720
  %76 = add i32 %4, 188
  %77 = add i32 %76, %.pre32
  store i32 0, i32* %.reg2mem43
  store i64 0, i64* %storemerge516.reg2mem
  br label %dec_label_pc_f732

dec_label_pc_f732:                                ; preds = %dec_label_pc_f732.lr.ph, %dec_label_pc_f7a8
  %storemerge516.reload = load i64, i64* %storemerge516.reg2mem
  %.reload44 = load i32, i32* %.reg2mem43
  %78 = and i64 %storemerge516.reload, 4294967295, !insn.addr !2594
  %79 = mul nuw i64 %78, 3435973837, !insn.addr !2594
  %80 = udiv i64 %79, 34359738368, !insn.addr !2594
  %81 = trunc i64 %80 to i32, !insn.addr !2595
  %.tr33 = trunc i64 %80 to i32
  %82 = mul i32 %.tr33, 4, !insn.addr !2596
  %83 = add nuw i32 %82, %81, !insn.addr !2597
  %84 = mul i32 %83, 2, !insn.addr !2598
  %85 = icmp eq i32 %84, %.reload44, !insn.addr !2599
  br i1 %85, label %dec_label_pc_f754, label %dec_label_pc_f75a, !insn.addr !2600

dec_label_pc_f754:                                ; preds = %dec_label_pc_f732
  %86 = call i32 @putchar(i32 10), !insn.addr !2601
  br label %dec_label_pc_f75a, !insn.addr !2601

dec_label_pc_f75a:                                ; preds = %dec_label_pc_f732, %dec_label_pc_f754
  %87 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2602
  %88 = icmp eq i32 %87, 0, !insn.addr !2603
  store i32 0, i32* %stack_var_-24.0.lcssa.reg2mem, !insn.addr !2604
  br i1 %88, label %dec_label_pc_f7a8, label %dec_label_pc_f760.preheader, !insn.addr !2604

dec_label_pc_f760.preheader:                      ; preds = %dec_label_pc_f75a
  %89 = mul i32 %87, %.reload44, !insn.addr !2605
  store i32 0, i32* %storemerge614.reg2mem
  store i32 0, i32* %stack_var_-24.013.reg2mem
  br label %dec_label_pc_f760

dec_label_pc_f760:                                ; preds = %dec_label_pc_f760.preheader, %dec_label_pc_f760
  %stack_var_-24.013.reload = load i32, i32* %stack_var_-24.013.reg2mem
  %storemerge614.reload = load i32, i32* %storemerge614.reg2mem
  %90 = add i32 %storemerge614.reload, %89, !insn.addr !2606
  %91 = mul i32 %90, 204, !insn.addr !2607
  %92 = add i32 %77, %91, !insn.addr !2608
  %93 = inttoptr i32 %92 to i32*, !insn.addr !2608
  %94 = load i32, i32* %93, align 4, !insn.addr !2608
  %95 = add i32 %94, %stack_var_-24.013.reload, !insn.addr !2609
  %96 = add i32 %storemerge614.reload, 1, !insn.addr !2610
  %97 = icmp ult i32 %87, %96, !insn.addr !2603
  %98 = icmp ne i1 %97, true, !insn.addr !2603
  %99 = icmp eq i32 %87, %96, !insn.addr !2603
  %100 = icmp ne i1 %99, true, !insn.addr !2604
  %101 = icmp eq i1 %98, %100, !insn.addr !2604
  store i32 %96, i32* %storemerge614.reg2mem, !insn.addr !2604
  store i32 %95, i32* %stack_var_-24.013.reg2mem, !insn.addr !2604
  store i32 %95, i32* %stack_var_-24.0.lcssa.reg2mem, !insn.addr !2604
  br i1 %101, label %dec_label_pc_f760, label %dec_label_pc_f7a8, !insn.addr !2604

dec_label_pc_f7a8:                                ; preds = %dec_label_pc_f760, %dec_label_pc_f75a
  %stack_var_-24.0.lcssa.reload = load i32, i32* %stack_var_-24.0.lcssa.reg2mem
  %102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_295d4, i32 0, i32 0), i32 %.reload44, i32 %stack_var_-24.0.lcssa.reload), !insn.addr !2611
  %103 = add i32 %.reload44, 1, !insn.addr !2612
  %104 = sext i32 %103 to i64, !insn.addr !2613
  %105 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2591
  %106 = icmp ult i32 %105, %103, !insn.addr !2592
  %107 = icmp ne i1 %106, true, !insn.addr !2592
  %108 = icmp eq i32 %105, %103, !insn.addr !2592
  %109 = icmp ne i1 %108, true, !insn.addr !2593
  %110 = icmp eq i1 %107, %109, !insn.addr !2593
  store i32 %103, i32* %.reg2mem43, !insn.addr !2593
  store i64 %104, i64* %storemerge516.reg2mem, !insn.addr !2593
  br i1 %110, label %dec_label_pc_f732, label %dec_label_pc_f7ce, !insn.addr !2593

dec_label_pc_f7ce:                                ; preds = %dec_label_pc_f720, %dec_label_pc_f7a8
  %111 = call i32 @puts(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_var_29650, i32 0, i32 0)), !insn.addr !2614
  %112 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2615
  %113 = icmp eq i32 %112, 0, !insn.addr !2616
  br i1 %113, label %dec_label_pc_f892, label %dec_label_pc_f7e0.lr.ph, !insn.addr !2617

dec_label_pc_f7e0.lr.ph:                          ; preds = %dec_label_pc_f7ce
  %114 = add i32 %4, 188
  %115 = add i32 %114, %.pre32
  store i32 0, i32* %.reg2mem45
  store i64 0, i64* %storemerge12.reg2mem
  br label %dec_label_pc_f7e0

dec_label_pc_f7e0:                                ; preds = %dec_label_pc_f7e0.lr.ph, %dec_label_pc_f86c
  %storemerge12.reload = load i64, i64* %storemerge12.reg2mem
  %.reload46 = load i32, i32* %.reg2mem45
  %116 = and i64 %storemerge12.reload, 4294967295, !insn.addr !2618
  %117 = mul nuw i64 %116, 3435973837, !insn.addr !2618
  %118 = udiv i64 %117, 34359738368, !insn.addr !2618
  %119 = trunc i64 %118 to i32, !insn.addr !2619
  %.tr34 = trunc i64 %118 to i32
  %120 = mul i32 %.tr34, 4, !insn.addr !2620
  %121 = add nuw i32 %120, %119, !insn.addr !2621
  %122 = mul i32 %121, 2, !insn.addr !2622
  %123 = icmp eq i32 %122, %.reload46, !insn.addr !2623
  br i1 %123, label %dec_label_pc_f802, label %dec_label_pc_f808, !insn.addr !2624

dec_label_pc_f802:                                ; preds = %dec_label_pc_f7e0
  %124 = call i32 @putchar(i32 10), !insn.addr !2625
  br label %dec_label_pc_f808, !insn.addr !2625

dec_label_pc_f808:                                ; preds = %dec_label_pc_f7e0, %dec_label_pc_f802
  %125 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2626
  %126 = icmp eq i32 %125, 0, !insn.addr !2627
  store i32 0, i32* %stack_var_-28.0.lcssa.reg2mem, !insn.addr !2628
  br i1 %126, label %dec_label_pc_f86c, label %dec_label_pc_f80e.preheader, !insn.addr !2628

dec_label_pc_f80e.preheader:                      ; preds = %dec_label_pc_f808
  %127 = mul i32 %125, %.reload46, !insn.addr !2629
  store i32 0, i32* %storemerge311.reg2mem
  store i32 0, i32* %stack_var_-28.010.reg2mem
  br label %dec_label_pc_f80e

dec_label_pc_f80e:                                ; preds = %dec_label_pc_f80e.preheader, %dec_label_pc_f80e
  %stack_var_-28.010.reload = load i32, i32* %stack_var_-28.010.reg2mem
  %storemerge311.reload = load i32, i32* %storemerge311.reg2mem
  %128 = add i32 %storemerge311.reload, %127, !insn.addr !2630
  %129 = mul i32 %128, 204, !insn.addr !2631
  %130 = add i32 %115, %129, !insn.addr !2632
  %131 = inttoptr i32 %130 to i32*, !insn.addr !2632
  %132 = load i32, i32* %131, align 4, !insn.addr !2632
  %133 = icmp eq i32 %132, 0, !insn.addr !2633
  %134 = add i32 %132, -1
  %spec.select = select i1 %133, i32 0, i32 %134
  %135 = add i32 %spec.select, %stack_var_-28.010.reload, !insn.addr !2634
  %136 = add i32 %storemerge311.reload, 1, !insn.addr !2635
  %137 = icmp ult i32 %125, %136, !insn.addr !2627
  %138 = icmp ne i1 %137, true, !insn.addr !2627
  %139 = icmp eq i32 %125, %136, !insn.addr !2627
  %140 = icmp ne i1 %139, true, !insn.addr !2628
  %141 = icmp eq i1 %138, %140, !insn.addr !2628
  store i32 %136, i32* %storemerge311.reg2mem, !insn.addr !2628
  store i32 %135, i32* %stack_var_-28.010.reg2mem, !insn.addr !2628
  store i32 %135, i32* %stack_var_-28.0.lcssa.reg2mem, !insn.addr !2628
  br i1 %141, label %dec_label_pc_f80e, label %dec_label_pc_f86c, !insn.addr !2628

dec_label_pc_f86c:                                ; preds = %dec_label_pc_f80e, %dec_label_pc_f808
  %stack_var_-28.0.lcssa.reload = load i32, i32* %stack_var_-28.0.lcssa.reg2mem
  %142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_295d4, i32 0, i32 0), i32 %.reload46, i32 %stack_var_-28.0.lcssa.reload), !insn.addr !2636
  %143 = add i32 %.reload46, 1, !insn.addr !2637
  %144 = sext i32 %143 to i64, !insn.addr !2638
  %145 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2615
  %146 = icmp ult i32 %145, %143, !insn.addr !2616
  %147 = icmp ne i1 %146, true, !insn.addr !2616
  %148 = icmp eq i32 %145, %143, !insn.addr !2616
  %149 = icmp ne i1 %148, true, !insn.addr !2617
  %150 = icmp eq i1 %147, %149, !insn.addr !2617
  store i32 %143, i32* %.reg2mem45, !insn.addr !2617
  store i64 %144, i64* %storemerge12.reg2mem, !insn.addr !2617
  br i1 %150, label %dec_label_pc_f7e0, label %dec_label_pc_f892, !insn.addr !2617

dec_label_pc_f892:                                ; preds = %dec_label_pc_f86c, %dec_label_pc_f7ce
  %151 = urem i32 %arg1, 256
  %152 = call i32 @puts(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_2967c, i32 0, i32 0)), !insn.addr !2639
  %153 = add i32 %.pre32, ptrtoint (i32* @global_var_35b04 to i32), !insn.addr !2640
  %154 = inttoptr i32 %153 to i32*, !insn.addr !2640
  %155 = load i32, i32* %154, align 4, !insn.addr !2640
  %156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_296e8, i32 0, i32 0), i32 %151, i32 %155), !insn.addr !2641
  %157 = add i32 %.pre32, ptrtoint (i32* @global_var_35af4 to i32), !insn.addr !2642
  %158 = inttoptr i32 %157 to i32*, !insn.addr !2642
  %159 = load i32, i32* %158, align 4, !insn.addr !2642
  %160 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @global_var_29710, i32 0, i32 0), i32 %151, i32 %159), !insn.addr !2643
  %161 = add i32 %.pre32, ptrtoint (i32* @global_var_235b34 to i32), !insn.addr !2644
  %162 = inttoptr i32 %161 to i32*, !insn.addr !2644
  %163 = load i32, i32* %162, align 4, !insn.addr !2644
  %164 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @global_var_2973c, i32 0, i32 0), i32 %151, i32 %163), !insn.addr !2645
  %165 = add i32 %.pre32, ptrtoint (i32* @global_var_35b14 to i32), !insn.addr !2646
  %166 = inttoptr i32 %165 to i32*, !insn.addr !2646
  %167 = load i32, i32* %166, align 4, !insn.addr !2646
  %168 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_29768, i32 0, i32 0), i32 %151, i32 %167), !insn.addr !2647
  %169 = urem i32 %stack_var_-20.1.lcssa.reload, 2, !insn.addr !2648
  %170 = icmp eq i32 %169, 0, !insn.addr !2649
  br i1 %170, label %dec_label_pc_f936, label %dec_label_pc_f928, !insn.addr !2650

dec_label_pc_f928:                                ; preds = %dec_label_pc_f892
  %171 = call i32 @puts(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_29784, i32 0, i32 0)), !insn.addr !2651
  br label %dec_label_pc_f942, !insn.addr !2652

dec_label_pc_f936:                                ; preds = %dec_label_pc_f892
  %172 = call i32 @puts(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_29790, i32 0, i32 0)), !insn.addr !2653
  br label %dec_label_pc_f942, !insn.addr !2653

dec_label_pc_f942:                                ; preds = %dec_label_pc_f936, %dec_label_pc_f928
  ret i32 %stack_var_-20.1.lcssa.reload, !insn.addr !2654

; uselistorder directives
  uselistorder i32 %151, { 3, 2, 1, 0 }
  uselistorder i32 %145, { 1, 0 }
  uselistorder i32 %136, { 0, 2, 1 }
  uselistorder i32 %125, { 1, 2, 0, 3 }
  uselistorder i32 %.reload46, { 2, 0, 3, 1 }
  uselistorder i32 %105, { 1, 0 }
  uselistorder i32 %96, { 0, 2, 1 }
  uselistorder i32 %87, { 1, 2, 0, 3 }
  uselistorder i32 %.reload44, { 2, 0, 3, 1 }
  uselistorder i32 %.pre32, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %.reload42, { 2, 1, 0 }
  uselistorder i32 %59, { 0, 2, 1 }
  uselistorder i32 %.reload40, { 2, 1, 0 }
  uselistorder i32 %storemerge817.reload, { 1, 2, 0 }
  uselistorder i32 %storemerge7.off019.reload, { 1, 3, 0, 2 }
  uselistorder i32 %stack_var_-20.118.reload, { 1, 0 }
  uselistorder i32 %26, { 1, 0 }
  uselistorder i32 %.reload, { 0, 1, 3, 2 }
  uselistorder i32* %.reg2mem, { 1, 0, 2 }
  uselistorder i64* %storemerge923.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem35, { 1, 0, 2 }
  uselistorder i32* %storemerge7.off019.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-20.118.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem37, { 2, 0, 1 }
  uselistorder i32* %storemerge817.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem41, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %.reg2mem43, { 1, 0, 2 }
  uselistorder i64* %storemerge516.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge614.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-24.013.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem45, { 1, 0, 2 }
  uselistorder i64* %storemerge12.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge311.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28.010.reg2mem, { 2, 0, 1 }
  uselistorder i32* @global_var_35af4, { 1, 0 }
  uselistorder i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_295d4, i32 0, i32 0), { 2, 1, 0 }
  uselistorder i64 3435973837, { 2, 1, 0 }
  uselistorder i32 33423360, { 1, 0 }
  uselistorder i32 %arg1, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_f80e, { 1, 0 }
  uselistorder label %dec_label_pc_f808, { 1, 0 }
  uselistorder label %dec_label_pc_f7e0, { 1, 0 }
  uselistorder label %dec_label_pc_f7ce, { 1, 0 }
  uselistorder label %dec_label_pc_f760, { 1, 0 }
  uselistorder label %dec_label_pc_f75a, { 1, 0 }
  uselistorder label %dec_label_pc_f732, { 1, 0 }
  uselistorder label %dec_label_pc_f70a, { 1, 0 }
  uselistorder label %dec_label_pc_f6ee, { 1, 0 }
  uselistorder label %dec_label_pc_f6b0, { 1, 0 }
  uselistorder label %dec_label_pc_f650, { 1, 0 }
  uselistorder label %dec_label_pc_f5fe, { 1, 0 }
  uselistorder label %dec_label_pc_f5da, { 1, 0 }
}

define i32 @single_board_get_result(i32 %arg1) local_unnamed_addr {
dec_label_pc_f950:
  %stack_var_-32.9.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-32.8.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-48.3.lcssa.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-32.7.lcssa.reg2mem = alloca i32, !insn.addr !2655
  %.pre-phi59.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-48.2.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-32.6.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-48.1.lcssa.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-32.5.lcssa.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-48.0.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-32.4.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-28.0.reg2mem = alloca i32, !insn.addr !2655
  %.reg2mem76 = alloca i32, !insn.addr !2655
  %.reg2mem74 = alloca i32, !insn.addr !2655
  %storemerge416.reg2mem = alloca i32, !insn.addr !2655
  %.reg2mem72 = alloca i32, !insn.addr !2655
  %stack_var_-28.117.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-32.518.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-48.119.reg2mem = alloca i32, !insn.addr !2655
  %storemerge320.reg2mem = alloca i32, !insn.addr !2655
  %.reg2mem70 = alloca i32, !insn.addr !2655
  %stack_var_-32.724.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-48.325.reg2mem = alloca i32, !insn.addr !2655
  %storemerge.off026.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-40.1.lcssa.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-40.134.reg2mem = alloca i32, !insn.addr !2655
  %storemerge635.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-40.0.lcssa.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-40.031.reg2mem = alloca i32, !insn.addr !2655
  %storemerge732.reg2mem = alloca i32, !insn.addr !2655
  %storemerge538.reg2mem = alloca i64, !insn.addr !2655
  %.reg2mem68 = alloca i32, !insn.addr !2655
  %stack_var_-44.0.lcssa.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-36.1.lcssa.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-36.142.reg2mem = alloca i32, !insn.addr !2655
  %storemerge1043.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-36.0.lcssa.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-36.039.reg2mem = alloca i32, !insn.addr !2655
  %storemerge1140.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-44.046.reg2mem = alloca i32, !insn.addr !2655
  %storemerge947.reg2mem = alloca i64, !insn.addr !2655
  %.reg2mem66 = alloca i32, !insn.addr !2655
  %stack_var_-32.1.lcssa.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-24.1.lcssa.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-32.0.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-24.149.reg2mem = alloca i32, !insn.addr !2655
  %stack_var_-32.150.reg2mem = alloca i32, !insn.addr !2655
  %storemerge1251.reg2mem = alloca i64, !insn.addr !2655
  %.reg2mem = alloca i32, !insn.addr !2655
  %0 = mul i32 %arg1, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !2656
  %2 = call i32 @puts(i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_29514, i32 0, i32 0)), !insn.addr !2657
  %3 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2658
  %4 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2659
  %5 = mul i32 %4, %3, !insn.addr !2660
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_2979c, i32 0, i32 0), i32 %5), !insn.addr !2661
  %7 = load i32, i32* @global_var_336848, align 4, !insn.addr !2662
  %8 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2663
  %9 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2664
  %10 = call i32 @puts(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @global_var_297c4, i32 0, i32 0)), !insn.addr !2665
  %11 = load i32, i32* @global_var_336848, align 4, !insn.addr !2666
  %12 = icmp eq i32 %11, 0, !insn.addr !2667
  store i32 0, i32* %stack_var_-24.1.lcssa.reg2mem, !insn.addr !2668
  store i32 7, i32* %stack_var_-32.1.lcssa.reg2mem, !insn.addr !2668
  br i1 %12, label %dec_label_pc_fa88, label %dec_label_pc_f9e6.lr.ph, !insn.addr !2668

dec_label_pc_f9e6.lr.ph:                          ; preds = %dec_label_pc_f950
  %13 = urem i32 %1, 256
  store i32 0, i32* %.reg2mem
  store i64 0, i64* %storemerge1251.reg2mem
  store i32 7, i32* %stack_var_-32.150.reg2mem
  store i32 0, i32* %stack_var_-24.149.reg2mem
  br label %dec_label_pc_f9e6

dec_label_pc_f9e6:                                ; preds = %dec_label_pc_f9e6.lr.ph, %dec_label_pc_fa72
  %stack_var_-24.149.reload = load i32, i32* %stack_var_-24.149.reg2mem
  %stack_var_-32.150.reload = load i32, i32* %stack_var_-32.150.reg2mem
  %storemerge1251.reload = load i64, i64* %storemerge1251.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %14 = and i64 %storemerge1251.reload, 4294967295, !insn.addr !2669
  %15 = mul nuw nsw i64 %14, 954437177, !insn.addr !2669
  %16 = udiv i64 %15, 8589934592, !insn.addr !2669
  %17 = trunc i64 %16 to i32, !insn.addr !2670
  %.tr = trunc i64 %16 to i32
  %18 = mul i32 %.tr, 8, !insn.addr !2671
  %19 = add i32 %18, %17, !insn.addr !2672
  %20 = icmp eq i32 %19, %.reload, !insn.addr !2673
  br i1 %20, label %dec_label_pc_fa02, label %dec_label_pc_fa08, !insn.addr !2674

dec_label_pc_fa02:                                ; preds = %dec_label_pc_f9e6
  %21 = call i32 @putchar(i32 10), !insn.addr !2675
  br label %dec_label_pc_fa08, !insn.addr !2675

dec_label_pc_fa08:                                ; preds = %dec_label_pc_f9e6, %dec_label_pc_fa02
  %22 = urem i32 %.reload, 256, !insn.addr !2676
  %23 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2677
  %24 = call i32 @calculate_how_many_nonce_per_asic_get(i32 %13, i32 %22, i32 %23), !insn.addr !2678
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_297f0, i32 0, i32 0), i32 %.reload, i32 %24), !insn.addr !2679
  %26 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2680
  %27 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2681
  %28 = mul i32 %27, %26, !insn.addr !2682
  %29 = icmp ult i32 %28, %24, !insn.addr !2683
  %30 = icmp ne i1 %29, true, !insn.addr !2683
  %31 = icmp eq i32 %28, %24, !insn.addr !2683
  %32 = icmp ne i1 %30, true, !insn.addr !2684
  %33 = or i1 %31, %32, !insn.addr !2684
  store i32 %stack_var_-24.149.reload, i32* %stack_var_-24.0.reg2mem, !insn.addr !2684
  store i32 %stack_var_-32.150.reload, i32* %stack_var_-32.0.reg2mem, !insn.addr !2684
  br i1 %33, label %dec_label_pc_fa72, label %dec_label_pc_fa52, !insn.addr !2684

dec_label_pc_fa52:                                ; preds = %dec_label_pc_fa08
  %34 = add i32 %stack_var_-24.149.reload, 1, !insn.addr !2685
  %35 = load i32, i32* @global_var_3368c4, align 4, !insn.addr !2686
  %36 = icmp ult i32 %35, %34, !insn.addr !2687
  %37 = and i32 %stack_var_-32.150.reload, -2
  %spec.select = select i1 %36, i32 %37, i32 %stack_var_-32.150.reload
  store i32 %34, i32* %stack_var_-24.0.reg2mem
  store i32 %spec.select, i32* %stack_var_-32.0.reg2mem
  br label %dec_label_pc_fa72

dec_label_pc_fa72:                                ; preds = %dec_label_pc_fa52, %dec_label_pc_fa08
  %stack_var_-32.0.reload = load i32, i32* %stack_var_-32.0.reg2mem
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %38 = add i32 %.reload, 1, !insn.addr !2688
  %39 = sext i32 %38 to i64, !insn.addr !2689
  %40 = load i32, i32* @global_var_336848, align 4, !insn.addr !2666
  %41 = icmp ult i32 %40, %38, !insn.addr !2667
  %42 = icmp ne i1 %41, true, !insn.addr !2667
  %43 = icmp eq i32 %40, %38, !insn.addr !2667
  %44 = icmp ne i1 %43, true, !insn.addr !2668
  %45 = icmp eq i1 %42, %44, !insn.addr !2668
  store i32 %38, i32* %.reg2mem, !insn.addr !2668
  store i64 %39, i64* %storemerge1251.reg2mem, !insn.addr !2668
  store i32 %stack_var_-32.0.reload, i32* %stack_var_-32.150.reg2mem, !insn.addr !2668
  store i32 %stack_var_-24.0.reload, i32* %stack_var_-24.149.reg2mem, !insn.addr !2668
  store i32 %stack_var_-24.0.reload, i32* %stack_var_-24.1.lcssa.reg2mem, !insn.addr !2668
  store i32 %stack_var_-32.0.reload, i32* %stack_var_-32.1.lcssa.reg2mem, !insn.addr !2668
  br i1 %45, label %dec_label_pc_f9e6, label %dec_label_pc_fa88, !insn.addr !2668

dec_label_pc_fa88:                                ; preds = %dec_label_pc_fa72, %dec_label_pc_f950
  %stack_var_-32.1.lcssa.reload = load i32, i32* %stack_var_-32.1.lcssa.reg2mem
  %stack_var_-24.1.lcssa.reload = load i32, i32* %stack_var_-24.1.lcssa.reg2mem
  %46 = call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_29800, i32 0, i32 0)), !insn.addr !2690
  %47 = load i32, i32* @global_var_336848, align 4, !insn.addr !2691
  %48 = icmp eq i32 %47, 0, !insn.addr !2692
  store i32 0, i32* %stack_var_-44.0.lcssa.reg2mem, !insn.addr !2693
  br i1 %48, label %dec_label_pc_fb72, label %dec_label_pc_fa9e.lr.ph, !insn.addr !2693

dec_label_pc_fa9e.lr.ph:                          ; preds = %dec_label_pc_fa88
  %49 = mul i32 %arg1, 4
  %50 = and i32 %49, 1020
  %51 = add nuw nsw i32 %50, 188
  store i32 0, i32* %.reg2mem66
  store i64 0, i64* %storemerge947.reg2mem
  store i32 0, i32* %stack_var_-44.046.reg2mem
  br label %dec_label_pc_fa9e

dec_label_pc_fa9e:                                ; preds = %dec_label_pc_fa9e.lr.ph, %dec_label_pc_fb44
  %stack_var_-44.046.reload = load i32, i32* %stack_var_-44.046.reg2mem
  %storemerge947.reload = load i64, i64* %storemerge947.reg2mem
  %.reload67 = load i32, i32* %.reg2mem66
  %52 = and i64 %storemerge947.reload, 4294967295, !insn.addr !2694
  %53 = mul nuw nsw i64 %52, 954437177, !insn.addr !2694
  %54 = udiv i64 %53, 8589934592, !insn.addr !2694
  %55 = trunc i64 %54 to i32, !insn.addr !2695
  %.tr64 = trunc i64 %54 to i32
  %56 = mul i32 %.tr64, 8, !insn.addr !2696
  %57 = add i32 %56, %55, !insn.addr !2697
  %58 = icmp eq i32 %57, %.reload67, !insn.addr !2698
  br i1 %58, label %dec_label_pc_faba, label %dec_label_pc_fac0, !insn.addr !2699

dec_label_pc_faba:                                ; preds = %dec_label_pc_fa9e
  %59 = call i32 @putchar(i32 10), !insn.addr !2700
  br label %dec_label_pc_fac0, !insn.addr !2700

dec_label_pc_fac0:                                ; preds = %dec_label_pc_fa9e, %dec_label_pc_faba
  %60 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2701
  %61 = icmp eq i32 %60, 0, !insn.addr !2702
  store i32 0, i32* %stack_var_-36.1.lcssa.reg2mem, !insn.addr !2703
  br i1 %61, label %dec_label_pc_fb44, label %dec_label_pc_fb1e.preheader.lr.ph, !insn.addr !2703

dec_label_pc_fb1e.preheader.lr.ph:                ; preds = %dec_label_pc_fac0
  %62 = mul i32 %.reload67, 4, !insn.addr !2704
  %63 = add i32 %62, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 524448), !insn.addr !2705
  %64 = inttoptr i32 %63 to i32*, !insn.addr !2705
  %65 = load i32, i32* %64, align 4, !insn.addr !2705
  %66 = load i32, i32* @global_var_33681c, align 4
  %67 = icmp eq i32 %66, 0, !insn.addr !2706
  %68 = add i32 %51, %65
  store i32 0, i32* %storemerge1043.reg2mem
  store i32 0, i32* %stack_var_-36.142.reg2mem
  br label %dec_label_pc_fb1e.preheader

dec_label_pc_fae6:                                ; preds = %dec_label_pc_fae6.preheader, %dec_label_pc_fae6
  %stack_var_-36.039.reload = load i32, i32* %stack_var_-36.039.reg2mem
  %storemerge1140.reload = load i32, i32* %storemerge1140.reg2mem
  %69 = add i32 %storemerge1140.reload, %87, !insn.addr !2707
  %70 = mul i32 %69, 204, !insn.addr !2708
  %71 = add i32 %68, %70, !insn.addr !2709
  %72 = inttoptr i32 %71 to i32*, !insn.addr !2709
  %73 = load i32, i32* %72, align 4, !insn.addr !2709
  %74 = add i32 %73, %stack_var_-36.039.reload, !insn.addr !2710
  %75 = add i32 %storemerge1140.reload, 1, !insn.addr !2711
  %76 = icmp ult i32 %66, %75, !insn.addr !2706
  %77 = icmp ne i1 %76, true, !insn.addr !2706
  %78 = icmp eq i32 %66, %75, !insn.addr !2706
  %79 = icmp ne i1 %78, true, !insn.addr !2712
  %80 = icmp eq i1 %77, %79, !insn.addr !2712
  store i32 %75, i32* %storemerge1140.reg2mem, !insn.addr !2712
  store i32 %74, i32* %stack_var_-36.039.reg2mem, !insn.addr !2712
  store i32 %74, i32* %stack_var_-36.0.lcssa.reg2mem, !insn.addr !2712
  br i1 %80, label %dec_label_pc_fae6, label %dec_label_pc_fb2e, !insn.addr !2712

dec_label_pc_fb2e:                                ; preds = %dec_label_pc_fae6, %dec_label_pc_fb1e.preheader
  %stack_var_-36.0.lcssa.reload = load i32, i32* %stack_var_-36.0.lcssa.reg2mem
  %81 = add i32 %storemerge1043.reload, 1, !insn.addr !2713
  %82 = icmp ult i32 %60, %81, !insn.addr !2702
  %83 = icmp ne i1 %82, true, !insn.addr !2702
  %84 = icmp eq i32 %60, %81, !insn.addr !2702
  %85 = icmp ne i1 %84, true, !insn.addr !2703
  %86 = icmp eq i1 %83, %85, !insn.addr !2703
  store i32 %81, i32* %storemerge1043.reg2mem, !insn.addr !2703
  store i32 %stack_var_-36.0.lcssa.reload, i32* %stack_var_-36.142.reg2mem, !insn.addr !2703
  store i32 %stack_var_-36.0.lcssa.reload, i32* %stack_var_-36.1.lcssa.reg2mem, !insn.addr !2703
  br i1 %86, label %dec_label_pc_fb1e.preheader, label %dec_label_pc_fb44, !insn.addr !2703

dec_label_pc_fb1e.preheader:                      ; preds = %dec_label_pc_fb1e.preheader.lr.ph, %dec_label_pc_fb2e
  %stack_var_-36.142.reload = load i32, i32* %stack_var_-36.142.reg2mem
  %storemerge1043.reload = load i32, i32* %storemerge1043.reg2mem
  store i32 %stack_var_-36.142.reload, i32* %stack_var_-36.0.lcssa.reg2mem, !insn.addr !2712
  br i1 %67, label %dec_label_pc_fb2e, label %dec_label_pc_fae6.preheader, !insn.addr !2712

dec_label_pc_fae6.preheader:                      ; preds = %dec_label_pc_fb1e.preheader
  %87 = mul i32 %storemerge1043.reload, %66, !insn.addr !2714
  store i32 0, i32* %storemerge1140.reg2mem
  store i32 %stack_var_-36.142.reload, i32* %stack_var_-36.039.reg2mem
  br label %dec_label_pc_fae6

dec_label_pc_fb44:                                ; preds = %dec_label_pc_fb2e, %dec_label_pc_fac0
  %stack_var_-36.1.lcssa.reload = load i32, i32* %stack_var_-36.1.lcssa.reg2mem
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_297f0, i32 0, i32 0), i32 %.reload67, i32 %stack_var_-36.1.lcssa.reload), !insn.addr !2715
  %89 = add i32 %stack_var_-36.1.lcssa.reload, %stack_var_-44.046.reload, !insn.addr !2716
  %90 = add i32 %.reload67, 1, !insn.addr !2717
  %91 = sext i32 %90 to i64, !insn.addr !2718
  %92 = load i32, i32* @global_var_336848, align 4, !insn.addr !2691
  %93 = icmp ult i32 %92, %90, !insn.addr !2692
  %94 = icmp ne i1 %93, true, !insn.addr !2692
  %95 = icmp eq i32 %92, %90, !insn.addr !2692
  %96 = icmp ne i1 %95, true, !insn.addr !2693
  %97 = icmp eq i1 %94, %96, !insn.addr !2693
  store i32 %90, i32* %.reg2mem66, !insn.addr !2693
  store i64 %91, i64* %storemerge947.reg2mem, !insn.addr !2693
  store i32 %89, i32* %stack_var_-44.046.reg2mem, !insn.addr !2693
  store i32 %89, i32* %stack_var_-44.0.lcssa.reg2mem, !insn.addr !2693
  br i1 %97, label %dec_label_pc_fa9e, label %dec_label_pc_fb72, !insn.addr !2693

dec_label_pc_fb72:                                ; preds = %dec_label_pc_fb44, %dec_label_pc_fa88
  %stack_var_-44.0.lcssa.reload = load i32, i32* %stack_var_-44.0.lcssa.reg2mem
  %98 = call i32 @puts(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_var_29828, i32 0, i32 0)), !insn.addr !2719
  %99 = load i32, i32* @global_var_336848, align 4, !insn.addr !2720
  %100 = icmp eq i32 %99, 0, !insn.addr !2721
  br i1 %100, label %dec_label_pc_fc66, label %dec_label_pc_fb84.lr.ph, !insn.addr !2722

dec_label_pc_fb84.lr.ph:                          ; preds = %dec_label_pc_fb72
  %101 = mul i32 %arg1, 4
  %102 = and i32 %101, 1020
  %103 = add nuw nsw i32 %102, 188
  store i32 0, i32* %.reg2mem68
  store i64 0, i64* %storemerge538.reg2mem
  br label %dec_label_pc_fb84

dec_label_pc_fb84:                                ; preds = %dec_label_pc_fb84.lr.ph, %dec_label_pc_fc40
  %storemerge538.reload = load i64, i64* %storemerge538.reg2mem
  %.reload69 = load i32, i32* %.reg2mem68
  %104 = and i64 %storemerge538.reload, 4294967295, !insn.addr !2723
  %105 = mul nuw nsw i64 %104, 954437177, !insn.addr !2723
  %106 = udiv i64 %105, 8589934592, !insn.addr !2723
  %107 = trunc i64 %106 to i32, !insn.addr !2724
  %.tr65 = trunc i64 %106 to i32
  %108 = mul i32 %.tr65, 8, !insn.addr !2725
  %109 = add i32 %108, %107, !insn.addr !2726
  %110 = icmp eq i32 %109, %.reload69, !insn.addr !2727
  br i1 %110, label %dec_label_pc_fba0, label %dec_label_pc_fba6, !insn.addr !2728

dec_label_pc_fba0:                                ; preds = %dec_label_pc_fb84
  %111 = call i32 @putchar(i32 10), !insn.addr !2729
  br label %dec_label_pc_fba6, !insn.addr !2729

dec_label_pc_fba6:                                ; preds = %dec_label_pc_fb84, %dec_label_pc_fba0
  %112 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2730
  %113 = icmp eq i32 %112, 0, !insn.addr !2731
  store i32 0, i32* %stack_var_-40.1.lcssa.reg2mem, !insn.addr !2732
  br i1 %113, label %dec_label_pc_fc40, label %dec_label_pc_fc1a.preheader.lr.ph, !insn.addr !2732

dec_label_pc_fc1a.preheader.lr.ph:                ; preds = %dec_label_pc_fba6
  %114 = mul i32 %.reload69, 4, !insn.addr !2733
  %115 = add i32 %114, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 524448), !insn.addr !2734
  %116 = inttoptr i32 %115 to i32*, !insn.addr !2734
  %117 = load i32, i32* %116, align 4, !insn.addr !2734
  %118 = load i32, i32* @global_var_33681c, align 4
  %119 = icmp eq i32 %118, 0, !insn.addr !2735
  %120 = add i32 %103, %117
  store i32 0, i32* %storemerge635.reg2mem
  store i32 0, i32* %stack_var_-40.134.reg2mem
  br label %dec_label_pc_fc1a.preheader

dec_label_pc_fbcc:                                ; preds = %dec_label_pc_fbcc.preheader, %dec_label_pc_fbcc
  %stack_var_-40.031.reload = load i32, i32* %stack_var_-40.031.reg2mem
  %storemerge732.reload = load i32, i32* %storemerge732.reg2mem
  %121 = add i32 %storemerge732.reload, %141, !insn.addr !2736
  %122 = mul i32 %121, 204, !insn.addr !2737
  %123 = add i32 %120, %122, !insn.addr !2738
  %124 = inttoptr i32 %123 to i32*, !insn.addr !2738
  %125 = load i32, i32* %124, align 4, !insn.addr !2738
  %126 = icmp eq i32 %125, 0, !insn.addr !2739
  %127 = add i32 %125, -1
  %spec.select13 = select i1 %126, i32 0, i32 %127
  %128 = add i32 %spec.select13, %stack_var_-40.031.reload, !insn.addr !2740
  %129 = add i32 %storemerge732.reload, 1, !insn.addr !2741
  %130 = icmp ult i32 %118, %129, !insn.addr !2735
  %131 = icmp ne i1 %130, true, !insn.addr !2735
  %132 = icmp eq i32 %118, %129, !insn.addr !2735
  %133 = icmp ne i1 %132, true, !insn.addr !2742
  %134 = icmp eq i1 %131, %133, !insn.addr !2742
  store i32 %129, i32* %storemerge732.reg2mem, !insn.addr !2742
  store i32 %128, i32* %stack_var_-40.031.reg2mem, !insn.addr !2742
  store i32 %128, i32* %stack_var_-40.0.lcssa.reg2mem, !insn.addr !2742
  br i1 %134, label %dec_label_pc_fbcc, label %dec_label_pc_fc2a, !insn.addr !2742

dec_label_pc_fc2a:                                ; preds = %dec_label_pc_fbcc, %dec_label_pc_fc1a.preheader
  %stack_var_-40.0.lcssa.reload = load i32, i32* %stack_var_-40.0.lcssa.reg2mem
  %135 = add i32 %storemerge635.reload, 1, !insn.addr !2743
  %136 = icmp ult i32 %112, %135, !insn.addr !2731
  %137 = icmp ne i1 %136, true, !insn.addr !2731
  %138 = icmp eq i32 %112, %135, !insn.addr !2731
  %139 = icmp ne i1 %138, true, !insn.addr !2732
  %140 = icmp eq i1 %137, %139, !insn.addr !2732
  store i32 %135, i32* %storemerge635.reg2mem, !insn.addr !2732
  store i32 %stack_var_-40.0.lcssa.reload, i32* %stack_var_-40.134.reg2mem, !insn.addr !2732
  store i32 %stack_var_-40.0.lcssa.reload, i32* %stack_var_-40.1.lcssa.reg2mem, !insn.addr !2732
  br i1 %140, label %dec_label_pc_fc1a.preheader, label %dec_label_pc_fc40, !insn.addr !2732

dec_label_pc_fc1a.preheader:                      ; preds = %dec_label_pc_fc1a.preheader.lr.ph, %dec_label_pc_fc2a
  %stack_var_-40.134.reload = load i32, i32* %stack_var_-40.134.reg2mem
  %storemerge635.reload = load i32, i32* %storemerge635.reg2mem
  store i32 %stack_var_-40.134.reload, i32* %stack_var_-40.0.lcssa.reg2mem, !insn.addr !2742
  br i1 %119, label %dec_label_pc_fc2a, label %dec_label_pc_fbcc.preheader, !insn.addr !2742

dec_label_pc_fbcc.preheader:                      ; preds = %dec_label_pc_fc1a.preheader
  %141 = mul i32 %storemerge635.reload, %118, !insn.addr !2744
  store i32 0, i32* %storemerge732.reg2mem
  store i32 %stack_var_-40.134.reload, i32* %stack_var_-40.031.reg2mem
  br label %dec_label_pc_fbcc

dec_label_pc_fc40:                                ; preds = %dec_label_pc_fc2a, %dec_label_pc_fba6
  %stack_var_-40.1.lcssa.reload = load i32, i32* %stack_var_-40.1.lcssa.reg2mem
  %142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_297f0, i32 0, i32 0), i32 %.reload69, i32 %stack_var_-40.1.lcssa.reload), !insn.addr !2745
  %143 = add i32 %.reload69, 1, !insn.addr !2746
  %144 = sext i32 %143 to i64, !insn.addr !2747
  %145 = load i32, i32* @global_var_336848, align 4, !insn.addr !2720
  %146 = icmp ult i32 %145, %143, !insn.addr !2721
  %147 = icmp ne i1 %146, true, !insn.addr !2721
  %148 = icmp eq i32 %145, %143, !insn.addr !2721
  %149 = icmp ne i1 %148, true, !insn.addr !2722
  %150 = icmp eq i1 %147, %149, !insn.addr !2722
  store i32 %143, i32* %.reg2mem68, !insn.addr !2722
  store i64 %144, i64* %storemerge538.reg2mem, !insn.addr !2722
  br i1 %150, label %dec_label_pc_fb84, label %dec_label_pc_fc66, !insn.addr !2722

dec_label_pc_fc66:                                ; preds = %dec_label_pc_fc40, %dec_label_pc_fb72
  %151 = call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_29854, i32 0, i32 0)), !insn.addr !2748
  %152 = load i32, i32* @global_var_336848, align 4, !insn.addr !2749
  %153 = icmp eq i32 %152, 0, !insn.addr !2750
  br i1 %153, label %dec_label_pc_fc66.dec_label_pc_fe2c_crit_edge, label %dec_label_pc_fc78.lr.ph, !insn.addr !2751

dec_label_pc_fc66.dec_label_pc_fe2c_crit_edge:    ; preds = %dec_label_pc_fc66
  %.pre57 = mul i32 %arg1, 4
  %.pre58 = and i32 %.pre57, 1020
  store i32 %.pre58, i32* %.pre-phi59.reg2mem
  store i32 %stack_var_-32.1.lcssa.reload, i32* %stack_var_-32.7.lcssa.reg2mem
  store i32 0, i32* %stack_var_-48.3.lcssa.reg2mem
  br label %dec_label_pc_fe2c

dec_label_pc_fc78.lr.ph:                          ; preds = %dec_label_pc_fc66
  %154 = urem i32 %1, 256, !insn.addr !2752
  %155 = mul i32 %arg1, 256
  %156 = and i32 %155, 65280
  %157 = mul i32 %arg1, 4
  %158 = and i32 %157, 1020
  %159 = add nuw nsw i32 %158, 188
  store i32 0, i32* %storemerge.off026.reg2mem
  store i32 0, i32* %stack_var_-48.325.reg2mem
  store i32 %stack_var_-32.1.lcssa.reload, i32* %stack_var_-32.724.reg2mem
  br label %dec_label_pc_fc78

dec_label_pc_fc78:                                ; preds = %dec_label_pc_fc78.lr.ph, %dec_label_pc_fe14
  %stack_var_-32.724.reload = load i32, i32* %stack_var_-32.724.reg2mem
  %stack_var_-48.325.reload = load i32, i32* %stack_var_-48.325.reg2mem
  %storemerge.off026.reload = load i32, i32* %storemerge.off026.reg2mem
  %160 = urem i32 %storemerge.off026.reload, 256, !insn.addr !2753
  %161 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2754
  %162 = call i32 @calculate_how_many_nonce_per_asic_get(i32 %154, i32 %160, i32 %161), !insn.addr !2755
  %163 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2756
  %164 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2757
  %165 = mul i32 %164, %163, !insn.addr !2758
  %166 = icmp ult i32 %165, %162, !insn.addr !2759
  %167 = icmp ne i1 %166, true, !insn.addr !2759
  %168 = icmp eq i32 %165, %162, !insn.addr !2759
  %169 = icmp ne i1 %167, true, !insn.addr !2760
  %170 = or i1 %168, %169, !insn.addr !2760
  store i32 %stack_var_-32.724.reload, i32* %stack_var_-32.6.reg2mem, !insn.addr !2760
  store i32 %stack_var_-48.325.reload, i32* %stack_var_-48.2.reg2mem, !insn.addr !2760
  br i1 %170, label %dec_label_pc_fe14, label %dec_label_pc_fcb4, !insn.addr !2760

dec_label_pc_fcb4:                                ; preds = %dec_label_pc_fc78
  %171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_29858, i32 0, i32 0), i32 %storemerge.off026.reload, i32 %162), !insn.addr !2761
  %172 = load i32, i32* @global_var_33684c, align 4, !insn.addr !2762
  %173 = icmp eq i32 %172, 0, !insn.addr !2763
  store i32 %stack_var_-32.724.reload, i32* %stack_var_-32.5.lcssa.reg2mem, !insn.addr !2764
  store i32 %stack_var_-48.325.reload, i32* %stack_var_-48.1.lcssa.reg2mem, !insn.addr !2764
  br i1 %173, label %dec_label_pc_fe08, label %dec_label_pc_fce4.lr.ph, !insn.addr !2764

dec_label_pc_fce4.lr.ph:                          ; preds = %dec_label_pc_fcb4
  %174 = mul i32 %storemerge.off026.reload, 4, !insn.addr !2765
  %175 = add i32 %174, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 524448), !insn.addr !2766
  %176 = inttoptr i32 %175 to i32*, !insn.addr !2766
  %177 = load i32, i32* %176, align 4, !insn.addr !2766
  %178 = add i32 %storemerge.off026.reload, %156, !insn.addr !2767
  %179 = mul i32 %178, 512, !insn.addr !2768
  %180 = add i32 %159, %177
  store i32 %172, i32* %.reg2mem70
  store i32 0, i32* %storemerge320.reg2mem
  store i32 %stack_var_-48.325.reload, i32* %stack_var_-48.119.reg2mem
  store i32 %stack_var_-32.724.reload, i32* %stack_var_-32.518.reg2mem
  store i32 0, i32* %stack_var_-28.117.reg2mem
  br label %dec_label_pc_fce4

dec_label_pc_fce4:                                ; preds = %dec_label_pc_fce4.lr.ph, %dec_label_pc_fdf0
  %stack_var_-28.117.reload = load i32, i32* %stack_var_-28.117.reg2mem
  %stack_var_-32.518.reload = load i32, i32* %stack_var_-32.518.reg2mem
  %stack_var_-48.119.reload = load i32, i32* %stack_var_-48.119.reg2mem
  %storemerge320.reload = load i32, i32* %storemerge320.reg2mem
  %.reload71 = load i32, i32* %.reg2mem70
  %181 = add i32 %storemerge320.reload, %179, !insn.addr !2769
  %182 = mul i32 %181, 4, !insn.addr !2770
  %183 = add i32 %182, ptrtoint (i32* @global_var_35b34 to i32), !insn.addr !2770
  %184 = inttoptr i32 %183 to i32*, !insn.addr !2770
  %185 = load i32, i32* %184, align 4, !insn.addr !2770
  %186 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2771
  %187 = icmp ult i32 %185, %186, !insn.addr !2772
  store i32 %.reload71, i32* %.reg2mem76, !insn.addr !2773
  store i32 %stack_var_-28.117.reload, i32* %stack_var_-28.0.reg2mem, !insn.addr !2773
  store i32 %stack_var_-32.518.reload, i32* %stack_var_-32.4.reg2mem, !insn.addr !2773
  store i32 %stack_var_-48.119.reload, i32* %stack_var_-48.0.reg2mem, !insn.addr !2773
  br i1 %187, label %dec_label_pc_fd0c, label %dec_label_pc_fdf0, !insn.addr !2773

dec_label_pc_fd0c:                                ; preds = %dec_label_pc_fce4
  %188 = load i32, i32* @global_var_3368c8, align 4, !insn.addr !2774
  %189 = load i32, i32* @global_var_3368cc, align 4, !insn.addr !2775
  %190 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_2986c, i32 0, i32 0), i32 %storemerge320.reload, i32 %185), !insn.addr !2776
  %191 = load i32, i32* @global_var_33681c, align 4, !insn.addr !2777
  %192 = icmp eq i32 %191, 0, !insn.addr !2778
  store i32 %191, i32* %.reg2mem72, !insn.addr !2779
  store i32 0, i32* %storemerge416.reg2mem, !insn.addr !2779
  br i1 %192, label %dec_label_pc_fdea, label %dec_label_pc_fd96, !insn.addr !2779

dec_label_pc_fd96:                                ; preds = %dec_label_pc_fd0c, %dec_label_pc_fdd4
  %storemerge416.reload = load i32, i32* %storemerge416.reg2mem
  %.reload73 = load i32, i32* %.reg2mem72
  %193 = mul i32 %.reload73, %storemerge320.reload, !insn.addr !2780
  %194 = add i32 %193, %storemerge416.reload, !insn.addr !2781
  %195 = mul i32 %194, 204, !insn.addr !2782
  %196 = add i32 %180, %195, !insn.addr !2783
  %197 = inttoptr i32 %196 to i32*, !insn.addr !2783
  %198 = load i32, i32* %197, align 4, !insn.addr !2783
  %199 = icmp eq i32 %198, 0, !insn.addr !2784
  store i32 %.reload73, i32* %.reg2mem74, !insn.addr !2785
  br i1 %199, label %dec_label_pc_fdc6, label %dec_label_pc_fdd4, !insn.addr !2785

dec_label_pc_fdc6:                                ; preds = %dec_label_pc_fd96
  %200 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_29620, i32 0, i32 0), i32 %storemerge416.reload), !insn.addr !2786
  %.pre = load i32, i32* @global_var_33681c, align 4
  store i32 %.pre, i32* %.reg2mem74, !insn.addr !2786
  br label %dec_label_pc_fdd4, !insn.addr !2786

dec_label_pc_fdd4:                                ; preds = %dec_label_pc_fd96, %dec_label_pc_fdc6
  %.reload75 = load i32, i32* %.reg2mem74, !insn.addr !2777
  %201 = add i32 %storemerge416.reload, 1, !insn.addr !2787
  %202 = icmp ult i32 %.reload75, %201, !insn.addr !2778
  %203 = icmp ne i1 %202, true, !insn.addr !2778
  %204 = icmp eq i32 %.reload75, %201, !insn.addr !2778
  %205 = icmp ne i1 %204, true, !insn.addr !2779
  %206 = icmp eq i1 %203, %205, !insn.addr !2779
  store i32 %.reload75, i32* %.reg2mem72, !insn.addr !2779
  store i32 %201, i32* %storemerge416.reg2mem, !insn.addr !2779
  br i1 %206, label %dec_label_pc_fd96, label %dec_label_pc_fdea, !insn.addr !2779

dec_label_pc_fdea:                                ; preds = %dec_label_pc_fdd4, %dec_label_pc_fd0c
  %207 = add i32 %stack_var_-28.117.reload, 1, !insn.addr !2788
  %208 = add i32 %207, %stack_var_-48.119.reload, !insn.addr !2789
  %209 = icmp ult i32 %188, %207, !insn.addr !2790
  %210 = and i32 %stack_var_-32.518.reload, -2
  %211 = icmp ult i32 %185, %189, !insn.addr !2791
  %212 = or i1 %209, %211
  %stack_var_-32.3 = select i1 %212, i32 %210, i32 %stack_var_-32.518.reload
  %213 = call i32 @putchar(i32 10), !insn.addr !2792
  %.pre56 = load i32, i32* @global_var_33684c, align 4
  store i32 %.pre56, i32* %.reg2mem76, !insn.addr !2792
  store i32 %207, i32* %stack_var_-28.0.reg2mem, !insn.addr !2792
  store i32 %stack_var_-32.3, i32* %stack_var_-32.4.reg2mem, !insn.addr !2792
  store i32 %208, i32* %stack_var_-48.0.reg2mem, !insn.addr !2792
  br label %dec_label_pc_fdf0, !insn.addr !2792

dec_label_pc_fdf0:                                ; preds = %dec_label_pc_fce4, %dec_label_pc_fdea
  %stack_var_-48.0.reload = load i32, i32* %stack_var_-48.0.reg2mem
  %stack_var_-32.4.reload = load i32, i32* %stack_var_-32.4.reg2mem
  %stack_var_-28.0.reload = load i32, i32* %stack_var_-28.0.reg2mem
  %.reload77 = load i32, i32* %.reg2mem76, !insn.addr !2762
  %214 = add i32 %storemerge320.reload, 1, !insn.addr !2793
  %215 = icmp ult i32 %.reload77, %214, !insn.addr !2763
  %216 = icmp ne i1 %215, true, !insn.addr !2763
  %217 = icmp eq i32 %.reload77, %214, !insn.addr !2763
  %218 = icmp ne i1 %217, true, !insn.addr !2764
  %219 = icmp eq i1 %216, %218, !insn.addr !2764
  store i32 %.reload77, i32* %.reg2mem70, !insn.addr !2764
  store i32 %214, i32* %storemerge320.reg2mem, !insn.addr !2764
  store i32 %stack_var_-48.0.reload, i32* %stack_var_-48.119.reg2mem, !insn.addr !2764
  store i32 %stack_var_-32.4.reload, i32* %stack_var_-32.518.reg2mem, !insn.addr !2764
  store i32 %stack_var_-28.0.reload, i32* %stack_var_-28.117.reg2mem, !insn.addr !2764
  store i32 %stack_var_-32.4.reload, i32* %stack_var_-32.5.lcssa.reg2mem, !insn.addr !2764
  store i32 %stack_var_-48.0.reload, i32* %stack_var_-48.1.lcssa.reg2mem, !insn.addr !2764
  br i1 %219, label %dec_label_pc_fce4, label %dec_label_pc_fe08, !insn.addr !2764

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fdf0, %dec_label_pc_fcb4
  %stack_var_-48.1.lcssa.reload = load i32, i32* %stack_var_-48.1.lcssa.reg2mem
  %stack_var_-32.5.lcssa.reload = load i32, i32* %stack_var_-32.5.lcssa.reg2mem
  %220 = call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_29854, i32 0, i32 0)), !insn.addr !2794
  store i32 %stack_var_-32.5.lcssa.reload, i32* %stack_var_-32.6.reg2mem, !insn.addr !2794
  store i32 %stack_var_-48.1.lcssa.reload, i32* %stack_var_-48.2.reg2mem, !insn.addr !2794
  br label %dec_label_pc_fe14, !insn.addr !2794

dec_label_pc_fe14:                                ; preds = %dec_label_pc_fe08, %dec_label_pc_fc78
  %stack_var_-48.2.reload = load i32, i32* %stack_var_-48.2.reg2mem
  %stack_var_-32.6.reload = load i32, i32* %stack_var_-32.6.reg2mem
  %221 = add i32 %storemerge.off026.reload, 1, !insn.addr !2795
  %222 = load i32, i32* @global_var_336848, align 4, !insn.addr !2749
  %223 = icmp ult i32 %222, %221, !insn.addr !2750
  %224 = icmp ne i1 %223, true, !insn.addr !2750
  %225 = icmp eq i32 %222, %221, !insn.addr !2750
  %226 = icmp ne i1 %225, true, !insn.addr !2751
  %227 = icmp eq i1 %224, %226, !insn.addr !2751
  store i32 %221, i32* %storemerge.off026.reg2mem, !insn.addr !2751
  store i32 %stack_var_-48.2.reload, i32* %stack_var_-48.325.reg2mem, !insn.addr !2751
  store i32 %stack_var_-32.6.reload, i32* %stack_var_-32.724.reg2mem, !insn.addr !2751
  store i32 %158, i32* %.pre-phi59.reg2mem, !insn.addr !2751
  store i32 %stack_var_-32.6.reload, i32* %stack_var_-32.7.lcssa.reg2mem, !insn.addr !2751
  store i32 %stack_var_-48.2.reload, i32* %stack_var_-48.3.lcssa.reg2mem, !insn.addr !2751
  br i1 %227, label %dec_label_pc_fc78, label %dec_label_pc_fe2c, !insn.addr !2751

dec_label_pc_fe2c:                                ; preds = %dec_label_pc_fe14, %dec_label_pc_fc66.dec_label_pc_fe2c_crit_edge
  %stack_var_-48.3.lcssa.reload = load i32, i32* %stack_var_-48.3.lcssa.reg2mem
  %stack_var_-32.7.lcssa.reload = load i32, i32* %stack_var_-32.7.lcssa.reg2mem
  %.pre-phi59.reload = load i32, i32* %.pre-phi59.reg2mem
  %228 = add i32 %.pre-phi59.reload, ptrtoint (i32* @global_var_35b14 to i32), !insn.addr !2796
  %229 = inttoptr i32 %228 to i32*, !insn.addr !2796
  %230 = load i32, i32* %229, align 4, !insn.addr !2796
  %231 = load i32, i32* @global_var_3368d4, align 4, !insn.addr !2797
  %232 = icmp ult i32 %230, %231, !insn.addr !2798
  %233 = icmp ne i1 %232, true, !insn.addr !2798
  %234 = icmp eq i32 %230, %231, !insn.addr !2798
  %235 = icmp ne i1 %233, true, !insn.addr !2799
  %236 = or i1 %234, %235, !insn.addr !2799
  store i32 %stack_var_-32.7.lcssa.reload, i32* %stack_var_-32.8.reg2mem, !insn.addr !2799
  br i1 %236, label %dec_label_pc_fe60, label %dec_label_pc_fe4a, !insn.addr !2799

dec_label_pc_fe4a:                                ; preds = %dec_label_pc_fe2c
  %237 = and i32 %stack_var_-32.7.lcssa.reload, -2, !insn.addr !2800
  %238 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_29898, i32 0, i32 0), i32 %237), !insn.addr !2801
  store i32 %237, i32* %stack_var_-32.8.reg2mem, !insn.addr !2801
  br label %dec_label_pc_fe60, !insn.addr !2801

dec_label_pc_fe60:                                ; preds = %dec_label_pc_fe4a, %dec_label_pc_fe2c
  %239 = mul i32 %8, %7, !insn.addr !2802
  %240 = mul i32 %239, %9, !insn.addr !2803
  %stack_var_-32.8.reload = load i32, i32* %stack_var_-32.8.reg2mem
  %241 = add i32 %.pre-phi59.reload, ptrtoint (i32* @global_var_35b04 to i32), !insn.addr !2804
  %242 = inttoptr i32 %241 to i32*, !insn.addr !2804
  %243 = load i32, i32* %242, align 4, !insn.addr !2804
  %244 = sub i32 %240, %243, !insn.addr !2805
  %245 = load i32, i32* @global_var_3368d0, align 4, !insn.addr !2806
  %246 = icmp ult i32 %244, %245, !insn.addr !2807
  %247 = icmp ne i1 %246, true, !insn.addr !2807
  %248 = icmp eq i32 %244, %245, !insn.addr !2807
  %249 = icmp ne i1 %247, true, !insn.addr !2808
  %250 = or i1 %248, %249, !insn.addr !2808
  store i32 %stack_var_-32.8.reload, i32* %stack_var_-32.9.reg2mem, !insn.addr !2808
  br i1 %250, label %dec_label_pc_fe98, label %dec_label_pc_fe82, !insn.addr !2808

dec_label_pc_fe82:                                ; preds = %dec_label_pc_fe60
  %251 = and i32 %stack_var_-32.8.reload, -2, !insn.addr !2809
  %252 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_29898, i32 0, i32 0), i32 %251), !insn.addr !2810
  store i32 %251, i32* %stack_var_-32.9.reg2mem, !insn.addr !2810
  br label %dec_label_pc_fe98, !insn.addr !2810

dec_label_pc_fe98:                                ; preds = %dec_label_pc_fe82, %dec_label_pc_fe60
  %stack_var_-32.9.reload = load i32, i32* %stack_var_-32.9.reg2mem
  %253 = call i32 @puts(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_2967c, i32 0, i32 0)), !insn.addr !2811
  %254 = urem i32 %1, 256, !insn.addr !2812
  %255 = add i32 %254, ptrtoint (i8** @global_var_235c04 to i32), !insn.addr !2813
  %256 = inttoptr i32 %255 to i8*, !insn.addr !2813
  %257 = load i8, i8* %256, align 1, !insn.addr !2813
  %258 = icmp eq i8 %257, 0, !insn.addr !2814
  %259 = and i32 %stack_var_-32.9.reload, -5
  %spec.select15 = select i1 %258, i32 %stack_var_-32.9.reload, i32 %259
  %260 = load i32, i32* %242, align 4, !insn.addr !2815
  %261 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_296e8, i32 0, i32 0), i32 %254, i32 %260), !insn.addr !2816
  %262 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_298a4, i32 0, i32 0), i32 %254, i32 %stack_var_-44.0.lcssa.reload), !insn.addr !2817
  %263 = add i32 %.pre-phi59.reload, ptrtoint (i32* @global_var_235b34 to i32), !insn.addr !2818
  %264 = inttoptr i32 %263 to i32*, !insn.addr !2818
  %265 = load i32, i32* %264, align 4, !insn.addr !2818
  %266 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_298d0, i32 0, i32 0), i32 %254, i32 %265), !insn.addr !2819
  %267 = load i32, i32* %229, align 4, !insn.addr !2820
  %268 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_29768, i32 0, i32 0), i32 %254, i32 %267), !insn.addr !2821
  %269 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @global_var_298fc, i32 0, i32 0), i32 %stack_var_-24.1.lcssa.reload), !insn.addr !2822
  %270 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @global_var_2991c, i32 0, i32 0), i32 %stack_var_-48.3.lcssa.reload), !insn.addr !2823
  %271 = load i32, i32* %242, align 4, !insn.addr !2824
  %272 = sub i32 %240, %271, !insn.addr !2825
  %273 = load i32, i32* @global_var_3368d0, align 4, !insn.addr !2826
  %274 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_2993c, i32 0, i32 0), i32 %240, i32 %272, i32 %273), !insn.addr !2827
  %275 = urem i32 %spec.select15, 2, !insn.addr !2828
  %276 = icmp eq i32 %275, 0, !insn.addr !2829
  br i1 %276, label %dec_label_pc_ff8e, label %dec_label_pc_ff80, !insn.addr !2830

dec_label_pc_ff80:                                ; preds = %dec_label_pc_fe98
  %277 = call i32 @puts(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_29784, i32 0, i32 0)), !insn.addr !2831
  br label %dec_label_pc_ff9a, !insn.addr !2832

dec_label_pc_ff8e:                                ; preds = %dec_label_pc_fe98
  %278 = call i32 @puts(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_29790, i32 0, i32 0)), !insn.addr !2833
  br label %dec_label_pc_ff9a, !insn.addr !2833

dec_label_pc_ff9a:                                ; preds = %dec_label_pc_ff8e, %dec_label_pc_ff80
  %279 = and i32 %spec.select15, 2, !insn.addr !2834
  %280 = icmp eq i32 %279, 0, !insn.addr !2835
  br i1 %280, label %dec_label_pc_ffb2, label %dec_label_pc_ffa4, !insn.addr !2836

dec_label_pc_ffa4:                                ; preds = %dec_label_pc_ff9a
  %281 = call i32 @puts(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2996c, i32 0, i32 0)), !insn.addr !2837
  br label %dec_label_pc_ffbe, !insn.addr !2838

dec_label_pc_ffb2:                                ; preds = %dec_label_pc_ff9a
  %282 = call i32 @puts(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_29978, i32 0, i32 0)), !insn.addr !2839
  br label %dec_label_pc_ffbe, !insn.addr !2839

dec_label_pc_ffbe:                                ; preds = %dec_label_pc_ffb2, %dec_label_pc_ffa4
  %283 = and i32 %spec.select15, 4, !insn.addr !2840
  %284 = icmp eq i32 %283, 0, !insn.addr !2841
  br i1 %284, label %dec_label_pc_ffd6, label %dec_label_pc_ffc8, !insn.addr !2842

dec_label_pc_ffc8:                                ; preds = %dec_label_pc_ffbe
  %285 = call i32 @puts(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_29984, i32 0, i32 0)), !insn.addr !2843
  br label %dec_label_pc_ffe2, !insn.addr !2844

dec_label_pc_ffd6:                                ; preds = %dec_label_pc_ffbe
  %286 = call i32 @puts(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_29994, i32 0, i32 0)), !insn.addr !2845
  br label %dec_label_pc_ffe2, !insn.addr !2845

dec_label_pc_ffe2:                                ; preds = %dec_label_pc_ffd6, %dec_label_pc_ffc8
  ret i32 %spec.select15, !insn.addr !2846

; uselistorder directives
  uselistorder i32 %spec.select15, { 3, 2, 1, 0 }
  uselistorder i32 %254, { 4, 2, 3, 1, 0 }
  uselistorder i32 %stack_var_-32.9.reload, { 1, 0 }
  uselistorder i32 %245, { 1, 0 }
  uselistorder i32 %244, { 1, 0 }
  uselistorder i32 %stack_var_-32.8.reload, { 1, 0 }
  uselistorder i32 %240, { 1, 0, 2 }
  uselistorder i32 %231, { 1, 0 }
  uselistorder i32 %230, { 1, 0 }
  uselistorder i32 %stack_var_-32.7.lcssa.reload, { 1, 0 }
  uselistorder i32 %222, { 1, 0 }
  uselistorder i32 %214, { 0, 2, 1 }
  uselistorder i32 %.reload77, { 2, 1, 0 }
  uselistorder i32 %207, { 0, 2, 1 }
  uselistorder i32 %201, { 0, 2, 1 }
  uselistorder i32 %.reload75, { 2, 1, 0 }
  uselistorder i32 %storemerge416.reload, { 1, 2, 0 }
  uselistorder i32 %185, { 1, 0, 2 }
  uselistorder i32 %storemerge320.reload, { 1, 3, 0, 2 }
  uselistorder i32 %stack_var_-48.119.reload, { 1, 0 }
  uselistorder i32 %stack_var_-32.518.reload, { 1, 2, 0 }
  uselistorder i32 %stack_var_-28.117.reload, { 1, 0 }
  uselistorder i32 %165, { 1, 0 }
  uselistorder i32 %162, { 0, 2, 1 }
  uselistorder i32 %storemerge.off026.reload, { 1, 2, 4, 0, 3 }
  uselistorder i32 %stack_var_-48.325.reload, { 2, 1, 0 }
  uselistorder i32 %stack_var_-32.724.reload, { 2, 1, 0 }
  uselistorder i32 %145, { 1, 0 }
  uselistorder i32 %storemerge635.reload, { 1, 0 }
  uselistorder i32 %135, { 0, 2, 1 }
  uselistorder i32 %129, { 0, 2, 1 }
  uselistorder i32 %.reload69, { 0, 1, 3, 2 }
  uselistorder i32 %92, { 1, 0 }
  uselistorder i32 %stack_var_-36.1.lcssa.reload, { 1, 0 }
  uselistorder i32 %storemerge1043.reload, { 1, 0 }
  uselistorder i32 %81, { 0, 2, 1 }
  uselistorder i32 %75, { 0, 2, 1 }
  uselistorder i32 %.reload67, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-32.1.lcssa.reload, { 1, 0 }
  uselistorder i32 %40, { 1, 0 }
  uselistorder i32 %28, { 1, 0 }
  uselistorder i32 %24, { 1, 0, 2 }
  uselistorder i32 %.reload, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-32.150.reload, { 1, 2, 0 }
  uselistorder i32 %stack_var_-24.149.reload, { 1, 0 }
  uselistorder i32* %.reg2mem, { 1, 0, 2 }
  uselistorder i64* %storemerge1251.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32.150.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-24.149.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem66, { 1, 0, 2 }
  uselistorder i64* %storemerge947.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44.046.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge1140.reg2mem, { 1, 2, 0 }
  uselistorder i32* %stack_var_-36.039.reg2mem, { 1, 2, 0 }
  uselistorder i32* %stack_var_-36.0.lcssa.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem68, { 1, 0, 2 }
  uselistorder i64* %storemerge538.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge732.reg2mem, { 1, 2, 0 }
  uselistorder i32* %stack_var_-40.031.reg2mem, { 1, 2, 0 }
  uselistorder i32* %stack_var_-40.0.lcssa.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge.off026.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48.325.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32.724.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem70, { 1, 0, 2 }
  uselistorder i32* %storemerge320.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48.119.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32.518.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-28.117.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem72, { 2, 0, 1 }
  uselistorder i32* %storemerge416.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem76, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-32.4.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-48.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* @global_var_35b04, { 1, 0 }
  uselistorder i32* @global_var_35b14, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_35b34 to i32), { 0, 2, 1, 3, 4, 5 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_29854, i32 0, i32 0), { 1, 0 }
  uselistorder i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_297f0, i32 0, i32 0), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @calculate_how_many_nonce_per_asic_get, { 1, 0 }
  uselistorder i64 954437177, { 2, 1, 0 }
  uselistorder i64 4294967295, { 2, 1, 0, 5, 4, 3 }
  uselistorder label %dec_label_pc_fdf0, { 1, 0 }
  uselistorder label %dec_label_pc_fdd4, { 1, 0 }
  uselistorder label %dec_label_pc_fd96, { 1, 0 }
  uselistorder label %dec_label_pc_fce4, { 1, 0 }
  uselistorder label %dec_label_pc_fc78, { 1, 0 }
  uselistorder label %dec_label_pc_fc1a.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_fc2a, { 1, 0 }
  uselistorder label %dec_label_pc_fba6, { 1, 0 }
  uselistorder label %dec_label_pc_fb84, { 1, 0 }
  uselistorder label %dec_label_pc_fb1e.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_fb2e, { 1, 0 }
  uselistorder label %dec_label_pc_fac0, { 1, 0 }
  uselistorder label %dec_label_pc_fa9e, { 1, 0 }
  uselistorder label %dec_label_pc_fa08, { 1, 0 }
  uselistorder label %dec_label_pc_f9e6, { 1, 0 }
}

define i32 @get_pllparam_divider(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_fff0:
  %0 = alloca i32
  %1 = alloca float
  %2 = load float, float* %1
  %3 = load i32, i32* %0
  %4 = load i32, i32* %0
  %5 = load i32, i32* %0
  %6 = load i32, i32* %0
  %7 = load i32, i32* %0
  %8 = load i32, i32* %0
  call void @__asm_vstr(float %2, i32 %8), !insn.addr !2847
  br label %dec_label_pc_1008a, !insn.addr !2848

dec_label_pc_1008a:                               ; preds = %dec_label_pc_fff0, %dec_label_pc_1008a
  %9 = call float @__asm_vldr(i32 1159479296), !insn.addr !2849
  %10 = call float @__asm_vldr(i32 542046359), !insn.addr !2850
  call void @__asm_vcmpe.f32(float %9, float %10), !insn.addr !2851
  call void @__asm_vmrs(i32 %4, i32 %3), !insn.addr !2852
  %11 = call float @__asm_vmov.f32(float 2.500000e+01), !insn.addr !2853
  %12 = call float @__asm_vldr(i32 1103626240), !insn.addr !2854
  %13 = call float @__asm_vdiv.f32(float %11, float %12), !insn.addr !2855
  %14 = call float @__asm_vcvt.u32.f32(float %13), !insn.addr !2856
  %15 = call i32 @__asm_vmov(float %14), !insn.addr !2857
  %16 = urem i32 %15, 256, !insn.addr !2858
  %17 = call float @__asm_vmov.72(i32 %16), !insn.addr !2859
  %18 = call float @__asm_vcvt.f32.s32(float %17), !insn.addr !2860
  %19 = call float @__asm_vldr(i32 1159479296), !insn.addr !2861
  %20 = call float @__asm_vmul.f32(float %18, float %19), !insn.addr !2862
  %21 = call float @__asm_vmov.f32(float 2.500000e+01), !insn.addr !2863
  %22 = call float @__asm_vdiv.f32(float %20, float %21), !insn.addr !2864
  %23 = call float @__asm_vcvt.u32.f32(float %22), !insn.addr !2865
  %24 = call i32 @__asm_vmov(float %23), !insn.addr !2866
  %25 = call float @__asm_vldr(i32 1159479296), !insn.addr !2867
  %26 = call float @__asm_vldr(i32 %8), !insn.addr !2868
  %27 = call float @__asm_vdiv.f32(float %25, float %26), !insn.addr !2869
  call void @__asm_vstr(float %27, i32 %7), !insn.addr !2870
  %28 = call float @__asm_vldr(i32 %7), !insn.addr !2871
  %29 = call float @__asm_vcvt.u32.f32(float %28), !insn.addr !2872
  call void @__asm_vstr(float %29, i32 %6), !insn.addr !2873
  %30 = call float @__asm_vldr(i32 %6), !insn.addr !2874
  %31 = call float @__asm_vcvt.f32.u32(float %30), !insn.addr !2875
  %32 = call float @__asm_vldr(i32 %7), !insn.addr !2876
  %33 = call float @__asm_vsub.f32(float %32, float %31), !insn.addr !2877
  call void @__asm_vstr(float %33, i32 %5), !insn.addr !2878
  %34 = call float @__asm_vldr(i32 %5), !insn.addr !2879
  %35 = call float @__asm_vldr(i32 1103626240), !insn.addr !2880
  call void @__asm_vcmpe.f32(float %34, float %35), !insn.addr !2881
  call void @__asm_vmrs(i32 %4, i32 %3), !insn.addr !2882
  %36 = call float @__asm_vldr(i32 1159479296), !insn.addr !2883
  %37 = call float @__asm_vldr(i32 1103626240), !insn.addr !2884
  %38 = call float @__asm_vsub.f32(float %36, float %37), !insn.addr !2885
  call void @__asm_vstr(float %38, i32 1159479296), !insn.addr !2886
  %39 = call float @__asm_vldr(i32 1159479296), !insn.addr !2887
  %40 = call float @__asm_vldr(i32 1152319488), !insn.addr !2888
  call void @__asm_vcmpe.f32(float %39, float %40), !insn.addr !2889
  call void @__asm_vmrs(i32 %4, i32 %3), !insn.addr !2890
  br label %dec_label_pc_1008a

; uselistorder directives
  uselistorder i32 %4, { 2, 1, 0 }
  uselistorder i32 %3, { 2, 1, 0 }
  uselistorder i32* %0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1103626240, { 2, 0, 1 }
  uselistorder float (i32)* @__asm_vldr, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0, 20, 22, 24, 1, 23 }
  uselistorder i32 1159479296, { 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_1008a, { 1, 0 }
}

define i32 @enable_read_temperature_from_asic_chain(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10568:
  %r0.0.reg2mem = alloca i32, !insn.addr !2891
  %0 = mul i32 %arg1, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !2892
  %2 = mul i32 %arg2, 16777216
  %3 = ashr exact i32 %2, 24, !insn.addr !2893
  %4 = load i32, i32* @global_var_336850, align 4, !insn.addr !2894
  store i32 %arg1, i32* %r0.0.reg2mem
  switch i32 %4, label %dec_label_pc_105fc [
    i32 1722, label %dec_label_pc_1058c
    i32 1725, label %dec_label_pc_105ce
  ]

dec_label_pc_1058c:                               ; preds = %dec_label_pc_10568
  %5 = load i32, i32* @global_var_3368e0, align 4, !insn.addr !2895
  %6 = mul i32 %5, 256, !insn.addr !2896
  %7 = or i32 %6, 117465185, !insn.addr !2897
  %8 = urem i32 %1, 256, !insn.addr !2898
  %9 = urem i32 %3, 256, !insn.addr !2899
  %10 = call i32 @set_BM1722_asic_register(i32 %8, i32 %9, i32 28, i32 0, i32 %7), !insn.addr !2900
  store i32 %10, i32* %r0.0.reg2mem, !insn.addr !2901
  br label %dec_label_pc_105fc, !insn.addr !2901

dec_label_pc_105ce:                               ; preds = %dec_label_pc_10568
  %11 = load i32, i32* @global_var_3368e0, align 4, !insn.addr !2902
  %12 = mul i32 %11, 256, !insn.addr !2903
  %13 = or i32 %12, 117465185, !insn.addr !2904
  %14 = urem i32 %1, 256, !insn.addr !2905
  %15 = urem i32 %3, 256, !insn.addr !2906
  %16 = call i32 @set_BM1725_asic_register(i32 %14, i32 %15, i32 28, i32 0, i32 %13), !insn.addr !2907
  store i32 %16, i32* %r0.0.reg2mem, !insn.addr !2907
  br label %dec_label_pc_105fc, !insn.addr !2907

dec_label_pc_105fc:                               ; preds = %dec_label_pc_10568, %dec_label_pc_105ce, %dec_label_pc_1058c
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !2908

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_105fc, { 1, 2, 0 }
}

define i32 @enable_extended_mode_of_temperature_sensor_chain(i32 %arg1) local_unnamed_addr {
dec_label_pc_10604:
  %r0.4.reg2mem = alloca i32, !insn.addr !2909
  %stack_var_-16.4.reg2mem = alloca i32, !insn.addr !2909
  %r0.3.reg2mem = alloca i32, !insn.addr !2909
  %stack_var_-16.3.reg2mem = alloca i32, !insn.addr !2909
  %r0.2.reg2mem = alloca i32, !insn.addr !2909
  %stack_var_-16.2.reg2mem = alloca i32, !insn.addr !2909
  %stack_var_-24.1.reg2mem = alloca i32, !insn.addr !2909
  %.reg2mem11 = alloca i32, !insn.addr !2909
  %r0.2.ph.reg2mem = alloca i32, !insn.addr !2909
  %stack_var_-16.2.ph.reg2mem = alloca i32, !insn.addr !2909
  %stack_var_-24.1.ph.reg2mem = alloca i32, !insn.addr !2909
  %r0.1.reg2mem = alloca i32, !insn.addr !2909
  %stack_var_-16.1.reg2mem = alloca i32, !insn.addr !2909
  %r0.0.reg2mem = alloca i32, !insn.addr !2909
  %stack_var_-16.0.reg2mem = alloca i32, !insn.addr !2909
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !2909
  %stack_var_-20.37.reg2mem = alloca i8, !insn.addr !2909
  %stack_var_-16.58.reg2mem = alloca i32, !insn.addr !2909
  %r0.59.reg2mem = alloca i32, !insn.addr !2909
  %storemerge10.reg2mem = alloca i32, !insn.addr !2909
  %.reg2mem = alloca i1, !insn.addr !2909
  %0 = urem i32 %arg1, 256
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_290a0, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @global_var_29f1c, i32 0, i32 0)), !insn.addr !2910
  %2 = add i32 %0, ptrtoint (i8** @global_var_235b54 to i32)
  %3 = inttoptr i32 %2 to i8*
  store i1 false, i1* %.reg2mem
  store i32 0, i32* %storemerge10.reg2mem
  store i32 %1, i32* %r0.59.reg2mem
  br label %dec_label_pc_10658

dec_label_pc_10658:                               ; preds = %dec_label_pc_10604, %dec_label_pc_108bc
  %stack_var_-20.37.reload = load i8, i8* %stack_var_-20.37.reg2mem
  %stack_var_-16.58.reload = load i32, i32* %stack_var_-16.58.reg2mem
  %r0.59.reload = load i32, i32* %r0.59.reg2mem
  %storemerge10.reload = load i32, i32* %storemerge10.reg2mem
  %.reload = load i1, i1* %.reg2mem
  %4 = icmp eq i32 %storemerge10.reload, 0, !insn.addr !2911
  %5 = load i8, i8* @global_var_3368ac, align 1
  %spec.select = select i1 %4, i8 %5, i8 %stack_var_-20.37.reload
  %6 = icmp eq i32 %storemerge10.reload, 1, !insn.addr !2912
  %7 = load i8, i8* @global_var_3368ad, align 1
  %stack_var_-20.1 = select i1 %6, i8 %7, i8 %spec.select
  %8 = load i8, i8* @global_var_3368ae, align 1
  %spec.select6 = select i1 %.reload, i8 %8, i8 %stack_var_-20.1
  %9 = icmp eq i8 %spec.select6, 0, !insn.addr !2913
  store i32 %stack_var_-16.58.reload, i32* %stack_var_-16.4.reg2mem, !insn.addr !2914
  store i32 %r0.59.reload, i32* %r0.4.reg2mem, !insn.addr !2914
  br i1 %9, label %dec_label_pc_108bc, label %dec_label_pc_1069c, !insn.addr !2914

dec_label_pc_1069c:                               ; preds = %dec_label_pc_10658
  %10 = add i8 %spec.select6, -1
  %11 = zext i8 %10 to i32, !insn.addr !2915
  %12 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2916
  %13 = urem i32 %12, 256, !insn.addr !2917
  %14 = mul nuw nsw i32 %13, %11, !insn.addr !2918
  %15 = urem i32 %14, 256, !insn.addr !2919
  %16 = call i32 @enable_read_temperature_from_asic_chain(i32 %0, i32 %15), !insn.addr !2920
  %17 = sext i8 %spec.select6 to i32
  %18 = add nsw i32 %17, -1
  store i32 1, i32* %stack_var_-24.0.reg2mem, !insn.addr !2920
  store i32 %stack_var_-16.58.reload, i32* %stack_var_-16.0.reg2mem, !insn.addr !2920
  store i32 %16, i32* %r0.0.reg2mem, !insn.addr !2920
  br label %dec_label_pc_106be, !insn.addr !2920

dec_label_pc_106be:                               ; preds = %dec_label_pc_1072c, %dec_label_pc_1069c
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %stack_var_-16.0.reload = load i32, i32* %stack_var_-16.0.reg2mem
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %19 = load i32, i32* @global_var_336850, align 4, !insn.addr !2921
  store i32 %stack_var_-16.0.reload, i32* %stack_var_-16.1.reg2mem
  store i32 %r0.0.reload, i32* %r0.1.reg2mem
  switch i32 %19, label %dec_label_pc_1072c [
    i32 1722, label %dec_label_pc_106d0
    i32 1725, label %dec_label_pc_10708
  ]

dec_label_pc_106d0:                               ; preds = %dec_label_pc_106be
  %20 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2922
  %21 = mul i32 %20, %18, !insn.addr !2923
  %22 = call i32 @check_BM1722_asic_reg(i32 %0, i32 %21, i32 32, i32 0), !insn.addr !2924
  store i32 %22, i32* %stack_var_-16.1.reg2mem, !insn.addr !2925
  store i32 %22, i32* %r0.1.reg2mem, !insn.addr !2925
  br label %dec_label_pc_1072c, !insn.addr !2925

dec_label_pc_10708:                               ; preds = %dec_label_pc_106be
  %23 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2926
  %24 = mul i32 %23, %18, !insn.addr !2927
  %25 = call i32 @check_BM1725_asic_reg(i32 %0, i32 %24, i32 32, i32 0), !insn.addr !2928
  store i32 %25, i32* %stack_var_-16.1.reg2mem, !insn.addr !2929
  store i32 %25, i32* %r0.1.reg2mem, !insn.addr !2929
  br label %dec_label_pc_1072c, !insn.addr !2929

dec_label_pc_1072c:                               ; preds = %dec_label_pc_106be, %dec_label_pc_10708, %dec_label_pc_106d0
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %stack_var_-16.1.reload = load i32, i32* %stack_var_-16.1.reg2mem
  %26 = icmp ugt i32 %stack_var_-16.1.reload, 1073741823, !insn.addr !2930
  %27 = icmp ult i32 %stack_var_-24.0.reload, 2, !insn.addr !2931
  %or.cond = icmp eq i1 %27, %26
  store i32 2, i32* %stack_var_-24.0.reg2mem, !insn.addr !2932
  store i32 %stack_var_-16.1.reload, i32* %stack_var_-16.0.reg2mem, !insn.addr !2932
  store i32 %r0.1.reload, i32* %r0.0.reg2mem, !insn.addr !2932
  br i1 %or.cond, label %dec_label_pc_106be, label %dec_label_pc_1074c, !insn.addr !2932

dec_label_pc_1074c:                               ; preds = %dec_label_pc_1072c
  %28 = icmp ult i32 %stack_var_-16.1.reload, 1073741824, !insn.addr !2933
  br i1 %28, label %dec_label_pc_1075c, label %dec_label_pc_10898, !insn.addr !2934

dec_label_pc_1075c:                               ; preds = %dec_label_pc_1074c
  %29 = load i32, i32* @global_var_336850, align 4
  store i32 %29, i32* %.reg2mem11
  store i32 0, i32* %stack_var_-24.1.reg2mem
  store i32 %stack_var_-16.1.reload, i32* %stack_var_-16.2.reg2mem
  store i32 %r0.1.reload, i32* %r0.2.reg2mem
  switch i32 %29, label %dec_label_pc_107d6 [
    i32 1722, label %dec_label_pc_1076e
    i32 1725, label %dec_label_pc_107ac
  ]

dec_label_pc_1076e:                               ; preds = %dec_label_pc_1075c
  %30 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2935
  %31 = mul i32 %30, %18, !insn.addr !2936
  %32 = call i32 @set_BM1722_asic_register(i32 %0, i32 %31, i32 32, i32 0, i32 26806532), !insn.addr !2937
  store i32 0, i32* %stack_var_-24.1.ph.reg2mem, !insn.addr !2938
  store i32 %stack_var_-16.1.reload, i32* %stack_var_-16.2.ph.reg2mem, !insn.addr !2938
  store i32 %32, i32* %r0.2.ph.reg2mem, !insn.addr !2938
  br label %dec_label_pc_107d6thread-pre-split, !insn.addr !2938

dec_label_pc_107ac:                               ; preds = %dec_label_pc_1075c
  %33 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2939
  %34 = mul i32 %33, %18, !insn.addr !2940
  %35 = call i32 @set_BM1725_asic_register(i32 %0, i32 %34, i32 32, i32 0, i32 26806532), !insn.addr !2941
  store i32 0, i32* %stack_var_-24.1.ph.reg2mem, !insn.addr !2941
  store i32 %stack_var_-16.1.reload, i32* %stack_var_-16.2.ph.reg2mem, !insn.addr !2941
  store i32 %35, i32* %r0.2.ph.reg2mem, !insn.addr !2941
  br label %dec_label_pc_107d6thread-pre-split, !insn.addr !2941

dec_label_pc_107d6thread-pre-split:               ; preds = %dec_label_pc_1076e, %dec_label_pc_107ac, %dec_label_pc_10844
  %r0.2.ph.reload = load i32, i32* %r0.2.ph.reg2mem
  %stack_var_-16.2.ph.reload = load i32, i32* %stack_var_-16.2.ph.reg2mem
  %stack_var_-24.1.ph.reload = load i32, i32* %stack_var_-24.1.ph.reg2mem
  %.pr = load i32, i32* @global_var_336850, align 4
  store i32 %.pr, i32* %.reg2mem11
  store i32 %stack_var_-24.1.ph.reload, i32* %stack_var_-24.1.reg2mem
  store i32 %stack_var_-16.2.ph.reload, i32* %stack_var_-16.2.reg2mem
  store i32 %r0.2.ph.reload, i32* %r0.2.reg2mem
  br label %dec_label_pc_107d6

dec_label_pc_107d6:                               ; preds = %dec_label_pc_107d6thread-pre-split, %dec_label_pc_1075c
  %r0.2.reload = load i32, i32* %r0.2.reg2mem
  %stack_var_-16.2.reload = load i32, i32* %stack_var_-16.2.reg2mem
  %stack_var_-24.1.reload = load i32, i32* %stack_var_-24.1.reg2mem
  %.reload12 = load i32, i32* %.reg2mem11, !insn.addr !2942
  store i32 %stack_var_-16.2.reload, i32* %stack_var_-16.3.reg2mem
  store i32 %r0.2.reload, i32* %r0.3.reg2mem
  switch i32 %.reload12, label %dec_label_pc_10844 [
    i32 1722, label %dec_label_pc_107e8
    i32 1725, label %dec_label_pc_10820
  ]

dec_label_pc_107e8:                               ; preds = %dec_label_pc_107d6
  %36 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2943
  %37 = mul i32 %36, %18, !insn.addr !2944
  %38 = call i32 @check_BM1722_asic_reg(i32 %0, i32 %37, i32 32, i32 0), !insn.addr !2945
  store i32 %38, i32* %stack_var_-16.3.reg2mem, !insn.addr !2946
  store i32 %38, i32* %r0.3.reg2mem, !insn.addr !2946
  br label %dec_label_pc_10844, !insn.addr !2946

dec_label_pc_10820:                               ; preds = %dec_label_pc_107d6
  %39 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2947
  %40 = mul i32 %39, %18, !insn.addr !2948
  %41 = call i32 @check_BM1725_asic_reg(i32 %0, i32 %40, i32 32, i32 0), !insn.addr !2949
  store i32 %41, i32* %stack_var_-16.3.reg2mem, !insn.addr !2950
  store i32 %41, i32* %r0.3.reg2mem, !insn.addr !2950
  br label %dec_label_pc_10844, !insn.addr !2950

dec_label_pc_10844:                               ; preds = %dec_label_pc_107d6, %dec_label_pc_10820, %dec_label_pc_107e8
  %r0.3.reload = load i32, i32* %r0.3.reg2mem
  %stack_var_-16.3.reload = load i32, i32* %stack_var_-16.3.reg2mem
  %42 = add i32 %stack_var_-24.1.reload, 1, !insn.addr !2951
  %43 = icmp ugt i32 %stack_var_-16.3.reload, 1073741823, !insn.addr !2952
  %44 = icmp ult i32 %42, 2, !insn.addr !2953
  %or.cond5 = icmp eq i1 %44, %43
  store i32 %42, i32* %stack_var_-24.1.ph.reg2mem, !insn.addr !2954
  store i32 %stack_var_-16.3.reload, i32* %stack_var_-16.2.ph.reg2mem, !insn.addr !2954
  store i32 %r0.3.reload, i32* %r0.2.ph.reg2mem, !insn.addr !2954
  br i1 %or.cond5, label %dec_label_pc_107d6thread-pre-split, label %dec_label_pc_10864, !insn.addr !2954

dec_label_pc_10864:                               ; preds = %dec_label_pc_10844
  %45 = icmp ult i32 %stack_var_-16.3.reload, 1073741824, !insn.addr !2955
  store i32 %stack_var_-16.3.reload, i32* %stack_var_-16.4.reg2mem, !insn.addr !2956
  store i32 %r0.3.reload, i32* %r0.4.reg2mem, !insn.addr !2956
  br i1 %45, label %dec_label_pc_108bc, label %dec_label_pc_10872, !insn.addr !2956

dec_label_pc_10872:                               ; preds = %dec_label_pc_10864
  store i8 1, i8* %3, align 1, !insn.addr !2957
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_var_29b0c, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @global_var_29f1c, i32 0, i32 0), i32 %stack_var_-16.3.reload), !insn.addr !2958
  store i32 %stack_var_-16.3.reload, i32* %stack_var_-16.4.reg2mem, !insn.addr !2959
  store i32 %46, i32* %r0.4.reg2mem, !insn.addr !2959
  br label %dec_label_pc_108bc, !insn.addr !2959

dec_label_pc_10898:                               ; preds = %dec_label_pc_1074c
  store i8 1, i8* %3, align 1, !insn.addr !2960
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @global_var_29b38, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @global_var_29f1c, i32 0, i32 0), i32 %stack_var_-16.1.reload), !insn.addr !2961
  store i32 %stack_var_-16.1.reload, i32* %stack_var_-16.4.reg2mem, !insn.addr !2961
  store i32 %47, i32* %r0.4.reg2mem, !insn.addr !2961
  br label %dec_label_pc_108bc, !insn.addr !2961

dec_label_pc_108bc:                               ; preds = %dec_label_pc_10898, %dec_label_pc_10872, %dec_label_pc_10864, %dec_label_pc_10658
  %r0.4.reload = load i32, i32* %r0.4.reg2mem
  %stack_var_-16.4.reload = load i32, i32* %stack_var_-16.4.reg2mem
  %48 = add i32 %storemerge10.reload, 1, !insn.addr !2962
  %49 = icmp ult i32 %48, 2, !insn.addr !2963
  %50 = icmp ne i1 %49, true, !insn.addr !2963
  %51 = icmp eq i32 %48, 2, !insn.addr !2963
  %52 = icmp ne i1 %50, true, !insn.addr !2964
  %53 = or i1 %51, %52, !insn.addr !2964
  store i1 %51, i1* %.reg2mem, !insn.addr !2964
  store i32 %48, i32* %storemerge10.reg2mem, !insn.addr !2964
  store i32 %r0.4.reload, i32* %r0.59.reg2mem, !insn.addr !2964
  store i32 %stack_var_-16.4.reload, i32* %stack_var_-16.58.reg2mem, !insn.addr !2964
  store i8 %spec.select6, i8* %stack_var_-20.37.reg2mem, !insn.addr !2964
  br i1 %53, label %dec_label_pc_10658, label %dec_label_pc_108ca, !insn.addr !2964

dec_label_pc_108ca:                               ; preds = %dec_label_pc_108bc
  ret i32 %r0.4.reload, !insn.addr !2965

; uselistorder directives
  uselistorder i32 %48, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.3.reload, { 0, 3, 1, 2, 5, 4 }
  uselistorder i32 %29, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.reload, { 0, 6, 3, 2, 1, 5, 7, 4 }
  uselistorder i32 %18, { 1, 0, 3, 2, 5, 4 }
  uselistorder i8 %spec.select6, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-16.58.reload, { 1, 0 }
  uselistorder i8* %3, { 1, 0 }
  uselistorder i32 %0, { 2, 1, 4, 3, 7, 6, 0, 5 }
  uselistorder i1* %.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge10.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r0.59.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16.58.reg2mem, { 1, 0 }
  uselistorder i8* %stack_var_-20.37.reg2mem, { 1, 0 }
  uselistorder i32* %stack_var_-24.0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16.0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r0.0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16.1.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-24.1.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-16.2.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %r0.2.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %.reg2mem11, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16.3.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %r0.3.reg2mem, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10844, { 1, 2, 0 }
  uselistorder label %dec_label_pc_107d6thread-pre-split, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1072c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10658, { 1, 0 }
}

define i32 @get_temperature_offset_value_from_asic_chain(i32 %arg1) local_unnamed_addr {
dec_label_pc_108d4:
  %r0.3.reg2mem = alloca i32, !insn.addr !2966
  %storemerge12.reg2mem = alloca i32, !insn.addr !2966
  %r0.0.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-36.1.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-32.1.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-16.6.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-32.0.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-16.5.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-24.2.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-16.4.reg2mem = alloca i32, !insn.addr !2966
  %.reg2mem23 = alloca i32, !insn.addr !2966
  %stack_var_-24.2.ph.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-16.4.ph.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-36.0.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-16.3.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-24.1.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-16.2.reg2mem = alloca i32, !insn.addr !2966
  %.reg2mem21 = alloca i32, !insn.addr !2966
  %stack_var_-24.1.ph.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-16.2.ph.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-16.1.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-16.0.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-16.713.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-32.214.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-36.215.reg2mem = alloca i32, !insn.addr !2966
  %stack_var_-20.316.reg2mem = alloca i8, !insn.addr !2966
  %r0.117.reg2mem = alloca i32, !insn.addr !2966
  %storemerge318.reg2mem = alloca i32, !insn.addr !2966
  %.reg2mem = alloca i1, !insn.addr !2966
  %stack_var_-44 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %0 = urem i32 %arg1, 256
  store i8 0, i8* %stack_var_-44, align 1, !insn.addr !2967
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_290a0, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @global_var_29eec, i32 0, i32 0)), !insn.addr !2968
  %2 = add i32 %0, ptrtoint (i8** @global_var_235b54 to i32)
  %3 = inttoptr i32 %2 to i8*
  %4 = ptrtoint i32* %stack_var_-8 to i32
  %5 = add i32 %4, -36
  %6 = add i32 %0, ptrtoint (i8** @global_var_235b60 to i32)
  %7 = inttoptr i32 %6 to i8*
  %8 = add i32 %0, ptrtoint (i8** @global_var_235b5c to i32)
  %9 = inttoptr i32 %8 to i8*
  %10 = add i32 %0, ptrtoint (i8** @global_var_235b58 to i32)
  %11 = inttoptr i32 %10 to i8*
  %12 = add i32 %4, -32
  %13 = inttoptr i32 %12 to i8*
  %14 = add i32 %4, -31
  %15 = inttoptr i32 %14 to i8*
  %16 = add i32 %4, -34
  %17 = inttoptr i32 %16 to i8*
  %18 = add i32 %4, -33
  %19 = inttoptr i32 %18 to i8*
  %20 = inttoptr i32 %5 to i8*
  %21 = add i32 %4, -35
  %22 = inttoptr i32 %21 to i8*
  store i1 false, i1* %.reg2mem
  store i32 0, i32* %storemerge318.reg2mem
  store i32 %1, i32* %r0.117.reg2mem
  store i32 0, i32* %stack_var_-36.215.reg2mem
  store i32 0, i32* %stack_var_-32.214.reg2mem
  store i32 -1, i32* %stack_var_-16.713.reg2mem
  br label %dec_label_pc_1092e

dec_label_pc_1092e:                               ; preds = %dec_label_pc_108d4, %dec_label_pc_10e14
  %stack_var_-16.713.reload = load i32, i32* %stack_var_-16.713.reg2mem
  %stack_var_-32.214.reload = load i32, i32* %stack_var_-32.214.reg2mem
  %stack_var_-36.215.reload = load i32, i32* %stack_var_-36.215.reg2mem
  %stack_var_-20.316.reload = load i8, i8* %stack_var_-20.316.reg2mem
  %r0.117.reload = load i32, i32* %r0.117.reg2mem
  %storemerge318.reload = load i32, i32* %storemerge318.reg2mem
  %.reload = load i1, i1* %.reg2mem
  %23 = icmp eq i32 %storemerge318.reload, 0, !insn.addr !2969
  %24 = load i8, i8* @global_var_3368ac, align 1
  %spec.select = select i1 %23, i8 %24, i8 %stack_var_-20.316.reload
  %25 = icmp eq i32 %storemerge318.reload, 1, !insn.addr !2970
  %26 = load i8, i8* @global_var_3368ad, align 1
  %stack_var_-20.1 = select i1 %25, i8 %26, i8 %spec.select
  %27 = load i8, i8* @global_var_3368ae, align 1
  %spec.select10 = select i1 %.reload, i8 %27, i8 %stack_var_-20.1
  %28 = icmp eq i8 %spec.select10, 0, !insn.addr !2971
  store i32 %stack_var_-16.713.reload, i32* %stack_var_-16.6.reg2mem, !insn.addr !2972
  store i32 %stack_var_-32.214.reload, i32* %stack_var_-32.1.reg2mem, !insn.addr !2972
  store i32 %stack_var_-36.215.reload, i32* %stack_var_-36.1.reg2mem, !insn.addr !2972
  store i32 %r0.117.reload, i32* %r0.0.reg2mem, !insn.addr !2972
  br i1 %28, label %dec_label_pc_10e14, label %dec_label_pc_10972, !insn.addr !2972

dec_label_pc_10972:                               ; preds = %dec_label_pc_1092e
  %29 = add i8 %spec.select10, -1
  %30 = zext i8 %29 to i32, !insn.addr !2973
  %31 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2974
  %32 = urem i32 %31, 256, !insn.addr !2975
  %33 = mul nuw nsw i32 %32, %30, !insn.addr !2976
  %34 = urem i32 %33, 256, !insn.addr !2977
  %35 = call i32 @enable_read_temperature_from_asic_chain(i32 %0, i32 %34), !insn.addr !2978
  %36 = sext i8 %spec.select10 to i32
  %37 = add nsw i32 %36, -1
  store i32 %stack_var_-16.713.reload, i32* %stack_var_-16.0.reg2mem, !insn.addr !2978
  store i32 1, i32* %stack_var_-24.0.reg2mem, !insn.addr !2978
  br label %dec_label_pc_10994, !insn.addr !2978

dec_label_pc_10994:                               ; preds = %dec_label_pc_10a02, %dec_label_pc_10972
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %stack_var_-16.0.reload = load i32, i32* %stack_var_-16.0.reg2mem
  %38 = load i32, i32* @global_var_336850, align 4, !insn.addr !2979
  store i32 %stack_var_-16.0.reload, i32* %stack_var_-16.1.reg2mem
  switch i32 %38, label %dec_label_pc_10a02 [
    i32 1722, label %dec_label_pc_109a6
    i32 1725, label %dec_label_pc_109de
  ]

dec_label_pc_109a6:                               ; preds = %dec_label_pc_10994
  %39 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2980
  %40 = mul i32 %39, %37, !insn.addr !2981
  %41 = call i32 @check_BM1722_asic_reg(i32 %0, i32 %40, i32 32, i32 0), !insn.addr !2982
  store i32 %41, i32* %stack_var_-16.1.reg2mem, !insn.addr !2983
  br label %dec_label_pc_10a02, !insn.addr !2983

dec_label_pc_109de:                               ; preds = %dec_label_pc_10994
  %42 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2984
  %43 = mul i32 %42, %37, !insn.addr !2985
  %44 = call i32 @check_BM1725_asic_reg(i32 %0, i32 %43, i32 32, i32 0), !insn.addr !2986
  store i32 %44, i32* %stack_var_-16.1.reg2mem, !insn.addr !2987
  br label %dec_label_pc_10a02, !insn.addr !2987

dec_label_pc_10a02:                               ; preds = %dec_label_pc_10994, %dec_label_pc_109de, %dec_label_pc_109a6
  %stack_var_-16.1.reload = load i32, i32* %stack_var_-16.1.reg2mem
  %45 = icmp ugt i32 %stack_var_-16.1.reload, 1073741823, !insn.addr !2988
  %46 = icmp ult i32 %stack_var_-24.0.reload, 2, !insn.addr !2989
  %or.cond = icmp eq i1 %46, %45
  store i32 %stack_var_-16.1.reload, i32* %stack_var_-16.0.reg2mem, !insn.addr !2990
  store i32 2, i32* %stack_var_-24.0.reg2mem, !insn.addr !2990
  br i1 %or.cond, label %dec_label_pc_10994, label %dec_label_pc_10a22, !insn.addr !2990

dec_label_pc_10a22:                               ; preds = %dec_label_pc_10a02
  %47 = load i32, i32* @global_var_336850, align 4
  store i32 %47, i32* %.reg2mem21
  store i32 %stack_var_-16.1.reload, i32* %stack_var_-16.2.reg2mem
  store i32 0, i32* %stack_var_-24.1.reg2mem
  switch i32 %47, label %dec_label_pc_10aa0 [
    i32 1722, label %dec_label_pc_10a38
    i32 1725, label %dec_label_pc_10a76
  ]

dec_label_pc_10a38:                               ; preds = %dec_label_pc_10a22
  %48 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2991
  %49 = mul i32 %48, %37, !insn.addr !2992
  %50 = call i32 @set_BM1722_asic_register(i32 %0, i32 %49, i32 32, i32 0, i32 26738944), !insn.addr !2993
  store i32 %stack_var_-16.1.reload, i32* %stack_var_-16.2.ph.reg2mem, !insn.addr !2994
  store i32 0, i32* %stack_var_-24.1.ph.reg2mem, !insn.addr !2994
  br label %dec_label_pc_10aa0thread-pre-split, !insn.addr !2994

dec_label_pc_10a76:                               ; preds = %dec_label_pc_10a22
  %51 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2995
  %52 = mul i32 %51, %37, !insn.addr !2996
  %53 = call i32 @set_BM1725_asic_register(i32 %0, i32 %52, i32 32, i32 0, i32 26738944), !insn.addr !2997
  store i32 %stack_var_-16.1.reload, i32* %stack_var_-16.2.ph.reg2mem, !insn.addr !2997
  store i32 0, i32* %stack_var_-24.1.ph.reg2mem, !insn.addr !2997
  br label %dec_label_pc_10aa0thread-pre-split, !insn.addr !2997

dec_label_pc_10aa0thread-pre-split:               ; preds = %dec_label_pc_10a38, %dec_label_pc_10a76, %dec_label_pc_10b0e
  %stack_var_-24.1.ph.reload = load i32, i32* %stack_var_-24.1.ph.reg2mem
  %stack_var_-16.2.ph.reload = load i32, i32* %stack_var_-16.2.ph.reg2mem
  %.pr = load i32, i32* @global_var_336850, align 4
  store i32 %.pr, i32* %.reg2mem21
  store i32 %stack_var_-16.2.ph.reload, i32* %stack_var_-16.2.reg2mem
  store i32 %stack_var_-24.1.ph.reload, i32* %stack_var_-24.1.reg2mem
  br label %dec_label_pc_10aa0

dec_label_pc_10aa0:                               ; preds = %dec_label_pc_10aa0thread-pre-split, %dec_label_pc_10a22
  %stack_var_-24.1.reload = load i32, i32* %stack_var_-24.1.reg2mem
  %stack_var_-16.2.reload = load i32, i32* %stack_var_-16.2.reg2mem
  %.reload22 = load i32, i32* %.reg2mem21, !insn.addr !2998
  store i32 %stack_var_-16.2.reload, i32* %stack_var_-16.3.reg2mem
  switch i32 %.reload22, label %dec_label_pc_10b0e [
    i32 1722, label %dec_label_pc_10ab2
    i32 1725, label %dec_label_pc_10aea
  ]

dec_label_pc_10ab2:                               ; preds = %dec_label_pc_10aa0
  %54 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !2999
  %55 = mul i32 %54, %37, !insn.addr !3000
  %56 = call i32 @check_BM1722_asic_reg(i32 %0, i32 %55, i32 32, i32 0), !insn.addr !3001
  store i32 %56, i32* %stack_var_-16.3.reg2mem, !insn.addr !3002
  br label %dec_label_pc_10b0e, !insn.addr !3002

dec_label_pc_10aea:                               ; preds = %dec_label_pc_10aa0
  %57 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3003
  %58 = mul i32 %57, %37, !insn.addr !3004
  %59 = call i32 @check_BM1725_asic_reg(i32 %0, i32 %58, i32 32, i32 0), !insn.addr !3005
  store i32 %59, i32* %stack_var_-16.3.reg2mem, !insn.addr !3006
  br label %dec_label_pc_10b0e, !insn.addr !3006

dec_label_pc_10b0e:                               ; preds = %dec_label_pc_10aa0, %dec_label_pc_10aea, %dec_label_pc_10ab2
  %stack_var_-16.3.reload = load i32, i32* %stack_var_-16.3.reg2mem
  %60 = add i32 %stack_var_-24.1.reload, 1, !insn.addr !3007
  %61 = icmp ugt i32 %stack_var_-16.3.reload, 1073741823, !insn.addr !3008
  %62 = icmp ult i32 %60, 2, !insn.addr !3009
  %or.cond7 = icmp eq i1 %62, %61
  store i32 %stack_var_-16.3.reload, i32* %stack_var_-16.2.ph.reg2mem, !insn.addr !3010
  store i32 %60, i32* %stack_var_-24.1.ph.reg2mem, !insn.addr !3010
  br i1 %or.cond7, label %dec_label_pc_10aa0thread-pre-split, label %dec_label_pc_10b2e, !insn.addr !3010

dec_label_pc_10b2e:                               ; preds = %dec_label_pc_10b0e
  %63 = icmp ult i32 %stack_var_-16.3.reload, 1073741824, !insn.addr !3011
  br i1 %63, label %dec_label_pc_10b3c, label %dec_label_pc_10b52, !insn.addr !3012

dec_label_pc_10b3c:                               ; preds = %dec_label_pc_10b2e
  %64 = urem i32 %stack_var_-16.3.reload, 256, !insn.addr !3013
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_29b70, i32 0, i32 0), i32 %64), !insn.addr !3014
  store i32 %64, i32* %stack_var_-36.0.reg2mem, !insn.addr !3015
  br label %dec_label_pc_10b76, !insn.addr !3015

dec_label_pc_10b52:                               ; preds = %dec_label_pc_10b2e
  store i8 1, i8* %3, align 1, !insn.addr !3016
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_var_29b88, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @global_var_29eec, i32 0, i32 0), i32 %stack_var_-16.3.reload), !insn.addr !3017
  store i32 %stack_var_-36.215.reload, i32* %stack_var_-36.0.reg2mem, !insn.addr !3017
  br label %dec_label_pc_10b76, !insn.addr !3017

dec_label_pc_10b76:                               ; preds = %dec_label_pc_10b52, %dec_label_pc_10b3c
  %stack_var_-36.0.reload = load i32, i32* %stack_var_-36.0.reg2mem
  %67 = load i32, i32* @global_var_336850, align 4
  store i32 %67, i32* %.reg2mem23
  store i32 -1, i32* %stack_var_-16.4.reg2mem
  store i32 0, i32* %stack_var_-24.2.reg2mem
  switch i32 %67, label %dec_label_pc_10bee [
    i32 1722, label %dec_label_pc_10b8e
    i32 1725, label %dec_label_pc_10bc8
  ]

dec_label_pc_10b8e:                               ; preds = %dec_label_pc_10b76
  %68 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3018
  %69 = mul i32 %68, %37, !insn.addr !3019
  %70 = call i32 @set_BM1722_asic_register(i32 %0, i32 %69, i32 32, i32 0, i32 26738688), !insn.addr !3020
  store i32 -1, i32* %stack_var_-16.4.ph.reg2mem, !insn.addr !3021
  store i32 0, i32* %stack_var_-24.2.ph.reg2mem, !insn.addr !3021
  br label %dec_label_pc_10beethread-pre-split, !insn.addr !3021

dec_label_pc_10bc8:                               ; preds = %dec_label_pc_10b76
  %71 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3022
  %72 = mul i32 %71, %37, !insn.addr !3023
  %73 = call i32 @set_BM1725_asic_register(i32 %0, i32 %72, i32 32, i32 0, i32 26738688), !insn.addr !3024
  store i32 -1, i32* %stack_var_-16.4.ph.reg2mem, !insn.addr !3024
  store i32 0, i32* %stack_var_-24.2.ph.reg2mem, !insn.addr !3024
  br label %dec_label_pc_10beethread-pre-split, !insn.addr !3024

dec_label_pc_10beethread-pre-split:               ; preds = %dec_label_pc_10b8e, %dec_label_pc_10bc8, %dec_label_pc_10c5c
  %stack_var_-24.2.ph.reload = load i32, i32* %stack_var_-24.2.ph.reg2mem
  %stack_var_-16.4.ph.reload = load i32, i32* %stack_var_-16.4.ph.reg2mem
  %.pr11 = load i32, i32* @global_var_336850, align 4
  store i32 %.pr11, i32* %.reg2mem23
  store i32 %stack_var_-16.4.ph.reload, i32* %stack_var_-16.4.reg2mem
  store i32 %stack_var_-24.2.ph.reload, i32* %stack_var_-24.2.reg2mem
  br label %dec_label_pc_10bee

dec_label_pc_10bee:                               ; preds = %dec_label_pc_10beethread-pre-split, %dec_label_pc_10b76
  %stack_var_-24.2.reload = load i32, i32* %stack_var_-24.2.reg2mem
  %stack_var_-16.4.reload = load i32, i32* %stack_var_-16.4.reg2mem
  %.reload24 = load i32, i32* %.reg2mem23, !insn.addr !3025
  store i32 %stack_var_-16.4.reload, i32* %stack_var_-16.5.reg2mem
  switch i32 %.reload24, label %dec_label_pc_10c5c [
    i32 1722, label %dec_label_pc_10c00
    i32 1725, label %dec_label_pc_10c38
  ]

dec_label_pc_10c00:                               ; preds = %dec_label_pc_10bee
  %74 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3026
  %75 = mul i32 %74, %37, !insn.addr !3027
  %76 = call i32 @check_BM1722_asic_reg(i32 %0, i32 %75, i32 32, i32 0), !insn.addr !3028
  store i32 %76, i32* %stack_var_-16.5.reg2mem, !insn.addr !3029
  br label %dec_label_pc_10c5c, !insn.addr !3029

dec_label_pc_10c38:                               ; preds = %dec_label_pc_10bee
  %77 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3030
  %78 = mul i32 %77, %37, !insn.addr !3031
  %79 = call i32 @check_BM1725_asic_reg(i32 %0, i32 %78, i32 32, i32 0), !insn.addr !3032
  store i32 %79, i32* %stack_var_-16.5.reg2mem, !insn.addr !3033
  br label %dec_label_pc_10c5c, !insn.addr !3033

dec_label_pc_10c5c:                               ; preds = %dec_label_pc_10bee, %dec_label_pc_10c38, %dec_label_pc_10c00
  %stack_var_-16.5.reload = load i32, i32* %stack_var_-16.5.reg2mem
  %80 = add i32 %stack_var_-24.2.reload, 1, !insn.addr !3034
  %81 = icmp ugt i32 %stack_var_-16.5.reload, 1073741823, !insn.addr !3035
  %82 = icmp ult i32 %80, 2, !insn.addr !3036
  %or.cond9 = icmp eq i1 %82, %81
  store i32 %stack_var_-16.5.reload, i32* %stack_var_-16.4.ph.reg2mem, !insn.addr !3037
  store i32 %80, i32* %stack_var_-24.2.ph.reg2mem, !insn.addr !3037
  br i1 %or.cond9, label %dec_label_pc_10beethread-pre-split, label %dec_label_pc_10c7c, !insn.addr !3037

dec_label_pc_10c7c:                               ; preds = %dec_label_pc_10c5c
  %83 = icmp ult i32 %stack_var_-16.5.reload, 1073741824, !insn.addr !3038
  br i1 %83, label %dec_label_pc_10c8a, label %dec_label_pc_10ca0, !insn.addr !3039

dec_label_pc_10c8a:                               ; preds = %dec_label_pc_10c7c
  %84 = urem i32 %stack_var_-16.5.reload, 256, !insn.addr !3040
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_29bb4, i32 0, i32 0), i32 %84), !insn.addr !3041
  store i32 %84, i32* %stack_var_-32.0.reg2mem, !insn.addr !3042
  br label %dec_label_pc_10cc4, !insn.addr !3042

dec_label_pc_10ca0:                               ; preds = %dec_label_pc_10c7c
  store i8 1, i8* %3, align 1, !insn.addr !3043
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_29bc8, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @global_var_29eec, i32 0, i32 0), i32 %stack_var_-16.5.reload), !insn.addr !3044
  store i32 %stack_var_-32.214.reload, i32* %stack_var_-32.0.reg2mem, !insn.addr !3044
  br label %dec_label_pc_10cc4, !insn.addr !3044

dec_label_pc_10cc4:                               ; preds = %dec_label_pc_10ca0, %dec_label_pc_10c8a
  %stack_var_-32.0.reload = load i32, i32* %stack_var_-32.0.reg2mem
  %87 = load i8, i8* %3, align 1, !insn.addr !3045
  %88 = icmp eq i8 %87, 0, !insn.addr !3046
  %89 = sub i32 %stack_var_-32.0.reload, %stack_var_-36.0.reload
  %90 = trunc i32 %89 to i8
  %storemerge4 = select i1 %88, i8 %90, i8 0
  switch i32 %storemerge318.reload, label %dec_label_pc_10e02 [
    i32 0, label %dec_label_pc_10cee
    i32 1, label %dec_label_pc_10d4c
    i32 2, label %dec_label_pc_10daa
  ]

dec_label_pc_10cee:                               ; preds = %dec_label_pc_10cc4
  store i8 %storemerge4, i8* bitcast (i8** @global_var_3367cc to i8*), align 4, !insn.addr !3047
  store i8 %spec.select10, i8* %20, align 4, !insn.addr !3048
  %91 = load i8, i8* bitcast (i8** @global_var_3367cc to i8*), align 4, !insn.addr !3049
  store i8 %91, i8* %22, align 1, !insn.addr !3050
  store i8 %storemerge4, i8* %11, align 1, !insn.addr !3051
  br label %dec_label_pc_10e02

dec_label_pc_10d4c:                               ; preds = %dec_label_pc_10cc4
  store i8 %storemerge4, i8* bitcast (i8** @global_var_3367cd to i8*), align 4, !insn.addr !3052
  store i8 %spec.select10, i8* %17, align 2, !insn.addr !3053
  %92 = load i8, i8* bitcast (i8** @global_var_3367cd to i8*), align 4, !insn.addr !3054
  store i8 %92, i8* %19, align 1, !insn.addr !3055
  store i8 %storemerge4, i8* %9, align 1, !insn.addr !3056
  br label %dec_label_pc_10e02

dec_label_pc_10daa:                               ; preds = %dec_label_pc_10cc4
  store i8 %storemerge4, i8* bitcast (i8** @global_var_3367ce to i8*), align 4, !insn.addr !3057
  store i8 %spec.select10, i8* %13, align 4, !insn.addr !3058
  %93 = load i8, i8* bitcast (i8** @global_var_3367ce to i8*), align 4, !insn.addr !3059
  store i8 %93, i8* %15, align 1, !insn.addr !3060
  store i8 %storemerge4, i8* %7, align 1, !insn.addr !3061
  br label %dec_label_pc_10e02, !insn.addr !3061

dec_label_pc_10e02:                               ; preds = %dec_label_pc_10d4c, %dec_label_pc_10cee, %dec_label_pc_10cc4, %dec_label_pc_10daa
  %94 = sext i8 %storemerge4 to i32, !insn.addr !3062
  %95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_29bfc, i32 0, i32 0), i32 %94), !insn.addr !3063
  store i32 %stack_var_-16.5.reload, i32* %stack_var_-16.6.reg2mem, !insn.addr !3063
  store i32 %stack_var_-32.0.reload, i32* %stack_var_-32.1.reg2mem, !insn.addr !3063
  store i32 %stack_var_-36.0.reload, i32* %stack_var_-36.1.reg2mem, !insn.addr !3063
  store i32 %95, i32* %r0.0.reg2mem, !insn.addr !3063
  br label %dec_label_pc_10e14, !insn.addr !3063

dec_label_pc_10e14:                               ; preds = %dec_label_pc_10e02, %dec_label_pc_1092e
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %stack_var_-36.1.reload = load i32, i32* %stack_var_-36.1.reg2mem
  %stack_var_-32.1.reload = load i32, i32* %stack_var_-32.1.reg2mem
  %stack_var_-16.6.reload = load i32, i32* %stack_var_-16.6.reg2mem
  %96 = add i32 %storemerge318.reload, 1, !insn.addr !3064
  %97 = icmp ult i32 %96, 2, !insn.addr !3065
  %98 = icmp ne i1 %97, true, !insn.addr !3065
  %99 = icmp eq i32 %96, 2, !insn.addr !3065
  %100 = icmp ne i1 %98, true, !insn.addr !3066
  %101 = or i1 %99, %100, !insn.addr !3066
  store i1 %99, i1* %.reg2mem, !insn.addr !3066
  store i32 %96, i32* %storemerge318.reg2mem, !insn.addr !3066
  store i32 %r0.0.reload, i32* %r0.117.reg2mem, !insn.addr !3066
  store i8 %spec.select10, i8* %stack_var_-20.316.reg2mem, !insn.addr !3066
  store i32 %stack_var_-36.1.reload, i32* %stack_var_-36.215.reg2mem, !insn.addr !3066
  store i32 %stack_var_-32.1.reload, i32* %stack_var_-32.214.reg2mem, !insn.addr !3066
  store i32 %stack_var_-16.6.reload, i32* %stack_var_-16.713.reg2mem, !insn.addr !3066
  br i1 %101, label %dec_label_pc_1092e, label %dec_label_pc_10e22, !insn.addr !3066

dec_label_pc_10e22:                               ; preds = %dec_label_pc_10e14
  %102 = load i32, i32* @global_var_336848, align 4, !insn.addr !3067
  %103 = icmp eq i32 %102, 0, !insn.addr !3068
  %104 = icmp ne i1 %103, true, !insn.addr !3068
  %105 = icmp eq i32 %102, 1, !insn.addr !3068
  %106 = icmp ne i1 %104, true, !insn.addr !3069
  %107 = or i1 %105, %106, !insn.addr !3069
  store i32 %r0.0.reload, i32* %r0.3.reg2mem, !insn.addr !3069
  br i1 %107, label %dec_label_pc_10e8a, label %dec_label_pc_10e56, !insn.addr !3069

dec_label_pc_10e56:                               ; preds = %dec_label_pc_10e22
  %108 = call i32 @putchar(i32 10), !insn.addr !3070
  %109 = ptrtoint i8* %stack_var_-44 to i32, !insn.addr !3071
  store i32 0, i32* %storemerge12.reg2mem
  br label %dec_label_pc_10e62

dec_label_pc_10e62:                               ; preds = %dec_label_pc_10e56, %dec_label_pc_10e62
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %110 = add i32 %storemerge12.reload, %109, !insn.addr !3072
  %111 = inttoptr i32 %110 to i8*, !insn.addr !3073
  %112 = load i8, i8* %111, align 1, !insn.addr !3073
  %113 = zext i8 %112 to i32, !insn.addr !3073
  %114 = call i32 @__asm_sxtb(i32 %113), !insn.addr !3074
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_29c14, i32 0, i32 0), i32 %storemerge12.reload, i32 %114), !insn.addr !3075
  %116 = add i32 %storemerge12.reload, 1, !insn.addr !3076
  %117 = icmp ult i32 %116, 7, !insn.addr !3077
  %118 = icmp ne i1 %117, true, !insn.addr !3077
  %119 = icmp eq i32 %116, 7, !insn.addr !3077
  %120 = icmp ne i1 %118, true, !insn.addr !3078
  %121 = or i1 %119, %120, !insn.addr !3078
  store i32 %116, i32* %storemerge12.reg2mem, !insn.addr !3078
  store i32 %115, i32* %r0.3.reg2mem, !insn.addr !3078
  br i1 %121, label %dec_label_pc_10e62, label %dec_label_pc_10e8a, !insn.addr !3078

dec_label_pc_10e8a:                               ; preds = %dec_label_pc_10e62, %dec_label_pc_10e22
  %r0.3.reload = load i32, i32* %r0.3.reg2mem
  ret i32 %r0.3.reload, !insn.addr !3079

; uselistorder directives
  uselistorder i32 %116, { 0, 2, 1 }
  uselistorder i32 %102, { 1, 0 }
  uselistorder i32 %96, { 0, 2, 1 }
  uselistorder i8 %storemerge4, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-16.5.reload, { 0, 2, 4, 1, 5, 3 }
  uselistorder i32 %67, { 1, 0 }
  uselistorder i32 %stack_var_-16.3.reload, { 1, 3, 0, 4, 2 }
  uselistorder i32 %47, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.reload, { 2, 1, 0, 4, 3 }
  uselistorder i32 %37, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8 }
  uselistorder i8 %spec.select10, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder i32 %storemerge318.reload, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-36.215.reload, { 1, 0 }
  uselistorder i32 %stack_var_-32.214.reload, { 1, 0 }
  uselistorder i32 %stack_var_-16.713.reload, { 1, 0 }
  uselistorder i32 %0, { 5, 4, 7, 6, 10, 9, 12, 11, 14, 13, 0, 1, 2, 3, 8 }
  uselistorder i1* %.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge318.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r0.117.reg2mem, { 1, 0, 2 }
  uselistorder i8* %stack_var_-20.316.reg2mem, { 1, 0 }
  uselistorder i32* %stack_var_-36.215.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32.214.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16.713.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16.0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-24.0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16.1.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-16.2.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-24.1.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %.reg2mem21, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16.3.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-16.4.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-24.2.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %.reg2mem23, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16.4.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16.5.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %storemerge12.reg2mem, { 1, 0, 2 }
  uselistorder i8* bitcast (i8** @global_var_3367ce to i8*), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_3367cd to i8*), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_3367cc to i8*), { 1, 0 }
  uselistorder i8* getelementptr inbounds ([45 x i8], [45 x i8]* @global_var_29eec, i32 0, i32 0), { 1, 0, 2 }
  uselistorder label %dec_label_pc_10e62, { 1, 0 }
  uselistorder label %dec_label_pc_10e02, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10c5c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10beethread-pre-split, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10b0e, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10aa0thread-pre-split, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10a02, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1092e, { 1, 0 }
}

define i32 @set_default_temperature_offset_value_chain(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e94:
  %r0.8.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-28.6.reg2mem = alloca i8, !insn.addr !3080
  %r0.7.reg2mem = alloca i32, !insn.addr !3080
  %r0.6.reg2mem = alloca i32, !insn.addr !3080
  %r0.5.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-28.5.reg2mem = alloca i8, !insn.addr !3080
  %r0.4.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-28.4.reg2mem = alloca i8, !insn.addr !3080
  %stack_var_-20.2.reg2mem = alloca i32, !insn.addr !3080
  %.reg2mem19 = alloca i32, !insn.addr !3080
  %r0.4.ph.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-28.4.ph.reg2mem = alloca i8, !insn.addr !3080
  %stack_var_-20.2.ph.reg2mem = alloca i32, !insn.addr !3080
  %r0.3.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-28.3.reg2mem = alloca i8, !insn.addr !3080
  %r0.2.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-28.2.reg2mem = alloca i8, !insn.addr !3080
  %stack_var_-20.1.reg2mem = alloca i32, !insn.addr !3080
  %.reg2mem17 = alloca i32, !insn.addr !3080
  %r0.2.ph.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-28.2.ph.reg2mem = alloca i8, !insn.addr !3080
  %stack_var_-20.1.ph.reg2mem = alloca i32, !insn.addr !3080
  %r0.1.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-28.1.reg2mem = alloca i8, !insn.addr !3080
  %r0.0.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-28.0.reg2mem = alloca i8, !insn.addr !3080
  %stack_var_-20.0.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-29.2.reg2mem = alloca i8, !insn.addr !3080
  %stack_var_-24.2.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-16.2.reg2mem = alloca i8, !insn.addr !3080
  %stack_var_-29.1.reg2mem = alloca i8, !insn.addr !3080
  %stack_var_-24.1.reg2mem = alloca i32, !insn.addr !3080
  %stack_var_-16.1.reg2mem = alloca i8, !insn.addr !3080
  %.reg2mem15 = alloca i1, !insn.addr !3080
  %stack_var_-16.310.reg2mem = alloca i8, !insn.addr !3080
  %stack_var_-28.711.reg2mem = alloca i8, !insn.addr !3080
  %stack_var_-29.312.reg2mem = alloca i8, !insn.addr !3080
  %r0.913.reg2mem = alloca i32, !insn.addr !3080
  %storemerge14.reg2mem = alloca i32, !insn.addr !3080
  %.reg2mem = alloca i1, !insn.addr !3080
  %0 = urem i32 %arg1, 256
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_290a0, i32 0, i32 0), i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_9ec0 to i32), i32 131072) to i8*)), !insn.addr !3081
  %2 = add i32 %0, ptrtoint (i8** @global_var_235b5c to i32)
  %3 = inttoptr i32 %2 to i8*
  %4 = add i32 %0, ptrtoint (i8** @global_var_235b58 to i32)
  %5 = inttoptr i32 %4 to i8*
  %6 = add i32 %0, ptrtoint (i8** @global_var_235b60 to i32)
  %7 = inttoptr i32 %6 to i8*
  %8 = add i32 %0, ptrtoint (i8** @global_var_35540 to i32)
  %9 = inttoptr i32 %8 to i8*
  %10 = add i32 %0, ptrtoint (i8** @global_var_35544 to i32)
  %11 = inttoptr i32 %10 to i8*
  %12 = add i32 %0, ptrtoint (i8** @global_var_35548 to i32)
  %13 = inttoptr i32 %12 to i8*
  store i1 false, i1* %.reg2mem
  store i32 0, i32* %storemerge14.reg2mem
  store i32 %1, i32* %r0.913.reg2mem
  store i8 0, i8* %stack_var_-29.312.reg2mem
  store i8 0, i8* %stack_var_-28.711.reg2mem
  store i8 0, i8* %stack_var_-16.310.reg2mem
  br label %dec_label_pc_10ed4

dec_label_pc_10ed4:                               ; preds = %dec_label_pc_10e94, %dec_label_pc_112d6
  %stack_var_-28.711.reload = load i8, i8* %stack_var_-28.711.reg2mem
  %r0.913.reload = load i32, i32* %r0.913.reg2mem
  %storemerge14.reload = load i32, i32* %storemerge14.reg2mem
  %.reload = load i1, i1* %.reg2mem
  %14 = icmp eq i32 %storemerge14.reload, 0, !insn.addr !3082
  br i1 %14, label %dec_label_pc_10f1a.thread, label %dec_label_pc_10f1a, !insn.addr !3083

dec_label_pc_10f1a.thread:                        ; preds = %dec_label_pc_10ed4
  %15 = load i8, i8* @global_var_3368ac, align 1, !insn.addr !3084
  %16 = load i8, i8* %5, align 1
  %17 = zext i8 %16 to i32, !insn.addr !3085
  %18 = call i32 @__asm_sxtb(i32 %17), !insn.addr !3086
  %19 = urem i32 %18, 256, !insn.addr !3087
  %20 = or i32 %19, 26808576, !insn.addr !3088
  store i1 false, i1* %.reg2mem15
  store i8 %15, i8* %stack_var_-16.1.reg2mem
  store i32 %20, i32* %stack_var_-24.1.reg2mem
  store i8 %16, i8* %stack_var_-29.1.reg2mem
  br label %dec_label_pc_10f5c

dec_label_pc_10f1a:                               ; preds = %dec_label_pc_10ed4
  %stack_var_-16.310.reload = load i8, i8* %stack_var_-16.310.reg2mem
  %stack_var_-29.312.reload = load i8, i8* %stack_var_-29.312.reg2mem
  %21 = icmp eq i32 %storemerge14.reload, 1, !insn.addr !3089
  store i1 false, i1* %.reg2mem15, !insn.addr !3090
  store i8 %stack_var_-16.310.reload, i8* %stack_var_-16.1.reg2mem, !insn.addr !3090
  store i32 0, i32* %stack_var_-24.1.reg2mem, !insn.addr !3090
  store i8 %stack_var_-29.312.reload, i8* %stack_var_-29.1.reg2mem, !insn.addr !3090
  br i1 %21, label %dec_label_pc_10f20, label %dec_label_pc_10f5c, !insn.addr !3090

dec_label_pc_10f20:                               ; preds = %dec_label_pc_10f1a
  %22 = load i8, i8* @global_var_3368ad, align 1, !insn.addr !3091
  %23 = load i8, i8* %3, align 1
  %24 = zext i8 %23 to i32, !insn.addr !3092
  %25 = call i32 @__asm_sxtb(i32 %24), !insn.addr !3093
  %26 = urem i32 %25, 256, !insn.addr !3094
  %27 = or i32 %26, 26808576, !insn.addr !3095
  store i1 true, i1* %.reg2mem15, !insn.addr !3096
  store i8 %22, i8* %stack_var_-16.1.reg2mem, !insn.addr !3096
  store i32 %27, i32* %stack_var_-24.1.reg2mem, !insn.addr !3096
  store i8 %23, i8* %stack_var_-29.1.reg2mem, !insn.addr !3096
  br label %dec_label_pc_10f5c, !insn.addr !3096

dec_label_pc_10f5c:                               ; preds = %dec_label_pc_10f1a.thread, %dec_label_pc_10f1a, %dec_label_pc_10f20
  %stack_var_-29.1.reload = load i8, i8* %stack_var_-29.1.reg2mem
  %stack_var_-24.1.reload = load i32, i32* %stack_var_-24.1.reg2mem
  %stack_var_-16.1.reload = load i8, i8* %stack_var_-16.1.reg2mem
  %.reload16 = load i1, i1* %.reg2mem15
  store i8 %stack_var_-16.1.reload, i8* %stack_var_-16.2.reg2mem, !insn.addr !3097
  store i32 %stack_var_-24.1.reload, i32* %stack_var_-24.2.reg2mem, !insn.addr !3097
  store i8 %stack_var_-29.1.reload, i8* %stack_var_-29.2.reg2mem, !insn.addr !3097
  br i1 %.reload, label %dec_label_pc_10f62, label %dec_label_pc_10f9e, !insn.addr !3097

dec_label_pc_10f62:                               ; preds = %dec_label_pc_10f5c
  %28 = load i8, i8* @global_var_3368ae, align 1, !insn.addr !3098
  %29 = load i8, i8* %7, align 1
  %30 = zext i8 %29 to i32, !insn.addr !3099
  %31 = call i32 @__asm_sxtb(i32 %30), !insn.addr !3100
  %32 = urem i32 %31, 256, !insn.addr !3101
  %33 = or i32 %32, 26808576, !insn.addr !3102
  store i8 %28, i8* %stack_var_-16.2.reg2mem, !insn.addr !3103
  store i32 %33, i32* %stack_var_-24.2.reg2mem, !insn.addr !3103
  store i8 %29, i8* %stack_var_-29.2.reg2mem, !insn.addr !3103
  br label %dec_label_pc_10f9e, !insn.addr !3103

dec_label_pc_10f9e:                               ; preds = %dec_label_pc_10f5c, %dec_label_pc_10f62
  %stack_var_-29.2.reload = load i8, i8* %stack_var_-29.2.reg2mem
  %stack_var_-16.2.reload = load i8, i8* %stack_var_-16.2.reg2mem
  %34 = icmp eq i8 %stack_var_-16.2.reload, 0, !insn.addr !3104
  store i8 %stack_var_-28.711.reload, i8* %stack_var_-28.6.reg2mem, !insn.addr !3105
  store i32 %r0.913.reload, i32* %r0.8.reg2mem, !insn.addr !3105
  br i1 %34, label %dec_label_pc_112d6, label %dec_label_pc_10fa6, !insn.addr !3105

dec_label_pc_10fa6:                               ; preds = %dec_label_pc_10f9e
  %stack_var_-24.2.reload = load i32, i32* %stack_var_-24.2.reg2mem
  %35 = add i8 %stack_var_-16.2.reload, -1
  %36 = zext i8 %35 to i32, !insn.addr !3106
  %37 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3107
  %38 = urem i32 %37, 256, !insn.addr !3108
  %39 = mul nuw nsw i32 %38, %36, !insn.addr !3109
  %40 = urem i32 %39, 256, !insn.addr !3110
  %41 = call i32 @enable_read_temperature_from_asic_chain(i32 %0, i32 %40), !insn.addr !3111
  %42 = sext i8 %stack_var_-16.2.reload to i32
  %43 = add nsw i32 %42, -1
  store i32 1, i32* %stack_var_-20.0.reg2mem, !insn.addr !3111
  store i8 %stack_var_-28.711.reload, i8* %stack_var_-28.0.reg2mem, !insn.addr !3111
  store i32 %41, i32* %r0.0.reg2mem, !insn.addr !3111
  br label %dec_label_pc_10fc8, !insn.addr !3111

dec_label_pc_10fc8:                               ; preds = %dec_label_pc_11036, %dec_label_pc_10fa6
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %stack_var_-28.0.reload = load i8, i8* %stack_var_-28.0.reg2mem
  %stack_var_-20.0.reload = load i32, i32* %stack_var_-20.0.reg2mem
  %44 = load i32, i32* @global_var_336850, align 4, !insn.addr !3112
  store i8 %stack_var_-28.0.reload, i8* %stack_var_-28.1.reg2mem
  store i32 %r0.0.reload, i32* %r0.1.reg2mem
  switch i32 %44, label %dec_label_pc_11036 [
    i32 1722, label %dec_label_pc_10fda
    i32 1725, label %dec_label_pc_11012
  ]

dec_label_pc_10fda:                               ; preds = %dec_label_pc_10fc8
  %45 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3113
  %46 = mul i32 %45, %43, !insn.addr !3114
  %47 = call i32 @check_BM1722_asic_reg(i32 %0, i32 %46, i32 32, i32 0), !insn.addr !3115
  %48 = trunc i32 %47 to i8, !insn.addr !3116
  store i8 %48, i8* %stack_var_-28.1.reg2mem, !insn.addr !3117
  store i32 %47, i32* %r0.1.reg2mem, !insn.addr !3117
  br label %dec_label_pc_11036, !insn.addr !3117

dec_label_pc_11012:                               ; preds = %dec_label_pc_10fc8
  %49 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3118
  %50 = mul i32 %49, %43, !insn.addr !3119
  %51 = call i32 @check_BM1725_asic_reg(i32 %0, i32 %50, i32 32, i32 0), !insn.addr !3120
  %52 = trunc i32 %51 to i8, !insn.addr !3121
  store i8 %52, i8* %stack_var_-28.1.reg2mem, !insn.addr !3121
  store i32 %51, i32* %r0.1.reg2mem, !insn.addr !3121
  br label %dec_label_pc_11036, !insn.addr !3121

dec_label_pc_11036:                               ; preds = %dec_label_pc_10fc8, %dec_label_pc_11012, %dec_label_pc_10fda
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %stack_var_-28.1.reload = load i8, i8* %stack_var_-28.1.reg2mem
  %53 = icmp slt i8 %stack_var_-28.1.reload, 0
  %54 = icmp ult i32 %stack_var_-20.0.reload, 2, !insn.addr !3122
  %or.cond = icmp eq i1 %54, %53
  store i32 2, i32* %stack_var_-20.0.reg2mem, !insn.addr !3123
  store i8 %stack_var_-28.1.reload, i8* %stack_var_-28.0.reg2mem, !insn.addr !3123
  store i32 %r0.1.reload, i32* %r0.0.reg2mem, !insn.addr !3123
  br i1 %or.cond, label %dec_label_pc_10fc8, label %dec_label_pc_11056, !insn.addr !3123

dec_label_pc_11056:                               ; preds = %dec_label_pc_11036
  %55 = load i32, i32* @global_var_336850, align 4
  store i32 %55, i32* %.reg2mem17
  store i32 0, i32* %stack_var_-20.1.reg2mem
  store i8 %stack_var_-28.1.reload, i8* %stack_var_-28.2.reg2mem
  store i32 %r0.1.reload, i32* %r0.2.reg2mem
  switch i32 %55, label %dec_label_pc_110c8 [
    i32 1722, label %dec_label_pc_1106c
    i32 1725, label %dec_label_pc_110a4
  ]

dec_label_pc_1106c:                               ; preds = %dec_label_pc_11056
  %56 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3124
  %57 = mul i32 %56, %43, !insn.addr !3125
  %58 = call i32 @set_BM1722_asic_register(i32 %0, i32 %57, i32 32, i32 0, i32 %stack_var_-24.2.reload), !insn.addr !3126
  store i32 0, i32* %stack_var_-20.1.ph.reg2mem, !insn.addr !3127
  store i8 %stack_var_-28.1.reload, i8* %stack_var_-28.2.ph.reg2mem, !insn.addr !3127
  store i32 %58, i32* %r0.2.ph.reg2mem, !insn.addr !3127
  br label %dec_label_pc_110c8thread-pre-split, !insn.addr !3127

dec_label_pc_110a4:                               ; preds = %dec_label_pc_11056
  %59 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3128
  %60 = mul i32 %59, %43, !insn.addr !3129
  %61 = call i32 @set_BM1725_asic_register(i32 %0, i32 %60, i32 32, i32 0, i32 %stack_var_-24.2.reload), !insn.addr !3130
  store i32 0, i32* %stack_var_-20.1.ph.reg2mem, !insn.addr !3130
  store i8 %stack_var_-28.1.reload, i8* %stack_var_-28.2.ph.reg2mem, !insn.addr !3130
  store i32 %61, i32* %r0.2.ph.reg2mem, !insn.addr !3130
  br label %dec_label_pc_110c8thread-pre-split, !insn.addr !3130

dec_label_pc_110c8thread-pre-split:               ; preds = %dec_label_pc_1106c, %dec_label_pc_110a4, %dec_label_pc_11136
  %r0.2.ph.reload = load i32, i32* %r0.2.ph.reg2mem
  %stack_var_-28.2.ph.reload = load i8, i8* %stack_var_-28.2.ph.reg2mem
  %stack_var_-20.1.ph.reload = load i32, i32* %stack_var_-20.1.ph.reg2mem
  %.pr = load i32, i32* @global_var_336850, align 4
  store i32 %.pr, i32* %.reg2mem17
  store i32 %stack_var_-20.1.ph.reload, i32* %stack_var_-20.1.reg2mem
  store i8 %stack_var_-28.2.ph.reload, i8* %stack_var_-28.2.reg2mem
  store i32 %r0.2.ph.reload, i32* %r0.2.reg2mem
  br label %dec_label_pc_110c8

dec_label_pc_110c8:                               ; preds = %dec_label_pc_110c8thread-pre-split, %dec_label_pc_11056
  %r0.2.reload = load i32, i32* %r0.2.reg2mem
  %stack_var_-28.2.reload = load i8, i8* %stack_var_-28.2.reg2mem
  %stack_var_-20.1.reload = load i32, i32* %stack_var_-20.1.reg2mem
  %.reload18 = load i32, i32* %.reg2mem17, !insn.addr !3131
  store i8 %stack_var_-28.2.reload, i8* %stack_var_-28.3.reg2mem
  store i32 %r0.2.reload, i32* %r0.3.reg2mem
  switch i32 %.reload18, label %dec_label_pc_11136 [
    i32 1722, label %dec_label_pc_110da
    i32 1725, label %dec_label_pc_11112
  ]

dec_label_pc_110da:                               ; preds = %dec_label_pc_110c8
  %62 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3132
  %63 = mul i32 %62, %43, !insn.addr !3133
  %64 = call i32 @check_BM1722_asic_reg(i32 %0, i32 %63, i32 32, i32 0), !insn.addr !3134
  %65 = trunc i32 %64 to i8, !insn.addr !3135
  store i8 %65, i8* %stack_var_-28.3.reg2mem, !insn.addr !3136
  store i32 %64, i32* %r0.3.reg2mem, !insn.addr !3136
  br label %dec_label_pc_11136, !insn.addr !3136

dec_label_pc_11112:                               ; preds = %dec_label_pc_110c8
  %66 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3137
  %67 = mul i32 %66, %43, !insn.addr !3138
  %68 = call i32 @check_BM1725_asic_reg(i32 %0, i32 %67, i32 32, i32 0), !insn.addr !3139
  %69 = trunc i32 %68 to i8, !insn.addr !3140
  store i8 %69, i8* %stack_var_-28.3.reg2mem, !insn.addr !3140
  store i32 %68, i32* %r0.3.reg2mem, !insn.addr !3140
  br label %dec_label_pc_11136, !insn.addr !3140

dec_label_pc_11136:                               ; preds = %dec_label_pc_110c8, %dec_label_pc_11112, %dec_label_pc_110da
  %r0.3.reload = load i32, i32* %r0.3.reg2mem
  %stack_var_-28.3.reload = load i8, i8* %stack_var_-28.3.reg2mem
  %70 = add i32 %stack_var_-20.1.reload, 1, !insn.addr !3141
  %71 = icmp slt i8 %stack_var_-28.3.reload, 0
  %72 = icmp ult i32 %70, 2, !insn.addr !3142
  %or.cond6 = icmp eq i1 %72, %71
  store i32 %70, i32* %stack_var_-20.1.ph.reg2mem, !insn.addr !3143
  store i8 %stack_var_-28.3.reload, i8* %stack_var_-28.2.ph.reg2mem, !insn.addr !3143
  store i32 %r0.3.reload, i32* %r0.2.ph.reg2mem, !insn.addr !3143
  br i1 %or.cond6, label %dec_label_pc_110c8thread-pre-split, label %dec_label_pc_11156, !insn.addr !3143

dec_label_pc_11156:                               ; preds = %dec_label_pc_11136
  %73 = load i32, i32* @global_var_336850, align 4
  store i32 %73, i32* %.reg2mem19
  store i32 0, i32* %stack_var_-20.2.reg2mem
  store i8 %stack_var_-28.3.reload, i8* %stack_var_-28.4.reg2mem
  store i32 %r0.3.reload, i32* %r0.4.reg2mem
  switch i32 %73, label %dec_label_pc_111d4 [
    i32 1722, label %dec_label_pc_1116c
    i32 1725, label %dec_label_pc_111aa
  ]

dec_label_pc_1116c:                               ; preds = %dec_label_pc_11156
  %74 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3144
  %75 = mul i32 %74, %43, !insn.addr !3145
  %76 = call i32 @set_BM1722_asic_register(i32 %0, i32 %75, i32 32, i32 0, i32 26743040), !insn.addr !3146
  store i32 0, i32* %stack_var_-20.2.ph.reg2mem, !insn.addr !3147
  store i8 %stack_var_-28.3.reload, i8* %stack_var_-28.4.ph.reg2mem, !insn.addr !3147
  store i32 %76, i32* %r0.4.ph.reg2mem, !insn.addr !3147
  br label %dec_label_pc_111d4thread-pre-split, !insn.addr !3147

dec_label_pc_111aa:                               ; preds = %dec_label_pc_11156
  %77 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3148
  %78 = mul i32 %77, %43, !insn.addr !3149
  %79 = call i32 @set_BM1725_asic_register(i32 %0, i32 %78, i32 32, i32 0, i32 26743040), !insn.addr !3150
  store i32 0, i32* %stack_var_-20.2.ph.reg2mem, !insn.addr !3150
  store i8 %stack_var_-28.3.reload, i8* %stack_var_-28.4.ph.reg2mem, !insn.addr !3150
  store i32 %79, i32* %r0.4.ph.reg2mem, !insn.addr !3150
  br label %dec_label_pc_111d4thread-pre-split, !insn.addr !3150

dec_label_pc_111d4thread-pre-split:               ; preds = %dec_label_pc_1116c, %dec_label_pc_111aa, %dec_label_pc_11242
  %r0.4.ph.reload = load i32, i32* %r0.4.ph.reg2mem
  %stack_var_-28.4.ph.reload = load i8, i8* %stack_var_-28.4.ph.reg2mem
  %stack_var_-20.2.ph.reload = load i32, i32* %stack_var_-20.2.ph.reg2mem
  %.pr9 = load i32, i32* @global_var_336850, align 4
  store i32 %.pr9, i32* %.reg2mem19
  store i32 %stack_var_-20.2.ph.reload, i32* %stack_var_-20.2.reg2mem
  store i8 %stack_var_-28.4.ph.reload, i8* %stack_var_-28.4.reg2mem
  store i32 %r0.4.ph.reload, i32* %r0.4.reg2mem
  br label %dec_label_pc_111d4

dec_label_pc_111d4:                               ; preds = %dec_label_pc_111d4thread-pre-split, %dec_label_pc_11156
  %r0.4.reload = load i32, i32* %r0.4.reg2mem
  %stack_var_-28.4.reload = load i8, i8* %stack_var_-28.4.reg2mem
  %stack_var_-20.2.reload = load i32, i32* %stack_var_-20.2.reg2mem
  %.reload20 = load i32, i32* %.reg2mem19, !insn.addr !3151
  store i8 %stack_var_-28.4.reload, i8* %stack_var_-28.5.reg2mem
  store i32 %r0.4.reload, i32* %r0.5.reg2mem
  switch i32 %.reload20, label %dec_label_pc_11242 [
    i32 1722, label %dec_label_pc_111e6
    i32 1725, label %dec_label_pc_1121e
  ]

dec_label_pc_111e6:                               ; preds = %dec_label_pc_111d4
  %80 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3152
  %81 = mul i32 %80, %43, !insn.addr !3153
  %82 = call i32 @check_BM1722_asic_reg(i32 %0, i32 %81, i32 32, i32 0), !insn.addr !3154
  %83 = trunc i32 %82 to i8, !insn.addr !3155
  store i8 %83, i8* %stack_var_-28.5.reg2mem, !insn.addr !3156
  store i32 %82, i32* %r0.5.reg2mem, !insn.addr !3156
  br label %dec_label_pc_11242, !insn.addr !3156

dec_label_pc_1121e:                               ; preds = %dec_label_pc_111d4
  %84 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3157
  %85 = mul i32 %84, %43, !insn.addr !3158
  %86 = call i32 @check_BM1725_asic_reg(i32 %0, i32 %85, i32 32, i32 0), !insn.addr !3159
  %87 = trunc i32 %86 to i8, !insn.addr !3160
  store i8 %87, i8* %stack_var_-28.5.reg2mem, !insn.addr !3160
  store i32 %86, i32* %r0.5.reg2mem, !insn.addr !3160
  br label %dec_label_pc_11242, !insn.addr !3160

dec_label_pc_11242:                               ; preds = %dec_label_pc_111d4, %dec_label_pc_1121e, %dec_label_pc_111e6
  %r0.5.reload = load i32, i32* %r0.5.reg2mem
  %stack_var_-28.5.reload = load i8, i8* %stack_var_-28.5.reg2mem
  %88 = add i32 %stack_var_-20.2.reload, 1, !insn.addr !3161
  %89 = icmp slt i8 %stack_var_-28.5.reload, 0
  %90 = icmp ult i32 %88, 2, !insn.addr !3162
  %or.cond8 = icmp eq i1 %90, %89
  store i32 %88, i32* %stack_var_-20.2.ph.reg2mem, !insn.addr !3163
  store i8 %stack_var_-28.5.reload, i8* %stack_var_-28.4.ph.reg2mem, !insn.addr !3163
  store i32 %r0.5.reload, i32* %r0.4.ph.reg2mem, !insn.addr !3163
  br i1 %or.cond8, label %dec_label_pc_111d4thread-pre-split, label %dec_label_pc_11262, !insn.addr !3163

dec_label_pc_11262:                               ; preds = %dec_label_pc_11242
  %91 = icmp eq i8 %stack_var_-28.5.reload, %stack_var_-29.2.reload, !insn.addr !3164
  store i8 %stack_var_-29.2.reload, i8* %stack_var_-28.6.reg2mem, !insn.addr !3165
  store i32 %r0.5.reload, i32* %r0.8.reg2mem, !insn.addr !3165
  br i1 %91, label %dec_label_pc_112d6, label %dec_label_pc_11276, !insn.addr !3165

dec_label_pc_11276:                               ; preds = %dec_label_pc_11262
  store i32 %r0.5.reload, i32* %r0.6.reg2mem, !insn.addr !3166
  br i1 %14, label %dec_label_pc_1127c, label %dec_label_pc_11296, !insn.addr !3166

dec_label_pc_1127c:                               ; preds = %dec_label_pc_11276
  store i8 0, i8* %9, align 1, !insn.addr !3167
  %92 = call i32 @puts(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_29c2c, i32 0, i32 0)), !insn.addr !3168
  store i32 %92, i32* %r0.6.reg2mem, !insn.addr !3168
  br label %dec_label_pc_11296, !insn.addr !3168

dec_label_pc_11296:                               ; preds = %dec_label_pc_11276, %dec_label_pc_1127c
  %r0.6.reload = load i32, i32* %r0.6.reg2mem
  store i32 %r0.6.reload, i32* %r0.7.reg2mem, !insn.addr !3169
  br i1 %.reload16, label %dec_label_pc_1129c, label %dec_label_pc_112b6, !insn.addr !3169

dec_label_pc_1129c:                               ; preds = %dec_label_pc_11296
  store i8 0, i8* %11, align 1, !insn.addr !3170
  %93 = call i32 @puts(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_29c44, i32 0, i32 0)), !insn.addr !3171
  store i32 %93, i32* %r0.7.reg2mem, !insn.addr !3171
  br label %dec_label_pc_112b6, !insn.addr !3171

dec_label_pc_112b6:                               ; preds = %dec_label_pc_11296, %dec_label_pc_1129c
  %r0.7.reload = load i32, i32* %r0.7.reg2mem
  store i8 %stack_var_-28.5.reload, i8* %stack_var_-28.6.reg2mem, !insn.addr !3172
  store i32 %r0.7.reload, i32* %r0.8.reg2mem, !insn.addr !3172
  br i1 %.reload, label %dec_label_pc_112bc, label %dec_label_pc_112d6, !insn.addr !3172

dec_label_pc_112bc:                               ; preds = %dec_label_pc_112b6
  store i8 0, i8* %13, align 1, !insn.addr !3173
  %94 = call i32 @puts(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_29c5c, i32 0, i32 0)), !insn.addr !3174
  store i8 %stack_var_-28.5.reload, i8* %stack_var_-28.6.reg2mem, !insn.addr !3174
  store i32 %94, i32* %r0.8.reg2mem, !insn.addr !3174
  br label %dec_label_pc_112d6, !insn.addr !3174

dec_label_pc_112d6:                               ; preds = %dec_label_pc_112b6, %dec_label_pc_112bc, %dec_label_pc_11262, %dec_label_pc_10f9e
  %r0.8.reload = load i32, i32* %r0.8.reg2mem
  %stack_var_-28.6.reload = load i8, i8* %stack_var_-28.6.reg2mem
  %95 = add i32 %storemerge14.reload, 1, !insn.addr !3175
  %96 = icmp ult i32 %95, 2, !insn.addr !3176
  %97 = icmp ne i1 %96, true, !insn.addr !3176
  %98 = icmp eq i32 %95, 2, !insn.addr !3176
  %99 = icmp ne i1 %97, true, !insn.addr !3177
  %100 = or i1 %98, %99, !insn.addr !3177
  store i1 %98, i1* %.reg2mem, !insn.addr !3177
  store i32 %95, i32* %storemerge14.reg2mem, !insn.addr !3177
  store i32 %r0.8.reload, i32* %r0.913.reg2mem, !insn.addr !3177
  store i8 %stack_var_-29.2.reload, i8* %stack_var_-29.312.reg2mem, !insn.addr !3177
  store i8 %stack_var_-28.6.reload, i8* %stack_var_-28.711.reg2mem, !insn.addr !3177
  store i8 %stack_var_-16.2.reload, i8* %stack_var_-16.310.reg2mem, !insn.addr !3177
  br i1 %100, label %dec_label_pc_10ed4, label %dec_label_pc_112e4, !insn.addr !3177

dec_label_pc_112e4:                               ; preds = %dec_label_pc_112d6
  ret i32 %r0.8.reload, !insn.addr !3178

; uselistorder directives
  uselistorder i32 %95, { 0, 2, 1 }
  uselistorder i8 %stack_var_-28.5.reload, { 1, 0, 2, 4, 3 }
  uselistorder i32 %r0.5.reload, { 1, 0, 2 }
  uselistorder i32 %73, { 1, 0 }
  uselistorder i8 %stack_var_-28.3.reload, { 2, 1, 0, 4, 3 }
  uselistorder i32 %55, { 1, 0 }
  uselistorder i8 %stack_var_-28.1.reload, { 2, 1, 0, 4, 3 }
  uselistorder i32 %43, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8 }
  uselistorder i32 %stack_var_-24.2.reload, { 1, 0 }
  uselistorder i8 %stack_var_-16.2.reload, { 3, 2, 0, 1 }
  uselistorder i8 %stack_var_-29.2.reload, { 2, 0, 1 }
  uselistorder i8 %stack_var_-28.711.reload, { 1, 0 }
  uselistorder i32 %0, { 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 16, 13, 14, 15, 2, 1, 0 }
  uselistorder i1* %.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge14.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r0.913.reg2mem, { 1, 0, 2 }
  uselistorder i8* %stack_var_-29.312.reg2mem, { 1, 0, 2 }
  uselistorder i8* %stack_var_-28.711.reg2mem, { 1, 0, 2 }
  uselistorder i8* %stack_var_-16.310.reg2mem, { 1, 0, 2 }
  uselistorder i1* %.reg2mem15, { 0, 3, 2, 1 }
  uselistorder i8* %stack_var_-16.1.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-24.1.reg2mem, { 0, 3, 2, 1 }
  uselistorder i8* %stack_var_-29.1.reg2mem, { 0, 3, 2, 1 }
  uselistorder i8* %stack_var_-16.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.2.reg2mem, { 0, 2, 1 }
  uselistorder i8* %stack_var_-29.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20.0.reg2mem, { 1, 0, 2 }
  uselistorder i8* %stack_var_-28.0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r0.0.reg2mem, { 1, 0, 2 }
  uselistorder i8* %stack_var_-28.1.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-20.1.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i8* %stack_var_-28.2.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %r0.2.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %.reg2mem17, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20.1.reg2mem, { 0, 2, 1 }
  uselistorder i8* %stack_var_-28.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.2.reg2mem, { 0, 2, 1 }
  uselistorder i8* %stack_var_-28.3.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %r0.3.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-20.2.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i8* %stack_var_-28.4.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %r0.4.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %.reg2mem19, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20.2.reg2mem, { 0, 2, 1 }
  uselistorder i8* %stack_var_-28.4.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.4.reg2mem, { 0, 2, 1 }
  uselistorder i8* %stack_var_-28.5.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %r0.5.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %r0.6.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.7.reg2mem, { 0, 2, 1 }
  uselistorder i8* %stack_var_-28.6.reg2mem, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.8.reg2mem, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_112d6, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_112b6, { 1, 0 }
  uselistorder label %dec_label_pc_11296, { 1, 0 }
  uselistorder label %dec_label_pc_11242, { 1, 2, 0 }
  uselistorder label %dec_label_pc_111d4thread-pre-split, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11136, { 1, 2, 0 }
  uselistorder label %dec_label_pc_110c8thread-pre-split, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10f9e, { 1, 0 }
  uselistorder label %dec_label_pc_10f5c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10ed4, { 1, 0 }
}

define i32 @read_asic_temperature(i32 %arg1) local_unnamed_addr {
dec_label_pc_112ec:
  %r0.0.reg2mem = alloca i32, !insn.addr !3179
  %.reg2mem31 = alloca i32, !insn.addr !3179
  %.reg2mem29 = alloca i32, !insn.addr !3179
  %stack_var_-24.6.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-24.5.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-32.2.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-24.4.reg2mem = alloca i32, !insn.addr !3179
  %.reg2mem27 = alloca i32, !insn.addr !3179
  %stack_var_-32.2.ph.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-24.4.ph.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-24.3.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-32.1.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-24.2.reg2mem = alloca i32, !insn.addr !3179
  %.reg2mem25 = alloca i32, !insn.addr !3179
  %stack_var_-32.1.ph.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-24.2.ph.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-24.1.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-32.0.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-24.718.reg2mem = alloca i32, !insn.addr !3179
  %stack_var_-28.319.reg2mem = alloca i8, !insn.addr !3179
  %storemerge20.reg2mem = alloca i32, !insn.addr !3179
  %.reg2mem = alloca i1, !insn.addr !3179
  %0 = urem i32 %arg1, 256
  %1 = add i32 %0, ptrtoint (i8** @global_var_235b54 to i32), !insn.addr !3180
  %2 = inttoptr i32 %1 to i8*, !insn.addr !3180
  store i8 0, i8* %2, align 1, !insn.addr !3180
  %3 = mul i32 %arg1, 4
  %4 = and i32 %3, 1020
  %5 = add i32 %4, ptrtoint (i32* @global_var_235b84 to i32)
  %6 = inttoptr i32 %5 to i32*
  %7 = add i32 %4, ptrtoint (i32* @global_var_235b74 to i32)
  %8 = inttoptr i32 %7 to i32*
  %9 = add i32 %4, ptrtoint (i32* @global_var_235b64 to i32)
  %10 = inttoptr i32 %9 to i32*
  %11 = add i32 %0, ptrtoint (i8** @global_var_35ad8 to i32)
  %12 = inttoptr i32 %11 to i8*
  store i1 false, i1* %.reg2mem
  store i32 0, i32* %storemerge20.reg2mem
  store i32 -1, i32* %stack_var_-24.718.reg2mem
  br label %dec_label_pc_11328

dec_label_pc_11328:                               ; preds = %dec_label_pc_112ec, %dec_label_pc_1179c
  %stack_var_-24.718.reload = load i32, i32* %stack_var_-24.718.reg2mem
  %stack_var_-28.319.reload = load i8, i8* %stack_var_-28.319.reg2mem
  %storemerge20.reload = load i32, i32* %storemerge20.reg2mem
  %.reload = load i1, i1* %.reg2mem
  %13 = icmp eq i32 %storemerge20.reload, 0, !insn.addr !3181
  %14 = load i8, i8* @global_var_3368ac, align 1
  %spec.select = select i1 %13, i8 %14, i8 %stack_var_-28.319.reload
  %15 = icmp eq i32 %storemerge20.reload, 1, !insn.addr !3182
  %16 = load i8, i8* @global_var_3368ad, align 1
  %stack_var_-28.1 = select i1 %15, i8 %16, i8 %spec.select
  %17 = load i8, i8* @global_var_3368ae, align 1
  %spec.select8 = select i1 %.reload, i8 %17, i8 %stack_var_-28.1
  %18 = icmp eq i8 %spec.select8, 0, !insn.addr !3183
  store i32 %stack_var_-24.718.reload, i32* %stack_var_-24.6.reg2mem, !insn.addr !3184
  br i1 %18, label %dec_label_pc_1179c, label %dec_label_pc_1136c, !insn.addr !3184

dec_label_pc_1136c:                               ; preds = %dec_label_pc_11328
  %19 = add i8 %spec.select8, -1
  %20 = zext i8 %19 to i32, !insn.addr !3185
  %21 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3186
  %22 = urem i32 %21, 256, !insn.addr !3187
  %23 = mul nuw nsw i32 %22, %20, !insn.addr !3188
  %24 = urem i32 %23, 256, !insn.addr !3189
  %25 = call i32 @enable_read_temperature_from_asic_chain(i32 %0, i32 %24), !insn.addr !3190
  %26 = sext i8 %spec.select8 to i32
  %27 = add nsw i32 %26, -1
  store i32 %stack_var_-24.718.reload, i32* %stack_var_-24.0.reg2mem, !insn.addr !3190
  store i32 1, i32* %stack_var_-32.0.reg2mem, !insn.addr !3190
  br label %dec_label_pc_1138e, !insn.addr !3190

dec_label_pc_1138e:                               ; preds = %dec_label_pc_113fc, %dec_label_pc_1136c
  %stack_var_-32.0.reload = load i32, i32* %stack_var_-32.0.reg2mem
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %28 = load i32, i32* @global_var_336850, align 4, !insn.addr !3191
  store i32 %stack_var_-24.0.reload, i32* %stack_var_-24.1.reg2mem
  switch i32 %28, label %dec_label_pc_113fc [
    i32 1722, label %dec_label_pc_113a0
    i32 1725, label %dec_label_pc_113d8
  ]

dec_label_pc_113a0:                               ; preds = %dec_label_pc_1138e
  %29 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3192
  %30 = mul i32 %29, %27, !insn.addr !3193
  %31 = call i32 @check_BM1722_asic_reg(i32 %0, i32 %30, i32 32, i32 0), !insn.addr !3194
  store i32 %31, i32* %stack_var_-24.1.reg2mem, !insn.addr !3195
  br label %dec_label_pc_113fc, !insn.addr !3195

dec_label_pc_113d8:                               ; preds = %dec_label_pc_1138e
  %32 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3196
  %33 = mul i32 %32, %27, !insn.addr !3197
  %34 = call i32 @check_BM1725_asic_reg(i32 %0, i32 %33, i32 32, i32 0), !insn.addr !3198
  store i32 %34, i32* %stack_var_-24.1.reg2mem, !insn.addr !3199
  br label %dec_label_pc_113fc, !insn.addr !3199

dec_label_pc_113fc:                               ; preds = %dec_label_pc_1138e, %dec_label_pc_113d8, %dec_label_pc_113a0
  %stack_var_-24.1.reload = load i32, i32* %stack_var_-24.1.reg2mem
  %35 = icmp ugt i32 %stack_var_-24.1.reload, 1073741823, !insn.addr !3200
  %36 = icmp ult i32 %stack_var_-32.0.reload, 2, !insn.addr !3201
  %or.cond = icmp eq i1 %36, %35
  store i32 %stack_var_-24.1.reload, i32* %stack_var_-24.0.reg2mem, !insn.addr !3202
  store i32 2, i32* %stack_var_-32.0.reg2mem, !insn.addr !3202
  br i1 %or.cond, label %dec_label_pc_1138e, label %dec_label_pc_1141c, !insn.addr !3202

dec_label_pc_1141c:                               ; preds = %dec_label_pc_113fc
  %37 = load i32, i32* @global_var_336850, align 4
  store i32 %37, i32* %.reg2mem25
  store i32 %stack_var_-24.1.reload, i32* %stack_var_-24.2.reg2mem
  store i32 0, i32* %stack_var_-32.1.reg2mem
  switch i32 %37, label %dec_label_pc_1149a [
    i32 1722, label %dec_label_pc_11432
    i32 1725, label %dec_label_pc_11470
  ]

dec_label_pc_11432:                               ; preds = %dec_label_pc_1141c
  %38 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3203
  %39 = mul i32 %38, %27, !insn.addr !3204
  %40 = call i32 @set_BM1722_asic_register(i32 %0, i32 %39, i32 32, i32 0, i32 26738944), !insn.addr !3205
  store i32 %stack_var_-24.1.reload, i32* %stack_var_-24.2.ph.reg2mem, !insn.addr !3206
  store i32 0, i32* %stack_var_-32.1.ph.reg2mem, !insn.addr !3206
  br label %dec_label_pc_1149athread-pre-split, !insn.addr !3206

dec_label_pc_11470:                               ; preds = %dec_label_pc_1141c
  %41 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3207
  %42 = mul i32 %41, %27, !insn.addr !3208
  %43 = call i32 @set_BM1725_asic_register(i32 %0, i32 %42, i32 32, i32 0, i32 26738944), !insn.addr !3209
  store i32 %stack_var_-24.1.reload, i32* %stack_var_-24.2.ph.reg2mem, !insn.addr !3209
  store i32 0, i32* %stack_var_-32.1.ph.reg2mem, !insn.addr !3209
  br label %dec_label_pc_1149athread-pre-split, !insn.addr !3209

dec_label_pc_1149athread-pre-split:               ; preds = %dec_label_pc_11432, %dec_label_pc_11470, %dec_label_pc_11508
  %stack_var_-32.1.ph.reload = load i32, i32* %stack_var_-32.1.ph.reg2mem
  %stack_var_-24.2.ph.reload = load i32, i32* %stack_var_-24.2.ph.reg2mem
  %.pr = load i32, i32* @global_var_336850, align 4
  store i32 %.pr, i32* %.reg2mem25
  store i32 %stack_var_-24.2.ph.reload, i32* %stack_var_-24.2.reg2mem
  store i32 %stack_var_-32.1.ph.reload, i32* %stack_var_-32.1.reg2mem
  br label %dec_label_pc_1149a

dec_label_pc_1149a:                               ; preds = %dec_label_pc_1149athread-pre-split, %dec_label_pc_1141c
  %stack_var_-32.1.reload = load i32, i32* %stack_var_-32.1.reg2mem
  %stack_var_-24.2.reload = load i32, i32* %stack_var_-24.2.reg2mem
  %.reload26 = load i32, i32* %.reg2mem25, !insn.addr !3210
  store i32 %stack_var_-24.2.reload, i32* %stack_var_-24.3.reg2mem
  switch i32 %.reload26, label %dec_label_pc_11508 [
    i32 1722, label %dec_label_pc_114ac
    i32 1725, label %dec_label_pc_114e4
  ]

dec_label_pc_114ac:                               ; preds = %dec_label_pc_1149a
  %44 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3211
  %45 = mul i32 %44, %27, !insn.addr !3212
  %46 = call i32 @check_BM1722_asic_reg(i32 %0, i32 %45, i32 32, i32 0), !insn.addr !3213
  store i32 %46, i32* %stack_var_-24.3.reg2mem, !insn.addr !3214
  br label %dec_label_pc_11508, !insn.addr !3214

dec_label_pc_114e4:                               ; preds = %dec_label_pc_1149a
  %47 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3215
  %48 = mul i32 %47, %27, !insn.addr !3216
  %49 = call i32 @check_BM1725_asic_reg(i32 %0, i32 %48, i32 32, i32 0), !insn.addr !3217
  store i32 %49, i32* %stack_var_-24.3.reg2mem, !insn.addr !3218
  br label %dec_label_pc_11508, !insn.addr !3218

dec_label_pc_11508:                               ; preds = %dec_label_pc_1149a, %dec_label_pc_114e4, %dec_label_pc_114ac
  %stack_var_-24.3.reload = load i32, i32* %stack_var_-24.3.reg2mem
  %50 = add i32 %stack_var_-32.1.reload, 1, !insn.addr !3219
  %51 = icmp ugt i32 %stack_var_-24.3.reload, 1073741823, !insn.addr !3220
  %52 = icmp ult i32 %50, 2, !insn.addr !3221
  %or.cond5 = icmp eq i1 %52, %51
  store i32 %stack_var_-24.3.reload, i32* %stack_var_-24.2.ph.reg2mem, !insn.addr !3222
  store i32 %50, i32* %stack_var_-32.1.ph.reg2mem, !insn.addr !3222
  br i1 %or.cond5, label %dec_label_pc_1149athread-pre-split, label %dec_label_pc_11528, !insn.addr !3222

dec_label_pc_11528:                               ; preds = %dec_label_pc_11508
  %53 = icmp ult i32 %stack_var_-24.3.reload, 1073741824, !insn.addr !3223
  br i1 %53, label %dec_label_pc_11536, label %dec_label_pc_11620, !insn.addr !3224

dec_label_pc_11536:                               ; preds = %dec_label_pc_11528
  %54 = urem i32 %stack_var_-24.3.reload, 256, !insn.addr !3225
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_29c74, i32 0, i32 0), i32 %26, i32 %54), !insn.addr !3226
  switch i32 %storemerge20.reload, label %dec_label_pc_1158e [
    i32 0, label %dec_label_pc_11552
    i32 1, label %dec_label_pc_11568
    i32 2, label %dec_label_pc_1157e
  ]

dec_label_pc_11552:                               ; preds = %dec_label_pc_11536
  store i32 %54, i32* %10, align 4, !insn.addr !3227
  br label %dec_label_pc_1158e

dec_label_pc_11568:                               ; preds = %dec_label_pc_11536
  store i32 %54, i32* %8, align 4, !insn.addr !3228
  br label %dec_label_pc_1158e

dec_label_pc_1157e:                               ; preds = %dec_label_pc_11536
  store i32 %54, i32* %6, align 4, !insn.addr !3229
  br label %dec_label_pc_1158e, !insn.addr !3229

dec_label_pc_1158e:                               ; preds = %dec_label_pc_11568, %dec_label_pc_11552, %dec_label_pc_11536, %dec_label_pc_1157e
  %56 = load i8, i8* @global_var_3368af, align 1, !insn.addr !3230
  %57 = zext i8 %56 to i32, !insn.addr !3230
  %58 = icmp eq i32 %57, %26, !insn.addr !3231
  br i1 %58, label %dec_label_pc_115a2, label %dec_label_pc_11644, !insn.addr !3232

dec_label_pc_115a2:                               ; preds = %dec_label_pc_1158e
  %59 = load i8, i8* @global_var_3368b0, align 1, !insn.addr !3233
  %60 = zext i8 %59 to i32, !insn.addr !3233
  %61 = icmp ult i32 %54, %60, !insn.addr !3234
  %62 = load i8, i8* %12, align 1
  %63 = icmp eq i8 %62, 1
  br i1 %61, label %dec_label_pc_115ec, label %dec_label_pc_115b6, !insn.addr !3234

dec_label_pc_115b6:                               ; preds = %dec_label_pc_115a2
  br i1 %63, label %dec_label_pc_115dc, label %dec_label_pc_115cc, !insn.addr !3235

dec_label_pc_115cc:                               ; preds = %dec_label_pc_115b6
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_29c8c, i32 0, i32 0), i32 %26, i32 %54), !insn.addr !3236
  br label %dec_label_pc_115dc, !insn.addr !3236

dec_label_pc_115dc:                               ; preds = %dec_label_pc_115cc, %dec_label_pc_115b6
  store i8 1, i8* %12, align 1, !insn.addr !3237
  br label %dec_label_pc_11644, !insn.addr !3238

dec_label_pc_115ec:                               ; preds = %dec_label_pc_115a2
  br i1 %63, label %dec_label_pc_11644, label %dec_label_pc_11602, !insn.addr !3239

dec_label_pc_11602:                               ; preds = %dec_label_pc_115ec
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_29cc8, i32 0, i32 0), i32 %26, i32 %54, i32 %60), !insn.addr !3240
  br label %dec_label_pc_11644, !insn.addr !3241

dec_label_pc_11620:                               ; preds = %dec_label_pc_11528
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_29d10, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_29ea8, i32 0, i32 0), i32 %26), !insn.addr !3242
  store i8 1, i8* %2, align 1, !insn.addr !3243
  br label %dec_label_pc_11644, !insn.addr !3243

dec_label_pc_11644:                               ; preds = %dec_label_pc_1158e, %dec_label_pc_11620, %dec_label_pc_11602, %dec_label_pc_115ec, %dec_label_pc_115dc
  %67 = load i32, i32* @global_var_336850, align 4
  store i32 %67, i32* %.reg2mem27
  store i32 %stack_var_-24.3.reload, i32* %stack_var_-24.4.reg2mem
  store i32 0, i32* %stack_var_-32.2.reg2mem
  switch i32 %67, label %dec_label_pc_116b6 [
    i32 1722, label %dec_label_pc_11656
    i32 1725, label %dec_label_pc_11690
  ]

dec_label_pc_11656:                               ; preds = %dec_label_pc_11644
  %68 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3244
  %69 = mul i32 %68, %27, !insn.addr !3245
  %70 = call i32 @set_BM1722_asic_register(i32 %0, i32 %69, i32 32, i32 0, i32 26738688), !insn.addr !3246
  store i32 %stack_var_-24.3.reload, i32* %stack_var_-24.4.ph.reg2mem, !insn.addr !3247
  store i32 0, i32* %stack_var_-32.2.ph.reg2mem, !insn.addr !3247
  br label %dec_label_pc_116b6thread-pre-split, !insn.addr !3247

dec_label_pc_11690:                               ; preds = %dec_label_pc_11644
  %71 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3248
  %72 = mul i32 %71, %27, !insn.addr !3249
  %73 = call i32 @set_BM1725_asic_register(i32 %0, i32 %72, i32 32, i32 0, i32 26738688), !insn.addr !3250
  store i32 %stack_var_-24.3.reload, i32* %stack_var_-24.4.ph.reg2mem, !insn.addr !3250
  store i32 0, i32* %stack_var_-32.2.ph.reg2mem, !insn.addr !3250
  br label %dec_label_pc_116b6thread-pre-split, !insn.addr !3250

dec_label_pc_116b6thread-pre-split:               ; preds = %dec_label_pc_11656, %dec_label_pc_11690, %dec_label_pc_11724
  %stack_var_-32.2.ph.reload = load i32, i32* %stack_var_-32.2.ph.reg2mem
  %stack_var_-24.4.ph.reload = load i32, i32* %stack_var_-24.4.ph.reg2mem
  %.pr12 = load i32, i32* @global_var_336850, align 4
  store i32 %.pr12, i32* %.reg2mem27
  store i32 %stack_var_-24.4.ph.reload, i32* %stack_var_-24.4.reg2mem
  store i32 %stack_var_-32.2.ph.reload, i32* %stack_var_-32.2.reg2mem
  br label %dec_label_pc_116b6

dec_label_pc_116b6:                               ; preds = %dec_label_pc_116b6thread-pre-split, %dec_label_pc_11644
  %stack_var_-32.2.reload = load i32, i32* %stack_var_-32.2.reg2mem
  %stack_var_-24.4.reload = load i32, i32* %stack_var_-24.4.reg2mem
  %.reload28 = load i32, i32* %.reg2mem27, !insn.addr !3251
  store i32 %stack_var_-24.4.reload, i32* %stack_var_-24.5.reg2mem
  switch i32 %.reload28, label %dec_label_pc_11724 [
    i32 1722, label %dec_label_pc_116c8
    i32 1725, label %dec_label_pc_11700
  ]

dec_label_pc_116c8:                               ; preds = %dec_label_pc_116b6
  %74 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3252
  %75 = mul i32 %74, %27, !insn.addr !3253
  %76 = call i32 @check_BM1722_asic_reg(i32 %0, i32 %75, i32 32, i32 0), !insn.addr !3254
  store i32 %76, i32* %stack_var_-24.5.reg2mem, !insn.addr !3255
  br label %dec_label_pc_11724, !insn.addr !3255

dec_label_pc_11700:                               ; preds = %dec_label_pc_116b6
  %77 = load i32, i32* @global_var_35ae8, align 4, !insn.addr !3256
  %78 = mul i32 %77, %27, !insn.addr !3257
  %79 = call i32 @check_BM1725_asic_reg(i32 %0, i32 %78, i32 32, i32 0), !insn.addr !3258
  store i32 %79, i32* %stack_var_-24.5.reg2mem, !insn.addr !3259
  br label %dec_label_pc_11724, !insn.addr !3259

dec_label_pc_11724:                               ; preds = %dec_label_pc_116b6, %dec_label_pc_11700, %dec_label_pc_116c8
  %stack_var_-24.5.reload = load i32, i32* %stack_var_-24.5.reg2mem
  %80 = add i32 %stack_var_-32.2.reload, 1, !insn.addr !3260
  %81 = icmp ugt i32 %stack_var_-24.5.reload, 1073741823, !insn.addr !3261
  %82 = icmp ult i32 %80, 2, !insn.addr !3262
  %or.cond7 = icmp eq i1 %82, %81
  store i32 %stack_var_-24.5.reload, i32* %stack_var_-24.4.ph.reg2mem, !insn.addr !3263
  store i32 %80, i32* %stack_var_-32.2.ph.reg2mem, !insn.addr !3263
  br i1 %or.cond7, label %dec_label_pc_116b6thread-pre-split, label %dec_label_pc_11744, !insn.addr !3263

dec_label_pc_11744:                               ; preds = %dec_label_pc_11724
  %83 = icmp ult i32 %stack_var_-24.5.reload, 1073741824, !insn.addr !3264
  br i1 %83, label %dec_label_pc_11752, label %dec_label_pc_11778, !insn.addr !3265

dec_label_pc_11752:                               ; preds = %dec_label_pc_11744
  %84 = urem i32 %stack_var_-24.5.reload, 256, !insn.addr !3266
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_29d3c, i32 0, i32 0), i32 %26, i32 %84), !insn.addr !3267
  store i32 %stack_var_-24.5.reload, i32* %stack_var_-24.6.reg2mem, !insn.addr !3268
  br label %dec_label_pc_1179c, !insn.addr !3268

dec_label_pc_11778:                               ; preds = %dec_label_pc_11744
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @global_var_29d64, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_29ea8, i32 0, i32 0), i32 %26), !insn.addr !3269
  store i8 1, i8* %2, align 1, !insn.addr !3270
  store i32 %stack_var_-24.5.reload, i32* %stack_var_-24.6.reg2mem, !insn.addr !3270
  br label %dec_label_pc_1179c, !insn.addr !3270

dec_label_pc_1179c:                               ; preds = %dec_label_pc_11778, %dec_label_pc_11752, %dec_label_pc_11328
  %stack_var_-24.6.reload = load i32, i32* %stack_var_-24.6.reg2mem
  %87 = add i32 %storemerge20.reload, 1, !insn.addr !3271
  %88 = icmp ult i32 %87, 2, !insn.addr !3272
  %89 = icmp ne i1 %88, true, !insn.addr !3272
  %90 = icmp eq i32 %87, 2, !insn.addr !3272
  %91 = icmp ne i1 %89, true, !insn.addr !3273
  %92 = or i1 %90, %91, !insn.addr !3273
  store i1 %90, i1* %.reg2mem, !insn.addr !3273
  store i32 %87, i32* %storemerge20.reg2mem, !insn.addr !3273
  store i8 %spec.select8, i8* %stack_var_-28.319.reg2mem, !insn.addr !3273
  store i32 %stack_var_-24.6.reload, i32* %stack_var_-24.718.reg2mem, !insn.addr !3273
  br i1 %92, label %dec_label_pc_11328, label %dec_label_pc_117aa, !insn.addr !3273

dec_label_pc_117aa:                               ; preds = %dec_label_pc_1179c
  %93 = load i32, i32* %10, align 4, !insn.addr !3274
  %94 = load i32, i32* %8, align 4, !insn.addr !3275
  %95 = add i32 %94, %93, !insn.addr !3276
  %96 = load i32, i32* %6, align 4, !insn.addr !3277
  %97 = add i32 %95, %96, !insn.addr !3278
  %98 = add i32 %4, ptrtoint (i32* @global_var_235b94 to i32), !insn.addr !3279
  %99 = inttoptr i32 %98 to i32*, !insn.addr !3279
  %100 = load i32, i32* %99, align 4, !insn.addr !3279
  %101 = sub i32 %97, %100, !insn.addr !3280
  %102 = add i32 %4, ptrtoint (i32* @global_var_235ba4 to i32), !insn.addr !3281
  %103 = inttoptr i32 %102 to i32*, !insn.addr !3281
  %104 = load i32, i32* %103, align 4, !insn.addr !3281
  %105 = sub i32 %101, %104, !insn.addr !3282
  %106 = add i32 %4, ptrtoint (i32* @global_var_235bb4 to i32), !insn.addr !3283
  %107 = inttoptr i32 %106 to i32*, !insn.addr !3283
  %108 = load i32, i32* %107, align 4, !insn.addr !3283
  %109 = sub i32 %105, %108, !insn.addr !3284
  %110 = load i32, i32* @global_var_35af0, align 4, !insn.addr !3285
  %111 = udiv i32 %109, %110, !insn.addr !3286
  %112 = add i32 %4, ptrtoint (i32* @global_var_235bf4 to i32), !insn.addr !3287
  %113 = inttoptr i32 %112 to i32*, !insn.addr !3287
  store i32 %111, i32* %113, align 4, !insn.addr !3287
  %114 = icmp ugt i32 %110, %109
  br i1 %114, label %dec_label_pc_118a6, label %dec_label_pc_11852, !insn.addr !3288

dec_label_pc_11852:                               ; preds = %dec_label_pc_117aa
  %115 = load i32, i32* %10, align 4, !insn.addr !3289
  store i32 %115, i32* %99, align 4, !insn.addr !3290
  %116 = load i32, i32* %8, align 4, !insn.addr !3291
  store i32 %116, i32* %103, align 4, !insn.addr !3292
  %117 = load i32, i32* %6, align 4, !insn.addr !3293
  store i32 %117, i32* %107, align 4, !insn.addr !3294
  br label %dec_label_pc_118a6, !insn.addr !3294

dec_label_pc_118a6:                               ; preds = %dec_label_pc_117aa, %dec_label_pc_11852
  %118 = load i32, i32* %10, align 4, !insn.addr !3295
  %119 = add i32 %4, ptrtoint (i32* @global_var_235bc4 to i32), !insn.addr !3296
  %120 = inttoptr i32 %119 to i32*, !insn.addr !3296
  store i32 %118, i32* %120, align 4, !insn.addr !3296
  %121 = load i32, i32* %8, align 4, !insn.addr !3297
  %122 = icmp sgt i32 %121, %118, !insn.addr !3298
  %spec.store.select = select i1 %122, i32 %121, i32 %118
  store i32 %spec.store.select, i32* %120, align 4
  %123 = load i32, i32* %6, align 4, !insn.addr !3299
  %124 = icmp sgt i32 %123, %spec.store.select, !insn.addr !3300
  %spec.store.select14 = select i1 %124, i32 %123, i32 %spec.store.select
  store i32 %spec.store.select14, i32* %120, align 4
  %125 = load i32, i32* %10, align 4, !insn.addr !3301
  %126 = add i32 %4, ptrtoint (i32* @global_var_235bd4 to i32), !insn.addr !3302
  %127 = inttoptr i32 %126 to i32*, !insn.addr !3302
  store i32 %125, i32* %127, align 4, !insn.addr !3302
  %128 = load i32, i32* %8, align 4, !insn.addr !3303
  %129 = icmp sge i32 %128, %125, !insn.addr !3304
  %130 = icmp eq i32 %128, 0, !insn.addr !3305
  %or.cond10 = or i1 %129, %130
  %spec.store.select13 = select i1 %or.cond10, i32 %125, i32 %128
  store i32 %spec.store.select13, i32* %127, align 4
  %131 = load i32, i32* %6, align 4, !insn.addr !3306
  %132 = icmp sge i32 %131, %spec.store.select13, !insn.addr !3307
  %133 = icmp eq i32 %131, 0, !insn.addr !3308
  %or.cond11 = or i1 %133, %132
  %spec.store.select15 = select i1 %or.cond11, i32 %spec.store.select13, i32 %131
  store i32 %spec.store.select15, i32* %127, align 4
  %134 = load i32, i32* %120, align 4, !insn.addr !3309
  %135 = add i32 %4, ptrtoint (i32* @global_var_235be4 to i32), !insn.addr !3310
  %136 = inttoptr i32 %135 to i32*, !insn.addr !3310
  %137 = load i32, i32* %136, align 4, !insn.addr !3310
  %138 = icmp sgt i32 %134, %137, !insn.addr !3311
  store i32 %137, i32* %.reg2mem29, !insn.addr !3311
  br i1 %138, label %dec_label_pc_11a12, label %dec_label_pc_11a2e, !insn.addr !3311

dec_label_pc_11a12:                               ; preds = %dec_label_pc_118a6
  store i32 %134, i32* %136, align 4, !insn.addr !3312
  store i32 %134, i32* %.reg2mem29, !insn.addr !3312
  br label %dec_label_pc_11a2e, !insn.addr !3312

dec_label_pc_11a2e:                               ; preds = %dec_label_pc_118a6, %dec_label_pc_11a12
  %.reload30 = load i32, i32* %.reg2mem29, !insn.addr !3313
  %139 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_29d9c, i32 0, i32 0), i32 %.reload30), !insn.addr !3314
  %140 = load i32, i32* %120, align 4, !insn.addr !3315
  %141 = load i8, i8* @global_var_3368b2, align 1, !insn.addr !3316
  %142 = zext i8 %141 to i32, !insn.addr !3316
  %143 = icmp sgt i32 %140, %142, !insn.addr !3317
  store i32 %140, i32* %.reg2mem31, !insn.addr !3317
  br i1 %143, label %dec_label_pc_11a68, label %dec_label_pc_11a76, !insn.addr !3317

dec_label_pc_11a68:                               ; preds = %dec_label_pc_11a2e
  %144 = add i32 %0, ptrtoint (i8** @global_var_235c04 to i32), !insn.addr !3318
  %145 = inttoptr i32 %144 to i8*, !insn.addr !3318
  store i8 1, i8* %145, align 1, !insn.addr !3318
  %.pre = load i32, i32* %120, align 4
  store i32 %.pre, i32* %.reg2mem31, !insn.addr !3318
  br label %dec_label_pc_11a76, !insn.addr !3318

dec_label_pc_11a76:                               ; preds = %dec_label_pc_11a2e, %dec_label_pc_11a68
  %.reload32 = load i32, i32* %.reg2mem31, !insn.addr !3319
  %146 = load i32, i32* %127, align 4, !insn.addr !3320
  %147 = sub i32 %.reload32, %146, !insn.addr !3321
  %148 = load i32, i32* @global_var_3368b8, align 4, !insn.addr !3322
  %149 = icmp ult i32 %147, %148, !insn.addr !3323
  %150 = icmp ne i1 %149, true, !insn.addr !3323
  %151 = icmp eq i32 %147, %148, !insn.addr !3323
  %152 = icmp ne i1 %150, true, !insn.addr !3324
  %153 = or i1 %151, %152, !insn.addr !3324
  store i32 %139, i32* %r0.0.reg2mem, !insn.addr !3324
  br i1 %153, label %dec_label_pc_11af6, label %dec_label_pc_11aa8, !insn.addr !3324

dec_label_pc_11aa8:                               ; preds = %dec_label_pc_11a76
  %154 = add i32 %0, ptrtoint (i8** @global_var_235c08 to i32), !insn.addr !3325
  %155 = inttoptr i32 %154 to i8*, !insn.addr !3325
  store i8 1, i8* %155, align 1, !insn.addr !3325
  %156 = add i32 %4, ptrtoint (i32* @global_var_235c0c to i32), !insn.addr !3326
  %157 = inttoptr i32 %156 to i32*, !insn.addr !3326
  %158 = load i32, i32* %157, align 4, !insn.addr !3326
  %159 = icmp slt i32 %158, %147, !insn.addr !3327
  store i32 %139, i32* %r0.0.reg2mem, !insn.addr !3327
  br i1 %159, label %dec_label_pc_11aca, label %dec_label_pc_11af6, !insn.addr !3327

dec_label_pc_11aca:                               ; preds = %dec_label_pc_11aa8
  store i32 %147, i32* %157, align 4, !insn.addr !3328
  %160 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_29db8, i32 0, i32 0), i32 %147), !insn.addr !3329
  store i32 %160, i32* %r0.0.reg2mem, !insn.addr !3329
  br label %dec_label_pc_11af6, !insn.addr !3329

dec_label_pc_11af6:                               ; preds = %dec_label_pc_11aa8, %dec_label_pc_11aca, %dec_label_pc_11a76
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !3330

; uselistorder directives
  uselistorder i32 %148, { 1, 0 }
  uselistorder i32 %147, { 0, 2, 1, 4, 3 }
  uselistorder i32 %spec.store.select13, { 1, 0, 2 }
  uselistorder i32 %spec.store.select, { 1, 0, 2 }
  uselistorder i32 %87, { 0, 2, 1 }
  uselistorder i32 %stack_var_-24.5.reload, { 0, 1, 4, 2, 5, 3 }
  uselistorder i32 %67, { 1, 0 }
  uselistorder i1 %63, { 1, 0 }
  uselistorder i32 %60, { 1, 0 }
  uselistorder i32 %54, { 5, 4, 6, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-24.3.reload, { 2, 1, 0, 5, 3, 6, 4 }
  uselistorder i32 %37, { 1, 0 }
  uselistorder i32 %stack_var_-24.1.reload, { 2, 1, 0, 4, 3 }
  uselistorder i32 %27, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8 }
  uselistorder i32 %26, { 1, 0, 6, 4, 3, 5, 2, 7 }
  uselistorder i8 %spec.select8, { 0, 3, 1, 2 }
  uselistorder i32 %storemerge20.reload, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-24.718.reload, { 1, 0 }
  uselistorder i32* %10, { 3, 2, 1, 0, 4 }
  uselistorder i32* %8, { 3, 2, 1, 0, 4 }
  uselistorder i32* %6, { 3, 2, 1, 0, 4 }
  uselistorder i32 %4, { 7, 6, 5, 4, 3, 2, 1, 0, 8, 9, 10 }
  uselistorder i8* %2, { 1, 0, 2 }
  uselistorder i32 %0, { 13, 12, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 0, 1, 14 }
  uselistorder i1* %.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge20.reg2mem, { 1, 0, 2 }
  uselistorder i8* %stack_var_-28.319.reg2mem, { 1, 0 }
  uselistorder i32* %stack_var_-24.718.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-24.0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32.0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-24.1.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-24.2.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32.1.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %.reg2mem25, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-32.1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.3.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-24.4.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32.2.ph.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32* %.reg2mem27, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.4.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-32.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.5.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1, 3 }
  uselistorder i32* @global_var_35af0, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_29ea8, i32 0, i32 0), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @set_BM1725_asic_register, { 12, 11, 10, 9, 7, 6, 13, 8, 5, 4, 2, 1, 3, 15, 14, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @set_BM1722_asic_register, { 12, 11, 10, 9, 7, 6, 13, 8, 5, 4, 3, 2, 1, 0, 16, 15, 14 }
  uselistorder i32 (i32, i32, i32, i32)* @check_BM1725_asic_reg, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 15, 14, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @check_BM1722_asic_reg, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 14, 13, 3, 2, 1, 0 }
  uselistorder i32 1725, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 24, 25, 26, 27, 28, 29, 33, 30, 0, 31, 1, 2, 3, 4 }
  uselistorder i32 1722, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 0, 1, 2 }
  uselistorder i32* @global_var_336850, { 0, 7, 1, 8, 9, 2, 10, 3, 11, 12, 4, 13, 5, 14, 15, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 (i32, i32)* @enable_read_temperature_from_asic_chain, { 2, 1, 0, 3 }
  uselistorder i32* @global_var_35ae8, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 1, 49, 2, 3, 46, 47, 48, 0 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i8* @global_var_3368ae, { 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_3368ad, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_35ad8 to i32), { 4, 5, 6, 7, 0, 8, 1, 9, 2, 10, 11, 3 }
  uselistorder i32 1020, { 4, 7, 1, 6, 5, 0, 8, 9, 10, 2, 3, 11 }
  uselistorder label %dec_label_pc_11af6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11a76, { 1, 0 }
  uselistorder label %dec_label_pc_11a2e, { 1, 0 }
  uselistorder label %dec_label_pc_118a6, { 1, 0 }
  uselistorder label %dec_label_pc_11724, { 1, 2, 0 }
  uselistorder label %dec_label_pc_116b6thread-pre-split, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11644, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1158e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11508, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1149athread-pre-split, { 2, 1, 0 }
  uselistorder label %dec_label_pc_113fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11328, { 1, 0 }
}

define i32 @test_eeprom() local_unnamed_addr {
dec_label_pc_11b00:
  %r3.0.reg2mem = alloca i32, !insn.addr !3331
  %stack_var_-15 = alloca i8, align 1
  %stack_var_-14 = alloca i8, align 1
  %stack_var_-13 = alloca i8, align 1
  store i8 -112, i8* %stack_var_-13, align 1, !insn.addr !3332
  store i8 90, i8* %stack_var_-14, align 1, !insn.addr !3333
  store i8 -91, i8* %stack_var_-15, align 1, !insn.addr !3334
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_29dd4, i32 0, i32 0), i32 90), !insn.addr !3335
  %1 = load i32, i32* @global_var_235c48, align 4, !insn.addr !3336
  %2 = call i32 @iic_write_reg(i32 %1, i8* nonnull %stack_var_-13, i32 1, i8* nonnull %stack_var_-14, i32 1), !insn.addr !3337
  %3 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !3338
  %4 = load i32, i32* @global_var_235c48, align 4, !insn.addr !3339
  %5 = call i32 @iic_read_reg(i32 %4, i8* nonnull %stack_var_-13, i32 1, i8* nonnull %stack_var_-15, i32 1), !insn.addr !3340
  %6 = icmp eq i32 %5, 1, !insn.addr !3341
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !3342
  br i1 %6, label %dec_label_pc_11b72, label %dec_label_pc_11b94, !insn.addr !3342

dec_label_pc_11b72:                               ; preds = %dec_label_pc_11b00
  %7 = load i8, i8* %stack_var_-15, align 1, !insn.addr !3343
  %8 = zext i8 %7 to i32, !insn.addr !3343
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_29df0, i32 0, i32 0), i32 %8), !insn.addr !3344
  %10 = load i8, i8* %stack_var_-15, align 1, !insn.addr !3345
  %11 = load i8, i8* %stack_var_-14, align 1, !insn.addr !3346
  %12 = icmp eq i8 %10, %11, !insn.addr !3347
  %. = zext i1 %12 to i32
  store i32 %., i32* %r3.0.reg2mem, !insn.addr !3348
  br label %dec_label_pc_11b94, !insn.addr !3348

dec_label_pc_11b94:                               ; preds = %dec_label_pc_11b00, %dec_label_pc_11b72
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !3349

; uselistorder directives
  uselistorder i8* %stack_var_-14, { 1, 0, 2 }
  uselistorder i8* %stack_var_-15, { 1, 2, 0, 3 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11b94, { 1, 0 }
}

define i32 @save_eeprom_N(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ba0:
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-17 = alloca i32, align 4
  %0 = mul i32 %arg1, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !3350
  store i32 %1, i32* %stack_var_-17, align 4, !insn.addr !3350
  %2 = trunc i32 %arg2 to i8, !insn.addr !3351
  store i8 %2, i8* %stack_var_-9, align 1, !insn.addr !3351
  %3 = load i32, i32* @global_var_235c48, align 4, !insn.addr !3352
  %4 = bitcast i32* %stack_var_-17 to i8*, !insn.addr !3353
  %5 = call i32 @iic_write_reg(i32 %3, i8* nonnull %4, i32 1, i8* nonnull %stack_var_-9, i32 1), !insn.addr !3353
  ret i32 %5, !insn.addr !3354

; uselistorder directives
  uselistorder i32* %stack_var_-17, { 1, 0 }
}

define i32 @get_eeprom_N(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_11bd8:
  %stack_var_-17 = alloca i32, align 4
  %0 = mul i32 %arg1, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !3355
  store i32 %1, i32* %stack_var_-17, align 4, !insn.addr !3355
  %2 = load i32, i32* @global_var_235c48, align 4, !insn.addr !3356
  %3 = bitcast i32* %arg2 to i8*, !insn.addr !3357
  %4 = bitcast i32* %stack_var_-17 to i8*, !insn.addr !3357
  %5 = call i32 @iic_read_reg(i32 %2, i8* nonnull %4, i32 1, i8* %3, i32 1), !insn.addr !3357
  %6 = icmp eq i32 %5, 1, !insn.addr !3358
  %. = zext i1 %6 to i32
  ret i32 %., !insn.addr !3359

; uselistorder directives
  uselistorder i32* %stack_var_-17, { 1, 0 }
}

define i32 @save_byte_to_eeprom(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11c1c:
  %stack_var_-9.0.reg2mem = alloca i32, !insn.addr !3360
  %stack_var_-10 = alloca i32, align 4
  %0 = urem i32 %arg1, 256, !insn.addr !3361
  %1 = urem i32 %arg2, 256, !insn.addr !3362
  %2 = call i32 @save_eeprom_N(i32 %0, i32 %1), !insn.addr !3363
  %3 = call i32 @usleep(i32 ptrtoint (i32* @global_var_7a120 to i32)), !insn.addr !3364
  %4 = call i32 @get_eeprom_N(i32 %0, i32* nonnull %stack_var_-10), !insn.addr !3365
  %5 = icmp eq i32 %4, 0, !insn.addr !3366
  br i1 %5, label %dec_label_pc_11c94, label %dec_label_pc_11c5a, !insn.addr !3367

dec_label_pc_11c5a:                               ; preds = %dec_label_pc_11c1c
  %6 = mul i32 %arg2, 16777216
  %7 = ashr exact i32 %6, 24, !insn.addr !3368
  %8 = urem i32 %7, 256, !insn.addr !3369
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_29e0c, i32 0, i32 0), i32 %8), !insn.addr !3370
  %10 = load i32, i32* %stack_var_-10, align 4, !insn.addr !3371
  %11 = urem i32 %10, 256, !insn.addr !3371
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_29e30, i32 0, i32 0), i32 %11), !insn.addr !3372
  %13 = load i32, i32* %stack_var_-10, align 4, !insn.addr !3373
  %14 = xor i32 %13, %7
  %15 = urem i32 %14, 256
  %16 = icmp eq i32 %15, 0, !insn.addr !3374
  store i32 1, i32* %stack_var_-9.0.reg2mem, !insn.addr !3375
  br i1 %16, label %dec_label_pc_11ca4, label %dec_label_pc_11c82, !insn.addr !3375

dec_label_pc_11c82:                               ; preds = %dec_label_pc_11c5a
  %17 = call i32 @puts(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_29e54, i32 0, i32 0)), !insn.addr !3376
  store i32 0, i32* %stack_var_-9.0.reg2mem, !insn.addr !3377
  br label %dec_label_pc_11ca4, !insn.addr !3377

dec_label_pc_11c94:                               ; preds = %dec_label_pc_11c1c
  %18 = call i32 @puts(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_29e68, i32 0, i32 0)), !insn.addr !3378
  store i32 0, i32* %stack_var_-9.0.reg2mem, !insn.addr !3379
  br label %dec_label_pc_11ca4, !insn.addr !3379

dec_label_pc_11ca4:                               ; preds = %dec_label_pc_11c94, %dec_label_pc_11c82, %dec_label_pc_11c5a
  %stack_var_-9.0.reload = load i32, i32* %stack_var_-9.0.reg2mem
  ret i32 %stack_var_-9.0.reload, !insn.addr !3380

; uselistorder directives
  uselistorder i32 %7, { 1, 0 }
  uselistorder i32 %0, { 1, 0 }
  uselistorder i32* %stack_var_-10, { 1, 2, 0 }
  uselistorder i32* %stack_var_-9.0.reg2mem, { 0, 3, 1, 2 }
}

define i32 @save_voltage_info_to_eeprom(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11cb0:
  %stack_var_-9.1.reg2mem = alloca i8, !insn.addr !3381
  %storemerge2.reg2mem = alloca i32, !insn.addr !3381
  %stack_var_-24 = alloca i32, align 4
  store i32 85, i32* %stack_var_-24, align 4, !insn.addr !3382
  %0 = bitcast i32* %stack_var_-24 to i8*, !insn.addr !3383
  %1 = call i32 @CRC5(i8* nonnull %0, i32 40), !insn.addr !3383
  %2 = call i32 @test_eeprom(), !insn.addr !3384
  %3 = icmp eq i32 %2, 0, !insn.addr !3385
  store i8 0, i8* %stack_var_-9.1.reg2mem, !insn.addr !3386
  br i1 %3, label %dec_label_pc_11d68, label %dec_label_pc_11d62.preheader, !insn.addr !3386

dec_label_pc_11d62.preheader:                     ; preds = %dec_label_pc_11cb0
  %4 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !3387
  store i32 0, i32* %storemerge2.reg2mem
  br label %dec_label_pc_11d24

dec_label_pc_11d24:                               ; preds = %dec_label_pc_11d62.preheader, %dec_label_pc_11d62
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %5 = add nuw nsw i32 %storemerge2.reload, 154, !insn.addr !3388
  %6 = add i32 %storemerge2.reload, %4, !insn.addr !3389
  %7 = inttoptr i32 %6 to i8*, !insn.addr !3390
  %8 = load i8, i8* %7, align 1, !insn.addr !3390
  %9 = zext i8 %8 to i32, !insn.addr !3390
  %10 = call i32 @save_byte_to_eeprom(i32 %5, i32 %9), !insn.addr !3391
  %11 = urem i32 %10, 256, !insn.addr !3392
  %12 = icmp eq i32 %11, 1, !insn.addr !3393
  br i1 %12, label %dec_label_pc_11d62, label %dec_label_pc_11d4e, !insn.addr !3394

dec_label_pc_11d4e:                               ; preds = %dec_label_pc_11d24
  %13 = trunc i32 %10 to i8, !insn.addr !3395
  %14 = call i32 @puts(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_29e84, i32 0, i32 0)), !insn.addr !3396
  store i8 %13, i8* %stack_var_-9.1.reg2mem, !insn.addr !3397
  br label %dec_label_pc_11d68, !insn.addr !3397

dec_label_pc_11d62:                               ; preds = %dec_label_pc_11d24
  %15 = add nuw nsw i32 %storemerge2.reload, 1, !insn.addr !3398
  %16 = icmp ult i32 %15, 6, !insn.addr !3399
  store i32 %15, i32* %storemerge2.reg2mem, !insn.addr !3399
  br i1 %16, label %dec_label_pc_11d24, label %dec_label_pc_11d68.loopexit, !insn.addr !3399

dec_label_pc_11d68.loopexit:                      ; preds = %dec_label_pc_11d62
  %17 = trunc i32 %10 to i8, !insn.addr !3395
  store i8 %17, i8* %stack_var_-9.1.reg2mem
  br label %dec_label_pc_11d68

dec_label_pc_11d68:                               ; preds = %dec_label_pc_11d68.loopexit, %dec_label_pc_11d4e, %dec_label_pc_11cb0
  %stack_var_-9.1.reload = load i8, i8* %stack_var_-9.1.reg2mem
  %18 = zext i8 %stack_var_-9.1.reload to i32, !insn.addr !3400
  ret i32 %18, !insn.addr !3401

; uselistorder directives
  uselistorder i32 %10, { 1, 2, 0 }
  uselistorder i32 %storemerge2.reload, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %storemerge2.reg2mem, { 1, 0, 2 }
  uselistorder i32 (i8*, i32)* @CRC5, { 12, 10, 9, 8, 7, 6, 11, 4, 3, 1, 0, 2, 5 }
  uselistorder label %dec_label_pc_11d24, { 1, 0 }
}

define i32 @function_11d74() local_unnamed_addr {
dec_label_pc_11d74:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1, !insn.addr !3402
}

define i32 @open_i2c() local_unnamed_addr {
dec_label_pc_11d78:
  %stack_var_-24 = alloca i8*, align 4
  %stack_var_-16 = alloca i8*, align 4
  %stack_var_-32 = alloca i8*, align 4
  %0 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4
  %1 = zext i8 %0 to i32, !insn.addr !3403
  %2 = inttoptr i32 %1 to i8*, !insn.addr !3404
  store i8* %2, i8** %stack_var_-16, align 4, !insn.addr !3404
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_2a044, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2a088, i32 0, i32 0), i32 4, i32 %1), !insn.addr !3405
  %4 = bitcast i8** %stack_var_-16 to i32*, !insn.addr !3406
  %5 = call i32 @iic_init(i32* nonnull %4), !insn.addr !3406
  store i32 %5, i32* @global_var_235c40, align 4, !insn.addr !3407
  %6 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !3408
  %7 = zext i8 %6 to i32, !insn.addr !3408
  %8 = inttoptr i32 %7 to i8*, !insn.addr !3409
  store i8* %8, i8** %stack_var_-24, align 4, !insn.addr !3409
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_2a044, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2a088, i32 0, i32 0), i32 2, i32 0), !insn.addr !3410
  %10 = bitcast i8** %stack_var_-24 to i32*, !insn.addr !3411
  %11 = call i32 @iic_init(i32* nonnull %10), !insn.addr !3411
  store i32 %11, i32* @global_var_235c44, align 4, !insn.addr !3412
  %12 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4
  %13 = zext i8 %12 to i32, !insn.addr !3413
  %14 = inttoptr i32 %13 to i8*, !insn.addr !3414
  store i8* %14, i8** %stack_var_-32, align 4, !insn.addr !3414
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_2a044, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2a088, i32 0, i32 0), i32 10, i32 %13), !insn.addr !3415
  %16 = bitcast i8** %stack_var_-32 to i32*, !insn.addr !3416
  %17 = call i32 @iic_init(i32* nonnull %16), !insn.addr !3416
  store i32 %17, i32* @global_var_235c48, align 4, !insn.addr !3417
  %18 = load i32, i32* @global_var_235c40, align 4, !insn.addr !3418
  ret i32 %18, !insn.addr !3419

; uselistorder directives
  uselistorder i8** %stack_var_-32, { 1, 0 }
  uselistorder i8** %stack_var_-16, { 1, 0 }
  uselistorder i8** %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32*)* @iic_init, { 2, 1, 0 }
}

define i32 @close_i2c() local_unnamed_addr {
dec_label_pc_11e78:
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2a074, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2a07c, i32 0, i32 0)), !insn.addr !3420
  %1 = load i32, i32* @global_var_235c48, align 4, !insn.addr !3421
  %2 = call i32 @iic_uninit(i32 %1), !insn.addr !3422
  %3 = load i32, i32* @global_var_235c44, align 4, !insn.addr !3423
  %4 = call i32 @iic_uninit(i32 %3), !insn.addr !3424
  %5 = load i32, i32* @global_var_235c40, align 4, !insn.addr !3425
  %6 = call i32 @iic_uninit(i32 %5), !insn.addr !3426
  ret i32 0, !insn.addr !3427

; uselistorder directives
  uselistorder i32 (i32)* @iic_uninit, { 2, 1, 0 }
  uselistorder i32* @global_var_235c48, { 1, 0, 2, 3, 4, 5 }
}

define i32 @iic_i2c_write(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ec8:
  %0 = ptrtoint i8* %arg1 to i32
  %1 = load i32, i32* @global_var_235c40, align 4, !insn.addr !3428
  %2 = call i32 @iic_write(i32 %1, i32 %0, i32 %arg2), !insn.addr !3429
  ret i32 %2, !insn.addr !3430
}

define i32 @iic_i2c_read(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ef4:
  %0 = ptrtoint i8* %arg1 to i32
  %1 = load i32, i32* @global_var_235c40, align 4, !insn.addr !3431
  %2 = call i32 @iic_read(i32 %1, i32 %0, i32 %arg2), !insn.addr !3432
  ret i32 %2, !insn.addr !3433

; uselistorder directives
  uselistorder i32* @global_var_235c40, { 1, 2, 3, 4, 0 }
}

define i32 @iic_i2c_write_reg(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11f20:
  %stack_var_-9 = alloca i32, align 4
  %0 = mul i32 %arg1, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !3434
  store i32 %1, i32* %stack_var_-9, align 4, !insn.addr !3434
  %2 = load i32, i32* @global_var_235c44, align 4, !insn.addr !3435
  %3 = bitcast i32* %arg2 to i8*, !insn.addr !3436
  %4 = bitcast i32* %stack_var_-9 to i8*, !insn.addr !3436
  %5 = call i32 @iic_write_reg(i32 %2, i8* nonnull %4, i32 1, i8* %3, i32 %arg3), !insn.addr !3436
  ret i32 %5, !insn.addr !3437

; uselistorder directives
  uselistorder i32* %stack_var_-9, { 1, 0 }
  uselistorder i32 (i32, i8*, i32, i8*, i32)* @iic_write_reg, { 2, 1, 0 }
}

define i32 @iic_i2c_read_reg(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11f58:
  %stack_var_-9 = alloca i32, align 4
  %0 = mul i32 %arg1, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !3438
  store i32 %1, i32* %stack_var_-9, align 4, !insn.addr !3438
  %2 = load i32, i32* @global_var_235c44, align 4, !insn.addr !3439
  %3 = bitcast i32* %arg2 to i8*, !insn.addr !3440
  %4 = bitcast i32* %stack_var_-9 to i8*, !insn.addr !3440
  %5 = call i32 @iic_read_reg(i32 %2, i8* nonnull %4, i32 1, i8* %3, i32 %arg3), !insn.addr !3440
  ret i32 %5, !insn.addr !3441

; uselistorder directives
  uselistorder i32* %stack_var_-9, { 1, 0 }
  uselistorder i32 (i32, i8*, i32, i8*, i32)* @iic_read_reg, { 2, 1, 0 }
  uselistorder i32* @global_var_235c44, { 1, 2, 3, 0 }
}

define i32 @dcr_uart_send(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11f90:
  %storemerge.reg2mem = alloca i32, !insn.addr !3442
  %stack_var_-522 = alloca i32, align 4
  %stack_var_-524 = alloca i32, align 4
  %.mask = urem i32 %arg1, 256
  %0 = icmp eq i32 %.mask, 255, !insn.addr !3443
  br i1 %0, label %dec_label_pc_11fba, label %dec_label_pc_11fd4, !insn.addr !3444

dec_label_pc_11fba:                               ; preds = %dec_label_pc_11f90
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2a094, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2a0c4, i32 0, i32 0)), !insn.addr !3445
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !3446
  br label %dec_label_pc_1202a, !insn.addr !3446

dec_label_pc_11fd4:                               ; preds = %dec_label_pc_11f90
  %2 = call i32* @memset(i32* nonnull %stack_var_-524, i32 0, i32 512), !insn.addr !3447
  store i32 85, i32* %stack_var_-524, align 4, !insn.addr !3448
  %3 = bitcast i8* %arg2 to i32*
  %4 = call i32* @memcpy(i32* nonnull %stack_var_-522, i32* %3, i32 %arg3), !insn.addr !3449
  %5 = add i32 %arg3, 2, !insn.addr !3450
  %6 = call i32 @uart_send(i32 %.mask, i32* nonnull %stack_var_-524, i32 %5), !insn.addr !3451
  store i32 %6, i32* %storemerge.reg2mem, !insn.addr !3452
  br label %dec_label_pc_1202a, !insn.addr !3452

dec_label_pc_1202a:                               ; preds = %dec_label_pc_11fd4, %dec_label_pc_11fba
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !3453

; uselistorder directives
  uselistorder i32 %.mask, { 1, 0 }
  uselistorder i32* %stack_var_-524, { 0, 2, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @uart_set_baud(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12034:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-16, align 4, !insn.addr !3454
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2a0ac, i32 0, i32 0), i32 %arg2), !insn.addr !3455
  %1 = urem i32 %arg1, 256, !insn.addr !3456
  %2 = call i32 @uart_set_config(i32 %1, i32 0, i32* nonnull %stack_var_-16, i32 4), !insn.addr !3457
  ret i32 %2, !insn.addr !3458
}

define i32 @key_callback(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12068:
  %r0.1.reg2mem = alloca i32, !insn.addr !3459
  %r0.0.reg2mem = alloca i32, !insn.addr !3459
  %stack_var_-16 = alloca i8**, align 4
  %stack_var_-8 = alloca i32, align 4
  store i8** bitcast ([6 x i8]* @global_var_2a0f0 to i8**), i8*** %stack_var_-16, align 4, !insn.addr !3460
  switch i32 %arg2, label %dec_label_pc_120ee [
    i32 0, label %dec_label_pc_12092
    i32 1, label %dec_label_pc_120c0
  ]

dec_label_pc_12092:                               ; preds = %dec_label_pc_12068
  %0 = mul i32 %arg1, 4, !insn.addr !3461
  %1 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !3462
  %2 = add i32 %0, -1032, !insn.addr !3463
  %3 = add i32 %2, %1, !insn.addr !3464
  %4 = inttoptr i32 %3 to i32*, !insn.addr !3464
  %5 = load i32, i32* %4, align 4, !insn.addr !3464
  %6 = inttoptr i32 %5 to i8*, !insn.addr !3465
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2a0d4, i32 0, i32 0), i8* %6), !insn.addr !3465
  store i32 1, i32* @global_var_235c4c, align 4, !insn.addr !3466
  store i32 %7, i32* %r0.0.reg2mem, !insn.addr !3467
  br label %dec_label_pc_120f0, !insn.addr !3467

dec_label_pc_120c0:                               ; preds = %dec_label_pc_12068
  %8 = mul i32 %arg1, 4, !insn.addr !3468
  %9 = ptrtoint i32* %stack_var_-8 to i32, !insn.addr !3469
  %10 = add i32 %8, -1032, !insn.addr !3470
  %11 = add i32 %10, %9, !insn.addr !3471
  %12 = inttoptr i32 %11 to i32*, !insn.addr !3471
  %13 = load i32, i32* %12, align 4, !insn.addr !3471
  %14 = inttoptr i32 %13 to i8*, !insn.addr !3472
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2a0e4, i32 0, i32 0), i8* %14), !insn.addr !3472
  store i32 0, i32* @global_var_235c4c, align 4, !insn.addr !3473
  store i32 %15, i32* %r0.0.reg2mem, !insn.addr !3474
  br label %dec_label_pc_120f0, !insn.addr !3474

dec_label_pc_120ee:                               ; preds = %dec_label_pc_12068
  %16 = ptrtoint i8*** %stack_var_-16 to i32, !insn.addr !3475
  %17 = call i32 @__asm_nop(i32 ptrtoint ([6 x i8]* @global_var_2a0f0 to i32), i32 ptrtoint ([9 x i8]* @global_var_2a0f8 to i32), i32 %16, i32 %arg2), !insn.addr !3476
  store i32 %17, i32* %r0.0.reg2mem, !insn.addr !3476
  br label %dec_label_pc_120f0, !insn.addr !3476

dec_label_pc_120f0:                               ; preds = %dec_label_pc_120ee, %dec_label_pc_120c0, %dec_label_pc_12092
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %18 = icmp eq i32 %arg1, 256, !insn.addr !3477
  store i32 %r0.0.reload, i32* %r0.1.reg2mem, !insn.addr !3478
  br i1 %18, label %dec_label_pc_120f8, label %dec_label_pc_12100, !insn.addr !3478

dec_label_pc_120f8:                               ; preds = %dec_label_pc_120f0
  %19 = call i32 @red_led_off(), !insn.addr !3479
  %20 = call i32 @green_led_off(i32 %19), !insn.addr !3480
  store i32 %20, i32* %r0.1.reg2mem, !insn.addr !3480
  br label %dec_label_pc_12100, !insn.addr !3480

dec_label_pc_12100:                               ; preds = %dec_label_pc_120f0, %dec_label_pc_120f8
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  ret i32 %r0.1.reload, !insn.addr !3481

; uselistorder directives
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 1 }
  uselistorder i32 -1032, { 1, 0 }
  uselistorder [6 x i8]* @global_var_2a0f0, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12100, { 1, 0 }
}

define i32 @open_key() local_unnamed_addr {
dec_label_pc_12108:
  %0 = call i32 @reg_key_callback(i32 73833), !insn.addr !3482
  ret i32 1, !insn.addr !3483
}

define i32 @close_key() local_unnamed_addr {
dec_label_pc_12120:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = load i32, i32* %0
  %4 = call i32 @unreg_key_callback(i32 73833), !insn.addr !3484
  %5 = call i32 @__asm_nop(i32 %4, i32 %3, i32 %2, i32 %1), !insn.addr !3485
  ret i32 %5, !insn.addr !3486

; uselistorder directives
  uselistorder i32* %0, { 2, 1, 0 }
}

define i32 @read_key(i32* %arg1) local_unnamed_addr {
dec_label_pc_12134:
  %0 = load i32, i32* @global_var_235c4c, align 4, !insn.addr !3487
  %1 = trunc i32 %0 to i8, !insn.addr !3488
  %2 = bitcast i32* %arg1 to i8*, !insn.addr !3488
  store i8 %1, i8* %2, align 1, !insn.addr !3488
  ret i32 1, !insn.addr !3489

; uselistorder directives
  uselistorder i32* @global_var_235c4c, { 2, 1, 0 }
}

define i32 @write_lcd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1215c:
  %0 = call i32 @lcd_clear_result(), !insn.addr !3490
  %1 = call i32 @lcd_show_result(i32 %arg1, i32 %arg2, i32 %arg3), !insn.addr !3491
  ret i32 %1, !insn.addr !3492
}

define i32 @write_lcd_no_memset(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12180:
  %0 = ptrtoint i32* %arg2 to i32
  %1 = call i32 @lcd_show_result(i32 %arg1, i32 %0, i32 %arg3), !insn.addr !3493
  ret i32 %1, !insn.addr !3494

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @lcd_show_result, { 1, 0 }
}

define i32 @c2hex(i32 %arg1) local_unnamed_addr {
dec_label_pc_121a0:
  %stack_var_-9.0.reg2mem = alloca i32, !insn.addr !3495
  %0 = mul i32 %arg1, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !3496
  %2 = urem i32 %arg1, 256, !insn.addr !3497
  %3 = icmp ult i32 %2, 47, !insn.addr !3498
  %4 = icmp ne i1 %3, true, !insn.addr !3498
  %5 = icmp eq i32 %2, 47, !insn.addr !3498
  %6 = icmp ne i1 %4, true, !insn.addr !3499
  %7 = or i1 %5, %6, !insn.addr !3499
  br i1 %7, label %dec_label_pc_121c4, label %dec_label_pc_121b4, !insn.addr !3499

dec_label_pc_121b4:                               ; preds = %dec_label_pc_121a0
  %8 = urem i32 %1, 256, !insn.addr !3500
  %9 = icmp ult i32 %8, 57, !insn.addr !3501
  %10 = icmp ne i1 %9, true, !insn.addr !3501
  %11 = icmp eq i32 %8, 57, !insn.addr !3501
  %12 = icmp ne i1 %11, true, !insn.addr !3502
  %13 = icmp eq i1 %10, %12, !insn.addr !3502
  br i1 %13, label %dec_label_pc_121c4, label %dec_label_pc_121ba, !insn.addr !3502

dec_label_pc_121ba:                               ; preds = %dec_label_pc_121b4
  %phitmp = urem i32 %1, 16
  store i32 %phitmp, i32* %stack_var_-9.0.reg2mem, !insn.addr !3503
  br label %dec_label_pc_12240, !insn.addr !3503

dec_label_pc_121c4:                               ; preds = %dec_label_pc_121b4, %dec_label_pc_121a0
  %trunc = trunc i32 %1 to i8
  store i32 10, i32* %stack_var_-9.0.reg2mem
  store i32 10, i32* %stack_var_-9.0.reg2mem
  switch i8 %trunc, label %dec_label_pc_12230 [
    i8 97, label %dec_label_pc_12240
    i8 65, label %dec_label_pc_12240
    i8 98, label %dec_label_pc_121e2
    i8 66, label %dec_label_pc_121e2
    i8 99, label %dec_label_pc_121f4
    i8 67, label %dec_label_pc_121f4
    i8 100, label %dec_label_pc_12206
    i8 68, label %dec_label_pc_12206
    i8 101, label %dec_label_pc_12218
    i8 69, label %dec_label_pc_12218
    i8 102, label %dec_label_pc_1222a
    i8 70, label %dec_label_pc_1222a
  ]

dec_label_pc_121e2:                               ; preds = %dec_label_pc_121c4, %dec_label_pc_121c4
  store i32 11, i32* %stack_var_-9.0.reg2mem, !insn.addr !3504
  br label %dec_label_pc_12240, !insn.addr !3504

dec_label_pc_121f4:                               ; preds = %dec_label_pc_121c4, %dec_label_pc_121c4
  store i32 12, i32* %stack_var_-9.0.reg2mem, !insn.addr !3505
  br label %dec_label_pc_12240, !insn.addr !3505

dec_label_pc_12206:                               ; preds = %dec_label_pc_121c4, %dec_label_pc_121c4
  store i32 13, i32* %stack_var_-9.0.reg2mem, !insn.addr !3506
  br label %dec_label_pc_12240, !insn.addr !3506

dec_label_pc_12218:                               ; preds = %dec_label_pc_121c4, %dec_label_pc_121c4
  store i32 14, i32* %stack_var_-9.0.reg2mem, !insn.addr !3507
  br label %dec_label_pc_12240, !insn.addr !3507

dec_label_pc_1222a:                               ; preds = %dec_label_pc_121c4, %dec_label_pc_121c4
  store i32 15, i32* %stack_var_-9.0.reg2mem, !insn.addr !3508
  br label %dec_label_pc_12240, !insn.addr !3508

dec_label_pc_12230:                               ; preds = %dec_label_pc_121c4
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2a10c, i32 0, i32 0), i8 %trunc), !insn.addr !3509
  store i32 255, i32* %stack_var_-9.0.reg2mem, !insn.addr !3509
  br label %dec_label_pc_12240, !insn.addr !3509

dec_label_pc_12240:                               ; preds = %dec_label_pc_121c4, %dec_label_pc_121c4, %dec_label_pc_12230, %dec_label_pc_1222a, %dec_label_pc_12218, %dec_label_pc_12206, %dec_label_pc_121f4, %dec_label_pc_121e2, %dec_label_pc_121ba
  %stack_var_-9.0.reload = load i32, i32* %stack_var_-9.0.reg2mem
  ret i32 %stack_var_-9.0.reload, !insn.addr !3510

; uselistorder directives
  uselistorder i32 %8, { 1, 0 }
  uselistorder i32 %2, { 1, 0 }
  uselistorder i32 %1, { 2, 0, 1 }
  uselistorder i32* %stack_var_-9.0.reg2mem, { 0, 4, 5, 6, 7, 8, 9, 1, 2, 3 }
  uselistorder i8 66, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_12240, { 2, 3, 4, 5, 6, 7, 0, 1, 8 }
}

define i32 @twoc2hex(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1224c:
  %0 = urem i32 %arg1, 256, !insn.addr !3511
  %1 = call i32 @c2hex(i32 %0), !insn.addr !3512
  %2 = urem i32 %arg2, 256, !insn.addr !3513
  %3 = call i32 @c2hex(i32 %2), !insn.addr !3514
  %4 = mul i32 %1, 16, !insn.addr !3515
  %5 = and i32 %4, 240, !insn.addr !3516
  %6 = urem i32 %3, 256, !insn.addr !3517
  %7 = xor i32 %6, %5, !insn.addr !3518
  ret i32 %7, !insn.addr !3519

; uselistorder directives
  uselistorder i32 (i32)* @c2hex, { 1, 0 }
}

define i32 @s2hex(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12290:
  %storemerge.reg2mem = alloca i32, !insn.addr !3520
  %0 = icmp eq i32 %arg2, 0, !insn.addr !3521
  %1 = icmp slt i32 %arg3, 1, !insn.addr !3522
  %or.cond = or i1 %0, %1
  %2 = icmp eq i32 %arg1, 0, !insn.addr !3523
  %or.cond4 = or i1 %2, %or.cond
  br i1 %or.cond4, label %dec_label_pc_122ba, label %dec_label_pc_122d2, !insn.addr !3524

dec_label_pc_122ba:                               ; preds = %dec_label_pc_12290
  %3 = inttoptr i32 %arg1 to i32*, !insn.addr !3525
  %4 = inttoptr i32 %arg2 to i32*, !insn.addr !3525
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_2a124, i32 0, i32 0), i32* %3, i32* %4, i32 %arg3), !insn.addr !3525
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !3526
  br label %dec_label_pc_1235c, !insn.addr !3526

dec_label_pc_122d2:                               ; preds = %dec_label_pc_12290
  br i1 false, label %dec_label_pc_122f2, label %dec_label_pc_12330, !insn.addr !3527

dec_label_pc_122f2:                               ; preds = %dec_label_pc_122d2, %dec_label_pc_122f2
  br i1 undef, label %dec_label_pc_122f2, label %dec_label_pc_12330, !insn.addr !3527

dec_label_pc_12330:                               ; preds = %dec_label_pc_122f2, %dec_label_pc_122d2
  %6 = srem i32 %arg3, 2, !insn.addr !3528
  %7 = icmp eq i32 %6, 0, !insn.addr !3529
  br i1 %7, label %dec_label_pc_12356, label %dec_label_pc_12336, !insn.addr !3530

dec_label_pc_12336:                               ; preds = %dec_label_pc_12330
  %8 = inttoptr i32 %arg2 to i8*, !insn.addr !3531
  %9 = load i8, i8* %8, align 1, !insn.addr !3531
  %10 = zext i8 %9 to i32, !insn.addr !3531
  %11 = call i32 @twoc2hex(i32 %10, i32 0), !insn.addr !3532
  %12 = trunc i32 %11 to i8, !insn.addr !3533
  %13 = inttoptr i32 %arg1 to i8*, !insn.addr !3533
  store i8 %12, i8* %13, align 1, !insn.addr !3533
  br label %dec_label_pc_12356, !insn.addr !3533

dec_label_pc_12356:                               ; preds = %dec_label_pc_12336, %dec_label_pc_12330
  store i32 %6, i32* %storemerge.reg2mem, !insn.addr !3534
  br label %dec_label_pc_1235c, !insn.addr !3534

dec_label_pc_1235c:                               ; preds = %dec_label_pc_12356, %dec_label_pc_122ba
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !3535

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_122f2, { 1, 0 }
}

define i32 @print_works() local_unnamed_addr {
dec_label_pc_12368:
  %r3.0.reg2mem = alloca i32, !insn.addr !3536
  %storemerge3.lcssa.reg2mem = alloca i32, !insn.addr !3536
  %storemerge412.reg2mem = alloca i32, !insn.addr !3536
  %storemerge610.reg2mem = alloca i32, !insn.addr !3536
  %storemerge511.reg2mem = alloca i32, !insn.addr !3536
  %.reg2mem = alloca i32, !insn.addr !3536
  %storemerge314.reg2mem = alloca i32, !insn.addr !3536
  %storemerge.lcssa.reg2mem = alloca i32, !insn.addr !3536
  %storemerge27.reg2mem = alloca i32, !insn.addr !3536
  %storemerge18.reg2mem = alloca i32, !insn.addr !3536
  %storemerge9.reg2mem = alloca i32, !insn.addr !3536
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2a154, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2a2b4, i32 0, i32 0)), !insn.addr !3537
  %1 = load i32, i32* @global_var_336848, align 4, !insn.addr !3538
  store i32 0, i32* %storemerge314.reg2mem
  store i32 0, i32* %storemerge3.lcssa.reg2mem
  switch i32 %1, label %dec_label_pc_12466 [
    i32 1, label %dec_label_pc_1243a.preheader
    i32 0, label %dec_label_pc_12544
  ]

dec_label_pc_1243a.preheader:                     ; preds = %dec_label_pc_12368
  %2 = load i32, i32* @global_var_33684c, align 4, !insn.addr !3539
  %3 = icmp eq i32 %2, 0, !insn.addr !3540
  store i32 0, i32* %storemerge9.reg2mem, !insn.addr !3541
  store i32 0, i32* %storemerge.lcssa.reg2mem, !insn.addr !3541
  br i1 %3, label %dec_label_pc_1244a, label %dec_label_pc_123a2, !insn.addr !3541

dec_label_pc_123a2:                               ; preds = %dec_label_pc_1243a.preheader, %dec_label_pc_1242e
  %storemerge9.reload = load i32, i32* %storemerge9.reg2mem
  %4 = mul i32 %storemerge9.reload, 4, !insn.addr !3542
  %5 = add i32 %4, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 524448), !insn.addr !3543
  %6 = inttoptr i32 %5 to i32*, !insn.addr !3543
  %7 = load i32, i32* %6, align 4, !insn.addr !3543
  %8 = load i32, i32* @global_var_33681c, align 4, !insn.addr !3544
  %9 = icmp eq i32 %8, 0, !insn.addr !3545
  store i32 0, i32* %storemerge18.reg2mem, !insn.addr !3546
  br i1 %9, label %dec_label_pc_1242e, label %dec_label_pc_123be, !insn.addr !3546

dec_label_pc_123be:                               ; preds = %dec_label_pc_123a2, %dec_label_pc_12406
  %storemerge18.reload = load i32, i32* %storemerge18.reg2mem
  %10 = mul i32 %storemerge18.reload, 204, !insn.addr !3547
  %11 = add i32 %10, %7, !insn.addr !3548
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2a160, i32 0, i32 0), i32 %storemerge9.reload, i32 %storemerge18.reload), !insn.addr !3549
  %13 = add i32 %11, 8, !insn.addr !3550
  store i32 0, i32* %storemerge27.reg2mem
  br label %dec_label_pc_123e2

dec_label_pc_123e2:                               ; preds = %dec_label_pc_123be, %dec_label_pc_123e2
  %storemerge27.reload = load i32, i32* %storemerge27.reg2mem
  %14 = add i32 %13, %storemerge27.reload, !insn.addr !3551
  %15 = inttoptr i32 %14 to i8*, !insn.addr !3552
  %16 = load i8, i8* %15, align 1, !insn.addr !3552
  %17 = zext i8 %16 to i32, !insn.addr !3552
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2a17c, i32 0, i32 0), i32 %17), !insn.addr !3553
  %19 = add nuw nsw i32 %storemerge27.reload, 1, !insn.addr !3554
  %20 = icmp ult i32 %19, 180, !insn.addr !3555
  store i32 %19, i32* %storemerge27.reg2mem, !insn.addr !3555
  br i1 %20, label %dec_label_pc_123e2, label %dec_label_pc_12406, !insn.addr !3555

dec_label_pc_12406:                               ; preds = %dec_label_pc_123e2
  %21 = add i32 %11, 4, !insn.addr !3556
  %22 = inttoptr i32 %21 to i32*, !insn.addr !3556
  %23 = load i32, i32* %22, align 4, !insn.addr !3556
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2a184, i32 0, i32 0), i32 %23), !insn.addr !3557
  %25 = add i32 %storemerge18.reload, 1, !insn.addr !3558
  %26 = load i32, i32* @global_var_33681c, align 4, !insn.addr !3544
  %27 = icmp ult i32 %26, %25, !insn.addr !3545
  %28 = icmp ne i1 %27, true, !insn.addr !3545
  %29 = icmp eq i32 %26, %25, !insn.addr !3545
  %30 = icmp ne i1 %29, true, !insn.addr !3546
  %31 = icmp eq i1 %28, %30, !insn.addr !3546
  store i32 %25, i32* %storemerge18.reg2mem, !insn.addr !3546
  br i1 %31, label %dec_label_pc_123be, label %dec_label_pc_1242e, !insn.addr !3546

dec_label_pc_1242e:                               ; preds = %dec_label_pc_12406, %dec_label_pc_123a2
  %32 = call i32 @putchar(i32 10), !insn.addr !3559
  %33 = add i32 %storemerge9.reload, 1, !insn.addr !3560
  %34 = load i32, i32* @global_var_33684c, align 4, !insn.addr !3539
  %35 = icmp ult i32 %34, %33, !insn.addr !3540
  %36 = icmp ne i1 %35, true, !insn.addr !3540
  %37 = icmp eq i32 %34, %33, !insn.addr !3540
  %38 = icmp ne i1 %37, true, !insn.addr !3541
  %39 = icmp eq i1 %36, %38, !insn.addr !3541
  store i32 %33, i32* %storemerge9.reg2mem, !insn.addr !3541
  store i32 %33, i32* %storemerge.lcssa.reg2mem, !insn.addr !3541
  br i1 %39, label %dec_label_pc_123a2, label %dec_label_pc_1244a, !insn.addr !3541

dec_label_pc_1244a:                               ; preds = %dec_label_pc_1242e, %dec_label_pc_1243a.preheader
  %storemerge.lcssa.reload = load i32, i32* %storemerge.lcssa.reg2mem
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2a194, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2a2b4, i32 0, i32 0)), !insn.addr !3561
  store i32 %storemerge.lcssa.reload, i32* %r3.0.reg2mem, !insn.addr !3562
  br label %dec_label_pc_12558, !insn.addr !3562

dec_label_pc_12466:                               ; preds = %dec_label_pc_12368, %dec_label_pc_12528
  %storemerge314.reload = load i32, i32* %storemerge314.reg2mem
  %41 = mul i32 %storemerge314.reload, 4, !insn.addr !3563
  %42 = add i32 %41, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 524448), !insn.addr !3564
  %43 = inttoptr i32 %42 to i32*, !insn.addr !3564
  %44 = load i32, i32* %43, align 4, !insn.addr !3564
  %45 = load i32, i32* @global_var_33684c, align 4, !insn.addr !3565
  %46 = icmp eq i32 %45, 0, !insn.addr !3566
  store i32 0, i32* %storemerge412.reg2mem, !insn.addr !3567
  br i1 %46, label %dec_label_pc_12528, label %dec_label_pc_124fc.preheader, !insn.addr !3567

dec_label_pc_12488:                               ; preds = %dec_label_pc_124fc.preheader, %dec_label_pc_124e4
  %storemerge511.reload = load i32, i32* %storemerge511.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %47 = mul i32 %.reload, %storemerge412.reload, !insn.addr !3568
  %48 = add i32 %47, %storemerge511.reload, !insn.addr !3569
  %49 = mul i32 %48, 204, !insn.addr !3570
  %50 = add i32 %49, %44, !insn.addr !3571
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2a1a0, i32 0, i32 0), i32 %storemerge314.reload, i32 %storemerge412.reload, i32 %storemerge511.reload), !insn.addr !3572
  %52 = add i32 %50, 8, !insn.addr !3573
  store i32 0, i32* %storemerge610.reg2mem
  br label %dec_label_pc_124c0

dec_label_pc_124c0:                               ; preds = %dec_label_pc_12488, %dec_label_pc_124c0
  %storemerge610.reload = load i32, i32* %storemerge610.reg2mem
  %53 = add i32 %52, %storemerge610.reload, !insn.addr !3574
  %54 = inttoptr i32 %53 to i8*, !insn.addr !3575
  %55 = load i8, i8* %54, align 1, !insn.addr !3575
  %56 = zext i8 %55 to i32, !insn.addr !3575
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2a17c, i32 0, i32 0), i32 %56), !insn.addr !3576
  %58 = add nuw nsw i32 %storemerge610.reload, 1, !insn.addr !3577
  %59 = icmp ult i32 %58, 180, !insn.addr !3578
  store i32 %58, i32* %storemerge610.reg2mem, !insn.addr !3578
  br i1 %59, label %dec_label_pc_124c0, label %dec_label_pc_124e4, !insn.addr !3578

dec_label_pc_124e4:                               ; preds = %dec_label_pc_124c0
  %60 = add i32 %50, 4, !insn.addr !3579
  %61 = inttoptr i32 %60 to i32*, !insn.addr !3579
  %62 = load i32, i32* %61, align 4, !insn.addr !3579
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2a184, i32 0, i32 0), i32 %62), !insn.addr !3580
  %64 = add i32 %storemerge511.reload, 1, !insn.addr !3581
  %65 = load i32, i32* @global_var_33681c, align 4, !insn.addr !3582
  %66 = icmp ult i32 %65, %64, !insn.addr !3583
  %67 = icmp ne i1 %66, true, !insn.addr !3583
  %68 = icmp eq i32 %65, %64, !insn.addr !3583
  %69 = icmp ne i1 %68, true, !insn.addr !3584
  %70 = icmp eq i1 %67, %69, !insn.addr !3584
  store i32 %65, i32* %.reg2mem, !insn.addr !3584
  store i32 %64, i32* %storemerge511.reg2mem, !insn.addr !3584
  br i1 %70, label %dec_label_pc_12488, label %dec_label_pc_1250c, !insn.addr !3584

dec_label_pc_1250c:                               ; preds = %dec_label_pc_124e4, %dec_label_pc_124fc.preheader
  %71 = call i32 @putchar(i32 10), !insn.addr !3585
  %72 = add i32 %storemerge412.reload, 1, !insn.addr !3586
  %73 = load i32, i32* @global_var_33684c, align 4, !insn.addr !3565
  %74 = icmp ult i32 %73, %72, !insn.addr !3566
  %75 = icmp ne i1 %74, true, !insn.addr !3566
  %76 = icmp eq i32 %73, %72, !insn.addr !3566
  %77 = icmp ne i1 %76, true, !insn.addr !3567
  %78 = icmp eq i1 %75, %77, !insn.addr !3567
  store i32 %72, i32* %storemerge412.reg2mem, !insn.addr !3567
  br i1 %78, label %dec_label_pc_124fc.preheader, label %dec_label_pc_12528, !insn.addr !3567

dec_label_pc_124fc.preheader:                     ; preds = %dec_label_pc_12466, %dec_label_pc_1250c
  %storemerge412.reload = load i32, i32* %storemerge412.reg2mem
  %79 = load i32, i32* @global_var_33681c, align 4, !insn.addr !3582
  %80 = icmp eq i32 %79, 0, !insn.addr !3583
  store i32 %79, i32* %.reg2mem, !insn.addr !3584
  store i32 0, i32* %storemerge511.reg2mem, !insn.addr !3584
  br i1 %80, label %dec_label_pc_1250c, label %dec_label_pc_12488, !insn.addr !3584

dec_label_pc_12528:                               ; preds = %dec_label_pc_1250c, %dec_label_pc_12466
  %81 = call i32 @putchar(i32 10), !insn.addr !3587
  %82 = add i32 %storemerge314.reload, 1, !insn.addr !3588
  %83 = load i32, i32* @global_var_336848, align 4, !insn.addr !3589
  %84 = icmp ult i32 %83, %82, !insn.addr !3590
  %85 = icmp ne i1 %84, true, !insn.addr !3590
  %86 = icmp eq i32 %83, %82, !insn.addr !3590
  %87 = icmp ne i1 %86, true, !insn.addr !3591
  %88 = icmp eq i1 %85, %87, !insn.addr !3591
  store i32 %82, i32* %storemerge314.reg2mem, !insn.addr !3591
  store i32 %82, i32* %storemerge3.lcssa.reg2mem, !insn.addr !3591
  br i1 %88, label %dec_label_pc_12466, label %dec_label_pc_12544, !insn.addr !3591

dec_label_pc_12544:                               ; preds = %dec_label_pc_12528, %dec_label_pc_12368
  %storemerge3.lcssa.reload = load i32, i32* %storemerge3.lcssa.reg2mem
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2a194, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2a2b4, i32 0, i32 0)), !insn.addr !3592
  store i32 %storemerge3.lcssa.reload, i32* %r3.0.reg2mem, !insn.addr !3592
  br label %dec_label_pc_12558, !insn.addr !3592

dec_label_pc_12558:                               ; preds = %dec_label_pc_12544, %dec_label_pc_1244a
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !3593

; uselistorder directives
  uselistorder i32 %83, { 1, 0 }
  uselistorder i32 %82, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge412.reload, { 2, 0, 1 }
  uselistorder i32 %73, { 1, 0 }
  uselistorder i32 %72, { 0, 2, 1 }
  uselistorder i32 %65, { 0, 2, 1 }
  uselistorder i32 %64, { 0, 2, 1 }
  uselistorder i32 %storemerge610.reload, { 1, 0 }
  uselistorder i32 %50, { 1, 0 }
  uselistorder i32 %storemerge511.reload, { 1, 2, 0 }
  uselistorder i32 %34, { 1, 0 }
  uselistorder i32 %33, { 0, 1, 3, 2 }
  uselistorder i32 %26, { 1, 0 }
  uselistorder i32 %25, { 0, 2, 1 }
  uselistorder i32 %storemerge27.reload, { 1, 0 }
  uselistorder i32 %11, { 1, 0 }
  uselistorder i32 %storemerge18.reload, { 0, 2, 1 }
  uselistorder i32* %storemerge9.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge18.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge27.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge314.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem, { 1, 2, 0 }
  uselistorder i32* %storemerge511.reg2mem, { 1, 2, 0 }
  uselistorder i32* %storemerge610.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge412.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_124fc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1250c, { 1, 0 }
  uselistorder label %dec_label_pc_124c0, { 1, 0 }
  uselistorder label %dec_label_pc_12466, { 1, 0 }
  uselistorder label %dec_label_pc_123e2, { 1, 0 }
  uselistorder label %dec_label_pc_123be, { 1, 0 }
  uselistorder label %dec_label_pc_123a2, { 1, 0 }
}

define i32 @get_work(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12564:
  %storemerge12.reg2mem = alloca i32, !insn.addr !3594
  %storemerge22.lcssa.reg2mem = alloca i32, !insn.addr !3594
  %.in.lcssa.reg2mem = alloca i8*, !insn.addr !3594
  %storemerge221.reg2mem = alloca i32, !insn.addr !3594
  %storemerge3.in.reg2mem = alloca i32, !insn.addr !3594
  %storemerge5.in.reg2mem = alloca i32, !insn.addr !3594
  %storemerge2259.reg2mem = alloca i32, !insn.addr !3594
  %stack_var_-1056 = alloca i32, align 4
  %0 = call i32* @memset(i32* nonnull %stack_var_-1056, i32 0, i32 1024), !insn.addr !3595
  %1 = bitcast i32* %stack_var_-1056 to i8*, !insn.addr !3596
  %2 = inttoptr i32 %arg3 to %_IO_FILE*, !insn.addr !3596
  %3 = call i8* @fgets(i8* nonnull %1, i32 1023, %_IO_FILE* %2), !insn.addr !3596
  %4 = icmp eq i8* %3, null, !insn.addr !3597
  store i32 0, i32* %storemerge12.reg2mem, !insn.addr !3598
  br i1 %4, label %dec_label_pc_1270e, label %dec_label_pc_125a2.lr.ph, !insn.addr !3598

dec_label_pc_125a2.lr.ph:                         ; preds = %dec_label_pc_12564
  %5 = mul i32 %arg1, 4
  %6 = add i32 %5, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 524448)
  %7 = inttoptr i32 %6 to i32*
  %8 = mul i32 %arg4, %arg2
  %9 = icmp eq i32 %arg4, 0, !insn.addr !3599
  store i32 0, i32* %storemerge2259.reg2mem, !insn.addr !3600
  store i8* %3, i8** %.in.lcssa.reg2mem, !insn.addr !3600
  store i32 0, i32* %storemerge22.lcssa.reg2mem, !insn.addr !3600
  br i1 %9, label %dec_label_pc_126e8, label %dec_label_pc_125b0, !insn.addr !3600

dec_label_pc_125a2:                               ; preds = %dec_label_pc_126b8
  %10 = icmp uge i32 %storemerge2259.reload, %arg4, !insn.addr !3599
  %11 = icmp ne i1 %10, true, !insn.addr !3599
  %12 = icmp eq i32 %44, %arg4, !insn.addr !3599
  %13 = icmp ne i1 %11, true, !insn.addr !3600
  %14 = or i1 %12, %13, !insn.addr !3600
  store i32 %44, i32* %storemerge2259.reg2mem, !insn.addr !3600
  store i8* %45, i8** %.in.lcssa.reg2mem, !insn.addr !3600
  store i32 %44, i32* %storemerge22.lcssa.reg2mem, !insn.addr !3600
  br i1 %14, label %dec_label_pc_126e8, label %dec_label_pc_125b0, !insn.addr !3600

dec_label_pc_125b0:                               ; preds = %dec_label_pc_125a2.lr.ph, %dec_label_pc_125a2
  %storemerge2259.reload = load i32, i32* %storemerge2259.reg2mem
  %15 = load i32, i32* %7, align 4, !insn.addr !3601
  %16 = add i32 %storemerge2259.reload, %8, !insn.addr !3602
  %17 = mul i32 %16, 204, !insn.addr !3603
  %18 = add i32 %15, %17, !insn.addr !3604
  %19 = call i8* @strstr(i8* nonnull %1, i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_a1c0 to i32), i32 131072) to i8*)), !insn.addr !3605
  %20 = ptrtoint i8* %19 to i32, !insn.addr !3605
  %21 = icmp eq i8* %19, null, !insn.addr !3606
  br i1 %21, label %dec_label_pc_126f0, label %dec_label_pc_12608, !insn.addr !3607

dec_label_pc_12608:                               ; preds = %dec_label_pc_125b0
  %22 = add i32 %20, 5, !insn.addr !3608
  store i32 %22, i32* %storemerge5.in.reg2mem, !insn.addr !3609
  br label %dec_label_pc_1261e, !insn.addr !3609

dec_label_pc_1261e:                               ; preds = %dec_label_pc_1261e, %dec_label_pc_12608
  %storemerge5.in.reload = load i32, i32* %storemerge5.in.reg2mem
  %storemerge5 = inttoptr i32 %storemerge5.in.reload to i8*
  %23 = load i8, i8* %storemerge5, align 1, !insn.addr !3610
  %24 = icmp eq i8 %23, 32, !insn.addr !3611
  %25 = add i32 %storemerge5.in.reload, 1, !insn.addr !3612
  store i32 %25, i32* %storemerge5.in.reg2mem, !insn.addr !3613
  br i1 %24, label %dec_label_pc_1261e, label %dec_label_pc_12628, !insn.addr !3613

dec_label_pc_12628:                               ; preds = %dec_label_pc_1261e
  %26 = add i32 %18, 4, !insn.addr !3614
  %27 = call i32 @s2hex(i32 %26, i32 %storemerge5.in.reload, i32 8), !insn.addr !3615
  %28 = call i8* @strstr(i8* nonnull %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2a1c8, i32 0, i32 0)), !insn.addr !3616
  %29 = ptrtoint i8* %28 to i32, !insn.addr !3616
  %30 = icmp eq i8* %28, null, !insn.addr !3617
  br i1 %30, label %dec_label_pc_126f4, label %dec_label_pc_12658, !insn.addr !3618

dec_label_pc_12658:                               ; preds = %dec_label_pc_12628
  %31 = add i32 %29, 4, !insn.addr !3619
  store i32 %31, i32* %storemerge3.in.reg2mem, !insn.addr !3620
  br label %dec_label_pc_1266e, !insn.addr !3620

dec_label_pc_1266e:                               ; preds = %dec_label_pc_1266e, %dec_label_pc_12658
  %storemerge3.in.reload = load i32, i32* %storemerge3.in.reg2mem
  %storemerge3 = inttoptr i32 %storemerge3.in.reload to i8*
  %32 = load i8, i8* %storemerge3, align 1, !insn.addr !3621
  %33 = icmp eq i8 %32, 32, !insn.addr !3622
  %34 = add i32 %storemerge3.in.reload, 1, !insn.addr !3623
  store i32 %34, i32* %storemerge3.in.reg2mem, !insn.addr !3624
  br i1 %33, label %dec_label_pc_1266e, label %dec_label_pc_12678, !insn.addr !3624

dec_label_pc_12678:                               ; preds = %dec_label_pc_1266e
  %35 = add i32 %18, 8, !insn.addr !3625
  %36 = call i32 @s2hex(i32 %35, i32 %storemerge3.in.reload, i32 360), !insn.addr !3626
  %37 = add i32 %18, 188, !insn.addr !3627
  store i32 0, i32* %storemerge221.reg2mem
  br label %dec_label_pc_12694

dec_label_pc_12694:                               ; preds = %dec_label_pc_12678, %dec_label_pc_12694
  %storemerge221.reload = load i32, i32* %storemerge221.reg2mem
  %38 = mul i32 %storemerge221.reload, 4, !insn.addr !3628
  %39 = add i32 %37, %38, !insn.addr !3629
  %40 = inttoptr i32 %39 to i32*, !insn.addr !3629
  store i32 0, i32* %40, align 4, !insn.addr !3629
  %41 = add nuw nsw i32 %storemerge221.reload, 1, !insn.addr !3630
  %42 = icmp ult i32 %41, 4, !insn.addr !3631
  store i32 %41, i32* %storemerge221.reg2mem, !insn.addr !3631
  br i1 %42, label %dec_label_pc_12694, label %dec_label_pc_126b8, !insn.addr !3631

dec_label_pc_126b8:                               ; preds = %dec_label_pc_12694
  %43 = inttoptr i32 %18 to i32*, !insn.addr !3632
  store i32 %storemerge2259.reload, i32* %43, align 4, !insn.addr !3632
  %44 = add nuw i32 %storemerge2259.reload, 1, !insn.addr !3633
  %45 = call i8* @fgets(i8* nonnull %1, i32 1023, %_IO_FILE* %2), !insn.addr !3596
  %46 = icmp eq i8* %45, null, !insn.addr !3597
  store i32 %44, i32* %storemerge12.reg2mem, !insn.addr !3598
  br i1 %46, label %dec_label_pc_1270e, label %dec_label_pc_125a2, !insn.addr !3598

dec_label_pc_126e8:                               ; preds = %dec_label_pc_125a2, %dec_label_pc_125a2.lr.ph
  %storemerge22.lcssa.reload = load i32, i32* %storemerge22.lcssa.reg2mem
  %.in.lcssa.reload = load i8*, i8** %.in.lcssa.reg2mem
  %47 = ptrtoint i8* %.in.lcssa.reload to i32
  %48 = call i32 @__asm_nop(i32 %47, i32 1023, i32 %arg4, i32 %storemerge22.lcssa.reload), !insn.addr !3634
  store i32 %storemerge22.lcssa.reload, i32* %storemerge12.reg2mem, !insn.addr !3634
  br label %dec_label_pc_1270e, !insn.addr !3634

dec_label_pc_126f0:                               ; preds = %dec_label_pc_125b0
  %49 = call i32 @__asm_nop(i32 %20, i32 or (i32 ptrtoint (i8** @global_var_a1c0 to i32), i32 131072), i32 %15, i32 %20), !insn.addr !3635
  br label %dec_label_pc_126f6, !insn.addr !3636

dec_label_pc_126f4:                               ; preds = %dec_label_pc_12628
  %50 = call i32 @__asm_nop(i32 %29, i32 ptrtoint ([5 x i8]* @global_var_2a1c8 to i32), i32 8, i32 %29), !insn.addr !3637
  br label %dec_label_pc_126f6, !insn.addr !3637

dec_label_pc_126f6:                               ; preds = %dec_label_pc_126f4, %dec_label_pc_126f0
  %51 = inttoptr i32 %18 to i32*, !insn.addr !3638
  call void @free(i32* %51), !insn.addr !3638
  %52 = call i32 @puts(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2a1d0, i32 0, i32 0)), !insn.addr !3639
  store i32 %storemerge2259.reload, i32* %storemerge12.reg2mem, !insn.addr !3640
  br label %dec_label_pc_1270e, !insn.addr !3640

dec_label_pc_1270e:                               ; preds = %dec_label_pc_126b8, %dec_label_pc_12564, %dec_label_pc_126e8, %dec_label_pc_126f6
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  ret i32 %storemerge12.reload, !insn.addr !3641

; uselistorder directives
  uselistorder i8* %45, { 1, 0 }
  uselistorder i32 %44, { 0, 3, 2, 1 }
  uselistorder i32 %storemerge3.in.reload, { 2, 1, 0 }
  uselistorder i32 %29, { 1, 0, 2 }
  uselistorder i32 %storemerge5.in.reload, { 2, 1, 0 }
  uselistorder i32 %20, { 1, 0, 2 }
  uselistorder i32 %storemerge2259.reload, { 0, 3, 2, 1, 4 }
  uselistorder %_IO_FILE* %2, { 1, 0 }
  uselistorder i8* %1, { 3, 1, 2, 0 }
  uselistorder i32* %storemerge2259.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge5.in.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge3.in.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge221.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge12.reg2mem, { 0, 3, 4, 1, 2 }
  uselistorder [5 x i8]* @global_var_2a1c8, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @s2hex, { 1, 0 }
  uselistorder i8* (i8*, i8*)* @strstr, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1270e, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12694, { 1, 0 }
  uselistorder label %dec_label_pc_125b0, { 1, 0 }
}

define i32 @get_works() local_unnamed_addr {
dec_label_pc_1271c:
  %r3.0.reg2mem = alloca i32, !insn.addr !3642
  %stack_var_-24.1.lcssa.reg2mem = alloca i32, !insn.addr !3642
  %.reg2mem26 = alloca i32, !insn.addr !3642
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !3642
  %.reg2mem24 = alloca i32, !insn.addr !3642
  %stack_var_-24.14.reg2mem = alloca i32, !insn.addr !3642
  %storemerge5.reg2mem = alloca i32, !insn.addr !3642
  %.reg2mem22 = alloca i32, !insn.addr !3642
  %.reg2mem20 = alloca i32, !insn.addr !3642
  %.reg2mem18 = alloca i32, !insn.addr !3642
  %.reg2mem16 = alloca i32, !insn.addr !3642
  %storemerge36.reg2mem = alloca i32, !insn.addr !3642
  %storemerge27.reg2mem = alloca i32, !insn.addr !3642
  %.reg2mem = alloca i32, !insn.addr !3642
  %stack_var_-100 = alloca i32, align 4
  %0 = call i32* @memset(i32* nonnull %stack_var_-100, i32 0, i32 64), !insn.addr !3643
  %1 = load i32, i32* @global_var_336848, align 4, !insn.addr !3644
  %2 = load i32, i32* @global_var_33684c, align 4, !insn.addr !3645
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_2a1e0, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2a2a8, i32 0, i32 0), i32 %1, i32 %2), !insn.addr !3646
  %4 = load i32, i32* @global_var_336848, align 4, !insn.addr !3647
  %5 = icmp eq i32 %4, 0, !insn.addr !3648
  br i1 %5, label %dec_label_pc_1271c.dec_label_pc_12920_crit_edge, label %dec_label_pc_1276a.lr.ph, !insn.addr !3649

dec_label_pc_1271c.dec_label_pc_12920_crit_edge:  ; preds = %dec_label_pc_1271c
  %.pre9 = load i32, i32* @global_var_33684c, align 4
  store i32 %.pre9, i32* %.reg2mem18
  store i32 0, i32* %.reg2mem20
  br label %dec_label_pc_12920

dec_label_pc_1276a.lr.ph:                         ; preds = %dec_label_pc_1271c
  %6 = bitcast i32* %stack_var_-100 to i8*
  %.pre = load i32, i32* @global_var_33684c, align 4
  store i32 %.pre, i32* %.reg2mem
  store i32 0, i32* %storemerge27.reg2mem
  br label %dec_label_pc_1276a

dec_label_pc_1276a:                               ; preds = %dec_label_pc_1276a.lr.ph, %dec_label_pc_12908
  %storemerge27.reload = load i32, i32* %storemerge27.reg2mem
  %.reload = load i32, i32* %.reg2mem, !insn.addr !3650
  %7 = load i32, i32* @global_var_33681c, align 4, !insn.addr !3651
  %8 = mul i32 %.reload, 204, !insn.addr !3652
  %9 = mul i32 %8, %7, !insn.addr !3653
  %10 = call i32* @malloc(i32 %9), !insn.addr !3654
  %11 = ptrtoint i32* %10 to i32, !insn.addr !3654
  %12 = mul i32 %storemerge27.reload, 4, !insn.addr !3655
  %13 = add i32 %12, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 524448), !insn.addr !3656
  %14 = inttoptr i32 %13 to i32*, !insn.addr !3656
  store i32 %11, i32* %14, align 4, !insn.addr !3656
  %15 = icmp eq i32* %10, null, !insn.addr !3657
  br i1 %15, label %dec_label_pc_127be, label %dec_label_pc_128f6.preheader, !insn.addr !3658

dec_label_pc_128f6.preheader:                     ; preds = %dec_label_pc_1276a
  %16 = load i32, i32* @global_var_33684c, align 4, !insn.addr !3659
  %17 = icmp eq i32 %16, 0, !insn.addr !3660
  store i32 0, i32* %storemerge36.reg2mem, !insn.addr !3661
  store i32 0, i32* %.reg2mem16, !insn.addr !3661
  br i1 %17, label %dec_label_pc_12908, label %dec_label_pc_127de, !insn.addr !3661

dec_label_pc_127be:                               ; preds = %dec_label_pc_1276a
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2a208, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2a2a8, i32 0, i32 0)), !insn.addr !3662
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !3663
  br label %dec_label_pc_12a2a, !insn.addr !3663

dec_label_pc_127de:                               ; preds = %dec_label_pc_128f6.preheader, %dec_label_pc_1286e
  %storemerge36.reload = load i32, i32* %storemerge36.reg2mem
  %19 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2a228, i32 0, i32 0), i8* bitcast (i8** @global_var_2b632c to i8*), i32 %storemerge27.reload, i8* bitcast (i8** @global_var_2b636c to i8*), i32 %storemerge36.reload), !insn.addr !3664
  %20 = load i32, i32* @global_var_33684c, align 4, !insn.addr !3665
  %21 = mul i32 %20, %storemerge27.reload, !insn.addr !3666
  %22 = add i32 %21, %storemerge36.reload, !insn.addr !3667
  %23 = call %_IO_FILE* @fopen(i8* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_2a23c, i32 0, i32 0)), !insn.addr !3668
  %24 = ptrtoint %_IO_FILE* %23 to i32, !insn.addr !3668
  %25 = mul i32 %22, 4, !insn.addr !3669
  %26 = add i32 %25, ptrtoint (i32* @global_var_23630c to i32), !insn.addr !3669
  %27 = inttoptr i32 %26 to i32*, !insn.addr !3669
  store i32 %24, i32* %27, align 4, !insn.addr !3669
  %28 = load i32, i32* @global_var_33684c, align 4, !insn.addr !3670
  %29 = mul i32 %28, %storemerge27.reload, !insn.addr !3671
  %30 = add i32 %29, %storemerge36.reload, !insn.addr !3672
  %31 = mul i32 %30, 4, !insn.addr !3673
  %32 = add i32 %31, ptrtoint (i32* @global_var_23630c to i32), !insn.addr !3673
  %33 = inttoptr i32 %32 to i32*, !insn.addr !3673
  %34 = load i32, i32* %33, align 4, !insn.addr !3673
  %35 = icmp eq i32 %34, 0, !insn.addr !3674
  br i1 %35, label %dec_label_pc_12850, label %dec_label_pc_1286e, !insn.addr !3675

dec_label_pc_12850:                               ; preds = %dec_label_pc_127de
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2a240, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2a2a8, i32 0, i32 0), i32* nonnull %stack_var_-100), !insn.addr !3676
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !3677
  br label %dec_label_pc_12a2a, !insn.addr !3677

dec_label_pc_1286e:                               ; preds = %dec_label_pc_127de
  %37 = load i32, i32* @global_var_33681c, align 4, !insn.addr !3678
  %38 = call i32 @get_work(i32 %storemerge27.reload, i32 %storemerge36.reload, i32 %34, i32 %37), !insn.addr !3679
  %39 = add i32 %31, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 525472), !insn.addr !3680
  %40 = inttoptr i32 %39 to i32*, !insn.addr !3680
  store i32 %38, i32* %40, align 4, !insn.addr !3680
  %41 = load i32, i32* @global_var_33684c, align 4, !insn.addr !3681
  %42 = mul i32 %41, %storemerge27.reload, !insn.addr !3682
  %43 = add i32 %42, %storemerge36.reload, !insn.addr !3683
  %44 = mul i32 %43, 4, !insn.addr !3684
  %45 = add i32 %44, ptrtoint (i32* @global_var_23630c to i32), !insn.addr !3684
  %46 = inttoptr i32 %45 to i32*, !insn.addr !3684
  %47 = load i32, i32* %46, align 4, !insn.addr !3684
  %48 = inttoptr i32 %47 to %_IO_FILE*, !insn.addr !3685
  %49 = call i32 @fclose(%_IO_FILE* %48), !insn.addr !3685
  %50 = add i32 %storemerge36.reload, 1, !insn.addr !3686
  %51 = load i32, i32* @global_var_33684c, align 4, !insn.addr !3659
  %52 = icmp ult i32 %51, %50, !insn.addr !3660
  %53 = icmp ne i1 %52, true, !insn.addr !3660
  %54 = icmp eq i32 %51, %50, !insn.addr !3660
  %55 = icmp ne i1 %54, true, !insn.addr !3661
  %56 = icmp eq i1 %53, %55, !insn.addr !3661
  store i32 %50, i32* %storemerge36.reg2mem, !insn.addr !3661
  store i32 %51, i32* %.reg2mem16, !insn.addr !3661
  br i1 %56, label %dec_label_pc_127de, label %dec_label_pc_12908, !insn.addr !3661

dec_label_pc_12908:                               ; preds = %dec_label_pc_1286e, %dec_label_pc_128f6.preheader
  %.reload17 = load i32, i32* %.reg2mem16
  %57 = add i32 %storemerge27.reload, 1, !insn.addr !3687
  %58 = load i32, i32* @global_var_336848, align 4, !insn.addr !3647
  %59 = icmp ult i32 %58, %57, !insn.addr !3648
  %60 = icmp ne i1 %59, true, !insn.addr !3648
  %61 = icmp eq i32 %58, %57, !insn.addr !3648
  %62 = icmp ne i1 %61, true, !insn.addr !3649
  %63 = icmp eq i1 %60, %62, !insn.addr !3649
  store i32 %.reload17, i32* %.reg2mem, !insn.addr !3649
  store i32 %57, i32* %storemerge27.reg2mem, !insn.addr !3649
  store i32 %.reload17, i32* %.reg2mem18, !insn.addr !3649
  store i32 %58, i32* %.reg2mem20, !insn.addr !3649
  br i1 %63, label %dec_label_pc_1276a, label %dec_label_pc_12920, !insn.addr !3649

dec_label_pc_12920:                               ; preds = %dec_label_pc_12908, %dec_label_pc_1271c.dec_label_pc_12920_crit_edge
  %.reload21 = load i32, i32* %.reg2mem20, !insn.addr !3688
  %.reload19 = load i32, i32* %.reg2mem18, !insn.addr !3689
  %64 = load i32, i32* @global_var_2b67ac, align 4, !insn.addr !3690
  store i32 %64, i32* @global_var_3367ac, align 4, !insn.addr !3691
  %65 = mul i32 %.reload21, %.reload19
  %66 = icmp eq i32 %65, 0, !insn.addr !3692
  store i32 %64, i32* %.reg2mem22, !insn.addr !3693
  store i32 0, i32* %storemerge5.reg2mem, !insn.addr !3693
  store i32 0, i32* %stack_var_-24.14.reg2mem, !insn.addr !3693
  store i32 %64, i32* %.reg2mem26, !insn.addr !3693
  store i32 0, i32* %stack_var_-24.1.lcssa.reg2mem, !insn.addr !3693
  br i1 %66, label %dec_label_pc_129ca, label %dec_label_pc_1294e, !insn.addr !3693

dec_label_pc_1294e:                               ; preds = %dec_label_pc_12920, %dec_label_pc_129a6
  %stack_var_-24.14.reload = load i32, i32* %stack_var_-24.14.reg2mem
  %storemerge5.reload = load i32, i32* %storemerge5.reg2mem
  %.reload23 = load i32, i32* %.reg2mem22, !insn.addr !3694
  %67 = mul i32 %storemerge5.reload, 4, !insn.addr !3695
  %68 = add i32 %67, add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 525472), !insn.addr !3696
  %69 = inttoptr i32 %68 to i32*, !insn.addr !3696
  %70 = load i32, i32* %69, align 4, !insn.addr !3696
  %71 = icmp sgt i32 %.reload23, %70, !insn.addr !3697
  store i32 %.reload23, i32* %.reg2mem24, !insn.addr !3697
  store i32 %stack_var_-24.14.reload, i32* %stack_var_-24.0.reg2mem, !insn.addr !3697
  br i1 %71, label %dec_label_pc_1297a, label %dec_label_pc_129a6, !insn.addr !3697

dec_label_pc_1297a:                               ; preds = %dec_label_pc_1294e
  store i32 %70, i32* @global_var_3367ac, align 4, !insn.addr !3698
  store i32 %70, i32* %.reg2mem24, !insn.addr !3699
  store i32 %storemerge5.reload, i32* %stack_var_-24.0.reg2mem, !insn.addr !3699
  br label %dec_label_pc_129a6, !insn.addr !3699

dec_label_pc_129a6:                               ; preds = %dec_label_pc_1294e, %dec_label_pc_1297a
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %.reload25 = load i32, i32* %.reg2mem24
  %72 = add nuw i32 %storemerge5.reload, 1, !insn.addr !3700
  %73 = icmp ult i32 %72, %65, !insn.addr !3692
  store i32 %.reload25, i32* %.reg2mem22, !insn.addr !3693
  store i32 %72, i32* %storemerge5.reg2mem, !insn.addr !3693
  store i32 %stack_var_-24.0.reload, i32* %stack_var_-24.14.reg2mem, !insn.addr !3693
  store i32 %.reload25, i32* %.reg2mem26, !insn.addr !3693
  store i32 %stack_var_-24.0.reload, i32* %stack_var_-24.1.lcssa.reg2mem, !insn.addr !3693
  br i1 %73, label %dec_label_pc_1294e, label %dec_label_pc_129ca, !insn.addr !3693

dec_label_pc_129ca:                               ; preds = %dec_label_pc_129a6, %dec_label_pc_12920
  %.reload27 = load i32, i32* %.reg2mem26, !insn.addr !3701
  %74 = load i32, i32* @global_var_33681c, align 4, !insn.addr !3702
  %75 = icmp ult i32 %74, %.reload27, !insn.addr !3703
  %76 = icmp ne i1 %75, true, !insn.addr !3703
  %77 = icmp eq i32 %74, %.reload27, !insn.addr !3703
  %78 = icmp ne i1 %76, true, !insn.addr !3704
  %79 = or i1 %77, %78, !insn.addr !3704
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !3704
  br i1 %79, label %dec_label_pc_12a2a, label %dec_label_pc_129ea, !insn.addr !3704

dec_label_pc_129ea:                               ; preds = %dec_label_pc_129ca
  %stack_var_-24.1.lcssa.reload = load i32, i32* %stack_var_-24.1.lcssa.reg2mem
  %80 = call i32 @write_lcd(i32 1, i32 ptrtoint ([14 x i8]* @global_var_2a260 to i32), i32 13), !insn.addr !3705
  %81 = load i32, i32* @global_var_3367ac, align 4, !insn.addr !3706
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @global_var_2a270, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2a2a8, i32 0, i32 0), i32 %stack_var_-24.1.lcssa.reload, i32 %81), !insn.addr !3707
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !3708
  br label %dec_label_pc_12a2a, !insn.addr !3708

dec_label_pc_12a2a:                               ; preds = %dec_label_pc_129ca, %dec_label_pc_129ea, %dec_label_pc_12850, %dec_label_pc_127be
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !3709

; uselistorder directives
  uselistorder i32 %74, { 1, 0 }
  uselistorder i32 %.reload27, { 1, 0 }
  uselistorder i32 %storemerge5.reload, { 1, 0, 2 }
  uselistorder i32 %58, { 0, 2, 1 }
  uselistorder i32 %57, { 0, 2, 1 }
  uselistorder i32 %51, { 0, 2, 1 }
  uselistorder i32 %50, { 0, 2, 1 }
  uselistorder i32 %31, { 1, 0 }
  uselistorder i32 %storemerge36.reload, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %storemerge27.reload, { 2, 5, 0, 4, 3, 1, 6 }
  uselistorder i32* %.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge27.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge36.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem22, { 2, 0, 1 }
  uselistorder i32* %storemerge5.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-24.14.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem24, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @write_lcd, { 15, 16, 13, 14, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_3367ac, { 2, 0, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 525472), { 1, 0 }
  uselistorder i32 (i8*, i8*, ...)* @sprintf, { 11, 9, 15, 14, 13, 12, 10, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23630c to i32), { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23630c to i32), i32 524448), { 0, 1, 2, 3, 6, 5, 4, 7, 8, 9 }
  uselistorder i32* @global_var_33681c, { 13, 14, 15, 3, 16, 17, 4, 0, 7, 18, 19, 6, 5, 20, 21, 22, 10, 9, 1, 8, 23, 24, 25, 11, 26, 2, 27, 28, 12 }
  uselistorder i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2a2a8, i32 0, i32 0), { 2, 0, 1, 3 }
  uselistorder i32* @global_var_33684c, { 19, 20, 21, 22, 8, 1, 0, 23, 24, 9, 25, 10, 2, 13, 26, 27, 12, 11, 28, 29, 30, 31, 32, 17, 33, 16, 3, 15, 34, 14, 35, 5, 6, 4, 36, 37, 38, 7, 39, 40, 41, 42, 43, 44, 18 }
  uselistorder i32* @global_var_336848, { 10, 2, 11, 12, 13, 14, 15, 6, 16, 5, 17, 4, 18, 3, 19, 20, 0, 7, 21, 1, 8, 22, 23, 24, 25, 26, 27, 28, 9, 29, 30, 31, 32 }
  uselistorder label %dec_label_pc_12a2a, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_129a6, { 1, 0 }
  uselistorder label %dec_label_pc_1294e, { 1, 0 }
  uselistorder label %dec_label_pc_127de, { 1, 0 }
  uselistorder label %dec_label_pc_1276a, { 1, 0 }
}

define i32 @write_pic(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12a3c:
  %stack_var_-11 = alloca i32, align 4
  %0 = mul i32 %arg3, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !3710
  store i32 %1, i32* %stack_var_-11, align 4, !insn.addr !3710
  %2 = bitcast i32* %stack_var_-11 to i8*, !insn.addr !3711
  %3 = call i32 @iic_i2c_write(i8* nonnull %2, i32 1), !insn.addr !3711
  ret i32 %3, !insn.addr !3712

; uselistorder directives
  uselistorder i32* %stack_var_-11, { 1, 0 }
}

define i32 @read_pic(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a60:
  %stack_var_-9 = alloca i8, align 1
  store i8 0, i8* %stack_var_-9, align 1, !insn.addr !3713
  %0 = call i32 @iic_i2c_read(i8* nonnull %stack_var_-9, i32 1), !insn.addr !3714
  %1 = load i8, i8* %stack_var_-9, align 1, !insn.addr !3715
  %2 = zext i8 %1 to i32, !insn.addr !3715
  ret i32 %2, !insn.addr !3716

; uselistorder directives
  uselistorder i8* %stack_var_-9, { 1, 0, 2 }
}

define i32 @set_PIC16F1704_flash_point32_ter(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12a8c:
  %0 = alloca i8
  %storemerge36.reg2mem = alloca i8, !insn.addr !3717
  %storemerge47.reg2mem = alloca i8, !insn.addr !3717
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %2 = urem i32 %arg2, 256
  %3 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3718
  %4 = urem i32 %arg1, 256
  %5 = ptrtoint i32* %stack_var_-16 to i32
  %6 = add i32 %5, -20, !insn.addr !3719
  store i8 0, i8* %storemerge47.reg2mem
  br label %dec_label_pc_12b14

dec_label_pc_12b14:                               ; preds = %dec_label_pc_12a8c, %dec_label_pc_12b14
  %storemerge47.reload = load i8, i8* %storemerge47.reg2mem
  %7 = zext i8 %storemerge47.reload to i32, !insn.addr !3720
  %8 = add i32 %6, %7, !insn.addr !3721
  %9 = inttoptr i32 %8 to i8*, !insn.addr !3721
  %10 = load i8, i8* %9, align 1, !insn.addr !3721
  %11 = zext i8 %10 to i32, !insn.addr !3721
  %12 = call i32 @write_pic(i32 %4, i32 %2, i32 %11), !insn.addr !3722
  %13 = add i8 %storemerge47.reload, 1, !insn.addr !3723
  %14 = icmp ult i8 %13, 7, !insn.addr !3724
  %15 = icmp ne i1 %14, true, !insn.addr !3724
  %16 = icmp eq i8 %13, 7, !insn.addr !3724
  %17 = icmp ne i1 %15, true, !insn.addr !3725
  %18 = or i1 %16, %17, !insn.addr !3725
  store i8 %13, i8* %storemerge47.reg2mem, !insn.addr !3725
  br i1 %18, label %dec_label_pc_12b14, label %dec_label_pc_12b3c, !insn.addr !3725

dec_label_pc_12b3c:                               ; preds = %dec_label_pc_12b14
  %19 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !3726
  %20 = add i32 %5, -12
  store i8 0, i8* %storemerge36.reg2mem
  br label %dec_label_pc_12b4e

dec_label_pc_12b4e:                               ; preds = %dec_label_pc_12b3c, %dec_label_pc_12b4e
  %storemerge36.reload = load i8, i8* %storemerge36.reg2mem
  %21 = zext i8 %storemerge36.reload to i32, !insn.addr !3727
  %22 = call i32 @read_pic(i32 %4, i32 %2), !insn.addr !3728
  %23 = trunc i32 %22 to i8, !insn.addr !3729
  %24 = add i32 %20, %21, !insn.addr !3729
  %25 = inttoptr i32 %24 to i8*, !insn.addr !3729
  store i8 %23, i8* %25, align 1, !insn.addr !3729
  %26 = add i8 %storemerge36.reload, 1, !insn.addr !3730
  %27 = icmp eq i8 %26, 0, !insn.addr !3731
  %28 = icmp ne i1 %27, true, !insn.addr !3731
  %29 = icmp eq i8 %storemerge36.reload, 0, !insn.addr !3731
  %30 = icmp ne i1 %28, true, !insn.addr !3732
  %31 = or i1 %29, %30, !insn.addr !3732
  store i8 %26, i8* %storemerge36.reg2mem, !insn.addr !3732
  br i1 %31, label %dec_label_pc_12b4e, label %dec_label_pc_12b78, !insn.addr !3732

dec_label_pc_12b78:                               ; preds = %dec_label_pc_12b4e
  %32 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !3733
  %33 = zext i8 %1 to i32, !insn.addr !3734
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2a2c0, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_2aec4, i32 0, i32 0), i32 255, i32 %33), !insn.addr !3735
  ret i32 0, !insn.addr !3736

; uselistorder directives
  uselistorder i8 %storemerge36.reload, { 2, 0, 1 }
  uselistorder i32 %4, { 1, 0 }
  uselistorder i32 %2, { 1, 0 }
  uselistorder i8* %storemerge47.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge36.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12b4e, { 1, 0 }
  uselistorder label %dec_label_pc_12b14, { 1, 0 }
}

define i32 @send_data_to_PIC16F1704(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_12bd0:
  %0 = alloca i8
  %storemerge38.reg2mem = alloca i8, !insn.addr !3737
  %storemerge49.reg2mem = alloca i8, !insn.addr !3737
  %storemerge510.reg2mem = alloca i8, !insn.addr !3737
  %storemerge6.reg2mem = alloca i8, !insn.addr !3737
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  store i8 0, i8* %storemerge6.reg2mem, !insn.addr !3738
  br label %dec_label_pc_12c52, !insn.addr !3738

dec_label_pc_12c52:                               ; preds = %dec_label_pc_12c52, %dec_label_pc_12bd0
  %storemerge6.reload = load i8, i8* %storemerge6.reg2mem
  %2 = icmp ult i8 %storemerge6.reload, 15, !insn.addr !3739
  %3 = icmp ne i1 %2, true, !insn.addr !3739
  %4 = icmp eq i8 %storemerge6.reload, 15, !insn.addr !3739
  %5 = icmp ne i1 %3, true, !insn.addr !3740
  %6 = or i1 %4, %5, !insn.addr !3740
  %7 = add i8 %storemerge6.reload, 1, !insn.addr !3741
  store i8 %7, i8* %storemerge6.reg2mem, !insn.addr !3740
  br i1 %6, label %dec_label_pc_12c52, label %dec_label_pc_12cac.preheader, !insn.addr !3740

dec_label_pc_12cac.preheader:                     ; preds = %dec_label_pc_12c52
  %8 = ptrtoint i32* %arg3 to i32
  %9 = ptrtoint i32* %stack_var_-16 to i32
  %10 = add i32 %9, -32, !insn.addr !3742
  store i8 0, i8* %storemerge510.reg2mem
  br label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %dec_label_pc_12cac.preheader, %dec_label_pc_12c88
  %storemerge510.reload = load i8, i8* %storemerge510.reg2mem
  %11 = zext i8 %storemerge510.reload to i32, !insn.addr !3743
  %12 = add i32 %11, %8, !insn.addr !3744
  %13 = inttoptr i32 %12 to i8*, !insn.addr !3745
  %14 = load i8, i8* %13, align 1, !insn.addr !3745
  %15 = add i32 %10, %11, !insn.addr !3746
  %16 = inttoptr i32 %15 to i8*, !insn.addr !3746
  store i8 %14, i8* %16, align 1, !insn.addr !3746
  %17 = add i8 %storemerge510.reload, 1, !insn.addr !3747
  %18 = icmp ult i8 %17, 15, !insn.addr !3748
  %19 = icmp ne i1 %18, true, !insn.addr !3748
  %20 = icmp eq i8 %17, 15, !insn.addr !3748
  %21 = icmp ne i1 %19, true, !insn.addr !3749
  %22 = or i1 %20, %21, !insn.addr !3749
  store i8 %17, i8* %storemerge510.reg2mem, !insn.addr !3749
  br i1 %22, label %dec_label_pc_12c88, label %dec_label_pc_12cb4, !insn.addr !3749

dec_label_pc_12cb4:                               ; preds = %dec_label_pc_12c88
  %23 = urem i32 %arg2, 256
  %24 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3750
  %25 = urem i32 %arg1, 256
  %26 = add i32 %9, -36, !insn.addr !3751
  store i8 0, i8* %storemerge49.reg2mem
  br label %dec_label_pc_12cd8

dec_label_pc_12cd8:                               ; preds = %dec_label_pc_12cb4, %dec_label_pc_12cd8
  %storemerge49.reload = load i8, i8* %storemerge49.reg2mem
  %27 = zext i8 %storemerge49.reload to i32, !insn.addr !3752
  %28 = add i32 %26, %27, !insn.addr !3753
  %29 = inttoptr i32 %28 to i8*, !insn.addr !3753
  %30 = load i8, i8* %29, align 1, !insn.addr !3753
  %31 = zext i8 %30 to i32, !insn.addr !3753
  %32 = call i32 @write_pic(i32 %25, i32 %23, i32 %31), !insn.addr !3754
  %33 = add i8 %storemerge49.reload, 1, !insn.addr !3755
  %34 = icmp ult i8 %33, 21, !insn.addr !3756
  %35 = icmp ne i1 %34, true, !insn.addr !3756
  %36 = icmp eq i8 %33, 21, !insn.addr !3756
  %37 = icmp ne i1 %35, true, !insn.addr !3757
  %38 = or i1 %36, %37, !insn.addr !3757
  store i8 %33, i8* %storemerge49.reg2mem, !insn.addr !3757
  br i1 %38, label %dec_label_pc_12cd8, label %dec_label_pc_12d08, !insn.addr !3757

dec_label_pc_12d08:                               ; preds = %dec_label_pc_12cd8
  %39 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !3758
  %40 = add i32 %9, -12
  store i8 0, i8* %storemerge38.reg2mem
  br label %dec_label_pc_12d1c

dec_label_pc_12d1c:                               ; preds = %dec_label_pc_12d08, %dec_label_pc_12d1c
  %storemerge38.reload = load i8, i8* %storemerge38.reg2mem
  %41 = zext i8 %storemerge38.reload to i32, !insn.addr !3759
  %42 = call i32 @read_pic(i32 %25, i32 %23), !insn.addr !3760
  %43 = trunc i32 %42 to i8, !insn.addr !3761
  %44 = add i32 %40, %41, !insn.addr !3761
  %45 = inttoptr i32 %44 to i8*, !insn.addr !3761
  store i8 %43, i8* %45, align 1, !insn.addr !3761
  %46 = add i8 %storemerge38.reload, 1, !insn.addr !3762
  %47 = icmp eq i8 %46, 0, !insn.addr !3763
  %48 = icmp ne i1 %47, true, !insn.addr !3763
  %49 = icmp eq i8 %storemerge38.reload, 0, !insn.addr !3763
  %50 = icmp ne i1 %48, true, !insn.addr !3764
  %51 = or i1 %49, %50, !insn.addr !3764
  store i8 %46, i8* %storemerge38.reg2mem, !insn.addr !3764
  br i1 %51, label %dec_label_pc_12d1c, label %dec_label_pc_12d4e, !insn.addr !3764

dec_label_pc_12d4e:                               ; preds = %dec_label_pc_12d1c
  %52 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !3765
  %53 = zext i8 %1 to i32, !insn.addr !3766
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2a2c0, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2aeac, i32 0, i32 0), i32 255, i32 %53), !insn.addr !3767
  ret i32 0, !insn.addr !3768

; uselistorder directives
  uselistorder i8 %storemerge38.reload, { 2, 0, 1 }
  uselistorder i32 %25, { 1, 0 }
  uselistorder i32 %23, { 1, 0 }
  uselistorder i32 %11, { 1, 0 }
  uselistorder i8 %storemerge6.reload, { 2, 0, 1 }
  uselistorder i8* %storemerge6.reg2mem, { 2, 0, 1 }
  uselistorder i8* %storemerge510.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge49.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge38.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12d1c, { 1, 0 }
  uselistorder label %dec_label_pc_12cd8, { 1, 0 }
  uselistorder label %dec_label_pc_12c88, { 1, 0 }
}

define i32 @read_PIC16F1704_flash_point32_ter(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12dac:
  %0 = alloca i8
  %storemerge6.reg2mem = alloca i8, !insn.addr !3769
  %storemerge57.reg2mem = alloca i8, !insn.addr !3769
  %1 = load i8, i8* %0
  %2 = load i8, i8* %0
  %3 = load i8, i8* %0
  %4 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %5 = urem i32 %arg2, 256
  %6 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3770
  %7 = urem i32 %arg1, 256
  %8 = ptrtoint i32* %stack_var_-16 to i32
  %9 = add i32 %8, -24, !insn.addr !3771
  store i8 0, i8* %storemerge57.reg2mem
  br label %dec_label_pc_12e34

dec_label_pc_12e34:                               ; preds = %dec_label_pc_12dac, %dec_label_pc_12e34
  %storemerge57.reload = load i8, i8* %storemerge57.reg2mem
  %10 = zext i8 %storemerge57.reload to i32, !insn.addr !3772
  %11 = add i32 %9, %10, !insn.addr !3773
  %12 = inttoptr i32 %11 to i8*, !insn.addr !3773
  %13 = load i8, i8* %12, align 1, !insn.addr !3773
  %14 = zext i8 %13 to i32, !insn.addr !3773
  %15 = call i32 @write_pic(i32 %7, i32 %5, i32 %14), !insn.addr !3774
  %16 = add i8 %storemerge57.reload, 1, !insn.addr !3775
  %17 = icmp ult i8 %16, 5, !insn.addr !3776
  %18 = icmp ne i1 %17, true, !insn.addr !3776
  %19 = icmp eq i8 %16, 5, !insn.addr !3776
  %20 = icmp ne i1 %18, true, !insn.addr !3777
  %21 = or i1 %19, %20, !insn.addr !3777
  store i8 %16, i8* %storemerge57.reg2mem, !insn.addr !3777
  br i1 %21, label %dec_label_pc_12e34, label %dec_label_pc_12e64, !insn.addr !3777

dec_label_pc_12e64:                               ; preds = %dec_label_pc_12e34
  %22 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !3778
  %23 = add i32 %8, -16
  store i8 0, i8* %storemerge6.reg2mem
  br label %dec_label_pc_12e78

dec_label_pc_12e78:                               ; preds = %dec_label_pc_12e64, %dec_label_pc_12e78
  %storemerge6.reload = load i8, i8* %storemerge6.reg2mem
  %24 = zext i8 %storemerge6.reload to i32, !insn.addr !3779
  %25 = call i32 @read_pic(i32 %7, i32 %5), !insn.addr !3780
  %26 = trunc i32 %25 to i8, !insn.addr !3781
  %27 = add i32 %23, %24, !insn.addr !3781
  %28 = inttoptr i32 %27 to i8*, !insn.addr !3781
  store i8 %26, i8* %28, align 1, !insn.addr !3781
  %29 = add i8 %storemerge6.reload, 1, !insn.addr !3782
  %30 = icmp ult i8 %29, 5, !insn.addr !3783
  %31 = icmp ne i1 %30, true, !insn.addr !3783
  %32 = icmp eq i8 %29, 5, !insn.addr !3783
  %33 = icmp ne i1 %31, true, !insn.addr !3784
  %34 = or i1 %32, %33, !insn.addr !3784
  store i8 %29, i8* %storemerge6.reg2mem, !insn.addr !3784
  br i1 %34, label %dec_label_pc_12e78, label %dec_label_pc_12eaa, !insn.addr !3784

dec_label_pc_12eaa:                               ; preds = %dec_label_pc_12e78
  %35 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !3785
  %36 = zext i8 %4 to i32, !insn.addr !3786
  %37 = zext i8 %2 to i32, !insn.addr !3787
  %38 = zext i8 %1 to i32, !insn.addr !3788
  %39 = sext i8 %3 to i32, !insn.addr !3789
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([173 x i8], [173 x i8]* @global_var_2a31c, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_2ae88, i32 0, i32 0), i32 255, i32 %36, i32 %39, i32 %37, i32 0, i32 %38), !insn.addr !3789
  ret i32 0, !insn.addr !3790

; uselistorder directives
  uselistorder i32 %7, { 1, 0 }
  uselistorder i32 %5, { 1, 0 }
  uselistorder i8* %storemerge57.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge6.reg2mem, { 1, 0, 2 }
  uselistorder i8* %0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_12e78, { 1, 0 }
  uselistorder label %dec_label_pc_12e34, { 1, 0 }
}

define i32 @read_PIC16F1704_flash_data(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12f90:
  %0 = alloca i8
  %storemerge35.reg2mem = alloca i8, !insn.addr !3791
  %storemerge46.reg2mem = alloca i8, !insn.addr !3791
  %1 = load i8, i8* %0
  %2 = load i8, i8* %0
  %3 = load i8, i8* %0
  %4 = load i8, i8* %0
  %5 = load i8, i8* %0
  %6 = load i8, i8* %0
  %7 = load i8, i8* %0
  %8 = load i8, i8* %0
  %9 = load i8, i8* %0
  %10 = load i8, i8* %0
  %11 = load i8, i8* %0
  %12 = load i8, i8* %0
  %13 = load i8, i8* %0
  %14 = load i8, i8* %0
  %15 = load i8, i8* %0
  %stack_var_-40 = alloca i32, align 4
  %16 = urem i32 %arg2, 256
  %17 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3792
  %18 = urem i32 %arg1, 256
  %19 = ptrtoint i32* %stack_var_-40 to i32
  %20 = add i32 %19, -36, !insn.addr !3793
  store i8 0, i8* %storemerge46.reg2mem
  br label %dec_label_pc_1304c

dec_label_pc_1304c:                               ; preds = %dec_label_pc_12f90, %dec_label_pc_1304c
  %storemerge46.reload = load i8, i8* %storemerge46.reg2mem
  %21 = zext i8 %storemerge46.reload to i32, !insn.addr !3794
  %22 = add i32 %20, %21, !insn.addr !3795
  %23 = inttoptr i32 %22 to i8*, !insn.addr !3795
  %24 = load i8, i8* %23, align 1, !insn.addr !3795
  %25 = zext i8 %24 to i32, !insn.addr !3795
  %26 = call i32 @write_pic(i32 %18, i32 %16, i32 %25), !insn.addr !3796
  %27 = add i8 %storemerge46.reload, 1, !insn.addr !3797
  %28 = icmp ult i8 %27, 5, !insn.addr !3798
  %29 = icmp ne i1 %28, true, !insn.addr !3798
  %30 = icmp eq i8 %27, 5, !insn.addr !3798
  %31 = icmp ne i1 %29, true, !insn.addr !3799
  %32 = or i1 %30, %31, !insn.addr !3799
  store i8 %27, i8* %storemerge46.reg2mem, !insn.addr !3799
  br i1 %32, label %dec_label_pc_1304c, label %dec_label_pc_1307e, !insn.addr !3799

dec_label_pc_1307e:                               ; preds = %dec_label_pc_1304c
  %33 = call i32 @usleep(i32 ptrtoint (i32* @global_var_493e0 to i32)), !insn.addr !3800
  %34 = add i32 %19, -28
  store i8 0, i8* %storemerge35.reg2mem
  br label %dec_label_pc_13092

dec_label_pc_13092:                               ; preds = %dec_label_pc_1307e, %dec_label_pc_13092
  %storemerge35.reload = load i8, i8* %storemerge35.reg2mem
  %35 = zext i8 %storemerge35.reload to i32, !insn.addr !3801
  %36 = call i32 @read_pic(i32 %18, i32 %16), !insn.addr !3802
  %37 = trunc i32 %36 to i8, !insn.addr !3803
  %38 = add i32 %34, %35, !insn.addr !3803
  %39 = inttoptr i32 %38 to i8*, !insn.addr !3803
  store i8 %37, i8* %39, align 1, !insn.addr !3803
  %40 = add i8 %storemerge35.reload, 1, !insn.addr !3804
  %41 = icmp ult i8 %40, 19, !insn.addr !3805
  %42 = icmp ne i1 %41, true, !insn.addr !3805
  %43 = icmp eq i8 %40, 19, !insn.addr !3805
  %44 = icmp ne i1 %42, true, !insn.addr !3806
  %45 = or i1 %43, %44, !insn.addr !3806
  store i8 %40, i8* %storemerge35.reg2mem, !insn.addr !3806
  br i1 %45, label %dec_label_pc_13092, label %dec_label_pc_130c6, !insn.addr !3806

dec_label_pc_130c6:                               ; preds = %dec_label_pc_13092
  %46 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !3807
  %47 = zext i8 %15 to i32, !insn.addr !3808
  %48 = zext i8 %13 to i32, !insn.addr !3809
  %49 = zext i8 %12 to i32, !insn.addr !3810
  %50 = zext i8 %11 to i32, !insn.addr !3811
  %51 = zext i8 %10 to i32, !insn.addr !3812
  %52 = zext i8 %9 to i32, !insn.addr !3813
  %53 = zext i8 %8 to i32, !insn.addr !3814
  %54 = zext i8 %7 to i32, !insn.addr !3815
  %55 = zext i8 %6 to i32, !insn.addr !3816
  %56 = zext i8 %5 to i32, !insn.addr !3817
  %57 = zext i8 %4 to i32, !insn.addr !3818
  %58 = zext i8 %3 to i32, !insn.addr !3819
  %59 = zext i8 %2 to i32, !insn.addr !3820
  %60 = zext i8 %1 to i32, !insn.addr !3821
  %61 = sext i8 %14 to i32, !insn.addr !3822
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([570 x i8], [570 x i8]* @global_var_2a408, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_2ae6c, i32 0, i32 0), i32 255, i32 %47, i32 %61, i32 %48, i32 0, i32 %49, i32 %50, i32 %51, i32 0, i32 %52, i32 %53, i32 %54, i32 0, i32 %55, i32 %56, i32 %57, i32 0, i32 %58, i32 %59, i32 %60), !insn.addr !3822
  %63 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !3823
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2a644, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_2ae6c, i32 0, i32 0)), !insn.addr !3824
  ret i32 0, !insn.addr !3825

; uselistorder directives
  uselistorder i32 %18, { 1, 0 }
  uselistorder i32 %16, { 1, 0 }
  uselistorder i8* %storemerge46.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge35.reg2mem, { 1, 0, 2 }
  uselistorder i8* %0, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13092, { 1, 0 }
  uselistorder label %dec_label_pc_1304c, { 1, 0 }
}

define i32 @erase_PIC16F1704_flash(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_132f4:
  %0 = alloca i8
  %storemerge36.reg2mem = alloca i8, !insn.addr !3826
  %storemerge47.reg2mem = alloca i8, !insn.addr !3826
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %2 = urem i32 %arg2, 256
  %3 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3827
  %4 = urem i32 %arg1, 256
  %5 = ptrtoint i32* %stack_var_-16 to i32
  %6 = add i32 %5, -20, !insn.addr !3828
  store i8 0, i8* %storemerge47.reg2mem
  br label %dec_label_pc_13362

dec_label_pc_13362:                               ; preds = %dec_label_pc_132f4, %dec_label_pc_13362
  %storemerge47.reload = load i8, i8* %storemerge47.reg2mem
  %7 = zext i8 %storemerge47.reload to i32, !insn.addr !3829
  %8 = add i32 %6, %7, !insn.addr !3830
  %9 = inttoptr i32 %8 to i8*, !insn.addr !3830
  %10 = load i8, i8* %9, align 1, !insn.addr !3830
  %11 = zext i8 %10 to i32, !insn.addr !3830
  %12 = call i32 @write_pic(i32 %4, i32 %2, i32 %11), !insn.addr !3831
  %13 = add i8 %storemerge47.reload, 1, !insn.addr !3832
  %14 = icmp ult i8 %13, 5, !insn.addr !3833
  %15 = icmp ne i1 %14, true, !insn.addr !3833
  %16 = icmp eq i8 %13, 5, !insn.addr !3833
  %17 = icmp ne i1 %15, true, !insn.addr !3834
  %18 = or i1 %16, %17, !insn.addr !3834
  store i8 %13, i8* %storemerge47.reg2mem, !insn.addr !3834
  br i1 %18, label %dec_label_pc_13362, label %dec_label_pc_1338a, !insn.addr !3834

dec_label_pc_1338a:                               ; preds = %dec_label_pc_13362
  %19 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !3835
  %20 = add i32 %5, -12
  store i8 0, i8* %storemerge36.reg2mem
  br label %dec_label_pc_1339c

dec_label_pc_1339c:                               ; preds = %dec_label_pc_1338a, %dec_label_pc_1339c
  %storemerge36.reload = load i8, i8* %storemerge36.reg2mem
  %21 = zext i8 %storemerge36.reload to i32, !insn.addr !3836
  %22 = call i32 @read_pic(i32 %4, i32 %2), !insn.addr !3837
  %23 = trunc i32 %22 to i8, !insn.addr !3838
  %24 = add i32 %20, %21, !insn.addr !3838
  %25 = inttoptr i32 %24 to i8*, !insn.addr !3838
  store i8 %23, i8* %25, align 1, !insn.addr !3838
  %26 = add i8 %storemerge36.reload, 1, !insn.addr !3839
  %27 = icmp eq i8 %26, 0, !insn.addr !3840
  %28 = icmp ne i1 %27, true, !insn.addr !3840
  %29 = icmp eq i8 %storemerge36.reload, 0, !insn.addr !3840
  %30 = icmp ne i1 %28, true, !insn.addr !3841
  %31 = or i1 %29, %30, !insn.addr !3841
  store i8 %26, i8* %storemerge36.reg2mem, !insn.addr !3841
  br i1 %31, label %dec_label_pc_1339c, label %dec_label_pc_133c6, !insn.addr !3841

dec_label_pc_133c6:                               ; preds = %dec_label_pc_1339c
  %32 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !3842
  %33 = call i32 @usleep(i32 200000), !insn.addr !3843
  %34 = zext i8 %1 to i32, !insn.addr !3844
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2a2c0, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2ae54, i32 0, i32 0), i32 255, i32 %34), !insn.addr !3845
  ret i32 0, !insn.addr !3846

; uselistorder directives
  uselistorder i8 %storemerge36.reload, { 2, 0, 1 }
  uselistorder i32 %4, { 1, 0 }
  uselistorder i32 %2, { 1, 0 }
  uselistorder i8* %storemerge47.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge36.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1339c, { 1, 0 }
  uselistorder label %dec_label_pc_13362, { 1, 0 }
}

define i32 @write_data_int32_to_PIC16F1704_flash(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13428:
  %0 = alloca i8
  %storemerge36.reg2mem = alloca i8, !insn.addr !3847
  %storemerge47.reg2mem = alloca i8, !insn.addr !3847
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %2 = urem i32 %arg2, 256
  %3 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3848
  %4 = urem i32 %arg1, 256
  %5 = ptrtoint i32* %stack_var_-16 to i32
  %6 = add i32 %5, -20, !insn.addr !3849
  store i8 0, i8* %storemerge47.reg2mem
  br label %dec_label_pc_13496

dec_label_pc_13496:                               ; preds = %dec_label_pc_13428, %dec_label_pc_13496
  %storemerge47.reload = load i8, i8* %storemerge47.reg2mem
  %7 = zext i8 %storemerge47.reload to i32, !insn.addr !3850
  %8 = add i32 %6, %7, !insn.addr !3851
  %9 = inttoptr i32 %8 to i8*, !insn.addr !3851
  %10 = load i8, i8* %9, align 1, !insn.addr !3851
  %11 = zext i8 %10 to i32, !insn.addr !3851
  %12 = call i32 @write_pic(i32 %4, i32 %2, i32 %11), !insn.addr !3852
  %13 = add i8 %storemerge47.reload, 1, !insn.addr !3853
  %14 = icmp ult i8 %13, 5, !insn.addr !3854
  %15 = icmp ne i1 %14, true, !insn.addr !3854
  %16 = icmp eq i8 %13, 5, !insn.addr !3854
  %17 = icmp ne i1 %15, true, !insn.addr !3855
  %18 = or i1 %16, %17, !insn.addr !3855
  store i8 %13, i8* %storemerge47.reg2mem, !insn.addr !3855
  br i1 %18, label %dec_label_pc_13496, label %dec_label_pc_134be, !insn.addr !3855

dec_label_pc_134be:                               ; preds = %dec_label_pc_13496
  %19 = call i32 @usleep(i32 200000), !insn.addr !3856
  %20 = add i32 %5, -12
  store i8 0, i8* %storemerge36.reg2mem
  br label %dec_label_pc_134d0

dec_label_pc_134d0:                               ; preds = %dec_label_pc_134be, %dec_label_pc_134d0
  %storemerge36.reload = load i8, i8* %storemerge36.reg2mem
  %21 = zext i8 %storemerge36.reload to i32, !insn.addr !3857
  %22 = call i32 @read_pic(i32 %4, i32 %2), !insn.addr !3858
  %23 = trunc i32 %22 to i8, !insn.addr !3859
  %24 = add i32 %20, %21, !insn.addr !3859
  %25 = inttoptr i32 %24 to i8*, !insn.addr !3859
  store i8 %23, i8* %25, align 1, !insn.addr !3859
  %26 = add i8 %storemerge36.reload, 1, !insn.addr !3860
  %27 = icmp eq i8 %26, 0, !insn.addr !3861
  %28 = icmp ne i1 %27, true, !insn.addr !3861
  %29 = icmp eq i8 %storemerge36.reload, 0, !insn.addr !3861
  %30 = icmp ne i1 %28, true, !insn.addr !3862
  %31 = or i1 %29, %30, !insn.addr !3862
  store i8 %26, i8* %storemerge36.reg2mem, !insn.addr !3862
  br i1 %31, label %dec_label_pc_134d0, label %dec_label_pc_134fa, !insn.addr !3862

dec_label_pc_134fa:                               ; preds = %dec_label_pc_134d0
  %32 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !3863
  %33 = call i32 @usleep(i32 200000), !insn.addr !3864
  %34 = zext i8 %1 to i32, !insn.addr !3865
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2a2c0, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_2ae2c, i32 0, i32 0), i32 255, i32 %34), !insn.addr !3866
  ret i32 0, !insn.addr !3867

; uselistorder directives
  uselistorder i8 %storemerge36.reload, { 2, 0, 1 }
  uselistorder i32 %4, { 1, 0 }
  uselistorder i32 %2, { 1, 0 }
  uselistorder i8* %storemerge47.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge36.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_134d0, { 1, 0 }
  uselistorder label %dec_label_pc_13496, { 1, 0 }
}

define i32 @jump_from_loader_to_app_PIC16F1704(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1355c:
  %0 = alloca i8
  %storemerge36.reg2mem = alloca i8, !insn.addr !3868
  %storemerge47.reg2mem = alloca i8, !insn.addr !3868
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %2 = urem i32 %arg2, 256
  %3 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3869
  %4 = urem i32 %arg1, 256
  %5 = ptrtoint i32* %stack_var_-16 to i32
  %6 = add i32 %5, -20, !insn.addr !3870
  store i8 0, i8* %storemerge47.reg2mem
  br label %dec_label_pc_135ca

dec_label_pc_135ca:                               ; preds = %dec_label_pc_1355c, %dec_label_pc_135ca
  %storemerge47.reload = load i8, i8* %storemerge47.reg2mem
  %7 = zext i8 %storemerge47.reload to i32, !insn.addr !3871
  %8 = add i32 %6, %7, !insn.addr !3872
  %9 = inttoptr i32 %8 to i8*, !insn.addr !3872
  %10 = load i8, i8* %9, align 1, !insn.addr !3872
  %11 = zext i8 %10 to i32, !insn.addr !3872
  %12 = call i32 @write_pic(i32 %2, i32 %4, i32 %11), !insn.addr !3873
  %13 = add i8 %storemerge47.reload, 1, !insn.addr !3874
  %14 = icmp ult i8 %13, 5, !insn.addr !3875
  %15 = icmp ne i1 %14, true, !insn.addr !3875
  %16 = icmp eq i8 %13, 5, !insn.addr !3875
  %17 = icmp ne i1 %15, true, !insn.addr !3876
  %18 = or i1 %16, %17, !insn.addr !3876
  store i8 %13, i8* %storemerge47.reg2mem, !insn.addr !3876
  br i1 %18, label %dec_label_pc_135ca, label %dec_label_pc_135f2, !insn.addr !3876

dec_label_pc_135f2:                               ; preds = %dec_label_pc_135ca
  %19 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !3877
  %20 = add i32 %5, -12
  store i8 0, i8* %storemerge36.reg2mem
  br label %dec_label_pc_13604

dec_label_pc_13604:                               ; preds = %dec_label_pc_135f2, %dec_label_pc_13604
  %storemerge36.reload = load i8, i8* %storemerge36.reg2mem
  %21 = zext i8 %storemerge36.reload to i32, !insn.addr !3878
  %22 = call i32 @read_pic(i32 %2, i32 %4), !insn.addr !3879
  %23 = trunc i32 %22 to i8, !insn.addr !3880
  %24 = add i32 %20, %21, !insn.addr !3880
  %25 = inttoptr i32 %24 to i8*, !insn.addr !3880
  store i8 %23, i8* %25, align 1, !insn.addr !3880
  %26 = add i8 %storemerge36.reload, 1, !insn.addr !3881
  %27 = icmp eq i8 %26, 0, !insn.addr !3882
  %28 = icmp ne i1 %27, true, !insn.addr !3882
  %29 = icmp eq i8 %storemerge36.reload, 0, !insn.addr !3882
  %30 = icmp ne i1 %28, true, !insn.addr !3883
  %31 = or i1 %29, %30, !insn.addr !3883
  store i8 %26, i8* %storemerge36.reg2mem, !insn.addr !3883
  br i1 %31, label %dec_label_pc_13604, label %dec_label_pc_1362e, !insn.addr !3883

dec_label_pc_1362e:                               ; preds = %dec_label_pc_13604
  %32 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !3884
  %33 = call i32 @usleep(i32 ptrtoint (i32* @global_var_493e0 to i32)), !insn.addr !3885
  %34 = zext i8 %1 to i32, !insn.addr !3886
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2a2c0, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_2ae08, i32 0, i32 0), i32 255, i32 %34), !insn.addr !3887
  ret i32 0, !insn.addr !3888

; uselistorder directives
  uselistorder i8 %storemerge36.reload, { 2, 0, 1 }
  uselistorder i32 %4, { 1, 0 }
  uselistorder i32 %2, { 1, 0 }
  uselistorder i8* %storemerge47.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge36.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13604, { 1, 0 }
  uselistorder label %dec_label_pc_135ca, { 1, 0 }
}

define i32 @reset_PIC16F1704_pic(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13690:
  %0 = alloca i8
  %storemerge36.reg2mem = alloca i8, !insn.addr !3889
  %storemerge47.reg2mem = alloca i8, !insn.addr !3889
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %2 = urem i32 %arg2, 256
  %3 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3890
  %4 = urem i32 %arg1, 256
  %5 = ptrtoint i32* %stack_var_-16 to i32
  %6 = add i32 %5, -20, !insn.addr !3891
  store i8 0, i8* %storemerge47.reg2mem
  br label %dec_label_pc_136fe

dec_label_pc_136fe:                               ; preds = %dec_label_pc_13690, %dec_label_pc_136fe
  %storemerge47.reload = load i8, i8* %storemerge47.reg2mem
  %7 = zext i8 %storemerge47.reload to i32, !insn.addr !3892
  %8 = add i32 %6, %7, !insn.addr !3893
  %9 = inttoptr i32 %8 to i8*, !insn.addr !3893
  %10 = load i8, i8* %9, align 1, !insn.addr !3893
  %11 = zext i8 %10 to i32, !insn.addr !3893
  %12 = call i32 @write_pic(i32 %2, i32 %4, i32 %11), !insn.addr !3894
  %13 = add i8 %storemerge47.reload, 1, !insn.addr !3895
  %14 = icmp ult i8 %13, 5, !insn.addr !3896
  %15 = icmp ne i1 %14, true, !insn.addr !3896
  %16 = icmp eq i8 %13, 5, !insn.addr !3896
  %17 = icmp ne i1 %15, true, !insn.addr !3897
  %18 = or i1 %16, %17, !insn.addr !3897
  store i8 %13, i8* %storemerge47.reg2mem, !insn.addr !3897
  br i1 %18, label %dec_label_pc_136fe, label %dec_label_pc_13726, !insn.addr !3897

dec_label_pc_13726:                               ; preds = %dec_label_pc_136fe
  %19 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !3898
  %20 = add i32 %5, -12
  store i8 0, i8* %storemerge36.reg2mem
  br label %dec_label_pc_13738

dec_label_pc_13738:                               ; preds = %dec_label_pc_13726, %dec_label_pc_13738
  %storemerge36.reload = load i8, i8* %storemerge36.reg2mem
  %21 = zext i8 %storemerge36.reload to i32, !insn.addr !3899
  %22 = call i32 @read_pic(i32 %2, i32 %4), !insn.addr !3900
  %23 = trunc i32 %22 to i8, !insn.addr !3901
  %24 = add i32 %20, %21, !insn.addr !3901
  %25 = inttoptr i32 %24 to i8*, !insn.addr !3901
  store i8 %23, i8* %25, align 1, !insn.addr !3901
  %26 = add i8 %storemerge36.reload, 1, !insn.addr !3902
  %27 = icmp eq i8 %26, 0, !insn.addr !3903
  %28 = icmp ne i1 %27, true, !insn.addr !3903
  %29 = icmp eq i8 %storemerge36.reload, 0, !insn.addr !3903
  %30 = icmp ne i1 %28, true, !insn.addr !3904
  %31 = or i1 %29, %30, !insn.addr !3904
  store i8 %26, i8* %storemerge36.reg2mem, !insn.addr !3904
  br i1 %31, label %dec_label_pc_13738, label %dec_label_pc_13762, !insn.addr !3904

dec_label_pc_13762:                               ; preds = %dec_label_pc_13738
  %32 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !3905
  %33 = call i32 @usleep(i32 ptrtoint (i32* @global_var_f4240 to i32)), !insn.addr !3906
  %34 = zext i8 %1 to i32, !insn.addr !3907
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2a2c0, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2adf0, i32 0, i32 0), i32 255, i32 %34), !insn.addr !3908
  ret i32 0, !insn.addr !3909

; uselistorder directives
  uselistorder i8 %storemerge36.reload, { 2, 0, 1 }
  uselistorder i32 %4, { 1, 0 }
  uselistorder i32 %2, { 1, 0 }
  uselistorder i8* %storemerge47.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge36.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13738, { 1, 0 }
  uselistorder label %dec_label_pc_136fe, { 1, 0 }
}

define i32 @set_PIC16F1704_voltage(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_137c4:
  %0 = alloca i8
  %storemerge36.reg2mem = alloca i8, !insn.addr !3910
  %storemerge47.reg2mem = alloca i8, !insn.addr !3910
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %2 = urem i32 %arg2, 256
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2a678, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2add8, i32 0, i32 0)), !insn.addr !3911
  %4 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3912
  %5 = urem i32 %arg1, 256
  %6 = ptrtoint i32* %stack_var_-16 to i32
  %7 = add i32 %6, -20, !insn.addr !3913
  store i8 0, i8* %storemerge47.reg2mem
  br label %dec_label_pc_13864

dec_label_pc_13864:                               ; preds = %dec_label_pc_137c4, %dec_label_pc_13864
  %storemerge47.reload = load i8, i8* %storemerge47.reg2mem
  %8 = zext i8 %storemerge47.reload to i32, !insn.addr !3914
  %9 = add i32 %7, %8, !insn.addr !3915
  %10 = inttoptr i32 %9 to i8*, !insn.addr !3915
  %11 = load i8, i8* %10, align 1, !insn.addr !3915
  %12 = zext i8 %11 to i32, !insn.addr !3915
  %13 = call i32 @write_pic(i32 %2, i32 %5, i32 %12), !insn.addr !3916
  %14 = add i8 %storemerge47.reload, 1, !insn.addr !3917
  %15 = icmp ult i8 %14, 6, !insn.addr !3918
  %16 = icmp ne i1 %15, true, !insn.addr !3918
  %17 = icmp eq i8 %14, 6, !insn.addr !3918
  %18 = icmp ne i1 %16, true, !insn.addr !3919
  %19 = or i1 %17, %18, !insn.addr !3919
  store i8 %14, i8* %storemerge47.reg2mem, !insn.addr !3919
  br i1 %19, label %dec_label_pc_13864, label %dec_label_pc_1388c, !insn.addr !3919

dec_label_pc_1388c:                               ; preds = %dec_label_pc_13864
  %20 = call i32 @usleep(i32 200000), !insn.addr !3920
  %21 = add i32 %6, -12
  store i8 0, i8* %storemerge36.reg2mem
  br label %dec_label_pc_1389e

dec_label_pc_1389e:                               ; preds = %dec_label_pc_1388c, %dec_label_pc_1389e
  %storemerge36.reload = load i8, i8* %storemerge36.reg2mem
  %22 = zext i8 %storemerge36.reload to i32, !insn.addr !3921
  %23 = call i32 @read_pic(i32 %2, i32 %5), !insn.addr !3922
  %24 = trunc i32 %23 to i8, !insn.addr !3923
  %25 = add i32 %21, %22, !insn.addr !3923
  %26 = inttoptr i32 %25 to i8*, !insn.addr !3923
  store i8 %24, i8* %26, align 1, !insn.addr !3923
  %27 = add i8 %storemerge36.reload, 1, !insn.addr !3924
  %28 = icmp eq i8 %27, 0, !insn.addr !3925
  %29 = icmp ne i1 %28, true, !insn.addr !3925
  %30 = icmp eq i8 %storemerge36.reload, 0, !insn.addr !3925
  %31 = icmp ne i1 %29, true, !insn.addr !3926
  %32 = or i1 %30, %31, !insn.addr !3926
  store i8 %27, i8* %storemerge36.reg2mem, !insn.addr !3926
  br i1 %32, label %dec_label_pc_1389e, label %dec_label_pc_138c8, !insn.addr !3926

dec_label_pc_138c8:                               ; preds = %dec_label_pc_1389e
  %33 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !3927
  %34 = call i32 @usleep(i32 200000), !insn.addr !3928
  %35 = zext i8 %1 to i32, !insn.addr !3929
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2a2c0, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2add8, i32 0, i32 0), i32 255, i32 %35), !insn.addr !3930
  ret i32 0, !insn.addr !3931

; uselistorder directives
  uselistorder i8 %storemerge36.reload, { 2, 0, 1 }
  uselistorder i32 %5, { 1, 0 }
  uselistorder i32 %2, { 1, 0 }
  uselistorder i8* %storemerge47.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge36.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1389e, { 1, 0 }
  uselistorder label %dec_label_pc_13864, { 1, 0 }
}

define i32 @write_hash_ID_PIC16F1704(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1392c:
  %0 = alloca i8
  %storemerge38.reg2mem = alloca i8, !insn.addr !3932
  %storemerge49.reg2mem = alloca i8, !insn.addr !3932
  %storemerge510.reg2mem = alloca i8, !insn.addr !3932
  %storemerge6.reg2mem = alloca i8, !insn.addr !3932
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  store i8 0, i8* %storemerge6.reg2mem, !insn.addr !3933
  br label %dec_label_pc_139a8, !insn.addr !3933

dec_label_pc_139a8:                               ; preds = %dec_label_pc_139a8, %dec_label_pc_1392c
  %storemerge6.reload = load i8, i8* %storemerge6.reg2mem
  %2 = icmp ult i8 %storemerge6.reload, 11, !insn.addr !3934
  %3 = icmp ne i1 %2, true, !insn.addr !3934
  %4 = icmp eq i8 %storemerge6.reload, 11, !insn.addr !3934
  %5 = icmp ne i1 %3, true, !insn.addr !3935
  %6 = or i1 %4, %5, !insn.addr !3935
  %7 = add i8 %storemerge6.reload, 1, !insn.addr !3936
  store i8 %7, i8* %storemerge6.reg2mem, !insn.addr !3935
  br i1 %6, label %dec_label_pc_139a8, label %dec_label_pc_13a02.preheader, !insn.addr !3935

dec_label_pc_13a02.preheader:                     ; preds = %dec_label_pc_139a8
  %8 = ptrtoint i32* %stack_var_-16 to i32
  %9 = add i32 %8, -28, !insn.addr !3937
  store i8 0, i8* %storemerge510.reg2mem
  br label %dec_label_pc_139de

dec_label_pc_139de:                               ; preds = %dec_label_pc_13a02.preheader, %dec_label_pc_139de
  %storemerge510.reload = load i8, i8* %storemerge510.reg2mem
  %10 = zext i8 %storemerge510.reload to i32, !insn.addr !3938
  %11 = add i32 %10, %arg3, !insn.addr !3939
  %12 = inttoptr i32 %11 to i8*, !insn.addr !3940
  %13 = load i8, i8* %12, align 1, !insn.addr !3940
  %14 = add i32 %9, %10, !insn.addr !3941
  %15 = inttoptr i32 %14 to i8*, !insn.addr !3941
  store i8 %13, i8* %15, align 1, !insn.addr !3941
  %16 = add i8 %storemerge510.reload, 1, !insn.addr !3942
  %17 = icmp ult i8 %16, 11, !insn.addr !3943
  %18 = icmp ne i1 %17, true, !insn.addr !3943
  %19 = icmp eq i8 %16, 11, !insn.addr !3943
  %20 = icmp ne i1 %18, true, !insn.addr !3944
  %21 = or i1 %19, %20, !insn.addr !3944
  store i8 %16, i8* %storemerge510.reg2mem, !insn.addr !3944
  br i1 %21, label %dec_label_pc_139de, label %dec_label_pc_13a0a, !insn.addr !3944

dec_label_pc_13a0a:                               ; preds = %dec_label_pc_139de
  %22 = urem i32 %arg2, 256
  %23 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3945
  %24 = urem i32 %arg1, 256
  %25 = add i32 %8, -32, !insn.addr !3946
  store i8 0, i8* %storemerge49.reg2mem
  br label %dec_label_pc_13a2e

dec_label_pc_13a2e:                               ; preds = %dec_label_pc_13a0a, %dec_label_pc_13a2e
  %storemerge49.reload = load i8, i8* %storemerge49.reg2mem
  %26 = zext i8 %storemerge49.reload to i32, !insn.addr !3947
  %27 = add i32 %25, %26, !insn.addr !3948
  %28 = inttoptr i32 %27 to i8*, !insn.addr !3948
  %29 = load i8, i8* %28, align 1, !insn.addr !3948
  %30 = zext i8 %29 to i32, !insn.addr !3948
  %31 = call i32 @write_pic(i32 %22, i32 %24, i32 %30), !insn.addr !3949
  %32 = add i8 %storemerge49.reload, 1, !insn.addr !3950
  %33 = icmp ult i8 %32, 17, !insn.addr !3951
  %34 = icmp ne i1 %33, true, !insn.addr !3951
  %35 = icmp eq i8 %32, 17, !insn.addr !3951
  %36 = icmp ne i1 %34, true, !insn.addr !3952
  %37 = or i1 %35, %36, !insn.addr !3952
  store i8 %32, i8* %storemerge49.reg2mem, !insn.addr !3952
  br i1 %37, label %dec_label_pc_13a2e, label %dec_label_pc_13a5e, !insn.addr !3952

dec_label_pc_13a5e:                               ; preds = %dec_label_pc_13a2e
  %38 = call i32 @usleep(i32 ptrtoint (i32* @global_var_61a80 to i32)), !insn.addr !3953
  %39 = add i32 %8, -12
  store i8 0, i8* %storemerge38.reg2mem
  br label %dec_label_pc_13a72

dec_label_pc_13a72:                               ; preds = %dec_label_pc_13a5e, %dec_label_pc_13a72
  %storemerge38.reload = load i8, i8* %storemerge38.reg2mem
  %40 = zext i8 %storemerge38.reload to i32, !insn.addr !3954
  %41 = call i32 @read_pic(i32 %22, i32 %24), !insn.addr !3955
  %42 = trunc i32 %41 to i8, !insn.addr !3956
  %43 = add i32 %39, %40, !insn.addr !3956
  %44 = inttoptr i32 %43 to i8*, !insn.addr !3956
  store i8 %42, i8* %44, align 1, !insn.addr !3956
  %45 = add i8 %storemerge38.reload, 1, !insn.addr !3957
  %46 = icmp eq i8 %45, 0, !insn.addr !3958
  %47 = icmp ne i1 %46, true, !insn.addr !3958
  %48 = icmp eq i8 %storemerge38.reload, 0, !insn.addr !3958
  %49 = icmp ne i1 %47, true, !insn.addr !3959
  %50 = or i1 %48, %49, !insn.addr !3959
  store i8 %45, i8* %storemerge38.reg2mem, !insn.addr !3959
  br i1 %50, label %dec_label_pc_13a72, label %dec_label_pc_13aa4, !insn.addr !3959

dec_label_pc_13aa4:                               ; preds = %dec_label_pc_13a72
  %51 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !3960
  %52 = call i32 @usleep(i32 200000), !insn.addr !3961
  %53 = zext i8 %1 to i32, !insn.addr !3962
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2a2c0, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2adbc, i32 0, i32 0), i32 255, i32 %53), !insn.addr !3963
  ret i32 0, !insn.addr !3964

; uselistorder directives
  uselistorder i8 %storemerge38.reload, { 2, 0, 1 }
  uselistorder i32 %24, { 1, 0 }
  uselistorder i32 %22, { 1, 0 }
  uselistorder i32 %10, { 1, 0 }
  uselistorder i8 %storemerge6.reload, { 2, 0, 1 }
  uselistorder i8* %storemerge6.reg2mem, { 2, 0, 1 }
  uselistorder i8* %storemerge510.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge49.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge38.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13a72, { 1, 0 }
  uselistorder label %dec_label_pc_13a2e, { 1, 0 }
  uselistorder label %dec_label_pc_139de, { 1, 0 }
}

define i32 @read_hash_id_PIC16F1704(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13b10:
  %0 = alloca i8
  %storemerge46.reg2mem = alloca i8, !insn.addr !3965
  %storemerge57.reg2mem = alloca i8, !insn.addr !3965
  %1 = load i8, i8* %0
  %2 = load i8, i8* %0
  %3 = load i8, i8* %0
  %4 = load i8, i8* %0
  %5 = load i8, i8* %0
  %6 = load i8, i8* %0
  %7 = load i8, i8* %0
  %8 = load i8, i8* %0
  %9 = load i8, i8* %0
  %10 = load i8, i8* %0
  %11 = load i8, i8* %0
  %12 = load i8, i8* %0
  %stack_var_-40 = alloca i32, align 4
  %13 = urem i32 %arg2, 256
  %14 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3966
  %15 = urem i32 %arg1, 256
  %16 = ptrtoint i32* %stack_var_-40 to i32
  %17 = add i32 %16, -32, !insn.addr !3967
  store i8 0, i8* %storemerge57.reg2mem
  br label %dec_label_pc_13bae

dec_label_pc_13bae:                               ; preds = %dec_label_pc_13b10, %dec_label_pc_13bae
  %storemerge57.reload = load i8, i8* %storemerge57.reg2mem
  %18 = zext i8 %storemerge57.reload to i32, !insn.addr !3968
  %19 = add i32 %17, %18, !insn.addr !3969
  %20 = inttoptr i32 %19 to i8*, !insn.addr !3969
  %21 = load i8, i8* %20, align 1, !insn.addr !3969
  %22 = zext i8 %21 to i32, !insn.addr !3969
  %23 = call i32 @write_pic(i32 %15, i32 %13, i32 %22), !insn.addr !3970
  %24 = add i8 %storemerge57.reload, 1, !insn.addr !3971
  %25 = icmp ult i8 %24, 5, !insn.addr !3972
  %26 = icmp ne i1 %25, true, !insn.addr !3972
  %27 = icmp eq i8 %24, 5, !insn.addr !3972
  %28 = icmp ne i1 %26, true, !insn.addr !3973
  %29 = or i1 %27, %28, !insn.addr !3973
  store i8 %24, i8* %storemerge57.reg2mem, !insn.addr !3973
  br i1 %29, label %dec_label_pc_13bae, label %dec_label_pc_13bde, !insn.addr !3973

dec_label_pc_13bde:                               ; preds = %dec_label_pc_13bae
  %30 = call i32 @usleep(i32 200000), !insn.addr !3974
  %31 = add i32 %16, -24
  store i8 0, i8* %storemerge46.reg2mem
  br label %dec_label_pc_13bf2

dec_label_pc_13bf2:                               ; preds = %dec_label_pc_13bde, %dec_label_pc_13bf2
  %storemerge46.reload = load i8, i8* %storemerge46.reg2mem
  %32 = zext i8 %storemerge46.reload to i32, !insn.addr !3975
  %33 = call i32 @read_pic(i32 %15, i32 %13), !insn.addr !3976
  %34 = trunc i32 %33 to i8, !insn.addr !3977
  %35 = add i32 %31, %32, !insn.addr !3977
  %36 = inttoptr i32 %35 to i8*, !insn.addr !3977
  store i8 %34, i8* %36, align 1, !insn.addr !3977
  %37 = add i8 %storemerge46.reload, 1, !insn.addr !3978
  %38 = icmp ult i8 %37, 15, !insn.addr !3979
  %39 = icmp ne i1 %38, true, !insn.addr !3979
  %40 = icmp eq i8 %37, 15, !insn.addr !3979
  %41 = icmp ne i1 %39, true, !insn.addr !3980
  %42 = or i1 %40, %41, !insn.addr !3980
  store i8 %37, i8* %storemerge46.reg2mem, !insn.addr !3980
  br i1 %42, label %dec_label_pc_13bf2, label %dec_label_pc_13c24, !insn.addr !3980

dec_label_pc_13c24:                               ; preds = %dec_label_pc_13bf2
  %43 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !3981
  %44 = zext i8 %12 to i32, !insn.addr !3982
  %45 = zext i8 %10 to i32, !insn.addr !3983
  %46 = zext i8 %9 to i32, !insn.addr !3984
  %47 = zext i8 %7 to i32, !insn.addr !3985
  %48 = zext i8 %6 to i32, !insn.addr !3986
  %49 = zext i8 %5 to i32, !insn.addr !3987
  %50 = zext i8 %4 to i32, !insn.addr !3988
  %51 = zext i8 %3 to i32, !insn.addr !3989
  %52 = zext i8 %2 to i32, !insn.addr !3990
  %53 = zext i8 %1 to i32, !insn.addr !3991
  %54 = sext i8 %8 to i32, !insn.addr !3992
  %55 = sext i8 %11 to i32, !insn.addr !3993
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([451 x i8], [451 x i8]* @global_var_2a684, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2ada4, i32 0, i32 0), i32 255, i32 %44, i32 %55, i32 %45, i32 0, i32 %46, i32 %54, i32 %47, i32 0, i32 %48, i32 %49, i32 %50, i32 0, i32 %51, i32 %52, i32 %53), !insn.addr !3993
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2a644, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2ada4, i32 0, i32 0)), !insn.addr !3994
  ret i32 0, !insn.addr !3995

; uselistorder directives
  uselistorder i32 %15, { 1, 0 }
  uselistorder i32 %13, { 1, 0 }
  uselistorder i8* %storemerge57.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge46.reg2mem, { 1, 0, 2 }
  uselistorder i8* %0, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13bf2, { 1, 0 }
  uselistorder label %dec_label_pc_13bae, { 1, 0 }
}

define i32 @enable_PIC16F1704_dc_dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13df8:
  %0 = alloca i8
  %storemerge36.reg2mem = alloca i8, !insn.addr !3996
  %storemerge47.reg2mem = alloca i8, !insn.addr !3996
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %2 = urem i32 %arg2, 256
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2a678, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2ad8c, i32 0, i32 0)), !insn.addr !3997
  %4 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !3998
  %5 = urem i32 %arg1, 256
  %6 = ptrtoint i32* %stack_var_-16 to i32
  %7 = add i32 %6, -20, !insn.addr !3999
  store i8 0, i8* %storemerge47.reg2mem
  br label %dec_label_pc_13e98

dec_label_pc_13e98:                               ; preds = %dec_label_pc_13df8, %dec_label_pc_13e98
  %storemerge47.reload = load i8, i8* %storemerge47.reg2mem
  %8 = zext i8 %storemerge47.reload to i32, !insn.addr !4000
  %9 = add i32 %7, %8, !insn.addr !4001
  %10 = inttoptr i32 %9 to i8*, !insn.addr !4001
  %11 = load i8, i8* %10, align 1, !insn.addr !4001
  %12 = zext i8 %11 to i32, !insn.addr !4001
  %13 = call i32 @write_pic(i32 %2, i32 %5, i32 %12), !insn.addr !4002
  %14 = add i8 %storemerge47.reload, 1, !insn.addr !4003
  %15 = icmp ult i8 %14, 6, !insn.addr !4004
  %16 = icmp ne i1 %15, true, !insn.addr !4004
  %17 = icmp eq i8 %14, 6, !insn.addr !4004
  %18 = icmp ne i1 %16, true, !insn.addr !4005
  %19 = or i1 %17, %18, !insn.addr !4005
  store i8 %14, i8* %storemerge47.reg2mem, !insn.addr !4005
  br i1 %19, label %dec_label_pc_13e98, label %dec_label_pc_13ec0, !insn.addr !4005

dec_label_pc_13ec0:                               ; preds = %dec_label_pc_13e98
  %20 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !4006
  %21 = add i32 %6, -12
  store i8 0, i8* %storemerge36.reg2mem
  br label %dec_label_pc_13ed2

dec_label_pc_13ed2:                               ; preds = %dec_label_pc_13ec0, %dec_label_pc_13ed2
  %storemerge36.reload = load i8, i8* %storemerge36.reg2mem
  %22 = zext i8 %storemerge36.reload to i32, !insn.addr !4007
  %23 = call i32 @read_pic(i32 %2, i32 %5), !insn.addr !4008
  %24 = trunc i32 %23 to i8, !insn.addr !4009
  %25 = add i32 %21, %22, !insn.addr !4009
  %26 = inttoptr i32 %25 to i8*, !insn.addr !4009
  store i8 %24, i8* %26, align 1, !insn.addr !4009
  %27 = add i8 %storemerge36.reload, 1, !insn.addr !4010
  %28 = icmp eq i8 %27, 0, !insn.addr !4011
  %29 = icmp ne i1 %28, true, !insn.addr !4011
  %30 = icmp eq i8 %storemerge36.reload, 0, !insn.addr !4011
  %31 = icmp ne i1 %29, true, !insn.addr !4012
  %32 = or i1 %30, %31, !insn.addr !4012
  store i8 %27, i8* %storemerge36.reg2mem, !insn.addr !4012
  br i1 %32, label %dec_label_pc_13ed2, label %dec_label_pc_13efc, !insn.addr !4012

dec_label_pc_13efc:                               ; preds = %dec_label_pc_13ed2
  %33 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4013
  %34 = zext i8 %1 to i32, !insn.addr !4014
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2a2c0, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2ad8c, i32 0, i32 0), i32 255, i32 %34), !insn.addr !4015
  ret i32 0, !insn.addr !4016

; uselistorder directives
  uselistorder i8 %storemerge36.reload, { 2, 0, 1 }
  uselistorder i32 %5, { 1, 0 }
  uselistorder i32 %2, { 1, 0 }
  uselistorder i8* %storemerge47.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge36.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ed2, { 1, 0 }
  uselistorder label %dec_label_pc_13e98, { 1, 0 }
}

define i32 @heart_beat_PIC16F1704(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13f60:
  %0 = alloca i8
  %storemerge.reg2mem = alloca i32, !insn.addr !4017
  %storemerge25.reg2mem = alloca i8, !insn.addr !4017
  %storemerge36.reg2mem = alloca i8, !insn.addr !4017
  %1 = load i8, i8* %0
  %2 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %3 = urem i32 %arg2, 256
  %4 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !4018
  %5 = urem i32 %arg1, 256
  %6 = ptrtoint i32* %stack_var_-16 to i32
  %7 = add i32 %6, -24, !insn.addr !4019
  store i8 0, i8* %storemerge36.reg2mem
  br label %dec_label_pc_13fd2

dec_label_pc_13fd2:                               ; preds = %dec_label_pc_13f60, %dec_label_pc_13fd2
  %storemerge36.reload = load i8, i8* %storemerge36.reg2mem
  %8 = zext i8 %storemerge36.reload to i32, !insn.addr !4020
  %9 = add i32 %7, %8, !insn.addr !4021
  %10 = inttoptr i32 %9 to i8*, !insn.addr !4021
  %11 = load i8, i8* %10, align 1, !insn.addr !4021
  %12 = zext i8 %11 to i32, !insn.addr !4021
  %13 = call i32 @write_pic(i32 %3, i32 %5, i32 %12), !insn.addr !4022
  %14 = add i8 %storemerge36.reload, 1, !insn.addr !4023
  %15 = icmp ult i8 %14, 5, !insn.addr !4024
  %16 = icmp ne i1 %15, true, !insn.addr !4024
  %17 = icmp eq i8 %14, 5, !insn.addr !4024
  %18 = icmp ne i1 %16, true, !insn.addr !4025
  %19 = or i1 %17, %18, !insn.addr !4025
  store i8 %14, i8* %storemerge36.reg2mem, !insn.addr !4025
  br i1 %19, label %dec_label_pc_13fd2, label %dec_label_pc_13ffa, !insn.addr !4025

dec_label_pc_13ffa:                               ; preds = %dec_label_pc_13fd2
  %20 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !4026
  %21 = add i32 %6, -16
  store i8 0, i8* %storemerge25.reg2mem
  br label %dec_label_pc_1400c

dec_label_pc_1400c:                               ; preds = %dec_label_pc_13ffa, %dec_label_pc_1400c
  %storemerge25.reload = load i8, i8* %storemerge25.reg2mem
  %22 = zext i8 %storemerge25.reload to i32, !insn.addr !4027
  %23 = call i32 @read_pic(i32 %3, i32 %5), !insn.addr !4028
  %24 = trunc i32 %23 to i8, !insn.addr !4029
  %25 = add i32 %21, %22, !insn.addr !4029
  %26 = inttoptr i32 %25 to i8*, !insn.addr !4029
  store i8 %24, i8* %26, align 1, !insn.addr !4029
  %27 = add i8 %storemerge25.reload, 1, !insn.addr !4030
  %28 = icmp ult i8 %27, 5, !insn.addr !4031
  %29 = icmp ne i1 %28, true, !insn.addr !4031
  %30 = icmp eq i8 %27, 5, !insn.addr !4031
  %31 = icmp ne i1 %29, true, !insn.addr !4032
  %32 = or i1 %30, %31, !insn.addr !4032
  store i8 %27, i8* %storemerge25.reg2mem, !insn.addr !4032
  br i1 %32, label %dec_label_pc_1400c, label %dec_label_pc_14036, !insn.addr !4032

dec_label_pc_14036:                               ; preds = %dec_label_pc_1400c
  %33 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4033
  %34 = icmp eq i8 %2, 22, !insn.addr !4034
  %35 = icmp eq i8 %1, 1, !insn.addr !4035
  %or.cond = icmp eq i1 %35, %34
  br i1 %or.cond, label %dec_label_pc_14066, label %dec_label_pc_1404e, !insn.addr !4036

dec_label_pc_1404e:                               ; preds = %dec_label_pc_14036
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2a644, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2ad74, i32 0, i32 0)), !insn.addr !4037
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !4038
  br label %dec_label_pc_1407c, !insn.addr !4038

dec_label_pc_14066:                               ; preds = %dec_label_pc_14036
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2a30c, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2ad74, i32 0, i32 0)), !insn.addr !4039
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !4040
  br label %dec_label_pc_1407c, !insn.addr !4040

dec_label_pc_1407c:                               ; preds = %dec_label_pc_14066, %dec_label_pc_1404e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !4041

; uselistorder directives
  uselistorder i32 %5, { 1, 0 }
  uselistorder i32 %3, { 1, 0 }
  uselistorder i8* %storemerge36.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge25.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i8* %0, { 1, 0 }
  uselistorder label %dec_label_pc_1400c, { 1, 0 }
  uselistorder label %dec_label_pc_13fd2, { 1, 0 }
}

define i32 @pic_heart_beat_func(i32 %arg1) local_unnamed_addr {
dec_label_pc_14088:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = add i32 %arg1, 1, !insn.addr !4042
  %3 = inttoptr i32 %2 to i8*, !insn.addr !4042
  %4 = load i8, i8* %3, align 1, !insn.addr !4042
  %5 = urem i32 %1, 256, !insn.addr !4043
  %6 = zext i8 %4 to i32, !insn.addr !4044
  br label %dec_label_pc_140a0, !insn.addr !4045

dec_label_pc_140a0:                               ; preds = %dec_label_pc_140a0, %dec_label_pc_14088
  %7 = call i32 @heart_beat_PIC16F1704(i32 %5, i32 %6), !insn.addr !4046
  %8 = call i32 @sleep(i32 10), !insn.addr !4047
  br label %dec_label_pc_140a0, !insn.addr !4048
}

define i32 @get_PIC16F1704_software_version(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_140b4:
  %0 = alloca i8
  %storemerge4.reg2mem = alloca i8, !insn.addr !4049
  %storemerge35.reg2mem = alloca i8, !insn.addr !4049
  %1 = load i8, i8* %0
  %2 = load i8, i8* %0
  %3 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %4 = urem i32 %arg2, 256
  %5 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !4050
  %6 = urem i32 %arg1, 256
  %7 = ptrtoint i32* %stack_var_-16 to i32
  %8 = add i32 %7, -24, !insn.addr !4051
  store i8 0, i8* %storemerge35.reg2mem
  br label %dec_label_pc_1413a

dec_label_pc_1413a:                               ; preds = %dec_label_pc_140b4, %dec_label_pc_1413a
  %storemerge35.reload = load i8, i8* %storemerge35.reg2mem
  %9 = zext i8 %storemerge35.reload to i32, !insn.addr !4052
  %10 = add i32 %8, %9, !insn.addr !4053
  %11 = inttoptr i32 %10 to i8*, !insn.addr !4053
  %12 = load i8, i8* %11, align 1, !insn.addr !4053
  %13 = zext i8 %12 to i32, !insn.addr !4053
  %14 = call i32 @write_pic(i32 %6, i32 %4, i32 %13), !insn.addr !4054
  %15 = add i8 %storemerge35.reload, 1, !insn.addr !4055
  %16 = icmp ult i8 %15, 5, !insn.addr !4056
  %17 = icmp ne i1 %16, true, !insn.addr !4056
  %18 = icmp eq i8 %15, 5, !insn.addr !4056
  %19 = icmp ne i1 %17, true, !insn.addr !4057
  %20 = or i1 %18, %19, !insn.addr !4057
  store i8 %15, i8* %storemerge35.reg2mem, !insn.addr !4057
  br i1 %20, label %dec_label_pc_1413a, label %dec_label_pc_1416a, !insn.addr !4057

dec_label_pc_1416a:                               ; preds = %dec_label_pc_1413a
  %21 = call i32 @usleep(i32 200000), !insn.addr !4058
  %22 = add i32 %7, -16
  store i8 0, i8* %storemerge4.reg2mem
  br label %dec_label_pc_1417e

dec_label_pc_1417e:                               ; preds = %dec_label_pc_1416a, %dec_label_pc_1417e
  %storemerge4.reload = load i8, i8* %storemerge4.reg2mem
  %23 = zext i8 %storemerge4.reload to i32, !insn.addr !4059
  %24 = call i32 @read_pic(i32 %6, i32 %4), !insn.addr !4060
  %25 = trunc i32 %24 to i8, !insn.addr !4061
  %26 = add i32 %22, %23, !insn.addr !4061
  %27 = inttoptr i32 %26 to i8*, !insn.addr !4061
  store i8 %25, i8* %27, align 1, !insn.addr !4061
  %28 = add i8 %storemerge4.reload, 1, !insn.addr !4062
  %29 = icmp ult i8 %28, 4, !insn.addr !4063
  %30 = icmp ne i1 %29, true, !insn.addr !4063
  %31 = icmp eq i8 %28, 4, !insn.addr !4063
  %32 = icmp ne i1 %30, true, !insn.addr !4064
  %33 = or i1 %31, %32, !insn.addr !4064
  store i8 %28, i8* %storemerge4.reg2mem, !insn.addr !4064
  br i1 %33, label %dec_label_pc_1417e, label %dec_label_pc_141b0, !insn.addr !4064

dec_label_pc_141b0:                               ; preds = %dec_label_pc_1417e
  %34 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4065
  %35 = call i32 @usleep(i32 200000), !insn.addr !4066
  %36 = zext i8 %3 to i32, !insn.addr !4067
  %37 = zext i8 %1 to i32, !insn.addr !4068
  %38 = sext i8 %2 to i32, !insn.addr !4069
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([138 x i8], [138 x i8]* @global_var_2a848, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2ad54, i32 0, i32 0), i32 255, i32 %36, i32 %38, i32 %37, i32 0), !insn.addr !4069
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2a644, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2ad54, i32 0, i32 0)), !insn.addr !4070
  ret i32 0, !insn.addr !4071

; uselistorder directives
  uselistorder i32 %6, { 1, 0 }
  uselistorder i32 %4, { 1, 0 }
  uselistorder i8* %storemerge35.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge4.reg2mem, { 1, 0, 2 }
  uselistorder i8* %0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1417e, { 1, 0 }
  uselistorder label %dec_label_pc_1413a, { 1, 0 }
}

define i32 @get_PIC16F1704_voltage(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14288:
  %0 = alloca i8
  %storemerge4.reg2mem = alloca i8, !insn.addr !4072
  %storemerge35.reg2mem = alloca i8, !insn.addr !4072
  %1 = load i8, i8* %0
  %2 = load i8, i8* %0
  %3 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %4 = urem i32 %arg2, 256
  %5 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !4073
  %6 = urem i32 %arg1, 256
  %7 = ptrtoint i32* %stack_var_-16 to i32
  %8 = add i32 %7, -24, !insn.addr !4074
  store i8 0, i8* %storemerge35.reg2mem
  br label %dec_label_pc_1430e

dec_label_pc_1430e:                               ; preds = %dec_label_pc_14288, %dec_label_pc_1430e
  %storemerge35.reload = load i8, i8* %storemerge35.reg2mem
  %9 = zext i8 %storemerge35.reload to i32, !insn.addr !4075
  %10 = add i32 %8, %9, !insn.addr !4076
  %11 = inttoptr i32 %10 to i8*, !insn.addr !4076
  %12 = load i8, i8* %11, align 1, !insn.addr !4076
  %13 = zext i8 %12 to i32, !insn.addr !4076
  %14 = call i32 @write_pic(i32 %6, i32 %4, i32 %13), !insn.addr !4077
  %15 = add i8 %storemerge35.reload, 1, !insn.addr !4078
  %16 = icmp ult i8 %15, 5, !insn.addr !4079
  %17 = icmp ne i1 %16, true, !insn.addr !4079
  %18 = icmp eq i8 %15, 5, !insn.addr !4079
  %19 = icmp ne i1 %17, true, !insn.addr !4080
  %20 = or i1 %18, %19, !insn.addr !4080
  store i8 %15, i8* %storemerge35.reg2mem, !insn.addr !4080
  br i1 %20, label %dec_label_pc_1430e, label %dec_label_pc_1433e, !insn.addr !4080

dec_label_pc_1433e:                               ; preds = %dec_label_pc_1430e
  %21 = call i32 @usleep(i32 200000), !insn.addr !4081
  %22 = add i32 %7, -16
  store i8 0, i8* %storemerge4.reg2mem
  br label %dec_label_pc_14352

dec_label_pc_14352:                               ; preds = %dec_label_pc_1433e, %dec_label_pc_14352
  %storemerge4.reload = load i8, i8* %storemerge4.reg2mem
  %23 = zext i8 %storemerge4.reload to i32, !insn.addr !4082
  %24 = call i32 @read_pic(i32 %6, i32 %4), !insn.addr !4083
  %25 = trunc i32 %24 to i8, !insn.addr !4084
  %26 = add i32 %22, %23, !insn.addr !4084
  %27 = inttoptr i32 %26 to i8*, !insn.addr !4084
  store i8 %25, i8* %27, align 1, !insn.addr !4084
  %28 = add i8 %storemerge4.reload, 1, !insn.addr !4085
  %29 = icmp ult i8 %28, 4, !insn.addr !4086
  %30 = icmp ne i1 %29, true, !insn.addr !4086
  %31 = icmp eq i8 %28, 4, !insn.addr !4086
  %32 = icmp ne i1 %30, true, !insn.addr !4087
  %33 = or i1 %31, %32, !insn.addr !4087
  store i8 %28, i8* %storemerge4.reg2mem, !insn.addr !4087
  br i1 %33, label %dec_label_pc_14352, label %dec_label_pc_14384, !insn.addr !4087

dec_label_pc_14384:                               ; preds = %dec_label_pc_14352
  %34 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4088
  %35 = zext i8 %3 to i32, !insn.addr !4089
  %36 = zext i8 %1 to i32, !insn.addr !4090
  %37 = sext i8 %2 to i32, !insn.addr !4091
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([138 x i8], [138 x i8]* @global_var_2a848, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2ad3c, i32 0, i32 0), i32 255, i32 %35, i32 %37, i32 %36, i32 0), !insn.addr !4091
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2a644, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2ad3c, i32 0, i32 0)), !insn.addr !4092
  ret i32 0, !insn.addr !4093

; uselistorder directives
  uselistorder i32 %6, { 1, 0 }
  uselistorder i32 %4, { 1, 0 }
  uselistorder i8* %storemerge35.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge4.reg2mem, { 1, 0, 2 }
  uselistorder i8* %0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14352, { 1, 0 }
  uselistorder label %dec_label_pc_1430e, { 1, 0 }
}

define i32 @write_temperature_offset_PIC16F1704(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14450:
  %0 = alloca i8
  %storemerge38.reg2mem = alloca i8, !insn.addr !4094
  %storemerge49.reg2mem = alloca i8, !insn.addr !4094
  %storemerge510.reg2mem = alloca i8, !insn.addr !4094
  %storemerge6.reg2mem = alloca i8, !insn.addr !4094
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  store i8 0, i8* %storemerge6.reg2mem, !insn.addr !4095
  br label %dec_label_pc_144c6, !insn.addr !4095

dec_label_pc_144c6:                               ; preds = %dec_label_pc_144c6, %dec_label_pc_14450
  %storemerge6.reload = load i8, i8* %storemerge6.reg2mem
  %2 = icmp ult i8 %storemerge6.reload, 7, !insn.addr !4096
  %3 = icmp ne i1 %2, true, !insn.addr !4096
  %4 = icmp eq i8 %storemerge6.reload, 7, !insn.addr !4096
  %5 = icmp ne i1 %3, true, !insn.addr !4097
  %6 = or i1 %4, %5, !insn.addr !4097
  %7 = add i8 %storemerge6.reload, 1, !insn.addr !4098
  store i8 %7, i8* %storemerge6.reg2mem, !insn.addr !4097
  br i1 %6, label %dec_label_pc_144c6, label %dec_label_pc_14520.preheader, !insn.addr !4097

dec_label_pc_14520.preheader:                     ; preds = %dec_label_pc_144c6
  %8 = ptrtoint i32* %stack_var_-16 to i32
  %9 = add i32 %8, -24, !insn.addr !4099
  store i8 0, i8* %storemerge510.reg2mem
  br label %dec_label_pc_144fc

dec_label_pc_144fc:                               ; preds = %dec_label_pc_14520.preheader, %dec_label_pc_144fc
  %storemerge510.reload = load i8, i8* %storemerge510.reg2mem
  %10 = zext i8 %storemerge510.reload to i32, !insn.addr !4100
  %11 = add i32 %10, %arg3, !insn.addr !4101
  %12 = inttoptr i32 %11 to i8*, !insn.addr !4102
  %13 = load i8, i8* %12, align 1, !insn.addr !4102
  %14 = add i32 %9, %10, !insn.addr !4103
  %15 = inttoptr i32 %14 to i8*, !insn.addr !4103
  store i8 %13, i8* %15, align 1, !insn.addr !4103
  %16 = add i8 %storemerge510.reload, 1, !insn.addr !4104
  %17 = icmp ult i8 %16, 7, !insn.addr !4105
  %18 = icmp ne i1 %17, true, !insn.addr !4105
  %19 = icmp eq i8 %16, 7, !insn.addr !4105
  %20 = icmp ne i1 %18, true, !insn.addr !4106
  %21 = or i1 %19, %20, !insn.addr !4106
  store i8 %16, i8* %storemerge510.reg2mem, !insn.addr !4106
  br i1 %21, label %dec_label_pc_144fc, label %dec_label_pc_14528, !insn.addr !4106

dec_label_pc_14528:                               ; preds = %dec_label_pc_144fc
  %22 = urem i32 %arg2, 256
  %23 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !4107
  %24 = urem i32 %arg1, 256
  %25 = add i32 %8, -28, !insn.addr !4108
  store i8 0, i8* %storemerge49.reg2mem
  br label %dec_label_pc_1454c

dec_label_pc_1454c:                               ; preds = %dec_label_pc_14528, %dec_label_pc_1454c
  %storemerge49.reload = load i8, i8* %storemerge49.reg2mem
  %26 = zext i8 %storemerge49.reload to i32, !insn.addr !4109
  %27 = add i32 %25, %26, !insn.addr !4110
  %28 = inttoptr i32 %27 to i8*, !insn.addr !4110
  %29 = load i8, i8* %28, align 1, !insn.addr !4110
  %30 = zext i8 %29 to i32, !insn.addr !4110
  %31 = call i32 @write_pic(i32 %24, i32 %22, i32 %30), !insn.addr !4111
  %32 = add i8 %storemerge49.reload, 1, !insn.addr !4112
  %33 = icmp ult i8 %32, 13, !insn.addr !4113
  %34 = icmp ne i1 %33, true, !insn.addr !4113
  %35 = icmp eq i8 %32, 13, !insn.addr !4113
  %36 = icmp ne i1 %34, true, !insn.addr !4114
  %37 = or i1 %35, %36, !insn.addr !4114
  store i8 %32, i8* %storemerge49.reg2mem, !insn.addr !4114
  br i1 %37, label %dec_label_pc_1454c, label %dec_label_pc_1457c, !insn.addr !4114

dec_label_pc_1457c:                               ; preds = %dec_label_pc_1454c
  %38 = call i32 @usleep(i32 200000), !insn.addr !4115
  %39 = add i32 %8, -12
  store i8 0, i8* %storemerge38.reg2mem
  br label %dec_label_pc_14590

dec_label_pc_14590:                               ; preds = %dec_label_pc_1457c, %dec_label_pc_14590
  %storemerge38.reload = load i8, i8* %storemerge38.reg2mem
  %40 = zext i8 %storemerge38.reload to i32, !insn.addr !4116
  %41 = call i32 @read_pic(i32 %24, i32 %22), !insn.addr !4117
  %42 = trunc i32 %41 to i8, !insn.addr !4118
  %43 = add i32 %39, %40, !insn.addr !4118
  %44 = inttoptr i32 %43 to i8*, !insn.addr !4118
  store i8 %42, i8* %44, align 1, !insn.addr !4118
  %45 = add i8 %storemerge38.reload, 1, !insn.addr !4119
  %46 = icmp eq i8 %45, 0, !insn.addr !4120
  %47 = icmp ne i1 %46, true, !insn.addr !4120
  %48 = icmp eq i8 %storemerge38.reload, 0, !insn.addr !4120
  %49 = icmp ne i1 %47, true, !insn.addr !4121
  %50 = or i1 %48, %49, !insn.addr !4121
  store i8 %45, i8* %storemerge38.reg2mem, !insn.addr !4121
  br i1 %50, label %dec_label_pc_14590, label %dec_label_pc_145c2, !insn.addr !4121

dec_label_pc_145c2:                               ; preds = %dec_label_pc_14590
  %51 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4122
  %52 = call i32 @usleep(i32 200000), !insn.addr !4123
  %53 = zext i8 %1 to i32, !insn.addr !4124
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2a2c0, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_2ad18, i32 0, i32 0), i32 255, i32 %53), !insn.addr !4125
  ret i32 0, !insn.addr !4126

; uselistorder directives
  uselistorder i8 %storemerge38.reload, { 2, 0, 1 }
  uselistorder i32 %24, { 1, 0 }
  uselistorder i32 %22, { 1, 0 }
  uselistorder i32 %10, { 1, 0 }
  uselistorder i8 %storemerge6.reload, { 2, 0, 1 }
  uselistorder i8* %storemerge6.reg2mem, { 2, 0, 1 }
  uselistorder i8* %storemerge510.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge49.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge38.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14590, { 1, 0 }
  uselistorder label %dec_label_pc_1454c, { 1, 0 }
  uselistorder label %dec_label_pc_144fc, { 1, 0 }
}

define i32 @read_temperature_offset_PIC16F1704(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1462c:
  %0 = alloca i8
  %storemerge35.reg2mem = alloca i8, !insn.addr !4127
  %storemerge46.reg2mem = alloca i8, !insn.addr !4127
  %1 = load i8, i8* %0
  %2 = load i8, i8* %0
  %3 = load i8, i8* %0
  %4 = load i8, i8* %0
  %5 = load i8, i8* %0
  %6 = load i8, i8* %0
  %7 = load i8, i8* %0
  %8 = load i8, i8* %0
  %9 = load i8, i8* %0
  %stack_var_-32 = alloca i32, align 4
  %10 = urem i32 %arg2, 256
  %11 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !4128
  %12 = urem i32 %arg1, 256
  %13 = ptrtoint i32* %stack_var_-32 to i32
  %14 = add i32 %13, -28, !insn.addr !4129
  store i8 0, i8* %storemerge46.reg2mem
  br label %dec_label_pc_146c8

dec_label_pc_146c8:                               ; preds = %dec_label_pc_1462c, %dec_label_pc_146c8
  %storemerge46.reload = load i8, i8* %storemerge46.reg2mem
  %15 = zext i8 %storemerge46.reload to i32, !insn.addr !4130
  %16 = add i32 %14, %15, !insn.addr !4131
  %17 = inttoptr i32 %16 to i8*, !insn.addr !4131
  %18 = load i8, i8* %17, align 1, !insn.addr !4131
  %19 = zext i8 %18 to i32, !insn.addr !4131
  %20 = call i32 @write_pic(i32 %12, i32 %10, i32 %19), !insn.addr !4132
  %21 = add i8 %storemerge46.reload, 1, !insn.addr !4133
  %22 = icmp ult i8 %21, 5, !insn.addr !4134
  %23 = icmp ne i1 %22, true, !insn.addr !4134
  %24 = icmp eq i8 %21, 5, !insn.addr !4134
  %25 = icmp ne i1 %23, true, !insn.addr !4135
  %26 = or i1 %24, %25, !insn.addr !4135
  store i8 %21, i8* %storemerge46.reg2mem, !insn.addr !4135
  br i1 %26, label %dec_label_pc_146c8, label %dec_label_pc_146f8, !insn.addr !4135

dec_label_pc_146f8:                               ; preds = %dec_label_pc_146c8
  %27 = call i32 @usleep(i32 200000), !insn.addr !4136
  %28 = add i32 %13, -20
  store i8 0, i8* %storemerge35.reg2mem
  br label %dec_label_pc_1470c

dec_label_pc_1470c:                               ; preds = %dec_label_pc_146f8, %dec_label_pc_1470c
  %storemerge35.reload = load i8, i8* %storemerge35.reg2mem
  %29 = zext i8 %storemerge35.reload to i32, !insn.addr !4137
  %30 = call i32 @read_pic(i32 %12, i32 %10), !insn.addr !4138
  %31 = trunc i32 %30 to i8, !insn.addr !4139
  %32 = add i32 %28, %29, !insn.addr !4139
  %33 = inttoptr i32 %32 to i8*, !insn.addr !4139
  store i8 %31, i8* %33, align 1, !insn.addr !4139
  %34 = add i8 %storemerge35.reload, 1, !insn.addr !4140
  %35 = icmp ult i8 %34, 11, !insn.addr !4141
  %36 = icmp ne i1 %35, true, !insn.addr !4141
  %37 = icmp eq i8 %34, 11, !insn.addr !4141
  %38 = icmp ne i1 %36, true, !insn.addr !4142
  %39 = or i1 %37, %38, !insn.addr !4142
  store i8 %34, i8* %storemerge35.reg2mem, !insn.addr !4142
  br i1 %39, label %dec_label_pc_1470c, label %dec_label_pc_1473e, !insn.addr !4142

dec_label_pc_1473e:                               ; preds = %dec_label_pc_1470c
  %40 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4143
  %41 = zext i8 %9 to i32, !insn.addr !4144
  %42 = zext i8 %7 to i32, !insn.addr !4145
  %43 = zext i8 %6 to i32, !insn.addr !4146
  %44 = zext i8 %5 to i32, !insn.addr !4147
  %45 = zext i8 %4 to i32, !insn.addr !4148
  %46 = zext i8 %3 to i32, !insn.addr !4149
  %47 = zext i8 %2 to i32, !insn.addr !4150
  %48 = zext i8 %1 to i32, !insn.addr !4151
  %49 = sext i8 %8 to i32, !insn.addr !4152
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([338 x i8], [338 x i8]* @global_var_2a914, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_2acf4, i32 0, i32 0), i32 255, i32 %41, i32 %49, i32 %42, i32 0, i32 %43, i32 %44, i32 %45, i32 0, i32 %46, i32 %47, i32 %48), !insn.addr !4152
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2a644, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_2acf4, i32 0, i32 0)), !insn.addr !4153
  ret i32 0, !insn.addr !4154

; uselistorder directives
  uselistorder i32 %12, { 1, 0 }
  uselistorder i32 %10, { 1, 0 }
  uselistorder i8* %storemerge46.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge35.reg2mem, { 1, 0, 2 }
  uselistorder i8* %0, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1470c, { 1, 0 }
  uselistorder label %dec_label_pc_146c8, { 1, 0 }
}

define i32 @erase_PIC16F1704_app_flash(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_148b0:
  %storemerge2.reg2mem = alloca i32, !insn.addr !4155
  %0 = urem i32 %arg2, 256
  %1 = call i32 @set_PIC16F1704_flash_point32_ter(i32 %arg1, i32 %0, i32 6, i32 0), !insn.addr !4156
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2aa68, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_2acd8, i32 0, i32 0), i32 76), !insn.addr !4157
  store i32 0, i32* %storemerge2.reg2mem
  br label %dec_label_pc_14922

dec_label_pc_14922:                               ; preds = %dec_label_pc_148b0, %dec_label_pc_14922
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %3 = call i32 @erase_PIC16F1704_flash(i32 %arg1, i32 %0), !insn.addr !4158
  %4 = add nuw nsw i32 %storemerge2.reload, 1, !insn.addr !4159
  %5 = icmp ult i32 %4, 76, !insn.addr !4160
  store i32 %4, i32* %storemerge2.reg2mem, !insn.addr !4161
  br i1 %5, label %dec_label_pc_14922, label %dec_label_pc_1493a, !insn.addr !4161

dec_label_pc_1493a:                               ; preds = %dec_label_pc_14922
  ret i32 76, !insn.addr !4162

; uselistorder directives
  uselistorder i32* %storemerge2.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14922, { 1, 0 }
}

define i32 @PIC1704_update_pic_app_program(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14944:
  %r3.0.reg2mem = alloca i32, !insn.addr !4163
  %storemerge24.reg2mem = alloca i32, !insn.addr !4163
  %storemerge5.reg2mem = alloca i32, !insn.addr !4163
  %storemerge36.reg2mem = alloca i32, !insn.addr !4163
  %stack_var_-5072 = alloca i32, align 4
  %stack_var_-5056 = alloca i32, align 4
  %stack_var_-5048 = alloca i32, align 4
  %0 = call i32* @memset(i32* nonnull %stack_var_-5048, i32 0, i32 5000), !insn.addr !4164
  store i32 0, i32* %stack_var_-5056, align 4, !insn.addr !4165
  store i32 0, i32* %stack_var_-5072, align 4, !insn.addr !4166
  %1 = call i32 @puts(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2aa80, i32 0, i32 0)), !insn.addr !4167
  %2 = call %_IO_FILE* @fopen(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2aa98, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_2aab8, i32 0, i32 0)), !insn.addr !4168
  %3 = icmp eq %_IO_FILE* %2, null, !insn.addr !4169
  br i1 %3, label %dec_label_pc_14a60, label %dec_label_pc_14a76, !insn.addr !4170

dec_label_pc_14a60:                               ; preds = %dec_label_pc_14944
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_2aabc, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2acb8, i32 0, i32 0)), !insn.addr !4171
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4172
  br label %dec_label_pc_14dce, !insn.addr !4172

dec_label_pc_14a76:                               ; preds = %dec_label_pc_14944
  %5 = urem i32 %arg2, 256
  %6 = call i32 @fseek(%_IO_FILE* nonnull %2, i32 0, i32 0), !insn.addr !4173
  %7 = call i32* @memset(i32* nonnull %stack_var_-5048, i32 0, i32 5000), !insn.addr !4174
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2aae4, i32 0, i32 0), i32 2432), !insn.addr !4175
  %9 = bitcast i32* %stack_var_-5056 to i8*, !insn.addr !4176
  %10 = ptrtoint i32* %stack_var_-5048 to i32
  store i32 0, i32* %storemerge36.reg2mem
  br label %dec_label_pc_14af8

dec_label_pc_14af8:                               ; preds = %dec_label_pc_14a76, %dec_label_pc_14af8
  %storemerge36.reload = load i32, i32* %storemerge36.reg2mem
  %11 = call i8* @fgets(i8* nonnull %9, i32 1023, %_IO_FILE* nonnull %2), !insn.addr !4176
  %12 = call i32 @strtoul(i8* nonnull %9, i8** null, i32 16), !insn.addr !4177
  %13 = mul i32 %storemerge36.reload, 2, !insn.addr !4178
  %14 = udiv i32 %12, 256, !insn.addr !4179
  %15 = trunc i32 %14 to i8, !insn.addr !4180
  %16 = add i32 %13, %10, !insn.addr !4180
  %17 = inttoptr i32 %16 to i8*, !insn.addr !4180
  store i8 %15, i8* %17, align 2, !insn.addr !4180
  %18 = or i32 %13, 1, !insn.addr !4181
  %19 = trunc i32 %12 to i8, !insn.addr !4182
  %20 = add i32 %18, %10, !insn.addr !4182
  %21 = inttoptr i32 %20 to i8*, !insn.addr !4182
  store i8 %19, i8* %21, align 1, !insn.addr !4182
  %22 = add nuw nsw i32 %storemerge36.reload, 1, !insn.addr !4183
  %23 = icmp ult i32 %22, 2432, !insn.addr !4184
  store i32 %22, i32* %storemerge36.reg2mem, !insn.addr !4185
  br i1 %23, label %dec_label_pc_14af8, label %dec_label_pc_14b9a, !insn.addr !4185

dec_label_pc_14b9a:                               ; preds = %dec_label_pc_14af8
  %24 = call i32 @fclose(%_IO_FILE* nonnull %2), !insn.addr !4186
  %25 = call i32 @reset_PIC16F1704_pic(i32 %arg1, i32 %5), !insn.addr !4187
  %26 = icmp eq i32 %25, 0, !insn.addr !4188
  br i1 %26, label %dec_label_pc_14bd2, label %dec_label_pc_14bea, !insn.addr !4189

dec_label_pc_14bd2:                               ; preds = %dec_label_pc_14b9a
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_2aafc, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2acb8, i32 0, i32 0)), !insn.addr !4190
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4191
  br label %dec_label_pc_14dce, !insn.addr !4191

dec_label_pc_14bea:                               ; preds = %dec_label_pc_14b9a
  %28 = call i32 @erase_PIC16F1704_app_flash(i32 %arg1, i32 %5), !insn.addr !4192
  %29 = icmp eq i32 %28, 0, !insn.addr !4193
  br i1 %29, label %dec_label_pc_14c1a, label %dec_label_pc_14c32, !insn.addr !4194

dec_label_pc_14c1a:                               ; preds = %dec_label_pc_14bea
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2ab18, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2acb8, i32 0, i32 0)), !insn.addr !4195
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4196
  br label %dec_label_pc_14dce, !insn.addr !4196

dec_label_pc_14c32:                               ; preds = %dec_label_pc_14bea
  %31 = call i32 @set_PIC16F1704_flash_point32_ter(i32 %arg1, i32 %5, i32 6, i32 0), !insn.addr !4197
  %32 = icmp eq i32 %31, 0, !insn.addr !4198
  br i1 %32, label %dec_label_pc_14c64, label %dec_label_pc_14d6a.preheader, !insn.addr !4199

dec_label_pc_14d6a.preheader:                     ; preds = %dec_label_pc_14c32
  %33 = ptrtoint i32* %stack_var_-5072 to i32
  store i32 0, i32* %storemerge5.reg2mem
  br label %dec_label_pc_14c8a

dec_label_pc_14c64:                               ; preds = %dec_label_pc_14c32
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_2ab38, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2acb8, i32 0, i32 0)), !insn.addr !4200
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4201
  br label %dec_label_pc_14dce, !insn.addr !4201

dec_label_pc_14c8a:                               ; preds = %dec_label_pc_14d6a.preheader, %dec_label_pc_14d20
  %storemerge5.reload = load i32, i32* %storemerge5.reg2mem
  %35 = mul i32 %storemerge5.reload, 16, !insn.addr !4202
  %36 = add i32 %35, %10, !insn.addr !4203
  %37 = inttoptr i32 %36 to i32*, !insn.addr !4204
  %38 = load i32, i32* %37, align 4, !insn.addr !4204
  store i32 %38, i32* %stack_var_-5072, align 4, !insn.addr !4205
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_2ab60, i32 0, i32 0), i32 %storemerge5.reload), !insn.addr !4206
  store i32 0, i32* %storemerge24.reg2mem
  br label %dec_label_pc_14cd2

dec_label_pc_14cd2:                               ; preds = %dec_label_pc_14c8a, %dec_label_pc_14cd2
  %storemerge24.reload = load i32, i32* %storemerge24.reg2mem
  %40 = add i32 %storemerge24.reload, %33, !insn.addr !4207
  %41 = inttoptr i32 %40 to i8*, !insn.addr !4208
  %42 = load i8, i8* %41, align 1, !insn.addr !4208
  %43 = zext i8 %42 to i32, !insn.addr !4208
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2ab7c, i32 0, i32 0), i32 %storemerge24.reload, i32 %43), !insn.addr !4209
  %45 = add i32 %storemerge24.reload, 1, !insn.addr !4210
  %46 = icmp ult i32 %45, 15, !insn.addr !4211
  %47 = icmp ne i1 %46, true, !insn.addr !4211
  %48 = icmp eq i32 %45, 15, !insn.addr !4211
  %49 = icmp ne i1 %47, true, !insn.addr !4212
  %50 = or i1 %48, %49, !insn.addr !4212
  store i32 %45, i32* %storemerge24.reg2mem, !insn.addr !4212
  br i1 %50, label %dec_label_pc_14cd2, label %dec_label_pc_14d20, !insn.addr !4212

dec_label_pc_14d20:                               ; preds = %dec_label_pc_14cd2
  %51 = call i32 @putchar(i32 10), !insn.addr !4213
  %52 = call i32 @send_data_to_PIC16F1704(i32 %arg1, i32 %5, i32* nonnull %stack_var_-5072), !insn.addr !4214
  %53 = call i32 @write_data_int32_to_PIC16F1704_flash(i32 %arg1, i32 %5), !insn.addr !4215
  %54 = add i32 %storemerge5.reload, 1, !insn.addr !4216
  %55 = icmp ugt i32 %54, 304, !insn.addr !4217
  %56 = icmp ne i1 %55, true, !insn.addr !4217
  %57 = icmp eq i32 %54, 304, !insn.addr !4217
  %58 = icmp ne i1 %57, true, !insn.addr !4218
  %59 = icmp eq i1 %56, %58, !insn.addr !4218
  store i32 %54, i32* %storemerge5.reg2mem, !insn.addr !4218
  br i1 %59, label %dec_label_pc_14c8a, label %dec_label_pc_14d86, !insn.addr !4218

dec_label_pc_14d86:                               ; preds = %dec_label_pc_14d20
  %60 = call i32 @reset_PIC16F1704_pic(i32 %arg1, i32 %5), !insn.addr !4219
  %61 = icmp eq i32 %60, 0, !insn.addr !4220
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !4221
  br i1 %61, label %dec_label_pc_14db4, label %dec_label_pc_14dce, !insn.addr !4221

dec_label_pc_14db4:                               ; preds = %dec_label_pc_14d86
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_2aafc, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2acb8, i32 0, i32 0)), !insn.addr !4222
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4223
  br label %dec_label_pc_14dce, !insn.addr !4223

dec_label_pc_14dce:                               ; preds = %dec_label_pc_14d86, %dec_label_pc_14db4, %dec_label_pc_14c64, %dec_label_pc_14c1a, %dec_label_pc_14bd2, %dec_label_pc_14a60
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !4224

; uselistorder directives
  uselistorder i32 %54, { 0, 2, 1 }
  uselistorder i32 %45, { 0, 2, 1 }
  uselistorder i32 %storemerge24.reload, { 1, 0, 2 }
  uselistorder i32 %12, { 1, 0 }
  uselistorder i32 %5, { 5, 3, 4, 2, 1, 0 }
  uselistorder %_IO_FILE* %2, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-5048, { 2, 0, 1 }
  uselistorder i32* %stack_var_-5072, { 0, 2, 1, 3 }
  uselistorder i32* %storemerge36.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge5.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge24.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @set_PIC16F1704_flash_point32_ter, { 1, 0 }
  uselistorder i32 (i32, i32)* @reset_PIC16F1704_pic, { 3, 2, 1, 0 }
  uselistorder i8* (i8*, i32, %_IO_FILE*)* @fgets, { 4, 3, 0, 2, 1 }
  uselistorder i32 2432, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_14dce, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_14cd2, { 1, 0 }
  uselistorder label %dec_label_pc_14c8a, { 1, 0 }
  uselistorder label %dec_label_pc_14af8, { 1, 0 }
}

define i32 @save_freq_PIC16F1704(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14ddc:
  %0 = alloca i8
  %storemerge36.reg2mem = alloca i8, !insn.addr !4225
  %storemerge47.reg2mem = alloca i8, !insn.addr !4225
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %2 = urem i32 %arg2, 256
  %3 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !4226
  %4 = urem i32 %arg1, 256
  %5 = ptrtoint i32* %stack_var_-16 to i32
  %6 = add i32 %5, -20, !insn.addr !4227
  store i8 0, i8* %storemerge47.reg2mem
  br label %dec_label_pc_14e72

dec_label_pc_14e72:                               ; preds = %dec_label_pc_14ddc, %dec_label_pc_14e72
  %storemerge47.reload = load i8, i8* %storemerge47.reg2mem
  %7 = zext i8 %storemerge47.reload to i32, !insn.addr !4228
  %8 = add i32 %6, %7, !insn.addr !4229
  %9 = inttoptr i32 %8 to i8*, !insn.addr !4229
  %10 = load i8, i8* %9, align 1, !insn.addr !4229
  %11 = zext i8 %10 to i32, !insn.addr !4229
  %12 = call i32 @write_pic(i32 %2, i32 %4, i32 %11), !insn.addr !4230
  %13 = add i8 %storemerge47.reload, 1, !insn.addr !4231
  %14 = icmp ult i8 %13, 7, !insn.addr !4232
  %15 = icmp ne i1 %14, true, !insn.addr !4232
  %16 = icmp eq i8 %13, 7, !insn.addr !4232
  %17 = icmp ne i1 %15, true, !insn.addr !4233
  %18 = or i1 %16, %17, !insn.addr !4233
  store i8 %13, i8* %storemerge47.reg2mem, !insn.addr !4233
  br i1 %18, label %dec_label_pc_14e72, label %dec_label_pc_14e9a, !insn.addr !4233

dec_label_pc_14e9a:                               ; preds = %dec_label_pc_14e72
  %19 = call i32 @usleep(i32 ptrtoint (i32* @global_var_493e0 to i32)), !insn.addr !4234
  %20 = add i32 %5, -12
  store i8 0, i8* %storemerge36.reg2mem
  br label %dec_label_pc_14eac

dec_label_pc_14eac:                               ; preds = %dec_label_pc_14e9a, %dec_label_pc_14eac
  %storemerge36.reload = load i8, i8* %storemerge36.reg2mem
  %21 = zext i8 %storemerge36.reload to i32, !insn.addr !4235
  %22 = call i32 @read_pic(i32 %2, i32 %4), !insn.addr !4236
  %23 = trunc i32 %22 to i8, !insn.addr !4237
  %24 = add i32 %20, %21, !insn.addr !4237
  %25 = inttoptr i32 %24 to i8*, !insn.addr !4237
  store i8 %23, i8* %25, align 1, !insn.addr !4237
  %26 = add i8 %storemerge36.reload, 1, !insn.addr !4238
  %27 = icmp eq i8 %26, 0, !insn.addr !4239
  %28 = icmp ne i1 %27, true, !insn.addr !4239
  %29 = icmp eq i8 %storemerge36.reload, 0, !insn.addr !4239
  %30 = icmp ne i1 %28, true, !insn.addr !4240
  %31 = or i1 %29, %30, !insn.addr !4240
  store i8 %26, i8* %storemerge36.reg2mem, !insn.addr !4240
  br i1 %31, label %dec_label_pc_14eac, label %dec_label_pc_14ed6, !insn.addr !4240

dec_label_pc_14ed6:                               ; preds = %dec_label_pc_14eac
  %32 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4241
  %33 = call i32 @usleep(i32 200000), !insn.addr !4242
  %34 = zext i8 %1 to i32, !insn.addr !4243
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2a2c0, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2aca0, i32 0, i32 0), i32 255, i32 %34), !insn.addr !4244
  ret i32 0, !insn.addr !4245

; uselistorder directives
  uselistorder i8 %storemerge36.reload, { 2, 0, 1 }
  uselistorder i32 %4, { 1, 0 }
  uselistorder i32 %2, { 1, 0 }
  uselistorder i8* %storemerge47.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge36.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14eac, { 1, 0 }
  uselistorder label %dec_label_pc_14e72, { 1, 0 }
}

define i32 @get_PIC16F1704_freq(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14f38:
  %0 = alloca i8
  %storemerge5.reg2mem = alloca i8, !insn.addr !4246
  %storemerge46.reg2mem = alloca i8, !insn.addr !4246
  %1 = load i8, i8* %0
  %2 = load i8, i8* %0
  %3 = load i8, i8* %0
  %4 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %5 = urem i32 %arg2, 256
  %6 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !4247
  %7 = urem i32 %arg1, 256
  %8 = ptrtoint i32* %stack_var_-16 to i32
  %9 = add i32 %8, -24, !insn.addr !4248
  store i8 0, i8* %storemerge46.reg2mem
  br label %dec_label_pc_14fbe

dec_label_pc_14fbe:                               ; preds = %dec_label_pc_14f38, %dec_label_pc_14fbe
  %storemerge46.reload = load i8, i8* %storemerge46.reg2mem
  %10 = zext i8 %storemerge46.reload to i32, !insn.addr !4249
  %11 = add i32 %9, %10, !insn.addr !4250
  %12 = inttoptr i32 %11 to i8*, !insn.addr !4250
  %13 = load i8, i8* %12, align 1, !insn.addr !4250
  %14 = zext i8 %13 to i32, !insn.addr !4250
  %15 = call i32 @write_pic(i32 %5, i32 %7, i32 %14), !insn.addr !4251
  %16 = add i8 %storemerge46.reload, 1, !insn.addr !4252
  %17 = icmp ult i8 %16, 5, !insn.addr !4253
  %18 = icmp ne i1 %17, true, !insn.addr !4253
  %19 = icmp eq i8 %16, 5, !insn.addr !4253
  %20 = icmp ne i1 %18, true, !insn.addr !4254
  %21 = or i1 %19, %20, !insn.addr !4254
  store i8 %16, i8* %storemerge46.reg2mem, !insn.addr !4254
  br i1 %21, label %dec_label_pc_14fbe, label %dec_label_pc_14fee, !insn.addr !4254

dec_label_pc_14fee:                               ; preds = %dec_label_pc_14fbe
  %22 = call i32 @usleep(i32 ptrtoint (i32* @global_var_493e0 to i32)), !insn.addr !4255
  %23 = add i32 %8, -16
  store i8 0, i8* %storemerge5.reg2mem
  br label %dec_label_pc_15002

dec_label_pc_15002:                               ; preds = %dec_label_pc_14fee, %dec_label_pc_15002
  %storemerge5.reload = load i8, i8* %storemerge5.reg2mem
  %24 = zext i8 %storemerge5.reload to i32, !insn.addr !4256
  %25 = call i32 @read_pic(i32 %5, i32 %7), !insn.addr !4257
  %26 = trunc i32 %25 to i8, !insn.addr !4258
  %27 = add i32 %23, %24, !insn.addr !4258
  %28 = inttoptr i32 %27 to i8*, !insn.addr !4258
  store i8 %26, i8* %28, align 1, !insn.addr !4258
  %29 = add i8 %storemerge5.reload, 1, !insn.addr !4259
  %30 = icmp ult i8 %29, 5, !insn.addr !4260
  %31 = icmp ne i1 %30, true, !insn.addr !4260
  %32 = icmp eq i8 %29, 5, !insn.addr !4260
  %33 = icmp ne i1 %31, true, !insn.addr !4261
  %34 = or i1 %32, %33, !insn.addr !4261
  store i8 %29, i8* %storemerge5.reg2mem, !insn.addr !4261
  br i1 %34, label %dec_label_pc_15002, label %dec_label_pc_15034, !insn.addr !4261

dec_label_pc_15034:                               ; preds = %dec_label_pc_15002
  %35 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4262
  %36 = call i32 @usleep(i32 200000), !insn.addr !4263
  %37 = zext i8 %4 to i32, !insn.addr !4264
  %38 = zext i8 %2 to i32, !insn.addr !4265
  %39 = zext i8 %1 to i32, !insn.addr !4266
  %40 = sext i8 %3 to i32, !insn.addr !4267
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([164 x i8], [164 x i8]* @global_var_2ab90, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2ac8c, i32 0, i32 0), i32 255, i32 %37, i32 %40, i32 %38, i32 0, i32 %39), !insn.addr !4267
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2a644, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2ac8c, i32 0, i32 0)), !insn.addr !4268
  ret i32 0, !insn.addr !4269

; uselistorder directives
  uselistorder i32 %7, { 1, 0 }
  uselistorder i32 %5, { 1, 0 }
  uselistorder i8* %storemerge46.reg2mem, { 1, 0, 2 }
  uselistorder i8* %storemerge5.reg2mem, { 1, 0, 2 }
  uselistorder i8* %0, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @read_pic, { 18, 17, 16, 15, 14, 13, 12, 2, 11, 10, 9, 1, 0, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @write_pic, { 18, 17, 16, 15, 14, 13, 12, 2, 11, 10, 9, 1, 0, 8, 7, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_15002, { 1, 0 }
  uselistorder label %dec_label_pc_14fbe, { 1, 0 }
}

define i32 @set_temperature_offset_value(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_15124:
  %0 = ptrtoint i8* %arg3 to i32
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2a678, i32 0, i32 0), i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_ac6c to i32), i32 131072) to i8*)), !insn.addr !4270
  %2 = urem i32 %arg2, 256, !insn.addr !4271
  %3 = call i32 @write_temperature_offset_PIC16F1704(i32 %arg1, i32 %2, i32 %0), !insn.addr !4272
  %4 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !4273
  ret i32 %4, !insn.addr !4274
}

define i32 @write_sensor_info_int32_to_pic(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15168:
  %stack_var_-16 = alloca i8, align 1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2a678, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2ac4c, i32 0, i32 0)), !insn.addr !4275
  %1 = load i8, i8* @global_var_3368ac, align 1, !insn.addr !4276
  store i8 %1, i8* %stack_var_-16, align 1, !insn.addr !4277
  %2 = urem i32 %arg2, 256, !insn.addr !4278
  %3 = call i32 @set_temperature_offset_value(i32 %arg1, i32 %2, i8* nonnull %stack_var_-16), !insn.addr !4279
  ret i32 %3, !insn.addr !4280

; uselistorder directives
  uselistorder i8* @global_var_3368ac, { 5, 4, 3, 2, 1, 0 }
}

define i32 @check_chain() local_unnamed_addr {
dec_label_pc_1521c:
  %0 = alloca i32
  %r3.0.reg2mem = alloca i32, !insn.addr !4281
  %1 = load i32, i32* %0
  %stack_var_-300 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2aee8, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2af50, i32 0, i32 0)), !insn.addr !4282
  %3 = call i32 @platform_init(), !insn.addr !4283
  %4 = icmp eq i32 %3, 0, !insn.addr !4284
  br i1 %4, label %dec_label_pc_15252, label %dec_label_pc_15240, !insn.addr !4285

dec_label_pc_15240:                               ; preds = %dec_label_pc_1521c
  %5 = call i32 @puts(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2aef0, i32 0, i32 0)), !insn.addr !4286
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !4287
  br label %dec_label_pc_152f4, !insn.addr !4287

dec_label_pc_15252:                               ; preds = %dec_label_pc_1521c
  %6 = call i32 @get_system_capability(i32* nonnull %stack_var_-300), !insn.addr !4288
  %7 = load i32, i32* %stack_var_-300, align 4, !insn.addr !4289
  switch i32 %7, label %dec_label_pc_152d2 [
    i32 1, label %dec_label_pc_15262
    i32 0, label %dec_label_pc_152e4
  ]

dec_label_pc_15262:                               ; preds = %dec_label_pc_15252
  %8 = trunc i32 %1 to i8, !insn.addr !4290
  store i8 %8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !4290
  %9 = mul i32 %1, 2, !insn.addr !4291
  %10 = and i32 %9, 510, !insn.addr !4292
  %11 = add i32 %10, ptrtoint (i32* @global_var_3367d0 to i32), !insn.addr !4292
  %12 = inttoptr i32 %11 to i8*, !insn.addr !4292
  store i8 %8, i8* %12, align 2, !insn.addr !4292
  %13 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !4293
  %14 = zext i8 %13 to i32, !insn.addr !4293
  %15 = mul i32 %14, 2, !insn.addr !4294
  %16 = add i32 %15, add (i32 ptrtoint (i32* @global_var_3367d0 to i32), i32 1), !insn.addr !4295
  %17 = inttoptr i32 %16 to i8*, !insn.addr !4295
  store i8 0, i8* %17, align 1, !insn.addr !4295
  %18 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !4296
  %19 = zext i8 %18 to i32, !insn.addr !4296
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2af08, i32 0, i32 0), i32 %19), !insn.addr !4297
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4298
  br label %dec_label_pc_152f4, !insn.addr !4298

dec_label_pc_152d2:                               ; preds = %dec_label_pc_15252
  %21 = call i32 @puts(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2af18, i32 0, i32 0)), !insn.addr !4299
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !4300
  br label %dec_label_pc_152f4, !insn.addr !4300

dec_label_pc_152e4:                               ; preds = %dec_label_pc_15252
  %22 = call i32 @puts(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2af38, i32 0, i32 0)), !insn.addr !4301
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !4302
  br label %dec_label_pc_152f4, !insn.addr !4302

dec_label_pc_152f4:                               ; preds = %dec_label_pc_152e4, %dec_label_pc_152d2, %dec_label_pc_15262, %dec_label_pc_15240
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !4303

; uselistorder directives
  uselistorder i32* %stack_var_-300, { 1, 0 }
  uselistorder i32 %1, { 1, 0 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 2, 4, 1 }
}

define i32 @fan_control(i32 %arg1) local_unnamed_addr {
dec_label_pc_15300:
  %0 = load i32, i32* @global_var_235c50, align 4, !insn.addr !4304
  %1 = icmp eq i32 %0, 0, !insn.addr !4305
  br i1 %1, label %dec_label_pc_15318, label %dec_label_pc_1532c, !insn.addr !4306

dec_label_pc_15318:                               ; preds = %dec_label_pc_15300
  %2 = call i32 @pwm_init(i32 0, i32 100), !insn.addr !4307
  store i32 %2, i32* @global_var_235c50, align 4, !insn.addr !4308
  br label %dec_label_pc_1532c, !insn.addr !4308

dec_label_pc_1532c:                               ; preds = %dec_label_pc_15300, %dec_label_pc_15318
  %3 = urem i32 %arg1, 256
  %4 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_af5c to i32), i32 131072) to i8*)), !insn.addr !4309
  %5 = load i32, i32* @global_var_235c50, align 4, !insn.addr !4310
  %6 = call i32 @pwm_set(i32 %5, i32 %3), !insn.addr !4311
  ret i32 %6, !insn.addr !4312

; uselistorder directives
  uselistorder i32* @global_var_235c50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1532c, { 1, 0 }
}

define i32 @set_PWM_according_to_temperature() local_unnamed_addr {
dec_label_pc_1535c:
  %r0.0.reg2mem = alloca i32, !insn.addr !4313
  %0 = load i8, i8* bitcast (i8** @global_var_35530 to i8*), align 4, !insn.addr !4314
  %1 = zext i8 %0 to i32, !insn.addr !4314
  %2 = mul i32 %1, 4, !insn.addr !4315
  %3 = add i32 %2, ptrtoint (i32* @global_var_235bc4 to i32), !insn.addr !4315
  %4 = inttoptr i32 %3 to i32*, !insn.addr !4315
  %5 = load i32, i32* %4, align 4, !insn.addr !4315
  %6 = load i8, i8* @global_var_3368b0, align 1, !insn.addr !4316
  %7 = zext i8 %6 to i32, !insn.addr !4316
  %8 = icmp slt i32 %5, %7, !insn.addr !4317
  br i1 %8, label %dec_label_pc_15388, label %dec_label_pc_15390, !insn.addr !4317

dec_label_pc_15388:                               ; preds = %dec_label_pc_1535c
  %9 = call i32 @fan_control(i32 0), !insn.addr !4318
  store i32 %9, i32* %r0.0.reg2mem, !insn.addr !4319
  br label %dec_label_pc_1542c, !insn.addr !4319

dec_label_pc_15390:                               ; preds = %dec_label_pc_1535c
  %10 = icmp sgt i32 %5, 49, !insn.addr !4320
  br i1 %10, label %dec_label_pc_153b4, label %dec_label_pc_153ac, !insn.addr !4320

dec_label_pc_153ac:                               ; preds = %dec_label_pc_15390
  %11 = call i32 @fan_control(i32 40), !insn.addr !4321
  store i32 %11, i32* %r0.0.reg2mem, !insn.addr !4322
  br label %dec_label_pc_1542c, !insn.addr !4322

dec_label_pc_153b4:                               ; preds = %dec_label_pc_15390
  %12 = load i8, i8* @global_var_3368b1, align 1, !insn.addr !4323
  %13 = zext i8 %12 to i32, !insn.addr !4323
  %14 = icmp slt i32 %5, %13, !insn.addr !4324
  br i1 %14, label %dec_label_pc_153e4, label %dec_label_pc_153dc, !insn.addr !4324

dec_label_pc_153dc:                               ; preds = %dec_label_pc_153b4
  %15 = call i32 @fan_control(i32 100), !insn.addr !4325
  store i32 %15, i32* %r0.0.reg2mem, !insn.addr !4326
  br label %dec_label_pc_1542c, !insn.addr !4326

dec_label_pc_153e4:                               ; preds = %dec_label_pc_153b4
  %16 = mul i32 %5, 60, !insn.addr !4327
  %17 = add i32 %16, -3000, !insn.addr !4328
  %18 = add nsw i32 %13, -50, !insn.addr !4329
  %19 = sdiv i32 %17, %18, !insn.addr !4330
  %20 = add i32 %19, 40, !insn.addr !4331
  %21 = urem i32 %20, 256, !insn.addr !4332
  %22 = call i32 @fan_control(i32 %21), !insn.addr !4333
  store i32 %22, i32* %r0.0.reg2mem, !insn.addr !4333
  br label %dec_label_pc_1542c, !insn.addr !4333

dec_label_pc_1542c:                               ; preds = %dec_label_pc_153e4, %dec_label_pc_153dc, %dec_label_pc_153ac, %dec_label_pc_15388
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !4334

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 3, 2, 1, 4 }
  uselistorder i32 (i32)* @fan_control, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_3368b0, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_35530 to i8*), { 121, 120, 119, 4, 118, 117, 116, 115, 114, 113, 112, 111, 0, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 1, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 2, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 3, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
}

define i32 @znyq_set_iic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15430:
  %storemerge.in.reg2mem = alloca i32, !insn.addr !4335
  %stack_var_4 = alloca i32, align 4
  %stack_var_-9 = alloca i32, align 4
  %0 = urem i32 %arg5, 256
  %1 = urem i32 %arg3, 256, !insn.addr !4336
  %2 = icmp eq i32 %1, 0, !insn.addr !4337
  br i1 %2, label %dec_label_pc_15458, label %dec_label_pc_15444, !insn.addr !4338

dec_label_pc_15444:                               ; preds = %dec_label_pc_15430
  %3 = call i32 @iic_i2c_read_reg(i32 %0, i32* nonnull %stack_var_-9, i32 1), !insn.addr !4339
  %4 = load i32, i32* %stack_var_-9, align 4, !insn.addr !4340
  store i32 %4, i32* %storemerge.in.reg2mem, !insn.addr !4341
  br label %dec_label_pc_1546c, !insn.addr !4341

dec_label_pc_15458:                               ; preds = %dec_label_pc_15430
  %5 = call i32 @iic_i2c_write_reg(i32 %0, i32* nonnull %stack_var_4, i32 1), !insn.addr !4342
  store i32 %5, i32* %storemerge.in.reg2mem, !insn.addr !4343
  br label %dec_label_pc_1546c, !insn.addr !4343

dec_label_pc_1546c:                               ; preds = %dec_label_pc_15458, %dec_label_pc_15444
  %storemerge.in.reload = load i32, i32* %storemerge.in.reg2mem
  %storemerge = urem i32 %storemerge.in.reload, 256
  ret i32 %storemerge, !insn.addr !4344

; uselistorder directives
  uselistorder i32* %stack_var_-9, { 1, 0 }
  uselistorder i32* %storemerge.in.reg2mem, { 0, 2, 1 }
}

define i32 @power_on() local_unnamed_addr {
dec_label_pc_15478:
  %0 = call i32 @access(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2af70, i32 0, i32 0), i32 0), !insn.addr !4345
  %1 = icmp eq i32 %0, -1, !insn.addr !4346
  br i1 %1, label %dec_label_pc_15492, label %dec_label_pc_154b6, !insn.addr !4347

dec_label_pc_15492:                               ; preds = %dec_label_pc_15478
  %2 = call i32 @system(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_2af88, i32 0, i32 0)), !insn.addr !4348
  %3 = call i32 @system(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @global_var_2afac, i32 0, i32 0)), !insn.addr !4349
  %4 = call i32 @puts(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2afdc, i32 0, i32 0)), !insn.addr !4350
  br label %dec_label_pc_154b6, !insn.addr !4350

dec_label_pc_154b6:                               ; preds = %dec_label_pc_15478, %dec_label_pc_15492
  %5 = call i32 @system(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_2afec, i32 0, i32 0)), !insn.addr !4351
  %6 = call i32 @sleep(i32 1), !insn.addr !4352
  ret i32 %6, !insn.addr !4353

; uselistorder directives
  uselistorder label %dec_label_pc_154b6, { 1, 0 }
}

define i32 @power_off() local_unnamed_addr {
dec_label_pc_154cc:
  %0 = call i32 @access(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2af70, i32 0, i32 0), i32 0), !insn.addr !4354
  %1 = icmp eq i32 %0, -1, !insn.addr !4355
  br i1 %1, label %dec_label_pc_154e6, label %dec_label_pc_1550a, !insn.addr !4356

dec_label_pc_154e6:                               ; preds = %dec_label_pc_154cc
  %2 = call i32 @system(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_2af88, i32 0, i32 0)), !insn.addr !4357
  %3 = call i32 @system(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @global_var_2afac, i32 0, i32 0)), !insn.addr !4358
  %4 = call i32 @puts(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2afdc, i32 0, i32 0)), !insn.addr !4359
  br label %dec_label_pc_1550a, !insn.addr !4359

dec_label_pc_1550a:                               ; preds = %dec_label_pc_154cc, %dec_label_pc_154e6
  %5 = call i32 @system(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_2b014, i32 0, i32 0)), !insn.addr !4360
  %6 = call i32 @sleep(i32 1), !insn.addr !4361
  ret i32 %6, !insn.addr !4362

; uselistorder directives
  uselistorder i32 (i32)* @sleep, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder i32 (i8*)* @system, { 8, 7, 6, 11, 10, 9, 12, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1550a, { 1, 0 }
}

define i32 @power_check_protocal_type() local_unnamed_addr {
dec_label_pc_15520:
  %storemerge.reg2mem = alloca i16, !insn.addr !4363
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !4364
  %1 = load i8, i8* @global_var_3554e, align 1, !insn.addr !4365
  %2 = zext i8 %1 to i32, !insn.addr !4365
  %3 = load i8, i8* @global_var_3554f, align 1, !insn.addr !4366
  %4 = zext i8 %3 to i32, !insn.addr !4366
  %5 = call i32 @znyq_set_iic(i32 %2, i32 %4, i32 1, i32 1, i32 0), !insn.addr !4367
  %6 = urem i32 %5, 256, !insn.addr !4368
  %7 = icmp eq i32 %6, 245, !insn.addr !4369
  br i1 %7, label %dec_label_pc_15568, label %dec_label_pc_15586, !insn.addr !4370

dec_label_pc_15568:                               ; preds = %dec_label_pc_15520
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_2b03c, i32 0, i32 0), i32 245), !insn.addr !4371
  store i16 2, i16* %storemerge.reg2mem, !insn.addr !4372
  br label %dec_label_pc_155a2, !insn.addr !4372

dec_label_pc_15586:                               ; preds = %dec_label_pc_15520
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_2b064, i32 0, i32 0), i32 %6), !insn.addr !4373
  store i16 1, i16* %storemerge.reg2mem, !insn.addr !4374
  br label %dec_label_pc_155a2, !insn.addr !4374

dec_label_pc_155a2:                               ; preds = %dec_label_pc_15586, %dec_label_pc_15568
  %storemerge.reload = load i16, i16* %storemerge.reg2mem
  store i16 %storemerge.reload, i16* bitcast (i16** @global_var_3554c to i16*), align 4
  %10 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4375
  ret i32 %10, !insn.addr !4376

; uselistorder directives
  uselistorder i32 %6, { 1, 0 }
  uselistorder i16* %storemerge.reg2mem, { 0, 2, 1 }
}

define i32 @power_init() local_unnamed_addr {
dec_label_pc_155b8:
  %0 = call i32 @puts(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2b08c, i32 0, i32 0)), !insn.addr !4377
  %1 = call i32 @power_check_protocal_type(), !insn.addr !4378
  %2 = call i32 @power_on(), !insn.addr !4379
  ret i32 %2, !insn.addr !4380
}

define i32 @power_check_reply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_155d4:
  %0 = alloca i32
  %r3.0.reg2mem = alloca i32, !insn.addr !4381
  %storemerge24.reg2mem = alloca i16, !insn.addr !4381
  %.reg2mem11 = alloca i32, !insn.addr !4381
  %stack_var_-10.0.lcssa.reg2mem = alloca i32, !insn.addr !4381
  %stack_var_-10.05.reg2mem = alloca i16, !insn.addr !4381
  %storemerge36.reg2mem = alloca i16, !insn.addr !4381
  %.reg2mem9 = alloca i32, !insn.addr !4381
  %storemerge8.reg2mem = alloca i16, !insn.addr !4381
  %.reg2mem = alloca i32, !insn.addr !4381
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = mul i32 %arg3, 16777216
  %4 = ashr exact i32 %3, 24, !insn.addr !4382
  %5 = trunc i32 %2 to i8
  %6 = trunc i32 %1 to i8
  %7 = icmp eq i8 %5, %6, !insn.addr !4383
  br i1 %7, label %dec_label_pc_15602, label %dec_label_pc_1562c, !insn.addr !4384

dec_label_pc_15602:                               ; preds = %dec_label_pc_155d4
  %8 = add i32 %arg1, 1, !insn.addr !4385
  %9 = inttoptr i32 %8 to i8*, !insn.addr !4386
  %10 = load i8, i8* %9, align 1, !insn.addr !4386
  %11 = add i32 %arg2, 1, !insn.addr !4387
  %12 = inttoptr i32 %11 to i8*, !insn.addr !4388
  %13 = load i8, i8* %12, align 1, !insn.addr !4388
  %14 = icmp eq i8 %10, %13, !insn.addr !4389
  br i1 %14, label %dec_label_pc_15612, label %dec_label_pc_1562c, !insn.addr !4390

dec_label_pc_15612:                               ; preds = %dec_label_pc_15602
  %15 = add i32 %arg1, 3, !insn.addr !4391
  %16 = inttoptr i32 %15 to i8*, !insn.addr !4392
  %17 = load i8, i8* %16, align 1, !insn.addr !4392
  %18 = add i32 %arg2, 3, !insn.addr !4393
  %19 = inttoptr i32 %18 to i8*, !insn.addr !4394
  %20 = load i8, i8* %19, align 1, !insn.addr !4394
  %21 = icmp eq i8 %17, %20, !insn.addr !4395
  br i1 %21, label %dec_label_pc_15622, label %dec_label_pc_1562c, !insn.addr !4396

dec_label_pc_15622:                               ; preds = %dec_label_pc_15612
  %22 = add i32 %arg2, 2, !insn.addr !4397
  %23 = inttoptr i32 %22 to i8*, !insn.addr !4398
  %24 = load i8, i8* %23, align 1, !insn.addr !4398
  %25 = zext i8 %24 to i32, !insn.addr !4399
  %26 = add nuw nsw i32 %25, 2, !insn.addr !4400
  %27 = urem i32 %4, 256, !insn.addr !4401
  %28 = icmp eq i32 %26, %27, !insn.addr !4402
  br i1 %28, label %dec_label_pc_1568a.preheader, label %dec_label_pc_1562c, !insn.addr !4403

dec_label_pc_1568a.preheader:                     ; preds = %dec_label_pc_15622
  %29 = icmp ugt i8 %24, 2, !insn.addr !4404
  store i32 2, i32* %.reg2mem9, !insn.addr !4404
  store i16 2, i16* %storemerge36.reg2mem, !insn.addr !4404
  store i16 0, i16* %stack_var_-10.05.reg2mem, !insn.addr !4404
  store i32 0, i32* %stack_var_-10.0.lcssa.reg2mem, !insn.addr !4404
  br i1 %29, label %dec_label_pc_15674, label %dec_label_pc_15694, !insn.addr !4404

dec_label_pc_1562c:                               ; preds = %dec_label_pc_15612, %dec_label_pc_15602, %dec_label_pc_155d4, %dec_label_pc_15622
  %30 = call i32 @puts(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2b09c, i32 0, i32 0)), !insn.addr !4405
  %31 = urem i32 %4, 256, !insn.addr !4406
  %32 = icmp eq i32 %31, 0, !insn.addr !4407
  store i32 0, i32* %.reg2mem, !insn.addr !4408
  store i16 0, i16* %storemerge8.reg2mem, !insn.addr !4408
  br i1 %32, label %dec_label_pc_15664, label %dec_label_pc_1563e, !insn.addr !4408

dec_label_pc_1563e:                               ; preds = %dec_label_pc_1562c, %dec_label_pc_1563e
  %storemerge8.reload = load i16, i16* %storemerge8.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %33 = add i32 %.reload, %arg2, !insn.addr !4409
  %34 = inttoptr i32 %33 to i8*, !insn.addr !4410
  %35 = load i8, i8* %34, align 1, !insn.addr !4410
  %36 = zext i8 %35 to i32, !insn.addr !4410
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b0b4, i32 0, i32 0), i32 %36), !insn.addr !4411
  %38 = add i16 %storemerge8.reload, 1, !insn.addr !4412
  %39 = zext i16 %38 to i32, !insn.addr !4413
  %40 = icmp ugt i32 %31, %39, !insn.addr !4407
  store i32 %39, i32* %.reg2mem, !insn.addr !4408
  store i16 %38, i16* %storemerge8.reg2mem, !insn.addr !4408
  br i1 %40, label %dec_label_pc_1563e, label %dec_label_pc_15664, !insn.addr !4408

dec_label_pc_15664:                               ; preds = %dec_label_pc_1563e, %dec_label_pc_1562c
  %41 = call i32 @putchar(i32 10), !insn.addr !4414
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4415
  br label %dec_label_pc_15704, !insn.addr !4415

dec_label_pc_15674:                               ; preds = %dec_label_pc_1568a.preheader, %dec_label_pc_15674
  %stack_var_-10.05.reload = load i16, i16* %stack_var_-10.05.reg2mem
  %storemerge36.reload = load i16, i16* %storemerge36.reg2mem
  %.reload10 = load i32, i32* %.reg2mem9
  %42 = add i32 %.reload10, %arg2, !insn.addr !4416
  %43 = inttoptr i32 %42 to i8*, !insn.addr !4417
  %44 = load i8, i8* %43, align 1, !insn.addr !4417
  %45 = zext i8 %44 to i16, !insn.addr !4417
  %46 = add i16 %stack_var_-10.05.reload, %45, !insn.addr !4418
  %47 = add i16 %storemerge36.reload, 1, !insn.addr !4419
  %48 = zext i16 %47 to i32, !insn.addr !4420
  %49 = icmp ugt i32 %25, %48, !insn.addr !4404
  store i32 %48, i32* %.reg2mem9, !insn.addr !4404
  store i16 %47, i16* %storemerge36.reg2mem, !insn.addr !4404
  store i16 %46, i16* %stack_var_-10.05.reg2mem, !insn.addr !4404
  br i1 %49, label %dec_label_pc_15674, label %dec_label_pc_1568a.dec_label_pc_15694_crit_edge, !insn.addr !4404

dec_label_pc_1568a.dec_label_pc_15694_crit_edge:  ; preds = %dec_label_pc_15674
  %phitmp = zext i16 %46 to i32
  store i32 %phitmp, i32* %stack_var_-10.0.lcssa.reg2mem
  br label %dec_label_pc_15694

dec_label_pc_15694:                               ; preds = %dec_label_pc_1568a.dec_label_pc_15694_crit_edge, %dec_label_pc_1568a.preheader
  %stack_var_-10.0.lcssa.reload = load i32, i32* %stack_var_-10.0.lcssa.reg2mem
  %50 = add i32 %arg2, -1, !insn.addr !4421
  %51 = add i32 %50, %26, !insn.addr !4422
  %52 = inttoptr i32 %51 to i8*, !insn.addr !4423
  %53 = load i8, i8* %52, align 1, !insn.addr !4423
  %54 = zext i8 %53 to i32, !insn.addr !4423
  %55 = mul i32 %54, 256, !insn.addr !4424
  %56 = add i32 %25, %arg2, !insn.addr !4425
  %57 = inttoptr i32 %56 to i8*, !insn.addr !4426
  %58 = load i8, i8* %57, align 1, !insn.addr !4426
  %59 = zext i8 %58 to i32, !insn.addr !4426
  %60 = or i32 %55, %59, !insn.addr !4427
  %61 = icmp eq i32 %60, %stack_var_-10.0.lcssa.reload, !insn.addr !4428
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !4429
  br i1 %61, label %dec_label_pc_15704, label %dec_label_pc_156d2.lr.ph, !insn.addr !4429

dec_label_pc_156d2.lr.ph:                         ; preds = %dec_label_pc_15694
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_2b0bc, i32 0, i32 0), i32 %stack_var_-10.0.lcssa.reload, i32 %60), !insn.addr !4430
  store i32 0, i32* %.reg2mem11
  store i16 0, i16* %storemerge24.reg2mem
  br label %dec_label_pc_156d2

dec_label_pc_156d2:                               ; preds = %dec_label_pc_156d2.lr.ph, %dec_label_pc_156d2
  %storemerge24.reload = load i16, i16* %storemerge24.reg2mem
  %.reload12 = load i32, i32* %.reg2mem11
  %63 = add i32 %.reload12, %arg2, !insn.addr !4431
  %64 = inttoptr i32 %63 to i8*, !insn.addr !4432
  %65 = load i8, i8* %64, align 1, !insn.addr !4432
  %66 = zext i8 %65 to i32, !insn.addr !4432
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b0b4, i32 0, i32 0), i32 %66), !insn.addr !4433
  %68 = add i16 %storemerge24.reload, 1, !insn.addr !4434
  %69 = zext i16 %68 to i32, !insn.addr !4435
  %70 = icmp ugt i32 %26, %69, !insn.addr !4436
  store i32 %69, i32* %.reg2mem11, !insn.addr !4437
  store i16 %68, i16* %storemerge24.reg2mem, !insn.addr !4437
  br i1 %70, label %dec_label_pc_156d2, label %dec_label_pc_156f8, !insn.addr !4437

dec_label_pc_156f8:                               ; preds = %dec_label_pc_156d2
  %71 = call i32 @putchar(i32 10), !insn.addr !4438
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4439
  br label %dec_label_pc_15704, !insn.addr !4439

dec_label_pc_15704:                               ; preds = %dec_label_pc_15694, %dec_label_pc_156f8, %dec_label_pc_15664
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !4440

; uselistorder directives
  uselistorder i16 %46, { 1, 0 }
  uselistorder i32* %.reg2mem, { 2, 0, 1 }
  uselistorder i16* %storemerge8.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem9, { 2, 0, 1 }
  uselistorder i16* %storemerge36.reg2mem, { 2, 0, 1 }
  uselistorder i16* %stack_var_-10.05.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-10.0.lcssa.reg2mem, { 0, 2, 1 }
  uselistorder i32* %.reg2mem11, { 1, 0, 2 }
  uselistorder i16* %storemerge24.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %0, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 4, 2, 3, 7, 6, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_15704, { 1, 0, 2 }
  uselistorder label %dec_label_pc_156d2, { 1, 0 }
  uselistorder label %dec_label_pc_15674, { 1, 0 }
  uselistorder label %dec_label_pc_1563e, { 1, 0 }
  uselistorder label %dec_label_pc_1562c, { 3, 0, 1, 2 }
}

define i32 @power_send_cmd(i32* %arg1, i32 %arg2, i32* %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15710:
  %.reg2mem36 = alloca i1, !insn.addr !4441
  %.reg2mem34 = alloca i1, !insn.addr !4441
  %stack_var_-18.012.reg2mem = alloca i8, !insn.addr !4441
  %.reg2mem32 = alloca i1, !insn.addr !4441
  %.reg2mem30 = alloca i1, !insn.addr !4441
  %storemerge411.reg2mem = alloca i8, !insn.addr !4441
  %.reg2mem = alloca i32, !insn.addr !4441
  %storemerge510.reg2mem = alloca i8, !insn.addr !4441
  %0 = ptrtoint i32* %arg3 to i32
  %1 = ptrtoint i32* %arg1 to i32
  %2 = urem i32 %arg2, 256
  %3 = urem i32 %arg4, 256
  %4 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !4442
  %5 = icmp eq i32 %2, 0, !insn.addr !4443
  %6 = icmp eq i32 %3, 0
  %7 = add i32 %1, 3
  %8 = inttoptr i32 %7 to i8*
  store i1 false, i1* %.reg2mem30
  store i1 false, i1* %.reg2mem32
  store i8 0, i8* %stack_var_-18.012.reg2mem
  br label %dec_label_pc_1576c.preheader

dec_label_pc_15748:                               ; preds = %dec_label_pc_1576c.preheader, %dec_label_pc_15748
  %storemerge510.reload = load i8, i8* %storemerge510.reg2mem
  %9 = call i32 @znyq_set_iic(i32 16, i32 1, i32 0, i32 1, i32 17), !insn.addr !4444
  %10 = add i8 %storemerge510.reload, 1, !insn.addr !4445
  %11 = zext i8 %10 to i32, !insn.addr !4446
  %12 = icmp ugt i32 %2, %11, !insn.addr !4443
  store i8 %10, i8* %storemerge510.reg2mem, !insn.addr !4447
  br i1 %12, label %dec_label_pc_15748, label %dec_label_pc_15774, !insn.addr !4447

dec_label_pc_15774:                               ; preds = %dec_label_pc_15748, %dec_label_pc_1576c.preheader
  %13 = call i32 @usleep(i32 ptrtoint (i32* @global_var_7a120 to i32)), !insn.addr !4448
  store i32 0, i32* %.reg2mem, !insn.addr !4449
  store i8 0, i8* %storemerge411.reg2mem, !insn.addr !4449
  br i1 %6, label %dec_label_pc_157d4, label %dec_label_pc_15786, !insn.addr !4449

dec_label_pc_15786:                               ; preds = %dec_label_pc_15774, %dec_label_pc_15786
  %storemerge411.reload = load i8, i8* %storemerge411.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %14 = add i32 %.reload, %0, !insn.addr !4450
  %15 = call i32 @znyq_set_iic(i32 16, i32 1, i32 1, i32 0, i32 17), !insn.addr !4451
  %16 = trunc i32 %15 to i8, !insn.addr !4452
  %17 = inttoptr i32 %14 to i8*, !insn.addr !4452
  store i8 %16, i8* %17, align 1, !insn.addr !4452
  %18 = urem i32 %15, 256, !insn.addr !4453
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2b0f0, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2b2c0, i32 0, i32 0), i32 %.reload, i32 %18), !insn.addr !4454
  %20 = add i8 %storemerge411.reload, 1, !insn.addr !4455
  %21 = zext i8 %20 to i32, !insn.addr !4456
  %22 = icmp ugt i32 %3, %21, !insn.addr !4457
  store i32 %21, i32* %.reg2mem, !insn.addr !4449
  store i8 %20, i8* %storemerge411.reg2mem, !insn.addr !4449
  br i1 %22, label %dec_label_pc_15786, label %dec_label_pc_157d4, !insn.addr !4449

dec_label_pc_157d4:                               ; preds = %dec_label_pc_15786, %dec_label_pc_15774
  %23 = call i32 @power_check_reply(i32 %1, i32 %0, i32 %3), !insn.addr !4458
  %24 = icmp eq i32 %23, 0, !insn.addr !4459
  br i1 %24, label %dec_label_pc_157e6, label %dec_label_pc_1580e, !insn.addr !4460

dec_label_pc_157e6:                               ; preds = %dec_label_pc_157d4
  %25 = add i8 %stack_var_-18.012.reload, 1, !insn.addr !4461
  %26 = load i8, i8* %8, align 1, !insn.addr !4462
  %27 = zext i8 %26 to i32, !insn.addr !4462
  %28 = zext i8 %25 to i32, !insn.addr !4463
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_2b108, i32 0, i32 0), i32 %27, i32 %28), !insn.addr !4464
  %30 = icmp ult i8 %25, 2, !insn.addr !4465
  %31 = icmp ne i1 %30, true, !insn.addr !4465
  %32 = icmp eq i8 %25, 2, !insn.addr !4465
  %33 = icmp ne i1 %31, true, !insn.addr !4466
  %34 = or i1 %32, %33, !insn.addr !4466
  store i1 %32, i1* %.reg2mem30, !insn.addr !4466
  store i1 %31, i1* %.reg2mem32, !insn.addr !4466
  store i8 %25, i8* %stack_var_-18.012.reg2mem, !insn.addr !4466
  store i1 true, i1* %.reg2mem34, !insn.addr !4466
  store i1 false, i1* %.reg2mem36, !insn.addr !4466
  br i1 %34, label %dec_label_pc_1576c.preheader, label %dec_label_pc_15810, !insn.addr !4466

dec_label_pc_1576c.preheader:                     ; preds = %dec_label_pc_15710, %dec_label_pc_157e6
  %stack_var_-18.012.reload = load i8, i8* %stack_var_-18.012.reg2mem
  %.reload33 = load i1, i1* %.reg2mem32
  %.reload31 = load i1, i1* %.reg2mem30
  store i8 0, i8* %storemerge510.reg2mem, !insn.addr !4447
  br i1 %5, label %dec_label_pc_15774, label %dec_label_pc_15748, !insn.addr !4447

dec_label_pc_1580e:                               ; preds = %dec_label_pc_157d4
  %35 = call i32 @__asm_nop(i32 %23, i32 %0, i32 %3, i32 %23), !insn.addr !4467
  store i1 %.reload33, i1* %.reg2mem34, !insn.addr !4467
  store i1 %.reload31, i1* %.reg2mem36, !insn.addr !4467
  br label %dec_label_pc_15810, !insn.addr !4467

dec_label_pc_15810:                               ; preds = %dec_label_pc_157e6, %dec_label_pc_1580e
  %.reload37 = load i1, i1* %.reg2mem36
  %.reload35 = load i1, i1* %.reg2mem34
  %36 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4468
  %37 = icmp ne i1 %.reload37, true, !insn.addr !4469
  %38 = icmp ne i1 %.reload35, %37, !insn.addr !4469
  %. = zext i1 %38 to i32
  ret i32 %., !insn.addr !4470

; uselistorder directives
  uselistorder i32 %23, { 1, 0, 2 }
  uselistorder i32 %3, { 2, 1, 0, 3 }
  uselistorder i32 %1, { 1, 0 }
  uselistorder i32 %0, { 1, 2, 0 }
  uselistorder i8* %storemerge510.reg2mem, { 1, 2, 0 }
  uselistorder i32* %.reg2mem, { 2, 0, 1 }
  uselistorder i8* %storemerge411.reg2mem, { 2, 0, 1 }
  uselistorder i1* %.reg2mem34, { 0, 2, 1 }
  uselistorder i1* %.reg2mem36, { 0, 2, 1 }
  uselistorder i8 2, { 3, 4, 2, 0, 5, 1 }
  uselistorder label %dec_label_pc_15810, { 1, 0 }
  uselistorder label %dec_label_pc_1576c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15786, { 1, 0 }
  uselistorder label %dec_label_pc_15774, { 1, 0 }
}

define i32 @power_get_firmware_version() local_unnamed_addr {
dec_label_pc_15834:
  %0 = alloca i8
  %r0.0.reg2mem = alloca i32, !insn.addr !4471
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 17082965, i32* %stack_var_-16, align 4, !insn.addr !4472
  store i32 0, i32* %stack_var_-48, align 4, !insn.addr !4473
  %2 = call i32 @power_send_cmd(i32* nonnull %stack_var_-16, i32 6, i32* nonnull %stack_var_-48, i32 8), !insn.addr !4474
  %3 = icmp eq i32 %2, 0, !insn.addr !4475
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !4476
  br i1 %3, label %dec_label_pc_158ae, label %dec_label_pc_15898, !insn.addr !4476

dec_label_pc_15898:                               ; preds = %dec_label_pc_15834
  %4 = zext i8 %1 to i32, !insn.addr !4477
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_2b13c, i32 0, i32 0), i32 %4, i32 0), !insn.addr !4478
  store i32 %5, i32* %r0.0.reg2mem, !insn.addr !4478
  br label %dec_label_pc_158ae, !insn.addr !4478

dec_label_pc_158ae:                               ; preds = %dec_label_pc_15898, %dec_label_pc_15834
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !4479
}

define i32 @power_get_device_no() local_unnamed_addr {
dec_label_pc_158b8:
  %0 = alloca i8
  %r0.0.reg2mem = alloca i32, !insn.addr !4480
  %1 = load i8, i8* %0
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 33860181, i32* %stack_var_-16, align 4, !insn.addr !4481
  store i32 0, i32* %stack_var_-48, align 4, !insn.addr !4482
  %2 = call i32 @power_send_cmd(i32* nonnull %stack_var_-16, i32 6, i32* nonnull %stack_var_-48, i32 8), !insn.addr !4483
  %3 = icmp eq i32 %2, 0, !insn.addr !4484
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !4485
  br i1 %3, label %dec_label_pc_15932, label %dec_label_pc_1591c, !insn.addr !4485

dec_label_pc_1591c:                               ; preds = %dec_label_pc_158b8
  %4 = zext i8 %1 to i32, !insn.addr !4486
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @global_var_2b16c, i32 0, i32 0), i32 %4, i32 0), !insn.addr !4487
  store i32 %5, i32* %r0.0.reg2mem, !insn.addr !4487
  br label %dec_label_pc_15932, !insn.addr !4487

dec_label_pc_15932:                               ; preds = %dec_label_pc_1591c, %dec_label_pc_158b8
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !4488
}

define i32 @power_get_da_value() local_unnamed_addr {
dec_label_pc_1593c:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 50637397, i32* %stack_var_-16, align 4, !insn.addr !4489
  store i32 0, i32* %stack_var_-48, align 4, !insn.addr !4490
  %0 = call i32 @power_send_cmd(i32* nonnull %stack_var_-16, i32 6, i32* nonnull %stack_var_-48, i32 8), !insn.addr !4491
  %1 = icmp eq i32 %0, 0, !insn.addr !4492
  br i1 %1, label %dec_label_pc_159b4, label %dec_label_pc_159a0, !insn.addr !4493

dec_label_pc_159a0:                               ; preds = %dec_label_pc_1593c
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_2b194, i32 0, i32 0), i32 0), !insn.addr !4494
  br label %dec_label_pc_159b4, !insn.addr !4495

dec_label_pc_159b4:                               ; preds = %dec_label_pc_159a0, %dec_label_pc_1593c
  ret i32 0, !insn.addr !4496
}

define i32 @power_get_da_value_simple() local_unnamed_addr {
dec_label_pc_159c0:
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !4497
  %1 = load i8, i8* @global_var_3554e, align 1, !insn.addr !4498
  %2 = zext i8 %1 to i32, !insn.addr !4498
  %3 = load i8, i8* @global_var_3554f, align 1, !insn.addr !4499
  %4 = zext i8 %3 to i32, !insn.addr !4499
  %5 = call i32 @znyq_set_iic(i32 %2, i32 %4, i32 1, i32 1, i32 2), !insn.addr !4500
  %6 = urem i32 %5, 256, !insn.addr !4501
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2b1b8, i32 0, i32 0), i32 %6), !insn.addr !4502
  %8 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4503
  ret i32 %6, !insn.addr !4504

; uselistorder directives
  uselistorder i32 %6, { 1, 0 }
}

define i32 @power_get_adc_value() local_unnamed_addr {
dec_label_pc_15a2c:
  %r0.0.reg2mem = alloca i32, !insn.addr !4505
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 67414613, i32* %stack_var_-16, align 4, !insn.addr !4506
  store i32 0, i32* %stack_var_-48, align 4, !insn.addr !4507
  %0 = call i32 @power_send_cmd(i32* nonnull %stack_var_-16, i32 6, i32* nonnull %stack_var_-48, i32 8), !insn.addr !4508
  %1 = icmp eq i32 %0, 0, !insn.addr !4509
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !4510
  br i1 %1, label %dec_label_pc_15aa0, label %dec_label_pc_15a90, !insn.addr !4510

dec_label_pc_15a90:                               ; preds = %dec_label_pc_15a2c
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2b1d0, i32 0, i32 0), i32 0), !insn.addr !4511
  store i32 %2, i32* %r0.0.reg2mem, !insn.addr !4511
  br label %dec_label_pc_15aa0, !insn.addr !4511

dec_label_pc_15aa0:                               ; preds = %dec_label_pc_15a90, %dec_label_pc_15a2c
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !4512
}

define i32 @power_set_da_value(i32 %arg1) local_unnamed_addr {
dec_label_pc_15aa8:
  %0 = alloca i8
  %stack_var_-26.02.reg2mem = alloca i16, !insn.addr !4513
  %storemerge3.off0.reg2mem = alloca i16, !insn.addr !4513
  %.reg2mem = alloca i32, !insn.addr !4513
  %1 = load i8, i8* %0
  %2 = load i8, i8* %0
  %3 = load i8, i8* %0
  %4 = load i8, i8* %0
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %5 = load i32, i32* inttoptr (i32 or (i32 ptrtoint (i32* @global_var_b22c to i32), i32 ptrtoint (i32* @global_var_20000 to i32)) to i32*), align 4, !insn.addr !4514
  store i32 %5, i32* %stack_var_-36, align 4, !insn.addr !4515
  store i32 0, i32* %stack_var_-68, align 4, !insn.addr !4516
  %6 = ptrtoint i32* %stack_var_-24 to i32, !insn.addr !4517
  %7 = add i32 %6, -12, !insn.addr !4518
  store i32 2, i32* %.reg2mem
  store i16 2, i16* %storemerge3.off0.reg2mem
  store i16 0, i16* %stack_var_-26.02.reg2mem
  br label %dec_label_pc_15b08

dec_label_pc_15b08:                               ; preds = %dec_label_pc_15aa8, %dec_label_pc_15b08
  %stack_var_-26.02.reload = load i16, i16* %stack_var_-26.02.reg2mem
  %storemerge3.off0.reload = load i16, i16* %storemerge3.off0.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %8 = add i32 %7, %.reload, !insn.addr !4519
  %9 = inttoptr i32 %8 to i8*, !insn.addr !4519
  %10 = load i8, i8* %9, align 1, !insn.addr !4519
  %11 = zext i8 %10 to i16, !insn.addr !4519
  %12 = add i16 %stack_var_-26.02.reload, %11, !insn.addr !4520
  %13 = add i16 %storemerge3.off0.reload, 1, !insn.addr !4521
  %14 = zext i16 %13 to i32
  %15 = icmp ult i16 %13, 5, !insn.addr !4522
  %16 = icmp ne i1 %15, true, !insn.addr !4522
  %17 = icmp eq i16 %13, 5, !insn.addr !4522
  %18 = icmp ne i1 %16, true, !insn.addr !4523
  %19 = or i1 %17, %18, !insn.addr !4523
  store i32 %14, i32* %.reg2mem, !insn.addr !4523
  store i16 %13, i16* %storemerge3.off0.reg2mem, !insn.addr !4523
  store i16 %12, i16* %stack_var_-26.02.reg2mem, !insn.addr !4523
  br i1 %19, label %dec_label_pc_15b08, label %dec_label_pc_15b28, !insn.addr !4523

dec_label_pc_15b28:                               ; preds = %dec_label_pc_15b08
  %20 = urem i32 %arg1, 256
  %21 = udiv i16 %12, 256
  %22 = zext i16 %21 to i32, !insn.addr !4524
  %23 = urem i32 %5, 256, !insn.addr !4525
  %24 = zext i8 %4 to i32, !insn.addr !4526
  %25 = zext i8 %2 to i32, !insn.addr !4527
  %26 = zext i8 %1 to i32, !insn.addr !4528
  %27 = urem i16 %12, 256
  %28 = zext i16 %27 to i32, !insn.addr !4529
  %29 = sext i8 %3 to i32, !insn.addr !4530
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_2b1f8, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2b2ac, i32 0, i32 0), i32 %23, i32 %24, i32 %29, i32 %25, i32 %20, i32 %26, i32 %28, i32 %22), !insn.addr !4530
  %31 = call i32 @power_send_cmd(i32* nonnull %stack_var_-36, i32 8, i32* nonnull %stack_var_-68, i32 8), !insn.addr !4531
  ret i32 %31, !insn.addr !4532

; uselistorder directives
  uselistorder i16 %12, { 2, 1, 0 }
  uselistorder i32* %.reg2mem, { 1, 0, 2 }
  uselistorder i16* %storemerge3.off0.reg2mem, { 1, 0, 2 }
  uselistorder i16* %stack_var_-26.02.reg2mem, { 1, 0, 2 }
  uselistorder i8* %0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_15b08, { 1, 0 }
}

define i32 @power_set_da_value_simple(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ba8:
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_35aac), !insn.addr !4533
  %1 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !4534
  %2 = load i8, i8* @global_var_3554e, align 1, !insn.addr !4535
  %3 = zext i8 %2 to i32, !insn.addr !4535
  %4 = load i8, i8* @global_var_3554f, align 1, !insn.addr !4536
  %5 = zext i8 %4 to i32, !insn.addr !4536
  %6 = call i32 @znyq_set_iic(i32 %3, i32 %5, i32 0, i32 1, i32 2), !insn.addr !4537
  %7 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_35aac), !insn.addr !4538
  %8 = urem i32 %6, 256, !insn.addr !4539
  ret i32 %8, !insn.addr !4540

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @znyq_set_iic, { 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_3554f, { 2, 1, 0 }
  uselistorder i8* @global_var_3554e, { 2, 1, 0 }
}

define i32 @power_save_eeprom_data(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15c1c:
  %0 = alloca i8
  %r3.0.reg2mem = alloca i32, !insn.addr !4541
  %stack_var_-10.03.reg2mem = alloca i16, !insn.addr !4541
  %storemerge4.reg2mem = alloca i16, !insn.addr !4541
  %.reg2mem6 = alloca i32, !insn.addr !4541
  %storemerge15.reg2mem = alloca i16, !insn.addr !4541
  %.reg2mem = alloca i32, !insn.addr !4541
  %1 = load i8, i8* %0
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %2 = urem i32 %arg1, 256
  %3 = mul i32 %arg3, 16777216
  %4 = ashr exact i32 %3, 24, !insn.addr !4542
  %5 = call i32* @memset(i32* nonnull %stack_var_-276, i32 0, i32 256), !insn.addr !4543
  store i32 0, i32* %stack_var_-308, align 4, !insn.addr !4544
  %6 = urem i32 %4, 256, !insn.addr !4545
  %7 = call i32 @__asm_sxtb(i32 %2), !insn.addr !4546
  %8 = icmp slt i32 %7, 0, !insn.addr !4547
  br i1 %8, label %dec_label_pc_15c9a, label %dec_label_pc_15c92, !insn.addr !4548

dec_label_pc_15c92:                               ; preds = %dec_label_pc_15c1c
  %9 = icmp ult i32 %6, 32, !insn.addr !4549
  %10 = icmp ne i1 %9, true, !insn.addr !4549
  %11 = icmp eq i32 %6, 32, !insn.addr !4549
  %12 = icmp ne i1 %10, true, !insn.addr !4550
  %13 = or i1 %11, %12, !insn.addr !4550
  br i1 %13, label %dec_label_pc_15cb6, label %dec_label_pc_15c9a, !insn.addr !4550

dec_label_pc_15c9a:                               ; preds = %dec_label_pc_15c92, %dec_label_pc_15c1c
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_2b234, i32 0, i32 0), i32 %2, i32 %6), !insn.addr !4551
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4552
  br label %dec_label_pc_15dd6, !insn.addr !4552

dec_label_pc_15cb6:                               ; preds = %dec_label_pc_15c92
  store i32 85, i32* %stack_var_-276, align 4, !insn.addr !4553
  %15 = icmp eq i32 %6, 0, !insn.addr !4554
  %.pre = ptrtoint i32* %stack_var_-276 to i32
  br i1 %15, label %dec_label_pc_15d46.preheader, label %dec_label_pc_15cee.lr.ph, !insn.addr !4555

dec_label_pc_15cee.lr.ph:                         ; preds = %dec_label_pc_15cb6
  %16 = add i32 %.pre, 5, !insn.addr !4556
  store i32 0, i32* %.reg2mem
  store i16 0, i16* %storemerge15.reg2mem
  br label %dec_label_pc_15cee

dec_label_pc_15cee:                               ; preds = %dec_label_pc_15cee.lr.ph, %dec_label_pc_15cee
  %storemerge15.reload = load i16, i16* %storemerge15.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %17 = add i32 %.reload, %arg2, !insn.addr !4557
  %18 = inttoptr i32 %17 to i8*, !insn.addr !4558
  %19 = load i8, i8* %18, align 1, !insn.addr !4558
  %20 = add i32 %16, %.reload, !insn.addr !4559
  %21 = inttoptr i32 %20 to i8*, !insn.addr !4559
  store i8 %19, i8* %21, align 1, !insn.addr !4559
  %22 = add i16 %storemerge15.reload, 1, !insn.addr !4560
  %23 = zext i16 %22 to i32, !insn.addr !4561
  %24 = icmp ugt i32 %6, %23, !insn.addr !4554
  store i32 %23, i32* %.reg2mem, !insn.addr !4555
  store i16 %22, i16* %storemerge15.reg2mem, !insn.addr !4555
  br i1 %24, label %dec_label_pc_15cee, label %dec_label_pc_15d46.preheader, !insn.addr !4555

dec_label_pc_15d46.preheader:                     ; preds = %dec_label_pc_15cee, %dec_label_pc_15cb6
  %25 = add nsw i32 %4, 7, !insn.addr !4562
  %26 = add nuw nsw i32 %6, 5, !insn.addr !4563
  store i32 2, i32* %.reg2mem6
  store i16 2, i16* %storemerge4.reg2mem
  store i16 0, i16* %stack_var_-10.03.reg2mem
  br label %dec_label_pc_15d26

dec_label_pc_15d26:                               ; preds = %dec_label_pc_15d46.preheader, %dec_label_pc_15d26
  %stack_var_-10.03.reload = load i16, i16* %stack_var_-10.03.reg2mem
  %storemerge4.reload = load i16, i16* %storemerge4.reg2mem
  %.reload7 = load i32, i32* %.reg2mem6
  %27 = add i32 %.reload7, %.pre, !insn.addr !4564
  %28 = inttoptr i32 %27 to i8*, !insn.addr !4564
  %29 = load i8, i8* %28, align 1, !insn.addr !4564
  %30 = zext i8 %29 to i16, !insn.addr !4564
  %31 = add i16 %stack_var_-10.03.reload, %30, !insn.addr !4565
  %32 = add i16 %storemerge4.reload, 1, !insn.addr !4566
  %33 = zext i16 %32 to i32, !insn.addr !4567
  %34 = icmp ugt i32 %26, %33, !insn.addr !4568
  store i32 %33, i32* %.reg2mem6, !insn.addr !4568
  store i16 %32, i16* %storemerge4.reg2mem, !insn.addr !4568
  store i16 %31, i16* %stack_var_-10.03.reg2mem, !insn.addr !4568
  br i1 %34, label %dec_label_pc_15d26, label %dec_label_pc_15d54, !insn.addr !4568

dec_label_pc_15d54:                               ; preds = %dec_label_pc_15d26
  %35 = trunc i16 %31 to i8, !insn.addr !4569
  %36 = add i32 %26, %.pre, !insn.addr !4569
  %37 = inttoptr i32 %36 to i8*, !insn.addr !4569
  store i8 %35, i8* %37, align 1, !insn.addr !4569
  %38 = add nuw nsw i32 %6, 6, !insn.addr !4570
  %39 = udiv i16 %31, 256
  %40 = trunc i16 %39 to i8, !insn.addr !4571
  %41 = add i32 %38, %.pre, !insn.addr !4571
  %42 = inttoptr i32 %41 to i8*, !insn.addr !4571
  store i8 %40, i8* %42, align 1, !insn.addr !4571
  %43 = urem i32 %25, 256, !insn.addr !4572
  %44 = call i32 @power_send_cmd(i32* nonnull %stack_var_-276, i32 %43, i32* nonnull %stack_var_-308, i32 8), !insn.addr !4573
  %45 = urem i32 %44, 256, !insn.addr !4574
  %46 = icmp eq i32 %45, 1, !insn.addr !4575
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4576
  br i1 %46, label %dec_label_pc_15dae, label %dec_label_pc_15dd6, !insn.addr !4576

dec_label_pc_15dae:                               ; preds = %dec_label_pc_15d54
  %47 = icmp eq i8 %1, 1, !insn.addr !4577
  br i1 %47, label %dec_label_pc_15db8, label %dec_label_pc_15dc8, !insn.addr !4578

dec_label_pc_15db8:                               ; preds = %dec_label_pc_15dae
  %48 = call i32 @puts(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_2b258, i32 0, i32 0)), !insn.addr !4579
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !4580
  br label %dec_label_pc_15dd6, !insn.addr !4580

dec_label_pc_15dc8:                               ; preds = %dec_label_pc_15dae
  %49 = call i32 @puts(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2b274, i32 0, i32 0)), !insn.addr !4581
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4582
  br label %dec_label_pc_15dd6, !insn.addr !4582

dec_label_pc_15dd6:                               ; preds = %dec_label_pc_15d54, %dec_label_pc_15dc8, %dec_label_pc_15db8, %dec_label_pc_15c9a
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !4583

; uselistorder directives
  uselistorder i16 %31, { 1, 2, 0 }
  uselistorder i32 %.pre, { 2, 0, 1, 3 }
  uselistorder i32 %6, { 0, 5, 4, 6, 1, 2, 3 }
  uselistorder i32 %4, { 1, 0 }
  uselistorder i32 %2, { 1, 0 }
  uselistorder i32* %stack_var_-276, { 1, 0, 3, 2 }
  uselistorder i32* %.reg2mem, { 1, 0, 2 }
  uselistorder i16* %storemerge15.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.reg2mem6, { 1, 0, 2 }
  uselistorder i16* %storemerge4.reg2mem, { 1, 0, 2 }
  uselistorder i16* %stack_var_-10.03.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 1, 4 }
  uselistorder i16 256, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15dd6, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15d26, { 1, 0 }
  uselistorder label %dec_label_pc_15cee, { 1, 0 }
}

define i32 @power_read_eeprom_data(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15de0:
  %r3.0.reg2mem = alloca i32, !insn.addr !4584
  %storemerge2.reg2mem = alloca i16, !insn.addr !4584
  %.reg2mem = alloca i32, !insn.addr !4584
  %storemerge1.reg2mem = alloca i16, !insn.addr !4584
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %0 = urem i32 %arg1, 256
  %1 = mul i32 %arg3, 16777216
  %2 = ashr exact i32 %1, 24, !insn.addr !4585
  store i32 101100117, i32* %stack_var_-24, align 4, !insn.addr !4586
  %3 = call i32* @memset(i32* nonnull %stack_var_-280, i32 0, i32 256), !insn.addr !4587
  %4 = call i32 @__asm_sxtb(i32 %0), !insn.addr !4588
  %5 = icmp slt i32 %4, 0, !insn.addr !4589
  %.pre = urem i32 %2, 256
  br i1 %5, label %dec_label_pc_15e32, label %dec_label_pc_15e2a, !insn.addr !4590

dec_label_pc_15e2a:                               ; preds = %dec_label_pc_15de0
  %6 = icmp ult i32 %.pre, 32, !insn.addr !4591
  %7 = icmp ne i1 %6, true, !insn.addr !4591
  %8 = icmp eq i32 %.pre, 32, !insn.addr !4591
  %9 = icmp ne i1 %7, true, !insn.addr !4592
  %10 = or i1 %8, %9, !insn.addr !4592
  store i16 2, i16* %storemerge1.reg2mem, !insn.addr !4592
  br i1 %10, label %dec_label_pc_15e8a, label %dec_label_pc_15e32, !insn.addr !4592

dec_label_pc_15e32:                               ; preds = %dec_label_pc_15de0, %dec_label_pc_15e2a
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_2b234, i32 0, i32 0), i32 %0, i32 %.pre), !insn.addr !4593
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4594
  br label %dec_label_pc_15f40, !insn.addr !4594

dec_label_pc_15e8a:                               ; preds = %dec_label_pc_15e2a, %dec_label_pc_15e8a
  %storemerge1.reload = load i16, i16* %storemerge1.reg2mem
  %12 = icmp ult i16 %storemerge1.reload, 5, !insn.addr !4595
  %13 = icmp ne i1 %12, true, !insn.addr !4595
  %14 = icmp eq i16 %storemerge1.reload, 5, !insn.addr !4595
  %15 = icmp ne i1 %13, true, !insn.addr !4596
  %16 = or i1 %14, %15, !insn.addr !4596
  %17 = add i16 %storemerge1.reload, 1, !insn.addr !4597
  store i16 %17, i16* %storemerge1.reg2mem, !insn.addr !4596
  br i1 %16, label %dec_label_pc_15e8a, label %dec_label_pc_15e92, !insn.addr !4596

dec_label_pc_15e92:                               ; preds = %dec_label_pc_15e8a
  %18 = add nsw i32 %2, 7, !insn.addr !4598
  %19 = urem i32 %18, 256, !insn.addr !4599
  %20 = call i32 @power_send_cmd(i32* nonnull %stack_var_-24, i32 8, i32* nonnull %stack_var_-280, i32 %19), !insn.addr !4600
  %21 = urem i32 %20, 256, !insn.addr !4601
  %22 = icmp eq i32 %21, 1, !insn.addr !4602
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !4603
  br i1 %22, label %dec_label_pc_15eda, label %dec_label_pc_15f40, !insn.addr !4603

dec_label_pc_15eda:                               ; preds = %dec_label_pc_15e92
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2b290, i32 0, i32 0)), !insn.addr !4604
  %24 = icmp eq i32 %.pre, 0, !insn.addr !4605
  br i1 %24, label %dec_label_pc_15f38, label %dec_label_pc_15eee.lr.ph, !insn.addr !4606

dec_label_pc_15eee.lr.ph:                         ; preds = %dec_label_pc_15eda
  %25 = ptrtoint i32* %stack_var_-280 to i32, !insn.addr !4607
  %26 = add i32 %25, 5, !insn.addr !4608
  store i32 0, i32* %.reg2mem
  store i16 0, i16* %storemerge2.reg2mem
  br label %dec_label_pc_15eee

dec_label_pc_15eee:                               ; preds = %dec_label_pc_15eee.lr.ph, %dec_label_pc_15eee
  %storemerge2.reload = load i16, i16* %storemerge2.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %27 = add i32 %.reload, %arg2, !insn.addr !4609
  %28 = add i32 %26, %.reload, !insn.addr !4610
  %29 = inttoptr i32 %28 to i8*, !insn.addr !4610
  %30 = load i8, i8* %29, align 1, !insn.addr !4610
  %31 = inttoptr i32 %27 to i8*, !insn.addr !4611
  store i8 %30, i8* %31, align 1, !insn.addr !4611
  %32 = zext i8 %30 to i32, !insn.addr !4612
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b0b4, i32 0, i32 0), i32 %32), !insn.addr !4613
  %34 = add i16 %storemerge2.reload, 1, !insn.addr !4614
  %35 = zext i16 %34 to i32, !insn.addr !4615
  %36 = icmp ugt i32 %.pre, %35, !insn.addr !4605
  store i32 %35, i32* %.reg2mem, !insn.addr !4606
  store i16 %34, i16* %storemerge2.reg2mem, !insn.addr !4606
  br i1 %36, label %dec_label_pc_15eee, label %dec_label_pc_15f38, !insn.addr !4606

dec_label_pc_15f38:                               ; preds = %dec_label_pc_15eee, %dec_label_pc_15eda
  %37 = call i32 @putchar(i32 10), !insn.addr !4616
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !4617
  br label %dec_label_pc_15f40, !insn.addr !4617

dec_label_pc_15f40:                               ; preds = %dec_label_pc_15e92, %dec_label_pc_15f38, %dec_label_pc_15e32
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !4618

; uselistorder directives
  uselistorder i16 %storemerge1.reload, { 2, 0, 1 }
  uselistorder i32 %.pre, { 1, 0, 4, 2, 3 }
  uselistorder i32 %2, { 1, 0 }
  uselistorder i32 %0, { 1, 0 }
  uselistorder i32* %stack_var_-280, { 2, 0, 1 }
  uselistorder i16* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem, { 1, 0, 2 }
  uselistorder i16* %storemerge2.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3 }
  uselistorder i16 0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 (i32*, i32, i32*, i32)* @power_send_cmd, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16 1, { 2, 1, 4, 3, 5, 7, 6, 8, 0 }
  uselistorder i16 5, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_15f40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15eee, { 1, 0 }
  uselistorder label %dec_label_pc_15e8a, { 1, 0 }
  uselistorder label %dec_label_pc_15e32, { 1, 0 }
}

define i32 @power_is_support_cmd_package() local_unnamed_addr {
dec_label_pc_15f4c:
  %0 = load i16, i16* bitcast (i16** @global_var_3554c to i16*), align 4, !insn.addr !4619
  %1 = icmp eq i16 %0, 2, !insn.addr !4620
  br i1 %1, label %4, label %2, !insn.addr !4621

; <label>:2:                                      ; preds = %dec_label_pc_15f4c
  %3 = call i32 @__asm_ite(), !insn.addr !4621
  br label %4, !insn.addr !4621

; <label>:4:                                      ; preds = %dec_label_pc_15f4c, %2
  %r3.1 = zext i1 %1 to i32
  ret i32 %r3.1, !insn.addr !4622

; uselistorder directives
  uselistorder i16 2, { 5, 0, 1, 2, 3, 4 }
  uselistorder i16* bitcast (i16** @global_var_3554c to i16*), { 1, 0 }
  uselistorder label %4, { 1, 0 }
}

define i32 @power_get_voltage(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f6c:
  %0 = call i32 @power_is_support_cmd_package(), !insn.addr !4623
  %1 = icmp eq i32 %0, 0, !insn.addr !4624
  br i1 %1, label %dec_label_pc_15f8c, label %dec_label_pc_15f7e, !insn.addr !4625

dec_label_pc_15f7e:                               ; preds = %dec_label_pc_15f6c
  %2 = call i32 @power_get_da_value(), !insn.addr !4626
  %3 = trunc i32 %2 to i8, !insn.addr !4627
  %4 = inttoptr i32 %arg1 to i8*, !insn.addr !4627
  store i8 %3, i8* %4, align 1, !insn.addr !4627
  br label %dec_label_pc_15f98, !insn.addr !4628

dec_label_pc_15f8c:                               ; preds = %dec_label_pc_15f6c
  %5 = call i32 @power_get_da_value_simple(), !insn.addr !4629
  %6 = trunc i32 %5 to i8, !insn.addr !4630
  %7 = inttoptr i32 %arg1 to i8*, !insn.addr !4630
  store i8 %6, i8* %7, align 1, !insn.addr !4630
  br label %dec_label_pc_15f98, !insn.addr !4630

dec_label_pc_15f98:                               ; preds = %dec_label_pc_15f8c, %dec_label_pc_15f7e
  ret i32 %arg1, !insn.addr !4631

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @power_set_voltage(i32 %arg1) local_unnamed_addr {
dec_label_pc_15fa4:
  %0 = urem i32 %arg1, 256
  %1 = call i32 @power_is_support_cmd_package(), !insn.addr !4632
  %2 = icmp eq i32 %1, 0, !insn.addr !4633
  br i1 %2, label %dec_label_pc_15fc2, label %dec_label_pc_15fb8, !insn.addr !4634

dec_label_pc_15fb8:                               ; preds = %dec_label_pc_15fa4
  %3 = call i32 @power_set_da_value(i32 %0), !insn.addr !4635
  br label %dec_label_pc_15fca, !insn.addr !4636

dec_label_pc_15fc2:                               ; preds = %dec_label_pc_15fa4
  %4 = call i32 @power_set_da_value_simple(i32 %0), !insn.addr !4637
  br label %dec_label_pc_15fca, !insn.addr !4637

dec_label_pc_15fca:                               ; preds = %dec_label_pc_15fc2, %dec_label_pc_15fb8
  ret i32 %0, !insn.addr !4638

; uselistorder directives
  uselistorder i32 %0, { 2, 0, 1 }
  uselistorder i32 ()* @power_is_support_cmd_package, { 1, 0 }
}

define i32 @sph_bswap32(i32 %arg1) local_unnamed_addr {
dec_label_pc_15fd8:
  %0 = call i32 @llvm.bswap.i32(i32 %arg1), !insn.addr !4639
  ret i32 %0, !insn.addr !4640
}

define i32 @sph_bswap64(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1600c:
  %0 = call i32 @__asm_adr(i32 172), !insn.addr !4641
  %1 = ashr i32 %arg2, 31
  ret i32 %1, !insn.addr !4642
}

define i32 @function_160dc() local_unnamed_addr {
dec_label_pc_160dc:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1, !insn.addr !4643
}

define i32 @sph_enc32be(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_160e8:
  %0 = udiv i32 %arg2, 16777216, !insn.addr !4644
  %1 = trunc i32 %0 to i8, !insn.addr !4645
  %2 = inttoptr i32 %arg1 to i8*, !insn.addr !4645
  store i8 %1, i8* %2, align 1, !insn.addr !4645
  %3 = add i32 %arg1, 1, !insn.addr !4646
  %4 = udiv i32 %arg2, 65536, !insn.addr !4647
  %5 = trunc i32 %4 to i8, !insn.addr !4648
  %6 = inttoptr i32 %3 to i8*, !insn.addr !4648
  store i8 %5, i8* %6, align 1, !insn.addr !4648
  %7 = add i32 %arg1, 2, !insn.addr !4649
  %8 = udiv i32 %arg2, 256, !insn.addr !4650
  %9 = trunc i32 %8 to i8, !insn.addr !4651
  %10 = inttoptr i32 %7 to i8*, !insn.addr !4651
  store i8 %9, i8* %10, align 1, !insn.addr !4651
  %11 = add i32 %arg1, 3, !insn.addr !4652
  %12 = trunc i32 %arg2 to i8, !insn.addr !4653
  %13 = inttoptr i32 %11 to i8*, !insn.addr !4653
  store i8 %12, i8* %13, align 1, !insn.addr !4653
  ret i32 %arg1, !insn.addr !4654

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder i32 %arg1, { 4, 0, 1, 2, 3 }
}

define i32 @sph_enc32be_aligned(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16128:
  %0 = call i32 @sph_bswap32(i32 %arg2), !insn.addr !4655
  store i32 %0, i32* %arg1, align 4, !insn.addr !4656
  ret i32 %0, !insn.addr !4657

; uselistorder directives
  uselistorder i32 %0, { 1, 0 }
}

define i32 @sph_dec32be_aligned(i32 %arg1) local_unnamed_addr {
dec_label_pc_16148:
  %0 = call i32 @sph_bswap32(i32 %arg1), !insn.addr !4658
  ret i32 %0, !insn.addr !4659
}

define i32 @sph_enc64be(i32 %arg1, i32 %arg2, i64 %arg3, i64 %arg4) local_unnamed_addr {
dec_label_pc_16168:
  %0 = trunc i64 %arg3 to i32
  %1 = udiv i32 %0, 16777216, !insn.addr !4660
  %2 = trunc i32 %1 to i8, !insn.addr !4661
  %3 = inttoptr i32 %arg1 to i8*, !insn.addr !4661
  store i8 %2, i8* %3, align 1, !insn.addr !4661
  %4 = add i32 %arg1, 1, !insn.addr !4662
  %5 = udiv i32 %0, 65536, !insn.addr !4663
  %6 = trunc i32 %5 to i8, !insn.addr !4664
  %7 = inttoptr i32 %4 to i8*, !insn.addr !4664
  store i8 %6, i8* %7, align 1, !insn.addr !4664
  %8 = add i32 %arg1, 2, !insn.addr !4665
  %9 = udiv i32 %0, 256, !insn.addr !4666
  %10 = trunc i32 %9 to i8, !insn.addr !4667
  %11 = inttoptr i32 %8 to i8*, !insn.addr !4667
  store i8 %10, i8* %11, align 1, !insn.addr !4667
  %12 = add i32 %arg1, 3, !insn.addr !4668
  %13 = trunc i64 %arg3 to i8, !insn.addr !4669
  %14 = inttoptr i32 %12 to i8*, !insn.addr !4669
  store i8 %13, i8* %14, align 1, !insn.addr !4669
  %15 = add i32 %arg1, 4, !insn.addr !4670
  %16 = ashr i32 %0, 31
  %17 = udiv i32 %16, 16777216, !insn.addr !4671
  %18 = trunc i32 %17 to i8, !insn.addr !4672
  %19 = inttoptr i32 %15 to i8*, !insn.addr !4672
  store i8 %18, i8* %19, align 1, !insn.addr !4672
  %20 = add i32 %arg1, 5, !insn.addr !4673
  %21 = udiv i32 %16, 65536, !insn.addr !4674
  %22 = trunc i32 %21 to i8, !insn.addr !4675
  %23 = inttoptr i32 %20 to i8*, !insn.addr !4675
  store i8 %22, i8* %23, align 1, !insn.addr !4675
  %24 = add i32 %arg1, 6, !insn.addr !4676
  %25 = udiv i32 %16, 256, !insn.addr !4677
  %26 = trunc i32 %25 to i8, !insn.addr !4678
  %27 = inttoptr i32 %24 to i8*, !insn.addr !4678
  store i8 %26, i8* %27, align 1, !insn.addr !4678
  %28 = add i32 %arg1, 7, !insn.addr !4679
  %29 = inttoptr i32 %28 to i8*, !insn.addr !4680
  store i8 %13, i8* %29, align 1, !insn.addr !4680
  ret i32 %0, !insn.addr !4681

; uselistorder directives
  uselistorder i32 %0, { 4, 3, 0, 1, 2 }
}

define i32 @sph_enc64be_aligned(i32* %arg1, i32 %arg2, i64 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16224:
  %0 = ptrtoint i32* %arg1 to i32
  %1 = mul i64 %arg3, 4294967296
  %2 = trunc i64 %arg3 to i32, !insn.addr !4682
  %3 = ashr i64 %1, 63, !insn.addr !4683
  %4 = call i32 @sph_bswap64(i64 %3, i32 %2), !insn.addr !4683
  store i32 %4, i32* %arg1, align 4, !insn.addr !4684
  %5 = add i32 %0, 4, !insn.addr !4684
  %6 = inttoptr i32 %5 to i32*, !insn.addr !4684
  store i32 %2, i32* %6, align 4, !insn.addr !4684
  ret i32 %4, !insn.addr !4685

; uselistorder directives
  uselistorder i32 %4, { 1, 0 }
  uselistorder i64 %arg3, { 1, 0 }
}

define i32 @sph_dec64be_aligned(i32 %arg1) local_unnamed_addr {
dec_label_pc_1624c:
  %r0 = alloca i32, align 8
  %0 = bitcast i32* %r0 to i64*
  %1 = load i64, i64* %0, align 8, !insn.addr !4686
  %2 = trunc i64 %1 to i32, !insn.addr !4686
  %3 = ashr i64 %1, 32, !insn.addr !4687
  %4 = call i32 @sph_bswap64(i64 %3, i32 %2), !insn.addr !4687
  ret i32 %4, !insn.addr !4688

; uselistorder directives
  uselistorder i32 (i64, i32)* @sph_bswap64, { 1, 0 }
}

define i32 @blake32_init(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16274:
  %0 = add i32 %arg1, 68, !insn.addr !4689
  %1 = inttoptr i32 %0 to i32*, !insn.addr !4690
  %2 = inttoptr i32 %arg2 to i32*, !insn.addr !4690
  %3 = call i32* @memcpy(i32* %1, i32* %2, i32 32), !insn.addr !4690
  %4 = add i32 %arg1, 100, !insn.addr !4691
  %5 = inttoptr i32 %4 to i32*, !insn.addr !4692
  %6 = inttoptr i32 %arg3 to i32*, !insn.addr !4692
  %7 = call i32* @memcpy(i32* %5, i32* %6, i32 16), !insn.addr !4692
  %8 = ptrtoint i32* %7 to i32, !insn.addr !4692
  %9 = add i32 %arg1, 120, !insn.addr !4693
  %10 = inttoptr i32 %9 to i32*, !insn.addr !4693
  store i32 0, i32* %10, align 4, !insn.addr !4693
  %11 = add i32 %arg1, 116, !insn.addr !4694
  %12 = inttoptr i32 %11 to i32*, !insn.addr !4694
  store i32 0, i32* %12, align 4, !insn.addr !4694
  %13 = add i32 %arg1, 64, !insn.addr !4695
  %14 = inttoptr i32 %13 to i32*, !insn.addr !4695
  store i32 0, i32* %14, align 4, !insn.addr !4695
  ret i32 %8, !insn.addr !4696
}

define i32 @blake32(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_162b8:
  %r0.1.reg2mem = alloca i32, !insn.addr !4697
  %storemerge.reg2mem = alloca i32, !insn.addr !4697
  %r0.0.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-12.0.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-52.1.ph.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-48.0.ph.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-44.0.ph.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-40.0.ph.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-36.0.ph.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-32.0.ph.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-28.0.ph.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-24.0.ph.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-20.0.ph.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-16.0.ph.lcssa.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-216.0.ph31.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-220.0.ph32.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-12.0.ph33.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-16.0.ph34.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-20.0.ph35.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-24.0.ph36.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-28.0.ph37.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-32.0.ph38.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-36.0.ph39.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-40.0.ph40.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-44.0.ph41.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-48.0.ph42.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-52.1.ph43.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-216.05.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-220.06.reg2mem = alloca i32, !insn.addr !4697
  %stack_var_-12.07.reg2mem = alloca i32, !insn.addr !4697
  %0 = add i32 %arg1, 64, !insn.addr !4698
  %1 = inttoptr i32 %0 to i32*, !insn.addr !4698
  %2 = load i32, i32* %1, align 4, !insn.addr !4698
  %3 = sub i32 64, %2, !insn.addr !4699
  %4 = icmp ult i32 %3, %arg3, !insn.addr !4700
  %5 = icmp ne i1 %4, true, !insn.addr !4700
  %6 = icmp eq i32 %3, %arg3, !insn.addr !4700
  %7 = icmp ne i1 %5, true, !insn.addr !4701
  %8 = or i1 %6, %7, !insn.addr !4701
  br i1 %8, label %dec_label_pc_1630c, label %dec_label_pc_162e0, !insn.addr !4701

dec_label_pc_162e0:                               ; preds = %dec_label_pc_162b8
  %9 = add i32 %2, %arg1, !insn.addr !4702
  %10 = inttoptr i32 %9 to i32*, !insn.addr !4703
  %11 = inttoptr i32 %arg2 to i32*, !insn.addr !4703
  %12 = call i32* @memcpy(i32* %10, i32* %11, i32 %arg3), !insn.addr !4703
  %13 = ptrtoint i32* %12 to i32, !insn.addr !4703
  %14 = add i32 %2, %arg3, !insn.addr !4704
  store i32 %14, i32* %storemerge.reg2mem, !insn.addr !4705
  store i32 %13, i32* %r0.1.reg2mem, !insn.addr !4705
  br label %dec_label_pc_19ca6, !insn.addr !4705

dec_label_pc_1630c:                               ; preds = %dec_label_pc_162b8
  %15 = add i32 %arg1, 68, !insn.addr !4706
  %16 = inttoptr i32 %15 to i32*, !insn.addr !4706
  %17 = load i32, i32* %16, align 4, !insn.addr !4706
  %18 = add i32 %arg1, 72, !insn.addr !4707
  %19 = inttoptr i32 %18 to i32*, !insn.addr !4707
  %20 = load i32, i32* %19, align 4, !insn.addr !4707
  %21 = add i32 %arg1, 76, !insn.addr !4708
  %22 = inttoptr i32 %21 to i32*, !insn.addr !4708
  %23 = load i32, i32* %22, align 4, !insn.addr !4708
  %24 = add i32 %arg1, 80, !insn.addr !4709
  %25 = inttoptr i32 %24 to i32*, !insn.addr !4709
  %26 = load i32, i32* %25, align 4, !insn.addr !4709
  %27 = add i32 %arg1, 84, !insn.addr !4710
  %28 = inttoptr i32 %27 to i32*, !insn.addr !4710
  %29 = load i32, i32* %28, align 4, !insn.addr !4710
  %30 = add i32 %arg1, 88, !insn.addr !4711
  %31 = inttoptr i32 %30 to i32*, !insn.addr !4711
  %32 = load i32, i32* %31, align 4, !insn.addr !4711
  %33 = add i32 %arg1, 92, !insn.addr !4712
  %34 = inttoptr i32 %33 to i32*, !insn.addr !4712
  %35 = load i32, i32* %34, align 4, !insn.addr !4712
  %36 = add i32 %arg1, 96, !insn.addr !4713
  %37 = inttoptr i32 %36 to i32*, !insn.addr !4713
  %38 = load i32, i32* %37, align 4, !insn.addr !4713
  %39 = add i32 %arg1, 100, !insn.addr !4714
  %40 = inttoptr i32 %39 to i32*, !insn.addr !4714
  %41 = load i32, i32* %40, align 4, !insn.addr !4714
  %42 = add i32 %arg1, 104, !insn.addr !4715
  %43 = inttoptr i32 %42 to i32*, !insn.addr !4715
  %44 = load i32, i32* %43, align 4, !insn.addr !4715
  %45 = add i32 %arg1, 108, !insn.addr !4716
  %46 = inttoptr i32 %45 to i32*, !insn.addr !4716
  %47 = load i32, i32* %46, align 4, !insn.addr !4716
  %48 = add i32 %arg1, 112, !insn.addr !4717
  %49 = inttoptr i32 %48 to i32*, !insn.addr !4717
  %50 = load i32, i32* %49, align 4, !insn.addr !4717
  %51 = add i32 %arg1, 116, !insn.addr !4718
  %52 = inttoptr i32 %51 to i32*, !insn.addr !4718
  %53 = load i32, i32* %52, align 4, !insn.addr !4718
  %54 = add i32 %arg1, 120, !insn.addr !4719
  %55 = inttoptr i32 %54 to i32*, !insn.addr !4719
  %56 = load i32, i32* %55, align 4, !insn.addr !4719
  %57 = icmp eq i32 %arg3, 0, !insn.addr !4720
  store i32 %17, i32* %stack_var_-16.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %20, i32* %stack_var_-20.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %23, i32* %stack_var_-24.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %26, i32* %stack_var_-28.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %29, i32* %stack_var_-32.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %32, i32* %stack_var_-36.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %35, i32* %stack_var_-40.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %38, i32* %stack_var_-44.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %53, i32* %stack_var_-48.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %56, i32* %stack_var_-52.1.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %2, i32* %stack_var_-12.0.lcssa.reg2mem, !insn.addr !4721
  store i32 %arg1, i32* %r0.0.lcssa.reg2mem, !insn.addr !4721
  br i1 %57, label %dec_label_pc_19c2e, label %dec_label_pc_16380.lr.ph.lr.ph, !insn.addr !4721

dec_label_pc_16380.lr.ph.lr.ph:                   ; preds = %dec_label_pc_1630c
  %58 = xor i32 %41, 608135816
  %59 = xor i32 %44, -2052912941
  %60 = xor i32 %47, or (i32 ptrtoint (i32** @global_var_8a2e to i32), i32 320405504)
  %61 = xor i32 %50, 57701188
  %62 = add i32 %arg1, 4
  %63 = add i32 %arg1, 8
  %64 = add i32 %arg1, 12
  %65 = add i32 %arg1, 16
  %66 = add i32 %arg1, 20
  %67 = add i32 %arg1, 24
  %68 = add i32 %arg1, 28
  %69 = add i32 %arg1, 32
  %70 = add i32 %arg1, 36
  %71 = add i32 %arg1, 40
  %72 = add i32 %arg1, 44
  %73 = add i32 %arg1, 48
  %74 = add i32 %arg1, 52
  %75 = add i32 %arg1, 56
  %76 = add i32 %arg1, 60
  store i32 %56, i32* %stack_var_-52.1.ph43.reg2mem
  store i32 %53, i32* %stack_var_-48.0.ph42.reg2mem
  store i32 %38, i32* %stack_var_-44.0.ph41.reg2mem
  store i32 %35, i32* %stack_var_-40.0.ph40.reg2mem
  store i32 %32, i32* %stack_var_-36.0.ph39.reg2mem
  store i32 %29, i32* %stack_var_-32.0.ph38.reg2mem
  store i32 %26, i32* %stack_var_-28.0.ph37.reg2mem
  store i32 %23, i32* %stack_var_-24.0.ph36.reg2mem
  store i32 %20, i32* %stack_var_-20.0.ph35.reg2mem
  store i32 %17, i32* %stack_var_-16.0.ph34.reg2mem
  store i32 %2, i32* %stack_var_-12.0.ph33.reg2mem
  store i32 %arg3, i32* %stack_var_-220.0.ph32.reg2mem
  store i32 %arg2, i32* %stack_var_-216.0.ph31.reg2mem
  br label %dec_label_pc_16380.lr.ph

dec_label_pc_16380:                               ; preds = %dec_label_pc_16380.lr.ph, %dec_label_pc_19c26
  %stack_var_-216.05.reload = load i32, i32* %stack_var_-216.05.reg2mem
  %stack_var_-220.06.reload = load i32, i32* %stack_var_-220.06.reg2mem
  %stack_var_-12.07.reload = load i32, i32* %stack_var_-12.07.reg2mem
  %77 = sub i32 64, %stack_var_-12.07.reload, !insn.addr !4722
  %78 = icmp ult i32 %77, %stack_var_-220.06.reload, !insn.addr !4723
  %79 = icmp ne i1 %78, true, !insn.addr !4723
  %80 = icmp eq i32 %77, %stack_var_-220.06.reload, !insn.addr !4723
  %81 = icmp ne i1 %79, true, !insn.addr !4724
  %82 = or i1 %80, %81, !insn.addr !4724
  %spec.select = select i1 %82, i32 %77, i32 %stack_var_-220.06.reload
  %83 = add i32 %stack_var_-12.07.reload, %arg1, !insn.addr !4725
  %84 = inttoptr i32 %83 to i32*, !insn.addr !4726
  %85 = inttoptr i32 %stack_var_-216.05.reload to i32*, !insn.addr !4726
  %86 = call i32* @memcpy(i32* %84, i32* %85, i32 %spec.select), !insn.addr !4726
  %87 = add i32 %spec.select, %stack_var_-12.07.reload, !insn.addr !4727
  %88 = add i32 %spec.select, %stack_var_-216.05.reload, !insn.addr !4728
  %89 = sub i32 %stack_var_-220.06.reload, %spec.select, !insn.addr !4729
  %90 = icmp eq i32 %87, 64, !insn.addr !4730
  br i1 %90, label %dec_label_pc_163de, label %dec_label_pc_19c26, !insn.addr !4731

dec_label_pc_163de:                               ; preds = %dec_label_pc_16380
  %91 = add i32 %stack_var_-48.0.ph42.reload, 512, !insn.addr !4732
  %92 = icmp ult i32 %91, 511, !insn.addr !4733
  %93 = icmp ne i1 %92, true, !insn.addr !4733
  %94 = icmp eq i32 %91, 511, !insn.addr !4733
  %95 = icmp ne i1 %94, true, !insn.addr !4734
  %96 = icmp ne i1 %93, %95, !insn.addr !4734
  %97 = zext i1 %96 to i32
  %spec.select1 = add i32 %stack_var_-52.1.ph43.reload, %97
  %98 = xor i32 %91, -1542899678, !insn.addr !4735
  %99 = xor i32 %91, 698298832, !insn.addr !4736
  %100 = xor i32 %spec.select1, 137296536, !insn.addr !4737
  %101 = xor i32 %spec.select1, -330404727, !insn.addr !4738
  %102 = call i32 @sph_dec32be_aligned(i32 %arg1), !insn.addr !4739
  %103 = call i32 @sph_dec32be_aligned(i32 %62), !insn.addr !4740
  %104 = call i32 @sph_dec32be_aligned(i32 %63), !insn.addr !4741
  %105 = call i32 @sph_dec32be_aligned(i32 %64), !insn.addr !4742
  %106 = call i32 @sph_dec32be_aligned(i32 %65), !insn.addr !4743
  %107 = call i32 @sph_dec32be_aligned(i32 %66), !insn.addr !4744
  %108 = call i32 @sph_dec32be_aligned(i32 %67), !insn.addr !4745
  %109 = call i32 @sph_dec32be_aligned(i32 %68), !insn.addr !4746
  %110 = call i32 @sph_dec32be_aligned(i32 %69), !insn.addr !4747
  %111 = call i32 @sph_dec32be_aligned(i32 %70), !insn.addr !4748
  %112 = call i32 @sph_dec32be_aligned(i32 %71), !insn.addr !4749
  %113 = call i32 @sph_dec32be_aligned(i32 %72), !insn.addr !4750
  %114 = call i32 @sph_dec32be_aligned(i32 %73), !insn.addr !4751
  %115 = call i32 @sph_dec32be_aligned(i32 %74), !insn.addr !4752
  %116 = call i32 @sph_dec32be_aligned(i32 %75), !insn.addr !4753
  %117 = call i32 @sph_dec32be_aligned(i32 %76), !insn.addr !4754
  %118 = add i32 %stack_var_-16.0.ph34.reload, %stack_var_-32.0.ph38.reload, !insn.addr !4755
  %119 = xor i32 %102, -2052912941, !insn.addr !4756
  %120 = add i32 %118, %119, !insn.addr !4757
  %121 = xor i32 %98, %120, !insn.addr !4758
  %122 = udiv i32 %121, 65536, !insn.addr !4759
  %123 = mul i32 %121, 65536, !insn.addr !4759
  %124 = or i32 %122, %123, !insn.addr !4759
  %125 = add i32 %124, %58, !insn.addr !4760
  %126 = xor i32 %125, %stack_var_-32.0.ph38.reload, !insn.addr !4761
  %127 = udiv i32 %126, 4096, !insn.addr !4762
  %128 = mul i32 %126, 1048576, !insn.addr !4762
  %129 = or i32 %127, %128, !insn.addr !4762
  %130 = xor i32 %103, 608135816, !insn.addr !4763
  %131 = add i32 %130, %120, !insn.addr !4764
  %132 = add i32 %131, %129, !insn.addr !4765
  %133 = xor i32 %132, %124, !insn.addr !4766
  %134 = udiv i32 %133, 256, !insn.addr !4767
  %135 = mul i32 %133, 16777216, !insn.addr !4767
  %136 = or i32 %134, %135, !insn.addr !4767
  %137 = add i32 %136, %125, !insn.addr !4768
  %138 = xor i32 %137, %129, !insn.addr !4769
  %139 = udiv i32 %138, 128, !insn.addr !4770
  %140 = mul i32 %138, 33554432, !insn.addr !4770
  %141 = or i32 %139, %140, !insn.addr !4770
  %142 = add i32 %stack_var_-20.0.ph35.reload, %stack_var_-36.0.ph39.reload, !insn.addr !4771
  %143 = xor i32 %104, 57701188, !insn.addr !4772
  %144 = add i32 %142, %143, !insn.addr !4773
  %145 = xor i32 %99, %144, !insn.addr !4774
  %146 = udiv i32 %145, 65536, !insn.addr !4775
  %147 = mul i32 %145, 65536, !insn.addr !4775
  %148 = or i32 %146, %147, !insn.addr !4775
  %149 = add i32 %148, %59, !insn.addr !4776
  %150 = xor i32 %149, %stack_var_-36.0.ph39.reload, !insn.addr !4777
  %151 = udiv i32 %150, 4096, !insn.addr !4778
  %152 = mul i32 %150, 1048576, !insn.addr !4778
  %153 = or i32 %151, %152, !insn.addr !4778
  %154 = xor i32 %105, or (i32 ptrtoint (i32** @global_var_8a2e to i32), i32 320405504), !insn.addr !4779
  %155 = add i32 %154, %144, !insn.addr !4780
  %156 = add i32 %155, %153, !insn.addr !4781
  %157 = xor i32 %156, %148, !insn.addr !4782
  %158 = udiv i32 %157, 256, !insn.addr !4783
  %159 = mul i32 %157, 16777216, !insn.addr !4783
  %160 = or i32 %158, %159, !insn.addr !4783
  %161 = add i32 %160, %149, !insn.addr !4784
  %162 = xor i32 %161, %153, !insn.addr !4785
  %163 = udiv i32 %162, 128, !insn.addr !4786
  %164 = mul i32 %162, 33554432, !insn.addr !4786
  %165 = or i32 %163, %164, !insn.addr !4786
  %166 = add i32 %stack_var_-24.0.ph36.reload, %stack_var_-40.0.ph40.reload, !insn.addr !4787
  %167 = xor i32 %106, 698298832, !insn.addr !4788
  %168 = add i32 %166, %167, !insn.addr !4789
  %169 = xor i32 %100, %168, !insn.addr !4790
  %170 = udiv i32 %169, 65536, !insn.addr !4791
  %171 = mul i32 %169, 65536, !insn.addr !4791
  %172 = or i32 %170, %171, !insn.addr !4791
  %173 = add i32 %172, %60, !insn.addr !4792
  %174 = xor i32 %173, %stack_var_-40.0.ph40.reload, !insn.addr !4793
  %175 = udiv i32 %174, 4096, !insn.addr !4794
  %176 = mul i32 %174, 1048576, !insn.addr !4794
  %177 = or i32 %175, %176, !insn.addr !4794
  %178 = xor i32 %107, -1542899678, !insn.addr !4795
  %179 = add i32 %178, %168, !insn.addr !4796
  %180 = add i32 %179, %177, !insn.addr !4797
  %181 = xor i32 %180, %172, !insn.addr !4798
  %182 = udiv i32 %181, 256, !insn.addr !4799
  %183 = mul i32 %181, 16777216, !insn.addr !4799
  %184 = or i32 %182, %183, !insn.addr !4799
  %185 = add i32 %184, %173, !insn.addr !4800
  %186 = xor i32 %185, %177, !insn.addr !4801
  %187 = udiv i32 %186, 128, !insn.addr !4802
  %188 = mul i32 %186, 33554432, !insn.addr !4802
  %189 = or i32 %187, %188, !insn.addr !4802
  %190 = add i32 %stack_var_-28.0.ph37.reload, %stack_var_-44.0.ph41.reload, !insn.addr !4803
  %191 = xor i32 %108, -330404727, !insn.addr !4804
  %192 = add i32 %190, %191, !insn.addr !4805
  %193 = xor i32 %101, %192, !insn.addr !4806
  %194 = udiv i32 %193, 65536, !insn.addr !4807
  %195 = mul i32 %193, 65536, !insn.addr !4807
  %196 = or i32 %194, %195, !insn.addr !4807
  %197 = add i32 %196, %61, !insn.addr !4808
  %198 = xor i32 %197, %stack_var_-44.0.ph41.reload, !insn.addr !4809
  %199 = udiv i32 %198, 4096, !insn.addr !4810
  %200 = mul i32 %198, 1048576, !insn.addr !4810
  %201 = or i32 %199, %200, !insn.addr !4810
  %202 = xor i32 %109, 137296536, !insn.addr !4811
  %203 = add i32 %202, %192, !insn.addr !4812
  %204 = add i32 %203, %201, !insn.addr !4813
  %205 = xor i32 %204, %196, !insn.addr !4814
  %206 = udiv i32 %205, 256, !insn.addr !4815
  %207 = mul i32 %205, 16777216, !insn.addr !4815
  %208 = or i32 %206, %207, !insn.addr !4815
  %209 = add i32 %208, %197, !insn.addr !4816
  %210 = xor i32 %209, %201, !insn.addr !4817
  %211 = udiv i32 %210, 128, !insn.addr !4818
  %212 = mul i32 %210, 33554432, !insn.addr !4818
  %213 = or i32 %211, %212, !insn.addr !4818
  %214 = xor i32 %110, 953160567, !insn.addr !4819
  %215 = add i32 %132, %214, !insn.addr !4820
  %216 = add i32 %215, %165, !insn.addr !4821
  %217 = xor i32 %216, %208, !insn.addr !4822
  %218 = udiv i32 %217, 65536, !insn.addr !4823
  %219 = mul i32 %217, 65536, !insn.addr !4823
  %220 = or i32 %218, %219, !insn.addr !4823
  %221 = add i32 %220, %185, !insn.addr !4824
  %222 = xor i32 %221, %165, !insn.addr !4825
  %223 = udiv i32 %222, 4096, !insn.addr !4826
  %224 = mul i32 %222, 1048576, !insn.addr !4826
  %225 = or i32 %223, %224, !insn.addr !4826
  %226 = xor i32 %111, 1160258022, !insn.addr !4827
  %227 = add i32 %216, %226, !insn.addr !4828
  %228 = add i32 %227, %225, !insn.addr !4829
  %229 = xor i32 %228, %220, !insn.addr !4830
  %230 = udiv i32 %229, 256, !insn.addr !4831
  %231 = mul i32 %229, 16777216, !insn.addr !4831
  %232 = or i32 %230, %231, !insn.addr !4831
  %233 = add i32 %232, %221, !insn.addr !4832
  %234 = xor i32 %233, %225, !insn.addr !4833
  %235 = udiv i32 %234, 128, !insn.addr !4834
  %236 = mul i32 %234, 33554432, !insn.addr !4834
  %237 = or i32 %235, %236, !insn.addr !4834
  %238 = xor i32 %112, 887688300, !insn.addr !4835
  %239 = add i32 %156, %238, !insn.addr !4836
  %240 = add i32 %239, %189, !insn.addr !4837
  %241 = xor i32 %240, %136, !insn.addr !4838
  %242 = udiv i32 %241, 65536, !insn.addr !4839
  %243 = mul i32 %241, 65536, !insn.addr !4839
  %244 = or i32 %242, %243, !insn.addr !4839
  %245 = add i32 %244, %209, !insn.addr !4840
  %246 = xor i32 %245, %189, !insn.addr !4841
  %247 = udiv i32 %246, 4096, !insn.addr !4842
  %248 = mul i32 %246, 1048576, !insn.addr !4842
  %249 = or i32 %247, %248, !insn.addr !4842
  %250 = xor i32 %113, -1101764913, !insn.addr !4843
  %251 = add i32 %240, %250, !insn.addr !4844
  %252 = add i32 %251, %249, !insn.addr !4845
  %253 = xor i32 %252, %244, !insn.addr !4846
  %254 = udiv i32 %253, 256, !insn.addr !4847
  %255 = mul i32 %253, 16777216, !insn.addr !4847
  %256 = or i32 %254, %255, !insn.addr !4847
  %257 = add i32 %256, %245, !insn.addr !4848
  %258 = xor i32 %257, %249, !insn.addr !4849
  %259 = udiv i32 %258, 128, !insn.addr !4850
  %260 = mul i32 %258, 33554432, !insn.addr !4850
  %261 = or i32 %259, %260, !insn.addr !4850
  %262 = xor i32 %114, -914599715, !insn.addr !4851
  %263 = add i32 %180, %262, !insn.addr !4852
  %264 = add i32 %263, %213, !insn.addr !4853
  %265 = xor i32 %264, %160, !insn.addr !4854
  %266 = udiv i32 %265, 65536, !insn.addr !4855
  %267 = mul i32 %265, 65536, !insn.addr !4855
  %268 = or i32 %266, %267, !insn.addr !4855
  %269 = add i32 %268, %137, !insn.addr !4856
  %270 = xor i32 %269, %213, !insn.addr !4857
  %271 = udiv i32 %270, 4096, !insn.addr !4858
  %272 = mul i32 %270, 1048576, !insn.addr !4858
  %273 = or i32 %271, %272, !insn.addr !4858
  %274 = xor i32 %115, -1062458953, !insn.addr !4859
  %275 = add i32 %264, %274, !insn.addr !4860
  %276 = add i32 %275, %273, !insn.addr !4861
  %277 = xor i32 %276, %268, !insn.addr !4862
  %278 = udiv i32 %277, 256, !insn.addr !4863
  %279 = mul i32 %277, 16777216, !insn.addr !4863
  %280 = or i32 %278, %279, !insn.addr !4863
  %281 = add i32 %280, %269, !insn.addr !4864
  %282 = xor i32 %281, %273, !insn.addr !4865
  %283 = udiv i32 %282, 128, !insn.addr !4866
  %284 = mul i32 %282, 33554432, !insn.addr !4866
  %285 = or i32 %283, %284, !insn.addr !4866
  %286 = xor i32 %116, -1253635817, !insn.addr !4867
  %287 = add i32 %204, %286, !insn.addr !4868
  %288 = add i32 %287, %141, !insn.addr !4869
  %289 = xor i32 %288, %184, !insn.addr !4870
  %290 = udiv i32 %289, 65536, !insn.addr !4871
  %291 = mul i32 %289, 65536, !insn.addr !4871
  %292 = or i32 %290, %291, !insn.addr !4871
  %293 = add i32 %292, %161, !insn.addr !4872
  %294 = xor i32 %293, %141, !insn.addr !4873
  %295 = udiv i32 %294, 4096, !insn.addr !4874
  %296 = mul i32 %294, 1048576, !insn.addr !4874
  %297 = or i32 %295, %296, !insn.addr !4874
  %298 = xor i32 %117, 1065670069, !insn.addr !4875
  %299 = add i32 %288, %298, !insn.addr !4876
  %300 = add i32 %299, %297, !insn.addr !4877
  %301 = xor i32 %300, %292, !insn.addr !4878
  %302 = udiv i32 %301, 256, !insn.addr !4879
  %303 = mul i32 %301, 16777216, !insn.addr !4879
  %304 = or i32 %302, %303, !insn.addr !4879
  %305 = add i32 %304, %293, !insn.addr !4880
  %306 = xor i32 %305, %297, !insn.addr !4881
  %307 = udiv i32 %306, 128, !insn.addr !4882
  %308 = mul i32 %306, 33554432, !insn.addr !4882
  %309 = or i32 %307, %308, !insn.addr !4882
  %310 = xor i32 %116, -1101764913, !insn.addr !4883
  %311 = add i32 %228, %310, !insn.addr !4884
  %312 = add i32 %311, %309, !insn.addr !4885
  %313 = xor i32 %312, %256, !insn.addr !4886
  %314 = udiv i32 %313, 65536, !insn.addr !4887
  %315 = mul i32 %313, 65536, !insn.addr !4887
  %316 = or i32 %314, %315, !insn.addr !4887
  %317 = add i32 %316, %281, !insn.addr !4888
  %318 = xor i32 %317, %309, !insn.addr !4889
  %319 = udiv i32 %318, 4096, !insn.addr !4890
  %320 = mul i32 %318, 1048576, !insn.addr !4890
  %321 = or i32 %319, %320, !insn.addr !4890
  %322 = xor i32 %112, 1065670069, !insn.addr !4891
  %323 = add i32 %312, %322, !insn.addr !4892
  %324 = add i32 %323, %321, !insn.addr !4893
  %325 = xor i32 %324, %316, !insn.addr !4894
  %326 = udiv i32 %325, 256, !insn.addr !4895
  %327 = mul i32 %325, 16777216, !insn.addr !4895
  %328 = or i32 %326, %327, !insn.addr !4895
  %329 = add i32 %328, %317, !insn.addr !4896
  %330 = xor i32 %329, %321, !insn.addr !4897
  %331 = udiv i32 %330, 128, !insn.addr !4898
  %332 = mul i32 %330, 33554432, !insn.addr !4898
  %333 = or i32 %331, %332, !insn.addr !4898
  %334 = xor i32 %106, 1160258022, !insn.addr !4899
  %335 = add i32 %252, %334, !insn.addr !4900
  %336 = add i32 %335, %237, !insn.addr !4901
  %337 = xor i32 %336, %280, !insn.addr !4902
  %338 = udiv i32 %337, 65536, !insn.addr !4903
  %339 = mul i32 %337, 65536, !insn.addr !4903
  %340 = or i32 %338, %339, !insn.addr !4903
  %341 = add i32 %340, %305, !insn.addr !4904
  %342 = xor i32 %341, %237, !insn.addr !4905
  %343 = udiv i32 %342, 4096, !insn.addr !4906
  %344 = mul i32 %342, 1048576, !insn.addr !4906
  %345 = or i32 %343, %344, !insn.addr !4906
  %346 = xor i32 %110, -1542899678, !insn.addr !4907
  %347 = add i32 %336, %346, !insn.addr !4908
  %348 = add i32 %347, %345, !insn.addr !4909
  %349 = xor i32 %348, %340, !insn.addr !4910
  %350 = udiv i32 %349, 256, !insn.addr !4911
  %351 = mul i32 %349, 16777216, !insn.addr !4911
  %352 = or i32 %350, %351, !insn.addr !4911
  %353 = add i32 %352, %341, !insn.addr !4912
  %354 = xor i32 %353, %345, !insn.addr !4913
  %355 = udiv i32 %354, 128, !insn.addr !4914
  %356 = mul i32 %354, 33554432, !insn.addr !4914
  %357 = or i32 %355, %356, !insn.addr !4914
  %358 = xor i32 %111, -1253635817, !insn.addr !4915
  %359 = add i32 %276, %358, !insn.addr !4916
  %360 = add i32 %359, %261, !insn.addr !4917
  %361 = xor i32 %360, %304, !insn.addr !4918
  %362 = udiv i32 %361, 65536, !insn.addr !4919
  %363 = mul i32 %361, 65536, !insn.addr !4919
  %364 = or i32 %362, %363, !insn.addr !4919
  %365 = add i32 %364, %233, !insn.addr !4920
  %366 = xor i32 %365, %261, !insn.addr !4921
  %367 = udiv i32 %366, 4096, !insn.addr !4922
  %368 = mul i32 %366, 1048576, !insn.addr !4922
  %369 = or i32 %367, %368, !insn.addr !4922
  %370 = xor i32 %117, 953160567, !insn.addr !4923
  %371 = add i32 %360, %370, !insn.addr !4924
  %372 = add i32 %371, %369, !insn.addr !4925
  %373 = xor i32 %372, %364, !insn.addr !4926
  %374 = udiv i32 %373, 256, !insn.addr !4927
  %375 = mul i32 %373, 16777216, !insn.addr !4927
  %376 = or i32 %374, %375, !insn.addr !4927
  %377 = add i32 %376, %365, !insn.addr !4928
  %378 = xor i32 %377, %369, !insn.addr !4929
  %379 = udiv i32 %378, 128, !insn.addr !4930
  %380 = mul i32 %378, 33554432, !insn.addr !4930
  %381 = or i32 %379, %380, !insn.addr !4930
  %382 = xor i32 %115, 137296536, !insn.addr !4931
  %383 = add i32 %300, %382, !insn.addr !4932
  %384 = add i32 %383, %285, !insn.addr !4933
  %385 = xor i32 %384, %232, !insn.addr !4934
  %386 = udiv i32 %385, 65536, !insn.addr !4935
  %387 = mul i32 %385, 65536, !insn.addr !4935
  %388 = or i32 %386, %387, !insn.addr !4935
  %389 = add i32 %388, %257, !insn.addr !4936
  %390 = xor i32 %389, %285, !insn.addr !4937
  %391 = udiv i32 %390, 4096, !insn.addr !4938
  %392 = mul i32 %390, 1048576, !insn.addr !4938
  %393 = or i32 %391, %392, !insn.addr !4938
  %394 = xor i32 %108, -914599715, !insn.addr !4939
  %395 = add i32 %384, %394, !insn.addr !4940
  %396 = add i32 %395, %393, !insn.addr !4941
  %397 = xor i32 %396, %388, !insn.addr !4942
  %398 = udiv i32 %397, 256, !insn.addr !4943
  %399 = mul i32 %397, 16777216, !insn.addr !4943
  %400 = or i32 %398, %399, !insn.addr !4943
  %401 = add i32 %400, %389, !insn.addr !4944
  %402 = xor i32 %401, %393, !insn.addr !4945
  %403 = udiv i32 %402, 128, !insn.addr !4946
  %404 = mul i32 %402, 33554432, !insn.addr !4946
  %405 = or i32 %403, %404, !insn.addr !4946
  %406 = xor i32 %103, -1062458953, !insn.addr !4947
  %407 = add i32 %324, %406, !insn.addr !4948
  %408 = add i32 %407, %357, !insn.addr !4949
  %409 = xor i32 %408, %400, !insn.addr !4950
  %410 = udiv i32 %409, 65536, !insn.addr !4951
  %411 = mul i32 %409, 65536, !insn.addr !4951
  %412 = or i32 %410, %411, !insn.addr !4951
  %413 = add i32 %412, %377, !insn.addr !4952
  %414 = xor i32 %413, %357, !insn.addr !4953
  %415 = udiv i32 %414, 4096, !insn.addr !4954
  %416 = mul i32 %414, 1048576, !insn.addr !4954
  %417 = or i32 %415, %416, !insn.addr !4954
  %418 = xor i32 %114, -2052912941, !insn.addr !4955
  %419 = add i32 %408, %418, !insn.addr !4956
  %420 = add i32 %419, %417, !insn.addr !4957
  %421 = xor i32 %420, %412, !insn.addr !4958
  %422 = udiv i32 %421, 256, !insn.addr !4959
  %423 = mul i32 %421, 16777216, !insn.addr !4959
  %424 = or i32 %422, %423, !insn.addr !4959
  %425 = add i32 %424, %413, !insn.addr !4960
  %426 = xor i32 %425, %417, !insn.addr !4961
  %427 = udiv i32 %426, 128, !insn.addr !4962
  %428 = mul i32 %426, 33554432, !insn.addr !4962
  %429 = or i32 %427, %428, !insn.addr !4962
  %430 = xor i32 %102, or (i32 ptrtoint (i32** @global_var_8a2e to i32), i32 320405504), !insn.addr !4963
  %431 = add i32 %348, %430, !insn.addr !4964
  %432 = add i32 %431, %381, !insn.addr !4965
  %433 = xor i32 %432, %328, !insn.addr !4966
  %434 = udiv i32 %433, 65536, !insn.addr !4967
  %435 = mul i32 %433, 65536, !insn.addr !4967
  %436 = or i32 %434, %435, !insn.addr !4967
  %437 = add i32 %436, %401, !insn.addr !4968
  %438 = xor i32 %437, %381, !insn.addr !4969
  %439 = udiv i32 %438, 4096, !insn.addr !4970
  %440 = mul i32 %438, 1048576, !insn.addr !4970
  %441 = or i32 %439, %440, !insn.addr !4970
  %442 = xor i32 %104, 608135816, !insn.addr !4971
  %443 = add i32 %432, %442, !insn.addr !4972
  %444 = add i32 %443, %441, !insn.addr !4973
  %445 = xor i32 %444, %436, !insn.addr !4974
  %446 = udiv i32 %445, 256, !insn.addr !4975
  %447 = mul i32 %445, 16777216, !insn.addr !4975
  %448 = or i32 %446, %447, !insn.addr !4975
  %449 = add i32 %448, %437, !insn.addr !4976
  %450 = xor i32 %449, %441, !insn.addr !4977
  %451 = udiv i32 %450, 128, !insn.addr !4978
  %452 = mul i32 %450, 33554432, !insn.addr !4978
  %453 = or i32 %451, %452, !insn.addr !4978
  %454 = xor i32 %113, -330404727, !insn.addr !4979
  %455 = add i32 %372, %454, !insn.addr !4980
  %456 = add i32 %455, %405, !insn.addr !4981
  %457 = xor i32 %456, %352, !insn.addr !4982
  %458 = udiv i32 %457, 65536, !insn.addr !4983
  %459 = mul i32 %457, 65536, !insn.addr !4983
  %460 = or i32 %458, %459, !insn.addr !4983
  %461 = add i32 %460, %329, !insn.addr !4984
  %462 = xor i32 %461, %405, !insn.addr !4985
  %463 = udiv i32 %462, 4096, !insn.addr !4986
  %464 = mul i32 %462, 1048576, !insn.addr !4986
  %465 = or i32 %463, %464, !insn.addr !4986
  %466 = xor i32 %109, 887688300, !insn.addr !4987
  %467 = add i32 %456, %466, !insn.addr !4988
  %468 = add i32 %467, %465, !insn.addr !4989
  %469 = xor i32 %468, %460, !insn.addr !4990
  %470 = udiv i32 %469, 256, !insn.addr !4991
  %471 = mul i32 %469, 16777216, !insn.addr !4991
  %472 = or i32 %470, %471, !insn.addr !4991
  %473 = add i32 %472, %461, !insn.addr !4992
  %474 = xor i32 %473, %465, !insn.addr !4993
  %475 = udiv i32 %474, 128, !insn.addr !4994
  %476 = mul i32 %474, 33554432, !insn.addr !4994
  %477 = or i32 %475, %476, !insn.addr !4994
  %478 = xor i32 %107, 57701188, !insn.addr !4995
  %479 = add i32 %396, %478, !insn.addr !4996
  %480 = add i32 %479, %333, !insn.addr !4997
  %481 = xor i32 %480, %376, !insn.addr !4998
  %482 = udiv i32 %481, 65536, !insn.addr !4999
  %483 = mul i32 %481, 65536, !insn.addr !4999
  %484 = or i32 %482, %483, !insn.addr !4999
  %485 = add i32 %484, %353, !insn.addr !5000
  %486 = xor i32 %485, %333, !insn.addr !5001
  %487 = udiv i32 %486, 4096, !insn.addr !5002
  %488 = mul i32 %486, 1048576, !insn.addr !5002
  %489 = or i32 %487, %488, !insn.addr !5002
  %490 = xor i32 %105, 698298832, !insn.addr !5003
  %491 = add i32 %480, %490, !insn.addr !5004
  %492 = add i32 %491, %489, !insn.addr !5005
  %493 = xor i32 %492, %484, !insn.addr !5006
  %494 = udiv i32 %493, 256, !insn.addr !5007
  %495 = mul i32 %493, 16777216, !insn.addr !5007
  %496 = or i32 %494, %495, !insn.addr !5007
  %497 = add i32 %496, %485, !insn.addr !5008
  %498 = xor i32 %497, %489, !insn.addr !5009
  %499 = udiv i32 %498, 128, !insn.addr !5010
  %500 = mul i32 %498, 33554432, !insn.addr !5010
  %501 = or i32 %499, %500, !insn.addr !5010
  %502 = xor i32 %113, 1160258022, !insn.addr !5011
  %503 = add i32 %420, %502, !insn.addr !5012
  %504 = add i32 %503, %501, !insn.addr !5013
  %505 = xor i32 %504, %448, !insn.addr !5014
  %506 = udiv i32 %505, 65536, !insn.addr !5015
  %507 = mul i32 %505, 65536, !insn.addr !5015
  %508 = or i32 %506, %507, !insn.addr !5015
  %509 = add i32 %508, %473, !insn.addr !5016
  %510 = xor i32 %509, %501, !insn.addr !5017
  %511 = udiv i32 %510, 4096, !insn.addr !5018
  %512 = mul i32 %510, 1048576, !insn.addr !5018
  %513 = or i32 %511, %512, !insn.addr !5018
  %514 = xor i32 %110, 887688300, !insn.addr !5019
  %515 = add i32 %504, %514, !insn.addr !5020
  %516 = add i32 %515, %513, !insn.addr !5021
  %517 = xor i32 %516, %508, !insn.addr !5022
  %518 = udiv i32 %517, 256, !insn.addr !5023
  %519 = mul i32 %517, 16777216, !insn.addr !5023
  %520 = or i32 %518, %519, !insn.addr !5023
  %521 = add i32 %520, %509, !insn.addr !5024
  %522 = xor i32 %521, %513, !insn.addr !5025
  %523 = udiv i32 %522, 128, !insn.addr !5026
  %524 = mul i32 %522, 33554432, !insn.addr !5026
  %525 = or i32 %523, %524, !insn.addr !5026
  %526 = xor i32 %114, 608135816, !insn.addr !5027
  %527 = add i32 %444, %526, !insn.addr !5028
  %528 = add i32 %527, %429, !insn.addr !5029
  %529 = xor i32 %528, %472, !insn.addr !5030
  %530 = udiv i32 %529, 65536, !insn.addr !5031
  %531 = mul i32 %529, 65536, !insn.addr !5031
  %532 = or i32 %530, %531, !insn.addr !5031
  %533 = add i32 %532, %497, !insn.addr !5032
  %534 = xor i32 %533, %429, !insn.addr !5033
  %535 = udiv i32 %534, 4096, !insn.addr !5034
  %536 = mul i32 %534, 1048576, !insn.addr !5034
  %537 = or i32 %535, %536, !insn.addr !5034
  %538 = xor i32 %102, -1062458953, !insn.addr !5035
  %539 = add i32 %528, %538, !insn.addr !5036
  %540 = add i32 %539, %537, !insn.addr !5037
  %541 = xor i32 %540, %532, !insn.addr !5038
  %542 = udiv i32 %541, 256, !insn.addr !5039
  %543 = mul i32 %541, 16777216, !insn.addr !5039
  %544 = or i32 %542, %543, !insn.addr !5039
  %545 = add i32 %544, %533, !insn.addr !5040
  %546 = xor i32 %545, %537, !insn.addr !5041
  %547 = udiv i32 %546, 128, !insn.addr !5042
  %548 = mul i32 %546, 33554432, !insn.addr !5042
  %549 = or i32 %547, %548, !insn.addr !5042
  %550 = xor i32 %107, or (i32 ptrtoint (i32** @global_var_8a2e to i32), i32 320405504), !insn.addr !5043
  %551 = add i32 %468, %550, !insn.addr !5044
  %552 = add i32 %551, %453, !insn.addr !5045
  %553 = xor i32 %552, %496, !insn.addr !5046
  %554 = udiv i32 %553, 65536, !insn.addr !5047
  %555 = mul i32 %553, 65536, !insn.addr !5047
  %556 = or i32 %554, %555, !insn.addr !5047
  %557 = add i32 %556, %425, !insn.addr !5048
  %558 = xor i32 %557, %453, !insn.addr !5049
  %559 = udiv i32 %558, 4096, !insn.addr !5050
  %560 = mul i32 %558, 1048576, !insn.addr !5050
  %561 = or i32 %559, %560, !insn.addr !5050
  %562 = xor i32 %104, 698298832, !insn.addr !5051
  %563 = add i32 %552, %562, !insn.addr !5052
  %564 = add i32 %563, %561, !insn.addr !5053
  %565 = xor i32 %564, %556, !insn.addr !5054
  %566 = udiv i32 %565, 256, !insn.addr !5055
  %567 = mul i32 %565, 16777216, !insn.addr !5055
  %568 = or i32 %566, %567, !insn.addr !5055
  %569 = add i32 %568, %557, !insn.addr !5056
  %570 = xor i32 %569, %561, !insn.addr !5057
  %571 = udiv i32 %570, 128, !insn.addr !5058
  %572 = mul i32 %570, 33554432, !insn.addr !5058
  %573 = or i32 %571, %572, !insn.addr !5058
  %574 = xor i32 %117, -914599715, !insn.addr !5059
  %575 = add i32 %492, %574, !insn.addr !5060
  %576 = add i32 %575, %477, !insn.addr !5061
  %577 = xor i32 %576, %424, !insn.addr !5062
  %578 = udiv i32 %577, 65536, !insn.addr !5063
  %579 = mul i32 %577, 65536, !insn.addr !5063
  %580 = or i32 %578, %579, !insn.addr !5063
  %581 = add i32 %580, %449, !insn.addr !5064
  %582 = xor i32 %581, %477, !insn.addr !5065
  %583 = udiv i32 %582, 4096, !insn.addr !5066
  %584 = mul i32 %582, 1048576, !insn.addr !5066
  %585 = or i32 %583, %584, !insn.addr !5066
  %586 = xor i32 %115, -1253635817, !insn.addr !5067
  %587 = add i32 %576, %586, !insn.addr !5068
  %588 = add i32 %587, %585, !insn.addr !5069
  %589 = xor i32 %588, %580, !insn.addr !5070
  %590 = udiv i32 %589, 256, !insn.addr !5071
  %591 = mul i32 %589, 16777216, !insn.addr !5071
  %592 = or i32 %590, %591, !insn.addr !5071
  %593 = add i32 %592, %581, !insn.addr !5072
  %594 = xor i32 %593, %585, !insn.addr !5073
  %595 = udiv i32 %594, 128, !insn.addr !5074
  %596 = mul i32 %594, 33554432, !insn.addr !5074
  %597 = or i32 %595, %596, !insn.addr !5074
  %598 = add i32 %516, %322, !insn.addr !5075
  %599 = add i32 %598, %549, !insn.addr !5076
  %600 = xor i32 %599, %592, !insn.addr !5077
  %601 = udiv i32 %600, 65536, !insn.addr !5078
  %602 = mul i32 %600, 65536, !insn.addr !5078
  %603 = or i32 %601, %602, !insn.addr !5078
  %604 = add i32 %603, %569, !insn.addr !5079
  %605 = xor i32 %604, %549, !insn.addr !5080
  %606 = udiv i32 %605, 4096, !insn.addr !5081
  %607 = mul i32 %605, 1048576, !insn.addr !5081
  %608 = or i32 %606, %607, !insn.addr !5081
  %609 = add i32 %599, %310, !insn.addr !5082
  %610 = add i32 %609, %608, !insn.addr !5083
  %611 = xor i32 %610, %603, !insn.addr !5084
  %612 = udiv i32 %611, 256, !insn.addr !5085
  %613 = mul i32 %611, 16777216, !insn.addr !5085
  %614 = or i32 %612, %613, !insn.addr !5085
  %615 = add i32 %614, %604, !insn.addr !5086
  %616 = xor i32 %615, %608, !insn.addr !5087
  %617 = udiv i32 %616, 128, !insn.addr !5088
  %618 = mul i32 %616, 33554432, !insn.addr !5088
  %619 = or i32 %617, %618, !insn.addr !5088
  %620 = xor i32 %105, 137296536, !insn.addr !5089
  %621 = add i32 %540, %620, !insn.addr !5090
  %622 = add i32 %621, %573, !insn.addr !5091
  %623 = xor i32 %622, %520, !insn.addr !5092
  %624 = udiv i32 %623, 65536, !insn.addr !5093
  %625 = mul i32 %623, 65536, !insn.addr !5093
  %626 = or i32 %624, %625, !insn.addr !5093
  %627 = add i32 %626, %593, !insn.addr !5094
  %628 = xor i32 %627, %573, !insn.addr !5095
  %629 = udiv i32 %628, 4096, !insn.addr !5096
  %630 = mul i32 %628, 1048576, !insn.addr !5096
  %631 = or i32 %629, %630, !insn.addr !5096
  %632 = xor i32 %108, 57701188, !insn.addr !5097
  %633 = add i32 %622, %632, !insn.addr !5098
  %634 = add i32 %633, %631, !insn.addr !5099
  %635 = xor i32 %634, %626, !insn.addr !5100
  %636 = udiv i32 %635, 256, !insn.addr !5101
  %637 = mul i32 %635, 16777216, !insn.addr !5101
  %638 = or i32 %636, %637, !insn.addr !5101
  %639 = add i32 %638, %627, !insn.addr !5102
  %640 = xor i32 %639, %631, !insn.addr !5103
  %641 = udiv i32 %640, 128, !insn.addr !5104
  %642 = mul i32 %640, 33554432, !insn.addr !5104
  %643 = or i32 %641, %642, !insn.addr !5104
  %644 = xor i32 %109, -2052912941, !insn.addr !5105
  %645 = add i32 %564, %644, !insn.addr !5106
  %646 = add i32 %645, %597, !insn.addr !5107
  %647 = xor i32 %646, %544, !insn.addr !5108
  %648 = udiv i32 %647, 65536, !insn.addr !5109
  %649 = mul i32 %647, 65536, !insn.addr !5109
  %650 = or i32 %648, %649, !insn.addr !5109
  %651 = add i32 %650, %521, !insn.addr !5110
  %652 = xor i32 %651, %597, !insn.addr !5111
  %653 = udiv i32 %652, 4096, !insn.addr !5112
  %654 = mul i32 %652, 1048576, !insn.addr !5112
  %655 = or i32 %653, %654, !insn.addr !5112
  %656 = xor i32 %103, -330404727, !insn.addr !5113
  %657 = add i32 %646, %656, !insn.addr !5114
  %658 = add i32 %657, %655, !insn.addr !5115
  %659 = xor i32 %658, %650, !insn.addr !5116
  %660 = udiv i32 %659, 256, !insn.addr !5117
  %661 = mul i32 %659, 16777216, !insn.addr !5117
  %662 = or i32 %660, %661, !insn.addr !5117
  %663 = add i32 %662, %651, !insn.addr !5118
  %664 = xor i32 %663, %655, !insn.addr !5119
  %665 = udiv i32 %664, 128, !insn.addr !5120
  %666 = mul i32 %664, 33554432, !insn.addr !5120
  %667 = or i32 %665, %666, !insn.addr !5120
  %668 = xor i32 %111, -1542899678, !insn.addr !5121
  %669 = add i32 %588, %668, !insn.addr !5122
  %670 = add i32 %669, %525, !insn.addr !5123
  %671 = xor i32 %670, %568, !insn.addr !5124
  %672 = udiv i32 %671, 65536, !insn.addr !5125
  %673 = mul i32 %671, 65536, !insn.addr !5125
  %674 = or i32 %672, %673, !insn.addr !5125
  %675 = add i32 %674, %545, !insn.addr !5126
  %676 = xor i32 %675, %525, !insn.addr !5127
  %677 = udiv i32 %676, 4096, !insn.addr !5128
  %678 = mul i32 %676, 1048576, !insn.addr !5128
  %679 = or i32 %677, %678, !insn.addr !5128
  %680 = xor i32 %106, 953160567, !insn.addr !5129
  %681 = add i32 %670, %680, !insn.addr !5130
  %682 = add i32 %681, %679, !insn.addr !5131
  %683 = xor i32 %682, %674, !insn.addr !5132
  %684 = udiv i32 %683, 256, !insn.addr !5133
  %685 = mul i32 %683, 16777216, !insn.addr !5133
  %686 = or i32 %684, %685, !insn.addr !5133
  %687 = add i32 %686, %675, !insn.addr !5134
  %688 = xor i32 %687, %679, !insn.addr !5135
  %689 = udiv i32 %688, 128, !insn.addr !5136
  %690 = mul i32 %688, 33554432, !insn.addr !5136
  %691 = or i32 %689, %690, !insn.addr !5136
  %692 = xor i32 %109, 953160567, !insn.addr !5137
  %693 = add i32 %610, %692, !insn.addr !5138
  %694 = add i32 %693, %691, !insn.addr !5139
  %695 = xor i32 %694, %638, !insn.addr !5140
  %696 = udiv i32 %695, 65536, !insn.addr !5141
  %697 = mul i32 %695, 65536, !insn.addr !5141
  %698 = or i32 %696, %697, !insn.addr !5141
  %699 = add i32 %698, %663, !insn.addr !5142
  %700 = xor i32 %699, %691, !insn.addr !5143
  %701 = udiv i32 %700, 4096, !insn.addr !5144
  %702 = mul i32 %700, 1048576, !insn.addr !5144
  %703 = or i32 %701, %702, !insn.addr !5144
  %704 = xor i32 %111, -330404727, !insn.addr !5145
  %705 = add i32 %694, %704, !insn.addr !5146
  %706 = add i32 %705, %703, !insn.addr !5147
  %707 = xor i32 %706, %698, !insn.addr !5148
  %708 = udiv i32 %707, 256, !insn.addr !5149
  %709 = mul i32 %707, 16777216, !insn.addr !5149
  %710 = or i32 %708, %709, !insn.addr !5149
  %711 = add i32 %710, %699, !insn.addr !5150
  %712 = xor i32 %711, %703, !insn.addr !5151
  %713 = udiv i32 %712, 128, !insn.addr !5152
  %714 = mul i32 %712, 33554432, !insn.addr !5152
  %715 = or i32 %713, %714, !insn.addr !5152
  %716 = xor i32 %105, -2052912941, !insn.addr !5153
  %717 = add i32 %634, %716, !insn.addr !5154
  %718 = add i32 %717, %619, !insn.addr !5155
  %719 = xor i32 %718, %662, !insn.addr !5156
  %720 = udiv i32 %719, 65536, !insn.addr !5157
  %721 = mul i32 %719, 65536, !insn.addr !5157
  %722 = or i32 %720, %721, !insn.addr !5157
  %723 = add i32 %722, %687, !insn.addr !5158
  %724 = xor i32 %723, %619, !insn.addr !5159
  %725 = udiv i32 %724, 4096, !insn.addr !5160
  %726 = mul i32 %724, 1048576, !insn.addr !5160
  %727 = or i32 %725, %726, !insn.addr !5160
  %728 = xor i32 %103, 57701188, !insn.addr !5161
  %729 = add i32 %718, %728, !insn.addr !5162
  %730 = add i32 %729, %727, !insn.addr !5163
  %731 = xor i32 %730, %722, !insn.addr !5164
  %732 = udiv i32 %731, 256, !insn.addr !5165
  %733 = mul i32 %731, 16777216, !insn.addr !5165
  %734 = or i32 %732, %733, !insn.addr !5165
  %735 = add i32 %734, %723, !insn.addr !5166
  %736 = xor i32 %735, %727, !insn.addr !5167
  %737 = udiv i32 %736, 128, !insn.addr !5168
  %738 = mul i32 %736, 33554432, !insn.addr !5168
  %739 = or i32 %737, %738, !insn.addr !5168
  %740 = add i32 %658, %274, !insn.addr !5169
  %741 = add i32 %740, %643, !insn.addr !5170
  %742 = xor i32 %741, %686, !insn.addr !5171
  %743 = udiv i32 %742, 65536, !insn.addr !5172
  %744 = mul i32 %742, 65536, !insn.addr !5172
  %745 = or i32 %743, %744, !insn.addr !5172
  %746 = add i32 %745, %615, !insn.addr !5173
  %747 = xor i32 %746, %643, !insn.addr !5174
  %748 = udiv i32 %747, 4096, !insn.addr !5175
  %749 = mul i32 %747, 1048576, !insn.addr !5175
  %750 = or i32 %748, %749, !insn.addr !5175
  %751 = add i32 %741, %262, !insn.addr !5176
  %752 = add i32 %751, %750, !insn.addr !5177
  %753 = xor i32 %752, %745, !insn.addr !5178
  %754 = udiv i32 %753, 256, !insn.addr !5179
  %755 = mul i32 %753, 16777216, !insn.addr !5179
  %756 = or i32 %754, %755, !insn.addr !5179
  %757 = add i32 %756, %746, !insn.addr !5180
  %758 = xor i32 %757, %750, !insn.addr !5181
  %759 = udiv i32 %758, 128, !insn.addr !5182
  %760 = mul i32 %758, 33554432, !insn.addr !5182
  %761 = or i32 %759, %760, !insn.addr !5182
  %762 = xor i32 %113, 1065670069, !insn.addr !5183
  %763 = add i32 %682, %762, !insn.addr !5184
  %764 = add i32 %763, %667, !insn.addr !5185
  %765 = xor i32 %764, %614, !insn.addr !5186
  %766 = udiv i32 %765, 65536, !insn.addr !5187
  %767 = mul i32 %765, 65536, !insn.addr !5187
  %768 = or i32 %766, %767, !insn.addr !5187
  %769 = add i32 %768, %639, !insn.addr !5188
  %770 = xor i32 %769, %667, !insn.addr !5189
  %771 = udiv i32 %770, 4096, !insn.addr !5190
  %772 = mul i32 %770, 1048576, !insn.addr !5190
  %773 = or i32 %771, %772, !insn.addr !5190
  %774 = xor i32 %116, 887688300, !insn.addr !5191
  %775 = add i32 %764, %774, !insn.addr !5192
  %776 = add i32 %775, %773, !insn.addr !5193
  %777 = xor i32 %776, %768, !insn.addr !5194
  %778 = udiv i32 %777, 256, !insn.addr !5195
  %779 = mul i32 %777, 16777216, !insn.addr !5195
  %780 = or i32 %778, %779, !insn.addr !5195
  %781 = add i32 %780, %769, !insn.addr !5196
  %782 = xor i32 %781, %773, !insn.addr !5197
  %783 = udiv i32 %782, 128, !insn.addr !5198
  %784 = mul i32 %782, 33554432, !insn.addr !5198
  %785 = or i32 %783, %784, !insn.addr !5198
  %786 = xor i32 %104, 137296536, !insn.addr !5199
  %787 = add i32 %706, %786, !insn.addr !5200
  %788 = add i32 %787, %739, !insn.addr !5201
  %789 = xor i32 %788, %780, !insn.addr !5202
  %790 = udiv i32 %789, 65536, !insn.addr !5203
  %791 = mul i32 %789, 65536, !insn.addr !5203
  %792 = or i32 %790, %791, !insn.addr !5203
  %793 = add i32 %792, %757, !insn.addr !5204
  %794 = xor i32 %793, %739, !insn.addr !5205
  %795 = udiv i32 %794, 4096, !insn.addr !5206
  %796 = mul i32 %794, 1048576, !insn.addr !5206
  %797 = or i32 %795, %796, !insn.addr !5206
  %798 = xor i32 %108, or (i32 ptrtoint (i32** @global_var_8a2e to i32), i32 320405504), !insn.addr !5207
  %799 = add i32 %788, %798, !insn.addr !5208
  %800 = add i32 %799, %797, !insn.addr !5209
  %801 = xor i32 %800, %792, !insn.addr !5210
  %802 = udiv i32 %801, 256, !insn.addr !5211
  %803 = mul i32 %801, 16777216, !insn.addr !5211
  %804 = or i32 %802, %803, !insn.addr !5211
  %805 = add i32 %804, %793, !insn.addr !5212
  %806 = xor i32 %805, %797, !insn.addr !5213
  %807 = udiv i32 %806, 128, !insn.addr !5214
  %808 = mul i32 %806, 33554432, !insn.addr !5214
  %809 = or i32 %807, %808, !insn.addr !5214
  %810 = xor i32 %107, -1101764913, !insn.addr !5215
  %811 = add i32 %730, %810, !insn.addr !5216
  %812 = add i32 %811, %761, !insn.addr !5217
  %813 = xor i32 %812, %710, !insn.addr !5218
  %814 = udiv i32 %813, 65536, !insn.addr !5219
  %815 = mul i32 %813, 65536, !insn.addr !5219
  %816 = or i32 %814, %815, !insn.addr !5219
  %817 = add i32 %816, %781, !insn.addr !5220
  %818 = xor i32 %817, %761, !insn.addr !5221
  %819 = udiv i32 %818, 4096, !insn.addr !5222
  %820 = mul i32 %818, 1048576, !insn.addr !5222
  %821 = or i32 %819, %820, !insn.addr !5222
  %822 = xor i32 %112, 698298832, !insn.addr !5223
  %823 = add i32 %812, %822, !insn.addr !5224
  %824 = add i32 %823, %821, !insn.addr !5225
  %825 = xor i32 %824, %816, !insn.addr !5226
  %826 = udiv i32 %825, 256, !insn.addr !5227
  %827 = mul i32 %825, 16777216, !insn.addr !5227
  %828 = or i32 %826, %827, !insn.addr !5227
  %829 = add i32 %828, %817, !insn.addr !5228
  %830 = xor i32 %829, %821, !insn.addr !5229
  %831 = udiv i32 %830, 128, !insn.addr !5230
  %832 = mul i32 %830, 33554432, !insn.addr !5230
  %833 = or i32 %831, %832, !insn.addr !5230
  %834 = xor i32 %106, 608135816, !insn.addr !5231
  %835 = add i32 %752, %834, !insn.addr !5232
  %836 = add i32 %835, %785, !insn.addr !5233
  %837 = xor i32 %836, %734, !insn.addr !5234
  %838 = udiv i32 %837, 65536, !insn.addr !5235
  %839 = mul i32 %837, 65536, !insn.addr !5235
  %840 = or i32 %838, %839, !insn.addr !5235
  %841 = add i32 %840, %711, !insn.addr !5236
  %842 = xor i32 %841, %785, !insn.addr !5237
  %843 = udiv i32 %842, 4096, !insn.addr !5238
  %844 = mul i32 %842, 1048576, !insn.addr !5238
  %845 = or i32 %843, %844, !insn.addr !5238
  %846 = xor i32 %102, -1542899678, !insn.addr !5239
  %847 = add i32 %836, %846, !insn.addr !5240
  %848 = add i32 %847, %845, !insn.addr !5241
  %849 = xor i32 %848, %840, !insn.addr !5242
  %850 = udiv i32 %849, 256, !insn.addr !5243
  %851 = mul i32 %849, 16777216, !insn.addr !5243
  %852 = or i32 %850, %851, !insn.addr !5243
  %853 = add i32 %852, %841, !insn.addr !5244
  %854 = xor i32 %853, %845, !insn.addr !5245
  %855 = udiv i32 %854, 128, !insn.addr !5246
  %856 = mul i32 %854, 33554432, !insn.addr !5246
  %857 = or i32 %855, %856, !insn.addr !5246
  %858 = xor i32 %117, 1160258022, !insn.addr !5247
  %859 = add i32 %776, %858, !insn.addr !5248
  %860 = add i32 %859, %715, !insn.addr !5249
  %861 = xor i32 %860, %756, !insn.addr !5250
  %862 = udiv i32 %861, 65536, !insn.addr !5251
  %863 = mul i32 %861, 65536, !insn.addr !5251
  %864 = or i32 %862, %863, !insn.addr !5251
  %865 = add i32 %864, %735, !insn.addr !5252
  %866 = xor i32 %865, %715, !insn.addr !5253
  %867 = udiv i32 %866, 4096, !insn.addr !5254
  %868 = mul i32 %866, 1048576, !insn.addr !5254
  %869 = or i32 %867, %868, !insn.addr !5254
  %870 = xor i32 %110, -1253635817, !insn.addr !5255
  %871 = add i32 %860, %870, !insn.addr !5256
  %872 = add i32 %871, %869, !insn.addr !5257
  %873 = xor i32 %872, %864, !insn.addr !5258
  %874 = udiv i32 %873, 256, !insn.addr !5259
  %875 = mul i32 %873, 16777216, !insn.addr !5259
  %876 = or i32 %874, %875, !insn.addr !5259
  %877 = add i32 %876, %865, !insn.addr !5260
  %878 = xor i32 %877, %869, !insn.addr !5261
  %879 = udiv i32 %878, 128, !insn.addr !5262
  %880 = mul i32 %878, 33554432, !insn.addr !5262
  %881 = or i32 %879, %880, !insn.addr !5262
  %882 = xor i32 %111, 608135816, !insn.addr !5263
  %883 = add i32 %800, %882, !insn.addr !5264
  %884 = add i32 %883, %881, !insn.addr !5265
  %885 = xor i32 %884, %828, !insn.addr !5266
  %886 = udiv i32 %885, 65536, !insn.addr !5267
  %887 = mul i32 %885, 65536, !insn.addr !5267
  %888 = or i32 %886, %887, !insn.addr !5267
  %889 = add i32 %888, %853, !insn.addr !5268
  %890 = xor i32 %889, %881, !insn.addr !5269
  %891 = udiv i32 %890, 4096, !insn.addr !5270
  %892 = mul i32 %890, 1048576, !insn.addr !5270
  %893 = or i32 %891, %892, !insn.addr !5270
  %894 = xor i32 %102, 953160567, !insn.addr !5271
  %895 = add i32 %884, %894, !insn.addr !5272
  %896 = add i32 %895, %893, !insn.addr !5273
  %897 = xor i32 %896, %888, !insn.addr !5274
  %898 = udiv i32 %897, 256, !insn.addr !5275
  %899 = mul i32 %897, 16777216, !insn.addr !5275
  %900 = or i32 %898, %899, !insn.addr !5275
  %901 = add i32 %900, %889, !insn.addr !5276
  %902 = xor i32 %901, %893, !insn.addr !5277
  %903 = udiv i32 %902, 128, !insn.addr !5278
  %904 = mul i32 %902, 33554432, !insn.addr !5278
  %905 = or i32 %903, %904, !insn.addr !5278
  %906 = xor i32 %107, -330404727, !insn.addr !5279
  %907 = add i32 %824, %906, !insn.addr !5280
  %908 = add i32 %907, %809, !insn.addr !5281
  %909 = xor i32 %908, %852, !insn.addr !5282
  %910 = udiv i32 %909, 65536, !insn.addr !5283
  %911 = mul i32 %909, 65536, !insn.addr !5283
  %912 = or i32 %910, %911, !insn.addr !5283
  %913 = add i32 %912, %877, !insn.addr !5284
  %914 = xor i32 %913, %809, !insn.addr !5285
  %915 = udiv i32 %914, 4096, !insn.addr !5286
  %916 = mul i32 %914, 1048576, !insn.addr !5286
  %917 = or i32 %915, %916, !insn.addr !5286
  %918 = xor i32 %109, 698298832, !insn.addr !5287
  %919 = add i32 %908, %918, !insn.addr !5288
  %920 = add i32 %919, %917, !insn.addr !5289
  %921 = xor i32 %920, %912, !insn.addr !5290
  %922 = udiv i32 %921, 256, !insn.addr !5291
  %923 = mul i32 %921, 16777216, !insn.addr !5291
  %924 = or i32 %922, %923, !insn.addr !5291
  %925 = add i32 %924, %913, !insn.addr !5292
  %926 = xor i32 %925, %917, !insn.addr !5293
  %927 = udiv i32 %926, 128, !insn.addr !5294
  %928 = mul i32 %926, 33554432, !insn.addr !5294
  %929 = or i32 %927, %928, !insn.addr !5294
  %930 = xor i32 %104, -1542899678, !insn.addr !5295
  %931 = add i32 %848, %930, !insn.addr !5296
  %932 = add i32 %931, %833, !insn.addr !5297
  %933 = xor i32 %932, %876, !insn.addr !5298
  %934 = udiv i32 %933, 65536, !insn.addr !5299
  %935 = mul i32 %933, 65536, !insn.addr !5299
  %936 = or i32 %934, %935, !insn.addr !5299
  %937 = add i32 %936, %805, !insn.addr !5300
  %938 = xor i32 %937, %833, !insn.addr !5301
  %939 = udiv i32 %938, 4096, !insn.addr !5302
  %940 = mul i32 %938, 1048576, !insn.addr !5302
  %941 = or i32 %939, %940, !insn.addr !5302
  %942 = xor i32 %106, or (i32 ptrtoint (i32** @global_var_8a2e to i32), i32 320405504), !insn.addr !5303
  %943 = add i32 %932, %942, !insn.addr !5304
  %944 = add i32 %943, %941, !insn.addr !5305
  %945 = xor i32 %944, %936, !insn.addr !5306
  %946 = udiv i32 %945, 256, !insn.addr !5307
  %947 = mul i32 %945, 16777216, !insn.addr !5307
  %948 = or i32 %946, %947, !insn.addr !5307
  %949 = add i32 %948, %937, !insn.addr !5308
  %950 = xor i32 %949, %941, !insn.addr !5309
  %951 = udiv i32 %950, 128, !insn.addr !5310
  %952 = mul i32 %950, 33554432, !insn.addr !5310
  %953 = or i32 %951, %952, !insn.addr !5310
  %954 = xor i32 %112, -1253635817, !insn.addr !5311
  %955 = add i32 %872, %954, !insn.addr !5312
  %956 = add i32 %955, %857, !insn.addr !5313
  %957 = xor i32 %956, %804, !insn.addr !5314
  %958 = udiv i32 %957, 65536, !insn.addr !5315
  %959 = mul i32 %957, 65536, !insn.addr !5315
  %960 = or i32 %958, %959, !insn.addr !5315
  %961 = add i32 %960, %829, !insn.addr !5316
  %962 = xor i32 %961, %857, !insn.addr !5317
  %963 = udiv i32 %962, 4096, !insn.addr !5318
  %964 = mul i32 %962, 1048576, !insn.addr !5318
  %965 = or i32 %963, %964, !insn.addr !5318
  %966 = xor i32 %117, -1101764913, !insn.addr !5319
  %967 = add i32 %956, %966, !insn.addr !5320
  %968 = add i32 %967, %965, !insn.addr !5321
  %969 = xor i32 %968, %960, !insn.addr !5322
  %970 = udiv i32 %969, 256, !insn.addr !5323
  %971 = mul i32 %969, 16777216, !insn.addr !5323
  %972 = or i32 %970, %971, !insn.addr !5323
  %973 = add i32 %972, %961, !insn.addr !5324
  %974 = xor i32 %973, %965, !insn.addr !5325
  %975 = udiv i32 %974, 128, !insn.addr !5326
  %976 = mul i32 %974, 33554432, !insn.addr !5326
  %977 = or i32 %975, %976, !insn.addr !5326
  %978 = xor i32 %116, -2052912941, !insn.addr !5327
  %979 = add i32 %896, %978, !insn.addr !5328
  %980 = add i32 %979, %929, !insn.addr !5329
  %981 = xor i32 %980, %972, !insn.addr !5330
  %982 = udiv i32 %981, 65536, !insn.addr !5331
  %983 = mul i32 %981, 65536, !insn.addr !5331
  %984 = or i32 %982, %983, !insn.addr !5331
  %985 = add i32 %984, %949, !insn.addr !5332
  %986 = xor i32 %985, %929, !insn.addr !5333
  %987 = udiv i32 %986, 4096, !insn.addr !5334
  %988 = mul i32 %986, 1048576, !insn.addr !5334
  %989 = or i32 %987, %988, !insn.addr !5334
  %990 = xor i32 %103, 1065670069, !insn.addr !5335
  %991 = add i32 %980, %990, !insn.addr !5336
  %992 = add i32 %991, %989, !insn.addr !5337
  %993 = xor i32 %992, %984, !insn.addr !5338
  %994 = udiv i32 %993, 256, !insn.addr !5339
  %995 = mul i32 %993, 16777216, !insn.addr !5339
  %996 = or i32 %994, %995, !insn.addr !5339
  %997 = add i32 %996, %985, !insn.addr !5340
  %998 = xor i32 %997, %989, !insn.addr !5341
  %999 = udiv i32 %998, 128, !insn.addr !5342
  %1000 = mul i32 %998, 33554432, !insn.addr !5342
  %1001 = or i32 %999, %1000, !insn.addr !5342
  %1002 = xor i32 %113, -1062458953, !insn.addr !5343
  %1003 = add i32 %920, %1002, !insn.addr !5344
  %1004 = add i32 %1003, %953, !insn.addr !5345
  %1005 = xor i32 %1004, %900, !insn.addr !5346
  %1006 = udiv i32 %1005, 65536, !insn.addr !5347
  %1007 = mul i32 %1005, 65536, !insn.addr !5347
  %1008 = or i32 %1006, %1007, !insn.addr !5347
  %1009 = add i32 %1008, %973, !insn.addr !5348
  %1010 = xor i32 %1009, %953, !insn.addr !5349
  %1011 = udiv i32 %1010, 4096, !insn.addr !5350
  %1012 = mul i32 %1010, 1048576, !insn.addr !5350
  %1013 = or i32 %1011, %1012, !insn.addr !5350
  %1014 = xor i32 %114, 887688300, !insn.addr !5351
  %1015 = add i32 %1004, %1014, !insn.addr !5352
  %1016 = add i32 %1015, %1013, !insn.addr !5353
  %1017 = xor i32 %1016, %1008, !insn.addr !5354
  %1018 = udiv i32 %1017, 256, !insn.addr !5355
  %1019 = mul i32 %1017, 16777216, !insn.addr !5355
  %1020 = or i32 %1018, %1019, !insn.addr !5355
  %1021 = add i32 %1020, %1009, !insn.addr !5356
  %1022 = xor i32 %1021, %1013, !insn.addr !5357
  %1023 = udiv i32 %1022, 128, !insn.addr !5358
  %1024 = mul i32 %1022, 33554432, !insn.addr !5358
  %1025 = or i32 %1023, %1024, !insn.addr !5358
  %1026 = xor i32 %108, 1160258022, !insn.addr !5359
  %1027 = add i32 %944, %1026, !insn.addr !5360
  %1028 = add i32 %1027, %977, !insn.addr !5361
  %1029 = xor i32 %1028, %924, !insn.addr !5362
  %1030 = udiv i32 %1029, 65536, !insn.addr !5363
  %1031 = mul i32 %1029, 65536, !insn.addr !5363
  %1032 = or i32 %1030, %1031, !insn.addr !5363
  %1033 = add i32 %1032, %901, !insn.addr !5364
  %1034 = xor i32 %1033, %977, !insn.addr !5365
  %1035 = udiv i32 %1034, 4096, !insn.addr !5366
  %1036 = mul i32 %1034, 1048576, !insn.addr !5366
  %1037 = or i32 %1035, %1036, !insn.addr !5366
  %1038 = xor i32 %110, 137296536, !insn.addr !5367
  %1039 = add i32 %1028, %1038, !insn.addr !5368
  %1040 = add i32 %1039, %1037, !insn.addr !5369
  %1041 = xor i32 %1040, %1032, !insn.addr !5370
  %1042 = udiv i32 %1041, 256, !insn.addr !5371
  %1043 = mul i32 %1041, 16777216, !insn.addr !5371
  %1044 = or i32 %1042, %1043, !insn.addr !5371
  %1045 = add i32 %1044, %1033, !insn.addr !5372
  %1046 = xor i32 %1045, %1037, !insn.addr !5373
  %1047 = udiv i32 %1046, 128, !insn.addr !5374
  %1048 = mul i32 %1046, 33554432, !insn.addr !5374
  %1049 = or i32 %1047, %1048, !insn.addr !5374
  %1050 = xor i32 %105, -914599715, !insn.addr !5375
  %1051 = add i32 %968, %1050, !insn.addr !5376
  %1052 = add i32 %1051, %905, !insn.addr !5377
  %1053 = xor i32 %1052, %948, !insn.addr !5378
  %1054 = udiv i32 %1053, 65536, !insn.addr !5379
  %1055 = mul i32 %1053, 65536, !insn.addr !5379
  %1056 = or i32 %1054, %1055, !insn.addr !5379
  %1057 = add i32 %1056, %925, !insn.addr !5380
  %1058 = xor i32 %1057, %905, !insn.addr !5381
  %1059 = udiv i32 %1058, 4096, !insn.addr !5382
  %1060 = mul i32 %1058, 1048576, !insn.addr !5382
  %1061 = or i32 %1059, %1060, !insn.addr !5382
  %1062 = xor i32 %115, 57701188, !insn.addr !5383
  %1063 = add i32 %1052, %1062, !insn.addr !5384
  %1064 = add i32 %1063, %1061, !insn.addr !5385
  %1065 = xor i32 %1064, %1056, !insn.addr !5386
  %1066 = udiv i32 %1065, 256, !insn.addr !5387
  %1067 = mul i32 %1065, 16777216, !insn.addr !5387
  %1068 = or i32 %1066, %1067, !insn.addr !5387
  %1069 = add i32 %1068, %1057, !insn.addr !5388
  %1070 = xor i32 %1069, %1061, !insn.addr !5389
  %1071 = udiv i32 %1070, 128, !insn.addr !5390
  %1072 = mul i32 %1070, 33554432, !insn.addr !5390
  %1073 = or i32 %1071, %1072, !insn.addr !5390
  %1074 = xor i32 %104, -1062458953, !insn.addr !5391
  %1075 = add i32 %992, %1074, !insn.addr !5392
  %1076 = add i32 %1075, %1073, !insn.addr !5393
  %1077 = xor i32 %1076, %1020, !insn.addr !5394
  %1078 = udiv i32 %1077, 65536, !insn.addr !5395
  %1079 = mul i32 %1077, 65536, !insn.addr !5395
  %1080 = or i32 %1078, %1079, !insn.addr !5395
  %1081 = add i32 %1080, %1045, !insn.addr !5396
  %1082 = xor i32 %1081, %1073, !insn.addr !5397
  %1083 = udiv i32 %1082, 4096, !insn.addr !5398
  %1084 = mul i32 %1082, 1048576, !insn.addr !5398
  %1085 = or i32 %1083, %1084, !insn.addr !5398
  %1086 = xor i32 %114, or (i32 ptrtoint (i32** @global_var_8a2e to i32), i32 320405504), !insn.addr !5399
  %1087 = add i32 %1076, %1086, !insn.addr !5400
  %1088 = add i32 %1087, %1085, !insn.addr !5401
  %1089 = xor i32 %1088, %1080, !insn.addr !5402
  %1090 = udiv i32 %1089, 256, !insn.addr !5403
  %1091 = mul i32 %1089, 16777216, !insn.addr !5403
  %1092 = or i32 %1090, %1091, !insn.addr !5403
  %1093 = add i32 %1092, %1081, !insn.addr !5404
  %1094 = xor i32 %1093, %1085, !insn.addr !5405
  %1095 = udiv i32 %1094, 128, !insn.addr !5406
  %1096 = mul i32 %1094, 33554432, !insn.addr !5406
  %1097 = or i32 %1095, %1096, !insn.addr !5406
  %1098 = xor i32 %108, -1101764913, !insn.addr !5407
  %1099 = add i32 %1016, %1098, !insn.addr !5408
  %1100 = add i32 %1099, %1001, !insn.addr !5409
  %1101 = xor i32 %1100, %1044, !insn.addr !5410
  %1102 = udiv i32 %1101, 65536, !insn.addr !5411
  %1103 = mul i32 %1101, 65536, !insn.addr !5411
  %1104 = or i32 %1102, %1103, !insn.addr !5411
  %1105 = add i32 %1104, %1069, !insn.addr !5412
  %1106 = xor i32 %1105, %1001, !insn.addr !5413
  %1107 = udiv i32 %1106, 4096, !insn.addr !5414
  %1108 = mul i32 %1106, 1048576, !insn.addr !5414
  %1109 = or i32 %1107, %1108, !insn.addr !5414
  %1110 = xor i32 %112, 137296536, !insn.addr !5415
  %1111 = add i32 %1100, %1110, !insn.addr !5416
  %1112 = add i32 %1111, %1109, !insn.addr !5417
  %1113 = xor i32 %1112, %1104, !insn.addr !5418
  %1114 = udiv i32 %1113, 256, !insn.addr !5419
  %1115 = mul i32 %1113, 16777216, !insn.addr !5419
  %1116 = or i32 %1114, %1115, !insn.addr !5419
  %1117 = add i32 %1116, %1105, !insn.addr !5420
  %1118 = xor i32 %1117, %1109, !insn.addr !5421
  %1119 = udiv i32 %1118, 128, !insn.addr !5422
  %1120 = mul i32 %1118, 33554432, !insn.addr !5422
  %1121 = or i32 %1119, %1120, !insn.addr !5422
  %1122 = xor i32 %102, 887688300, !insn.addr !5423
  %1123 = add i32 %1040, %1122, !insn.addr !5424
  %1124 = add i32 %1123, %1025, !insn.addr !5425
  %1125 = xor i32 %1124, %1068, !insn.addr !5426
  %1126 = udiv i32 %1125, 65536, !insn.addr !5427
  %1127 = mul i32 %1125, 65536, !insn.addr !5427
  %1128 = or i32 %1126, %1127, !insn.addr !5427
  %1129 = add i32 %1128, %997, !insn.addr !5428
  %1130 = xor i32 %1129, %1025, !insn.addr !5429
  %1131 = udiv i32 %1130, 4096, !insn.addr !5430
  %1132 = mul i32 %1130, 1048576, !insn.addr !5430
  %1133 = or i32 %1131, %1132, !insn.addr !5430
  %1134 = xor i32 %113, 608135816, !insn.addr !5431
  %1135 = add i32 %1124, %1134, !insn.addr !5432
  %1136 = add i32 %1135, %1133, !insn.addr !5433
  %1137 = xor i32 %1136, %1128, !insn.addr !5434
  %1138 = udiv i32 %1137, 256, !insn.addr !5435
  %1139 = mul i32 %1137, 16777216, !insn.addr !5435
  %1140 = or i32 %1138, %1139, !insn.addr !5435
  %1141 = add i32 %1140, %1129, !insn.addr !5436
  %1142 = xor i32 %1141, %1133, !insn.addr !5437
  %1143 = udiv i32 %1142, 128, !insn.addr !5438
  %1144 = mul i32 %1142, 33554432, !insn.addr !5438
  %1145 = or i32 %1143, %1144, !insn.addr !5438
  %1146 = xor i32 %110, 57701188, !insn.addr !5439
  %1147 = add i32 %1064, %1146, !insn.addr !5440
  %1148 = add i32 %1147, %1049, !insn.addr !5441
  %1149 = xor i32 %1148, %996, !insn.addr !5442
  %1150 = udiv i32 %1149, 65536, !insn.addr !5443
  %1151 = mul i32 %1149, 65536, !insn.addr !5443
  %1152 = or i32 %1150, %1151, !insn.addr !5443
  %1153 = add i32 %1152, %1021, !insn.addr !5444
  %1154 = xor i32 %1153, %1049, !insn.addr !5445
  %1155 = udiv i32 %1154, 4096, !insn.addr !5446
  %1156 = mul i32 %1154, 1048576, !insn.addr !5446
  %1157 = or i32 %1155, %1156, !insn.addr !5446
  %1158 = xor i32 %105, 1160258022, !insn.addr !5447
  %1159 = add i32 %1148, %1158, !insn.addr !5448
  %1160 = add i32 %1159, %1157, !insn.addr !5449
  %1161 = xor i32 %1160, %1152, !insn.addr !5450
  %1162 = udiv i32 %1161, 256, !insn.addr !5451
  %1163 = mul i32 %1161, 16777216, !insn.addr !5451
  %1164 = or i32 %1162, %1163, !insn.addr !5451
  %1165 = add i32 %1164, %1153, !insn.addr !5452
  %1166 = xor i32 %1165, %1157, !insn.addr !5453
  %1167 = udiv i32 %1166, 128, !insn.addr !5454
  %1168 = mul i32 %1166, 33554432, !insn.addr !5454
  %1169 = or i32 %1167, %1168, !insn.addr !5454
  %1170 = xor i32 %106, -914599715, !insn.addr !5455
  %1171 = add i32 %1088, %1170, !insn.addr !5456
  %1172 = add i32 %1171, %1121, !insn.addr !5457
  %1173 = xor i32 %1172, %1164, !insn.addr !5458
  %1174 = udiv i32 %1173, 65536, !insn.addr !5459
  %1175 = mul i32 %1173, 65536, !insn.addr !5459
  %1176 = or i32 %1174, %1175, !insn.addr !5459
  %1177 = add i32 %1176, %1141, !insn.addr !5460
  %1178 = xor i32 %1177, %1121, !insn.addr !5461
  %1179 = udiv i32 %1178, 4096, !insn.addr !5462
  %1180 = mul i32 %1178, 1048576, !insn.addr !5462
  %1181 = or i32 %1179, %1180, !insn.addr !5462
  %1182 = xor i32 %115, -1542899678, !insn.addr !5463
  %1183 = add i32 %1172, %1182, !insn.addr !5464
  %1184 = add i32 %1183, %1181, !insn.addr !5465
  %1185 = xor i32 %1184, %1176, !insn.addr !5466
  %1186 = udiv i32 %1185, 256, !insn.addr !5467
  %1187 = mul i32 %1185, 16777216, !insn.addr !5467
  %1188 = or i32 %1186, %1187, !insn.addr !5467
  %1189 = add i32 %1188, %1177, !insn.addr !5468
  %1190 = xor i32 %1189, %1181, !insn.addr !5469
  %1191 = udiv i32 %1190, 128, !insn.addr !5470
  %1192 = mul i32 %1190, 33554432, !insn.addr !5470
  %1193 = or i32 %1191, %1192, !insn.addr !5470
  %1194 = add i32 %1112, %918, !insn.addr !5471
  %1195 = add i32 %1194, %1145, !insn.addr !5472
  %1196 = xor i32 %1195, %1092, !insn.addr !5473
  %1197 = udiv i32 %1196, 65536, !insn.addr !5474
  %1198 = mul i32 %1196, 65536, !insn.addr !5474
  %1199 = or i32 %1197, %1198, !insn.addr !5474
  %1200 = add i32 %1199, %1165, !insn.addr !5475
  %1201 = xor i32 %1200, %1145, !insn.addr !5476
  %1202 = udiv i32 %1201, 4096, !insn.addr !5477
  %1203 = mul i32 %1201, 1048576, !insn.addr !5477
  %1204 = or i32 %1202, %1203, !insn.addr !5477
  %1205 = add i32 %1195, %906, !insn.addr !5478
  %1206 = add i32 %1205, %1204, !insn.addr !5479
  %1207 = xor i32 %1206, %1199, !insn.addr !5480
  %1208 = udiv i32 %1207, 256, !insn.addr !5481
  %1209 = mul i32 %1207, 16777216, !insn.addr !5481
  %1210 = or i32 %1208, %1209, !insn.addr !5481
  %1211 = add i32 %1210, %1200, !insn.addr !5482
  %1212 = xor i32 %1211, %1204, !insn.addr !5483
  %1213 = udiv i32 %1212, 128, !insn.addr !5484
  %1214 = mul i32 %1212, 33554432, !insn.addr !5484
  %1215 = or i32 %1213, %1214, !insn.addr !5484
  %1216 = add i32 %1136, %298, !insn.addr !5485
  %1217 = add i32 %1216, %1169, !insn.addr !5486
  %1218 = xor i32 %1217, %1116, !insn.addr !5487
  %1219 = udiv i32 %1218, 65536, !insn.addr !5488
  %1220 = mul i32 %1218, 65536, !insn.addr !5488
  %1221 = or i32 %1219, %1220, !insn.addr !5488
  %1222 = add i32 %1221, %1093, !insn.addr !5489
  %1223 = xor i32 %1222, %1169, !insn.addr !5490
  %1224 = udiv i32 %1223, 4096, !insn.addr !5491
  %1225 = mul i32 %1223, 1048576, !insn.addr !5491
  %1226 = or i32 %1224, %1225, !insn.addr !5491
  %1227 = add i32 %1217, %286, !insn.addr !5492
  %1228 = add i32 %1227, %1226, !insn.addr !5493
  %1229 = xor i32 %1228, %1221, !insn.addr !5494
  %1230 = udiv i32 %1229, 256, !insn.addr !5495
  %1231 = mul i32 %1229, 16777216, !insn.addr !5495
  %1232 = or i32 %1230, %1231, !insn.addr !5495
  %1233 = add i32 %1232, %1222, !insn.addr !5496
  %1234 = xor i32 %1233, %1226, !insn.addr !5497
  %1235 = udiv i32 %1234, 128, !insn.addr !5498
  %1236 = mul i32 %1234, 33554432, !insn.addr !5498
  %1237 = or i32 %1235, %1236, !insn.addr !5498
  %1238 = xor i32 %103, 953160567, !insn.addr !5499
  %1239 = add i32 %1160, %1238, !insn.addr !5500
  %1240 = add i32 %1239, %1097, !insn.addr !5501
  %1241 = xor i32 %1240, %1140, !insn.addr !5502
  %1242 = udiv i32 %1241, 65536, !insn.addr !5503
  %1243 = mul i32 %1241, 65536, !insn.addr !5503
  %1244 = or i32 %1242, %1243, !insn.addr !5503
  %1245 = add i32 %1244, %1117, !insn.addr !5504
  %1246 = xor i32 %1245, %1097, !insn.addr !5505
  %1247 = udiv i32 %1246, 4096, !insn.addr !5506
  %1248 = mul i32 %1246, 1048576, !insn.addr !5506
  %1249 = or i32 %1247, %1248, !insn.addr !5506
  %1250 = xor i32 %111, -2052912941, !insn.addr !5507
  %1251 = add i32 %1240, %1250, !insn.addr !5508
  %1252 = add i32 %1251, %1249, !insn.addr !5509
  %1253 = xor i32 %1252, %1244, !insn.addr !5510
  %1254 = udiv i32 %1253, 256, !insn.addr !5511
  %1255 = mul i32 %1253, 16777216, !insn.addr !5511
  %1256 = or i32 %1254, %1255, !insn.addr !5511
  %1257 = add i32 %1256, %1245, !insn.addr !5512
  %1258 = xor i32 %1257, %1249, !insn.addr !5513
  %1259 = udiv i32 %1258, 128, !insn.addr !5514
  %1260 = mul i32 %1258, 33554432, !insn.addr !5514
  %1261 = or i32 %1259, %1260, !insn.addr !5514
  %1262 = xor i32 %114, 698298832, !insn.addr !5515
  %1263 = add i32 %1184, %1262, !insn.addr !5516
  %1264 = add i32 %1263, %1261, !insn.addr !5517
  %1265 = xor i32 %1264, %1210, !insn.addr !5518
  %1266 = udiv i32 %1265, 65536, !insn.addr !5519
  %1267 = mul i32 %1265, 65536, !insn.addr !5519
  %1268 = or i32 %1266, %1267, !insn.addr !5519
  %1269 = add i32 %1268, %1233, !insn.addr !5520
  %1270 = xor i32 %1269, %1261, !insn.addr !5521
  %1271 = udiv i32 %1270, 4096, !insn.addr !5522
  %1272 = mul i32 %1270, 1048576, !insn.addr !5522
  %1273 = or i32 %1271, %1272, !insn.addr !5522
  %1274 = xor i32 %107, -1062458953, !insn.addr !5523
  %1275 = add i32 %1264, %1274, !insn.addr !5524
  %1276 = add i32 %1275, %1273, !insn.addr !5525
  %1277 = xor i32 %1276, %1268, !insn.addr !5526
  %1278 = udiv i32 %1277, 256, !insn.addr !5527
  %1279 = mul i32 %1277, 16777216, !insn.addr !5527
  %1280 = or i32 %1278, %1279, !insn.addr !5527
  %1281 = add i32 %1280, %1269, !insn.addr !5528
  %1282 = xor i32 %1281, %1273, !insn.addr !5529
  %1283 = udiv i32 %1282, 128, !insn.addr !5530
  %1284 = mul i32 %1282, 33554432, !insn.addr !5530
  %1285 = or i32 %1283, %1284, !insn.addr !5530
  %1286 = xor i32 %103, -1253635817, !insn.addr !5531
  %1287 = add i32 %1206, %1286, !insn.addr !5532
  %1288 = add i32 %1287, %1193, !insn.addr !5533
  %1289 = xor i32 %1288, %1232, !insn.addr !5534
  %1290 = udiv i32 %1289, 65536, !insn.addr !5535
  %1291 = mul i32 %1289, 65536, !insn.addr !5535
  %1292 = or i32 %1290, %1291, !insn.addr !5535
  %1293 = add i32 %1292, %1257, !insn.addr !5536
  %1294 = xor i32 %1293, %1193, !insn.addr !5537
  %1295 = udiv i32 %1294, 4096, !insn.addr !5538
  %1296 = mul i32 %1294, 1048576, !insn.addr !5538
  %1297 = or i32 %1295, %1296, !insn.addr !5538
  %1298 = xor i32 %117, -2052912941, !insn.addr !5539
  %1299 = add i32 %1288, %1298, !insn.addr !5540
  %1300 = add i32 %1299, %1297, !insn.addr !5541
  %1301 = xor i32 %1300, %1292, !insn.addr !5542
  %1302 = udiv i32 %1301, 256, !insn.addr !5543
  %1303 = mul i32 %1301, 16777216, !insn.addr !5543
  %1304 = or i32 %1302, %1303, !insn.addr !5543
  %1305 = add i32 %1304, %1293, !insn.addr !5544
  %1306 = xor i32 %1305, %1297, !insn.addr !5545
  %1307 = udiv i32 %1306, 128, !insn.addr !5546
  %1308 = mul i32 %1306, 33554432, !insn.addr !5546
  %1309 = or i32 %1307, %1308, !insn.addr !5546
  %1310 = xor i32 %116, -914599715, !insn.addr !5547
  %1311 = add i32 %1228, %1310, !insn.addr !5548
  %1312 = add i32 %1311, %1215, !insn.addr !5549
  %1313 = xor i32 %1312, %1256, !insn.addr !5550
  %1314 = udiv i32 %1313, 65536, !insn.addr !5551
  %1315 = mul i32 %1313, 65536, !insn.addr !5551
  %1316 = or i32 %1314, %1315, !insn.addr !5551
  %1317 = add i32 %1316, %1189, !insn.addr !5552
  %1318 = xor i32 %1317, %1215, !insn.addr !5553
  %1319 = udiv i32 %1318, 4096, !insn.addr !5554
  %1320 = mul i32 %1318, 1048576, !insn.addr !5554
  %1321 = or i32 %1319, %1320, !insn.addr !5554
  %1322 = xor i32 %115, 1065670069, !insn.addr !5555
  %1323 = add i32 %1312, %1322, !insn.addr !5556
  %1324 = add i32 %1323, %1321, !insn.addr !5557
  %1325 = xor i32 %1324, %1316, !insn.addr !5558
  %1326 = udiv i32 %1325, 256, !insn.addr !5559
  %1327 = mul i32 %1325, 16777216, !insn.addr !5559
  %1328 = or i32 %1326, %1327, !insn.addr !5559
  %1329 = add i32 %1328, %1317, !insn.addr !5560
  %1330 = xor i32 %1329, %1321, !insn.addr !5561
  %1331 = udiv i32 %1330, 128, !insn.addr !5562
  %1332 = mul i32 %1330, 33554432, !insn.addr !5562
  %1333 = or i32 %1331, %1332, !insn.addr !5562
  %1334 = xor i32 %106, -1101764913, !insn.addr !5563
  %1335 = add i32 %1252, %1334, !insn.addr !5564
  %1336 = add i32 %1335, %1237, !insn.addr !5565
  %1337 = xor i32 %1336, %1188, !insn.addr !5566
  %1338 = udiv i32 %1337, 65536, !insn.addr !5567
  %1339 = mul i32 %1337, 65536, !insn.addr !5567
  %1340 = or i32 %1338, %1339, !insn.addr !5567
  %1341 = add i32 %1340, %1211, !insn.addr !5568
  %1342 = xor i32 %1341, %1237, !insn.addr !5569
  %1343 = udiv i32 %1342, 4096, !insn.addr !5570
  %1344 = mul i32 %1342, 1048576, !insn.addr !5570
  %1345 = or i32 %1343, %1344, !insn.addr !5570
  %1346 = xor i32 %112, -1542899678, !insn.addr !5571
  %1347 = add i32 %1336, %1346, !insn.addr !5572
  %1348 = add i32 %1347, %1345, !insn.addr !5573
  %1349 = xor i32 %1348, %1340, !insn.addr !5574
  %1350 = udiv i32 %1349, 256, !insn.addr !5575
  %1351 = mul i32 %1349, 16777216, !insn.addr !5575
  %1352 = or i32 %1350, %1351, !insn.addr !5575
  %1353 = add i32 %1352, %1341, !insn.addr !5576
  %1354 = xor i32 %1353, %1345, !insn.addr !5577
  %1355 = udiv i32 %1354, 128, !insn.addr !5578
  %1356 = mul i32 %1354, 33554432, !insn.addr !5578
  %1357 = or i32 %1355, %1356, !insn.addr !5578
  %1358 = xor i32 %102, -330404727, !insn.addr !5579
  %1359 = add i32 %1276, %1358, !insn.addr !5580
  %1360 = add i32 %1359, %1309, !insn.addr !5581
  %1361 = xor i32 %1360, %1352, !insn.addr !5582
  %1362 = udiv i32 %1361, 65536, !insn.addr !5583
  %1363 = mul i32 %1361, 65536, !insn.addr !5583
  %1364 = or i32 %1362, %1363, !insn.addr !5583
  %1365 = add i32 %1364, %1329, !insn.addr !5584
  %1366 = xor i32 %1365, %1309, !insn.addr !5585
  %1367 = udiv i32 %1366, 4096, !insn.addr !5586
  %1368 = mul i32 %1366, 1048576, !insn.addr !5586
  %1369 = or i32 %1367, %1368, !insn.addr !5586
  %1370 = xor i32 %109, 608135816, !insn.addr !5587
  %1371 = add i32 %1360, %1370, !insn.addr !5588
  %1372 = add i32 %1371, %1369, !insn.addr !5589
  %1373 = xor i32 %1372, %1364, !insn.addr !5590
  %1374 = udiv i32 %1373, 256, !insn.addr !5591
  %1375 = mul i32 %1373, 16777216, !insn.addr !5591
  %1376 = or i32 %1374, %1375, !insn.addr !5591
  %1377 = add i32 %1376, %1365, !insn.addr !5592
  %1378 = xor i32 %1377, %1369, !insn.addr !5593
  %1379 = udiv i32 %1378, 128, !insn.addr !5594
  %1380 = mul i32 %1378, 33554432, !insn.addr !5594
  %1381 = or i32 %1379, %1380, !insn.addr !5594
  %1382 = add i32 %1300, %632, !insn.addr !5595
  %1383 = add i32 %1382, %1333, !insn.addr !5596
  %1384 = xor i32 %1383, %1280, !insn.addr !5597
  %1385 = udiv i32 %1384, 65536, !insn.addr !5598
  %1386 = mul i32 %1384, 65536, !insn.addr !5598
  %1387 = or i32 %1385, %1386, !insn.addr !5598
  %1388 = add i32 %1387, %1353, !insn.addr !5599
  %1389 = xor i32 %1388, %1333, !insn.addr !5600
  %1390 = udiv i32 %1389, 4096, !insn.addr !5601
  %1391 = mul i32 %1389, 1048576, !insn.addr !5601
  %1392 = or i32 %1390, %1391, !insn.addr !5601
  %1393 = add i32 %1383, %620, !insn.addr !5602
  %1394 = add i32 %1393, %1392, !insn.addr !5603
  %1395 = xor i32 %1394, %1387, !insn.addr !5604
  %1396 = udiv i32 %1395, 256, !insn.addr !5605
  %1397 = mul i32 %1395, 16777216, !insn.addr !5605
  %1398 = or i32 %1396, %1397, !insn.addr !5605
  %1399 = add i32 %1398, %1388, !insn.addr !5606
  %1400 = xor i32 %1399, %1392, !insn.addr !5607
  %1401 = udiv i32 %1400, 128, !insn.addr !5608
  %1402 = mul i32 %1400, 33554432, !insn.addr !5608
  %1403 = or i32 %1401, %1402, !insn.addr !5608
  %1404 = xor i32 %111, or (i32 ptrtoint (i32** @global_var_8a2e to i32), i32 320405504), !insn.addr !5609
  %1405 = add i32 %1324, %1404, !insn.addr !5610
  %1406 = add i32 %1405, %1357, !insn.addr !5611
  %1407 = xor i32 %1406, %1304, !insn.addr !5612
  %1408 = udiv i32 %1407, 65536, !insn.addr !5613
  %1409 = mul i32 %1407, 65536, !insn.addr !5613
  %1410 = or i32 %1408, %1409, !insn.addr !5613
  %1411 = add i32 %1410, %1281, !insn.addr !5614
  %1412 = xor i32 %1411, %1357, !insn.addr !5615
  %1413 = udiv i32 %1412, 4096, !insn.addr !5616
  %1414 = mul i32 %1412, 1048576, !insn.addr !5616
  %1415 = or i32 %1413, %1414, !insn.addr !5616
  %1416 = xor i32 %104, 953160567, !insn.addr !5617
  %1417 = add i32 %1406, %1416, !insn.addr !5618
  %1418 = add i32 %1417, %1415, !insn.addr !5619
  %1419 = xor i32 %1418, %1410, !insn.addr !5620
  %1420 = udiv i32 %1419, 256, !insn.addr !5621
  %1421 = mul i32 %1419, 16777216, !insn.addr !5621
  %1422 = or i32 %1420, %1421, !insn.addr !5621
  %1423 = add i32 %1422, %1411, !insn.addr !5622
  %1424 = xor i32 %1423, %1415, !insn.addr !5623
  %1425 = udiv i32 %1424, 128, !insn.addr !5624
  %1426 = mul i32 %1424, 33554432, !insn.addr !5624
  %1427 = or i32 %1425, %1426, !insn.addr !5624
  %1428 = add i32 %1348, %514, !insn.addr !5625
  %1429 = add i32 %1428, %1285, !insn.addr !5626
  %1430 = xor i32 %1429, %1328, !insn.addr !5627
  %1431 = udiv i32 %1430, 65536, !insn.addr !5628
  %1432 = mul i32 %1430, 65536, !insn.addr !5628
  %1433 = or i32 %1431, %1432, !insn.addr !5628
  %1434 = add i32 %1433, %1305, !insn.addr !5629
  %1435 = xor i32 %1434, %1285, !insn.addr !5630
  %1436 = udiv i32 %1435, 4096, !insn.addr !5631
  %1437 = mul i32 %1435, 1048576, !insn.addr !5631
  %1438 = or i32 %1436, %1437, !insn.addr !5631
  %1439 = add i32 %1429, %502, !insn.addr !5632
  %1440 = add i32 %1439, %1438, !insn.addr !5633
  %1441 = xor i32 %1440, %1433, !insn.addr !5634
  %1442 = udiv i32 %1441, 256, !insn.addr !5635
  %1443 = mul i32 %1441, 16777216, !insn.addr !5635
  %1444 = or i32 %1442, %1443, !insn.addr !5635
  %1445 = add i32 %1444, %1434, !insn.addr !5636
  %1446 = xor i32 %1445, %1438, !insn.addr !5637
  %1447 = udiv i32 %1446, 128, !insn.addr !5638
  %1448 = mul i32 %1446, 33554432, !insn.addr !5638
  %1449 = or i32 %1447, %1448, !insn.addr !5638
  %1450 = xor i32 %115, 887688300, !insn.addr !5639
  %1451 = add i32 %1372, %1450, !insn.addr !5640
  %1452 = add i32 %1451, %1449, !insn.addr !5641
  %1453 = xor i32 %1452, %1398, !insn.addr !5642
  %1454 = udiv i32 %1453, 65536, !insn.addr !5643
  %1455 = mul i32 %1453, 65536, !insn.addr !5643
  %1456 = or i32 %1454, %1455, !insn.addr !5643
  %1457 = add i32 %1456, %1423, !insn.addr !5644
  %1458 = xor i32 %1457, %1449, !insn.addr !5645
  %1459 = udiv i32 %1458, 4096, !insn.addr !5646
  %1460 = mul i32 %1458, 1048576, !insn.addr !5646
  %1461 = or i32 %1459, %1460, !insn.addr !5646
  %1462 = xor i32 %113, -914599715, !insn.addr !5647
  %1463 = add i32 %1452, %1462, !insn.addr !5648
  %1464 = add i32 %1463, %1461, !insn.addr !5649
  %1465 = xor i32 %1464, %1456, !insn.addr !5650
  %1466 = udiv i32 %1465, 256, !insn.addr !5651
  %1467 = mul i32 %1465, 16777216, !insn.addr !5651
  %1468 = or i32 %1466, %1467, !insn.addr !5651
  %1469 = add i32 %1468, %1457, !insn.addr !5652
  %1470 = xor i32 %1469, %1461, !insn.addr !5653
  %1471 = udiv i32 %1470, 128, !insn.addr !5654
  %1472 = mul i32 %1470, 33554432, !insn.addr !5654
  %1473 = or i32 %1471, %1472, !insn.addr !5654
  %1474 = xor i32 %109, 1065670069, !insn.addr !5655
  %1475 = add i32 %1394, %1474, !insn.addr !5656
  %1476 = add i32 %1475, %1381, !insn.addr !5657
  %1477 = xor i32 %1476, %1422, !insn.addr !5658
  %1478 = udiv i32 %1477, 65536, !insn.addr !5659
  %1479 = mul i32 %1477, 65536, !insn.addr !5659
  %1480 = or i32 %1478, %1479, !insn.addr !5659
  %1481 = add i32 %1480, %1445, !insn.addr !5660
  %1482 = xor i32 %1481, %1381, !insn.addr !5661
  %1483 = udiv i32 %1482, 4096, !insn.addr !5662
  %1484 = mul i32 %1482, 1048576, !insn.addr !5662
  %1485 = or i32 %1483, %1484, !insn.addr !5662
  %1486 = xor i32 %116, -330404727, !insn.addr !5663
  %1487 = add i32 %1476, %1486, !insn.addr !5664
  %1488 = add i32 %1487, %1485, !insn.addr !5665
  %1489 = xor i32 %1488, %1480, !insn.addr !5666
  %1490 = udiv i32 %1489, 256, !insn.addr !5667
  %1491 = mul i32 %1489, 16777216, !insn.addr !5667
  %1492 = or i32 %1490, %1491, !insn.addr !5667
  %1493 = add i32 %1492, %1481, !insn.addr !5668
  %1494 = xor i32 %1493, %1485, !insn.addr !5669
  %1495 = udiv i32 %1494, 128, !insn.addr !5670
  %1496 = mul i32 %1494, 33554432, !insn.addr !5670
  %1497 = or i32 %1495, %1496, !insn.addr !5670
  %1498 = add i32 %1418, %418, !insn.addr !5671
  %1499 = add i32 %1498, %1403, !insn.addr !5672
  %1500 = xor i32 %1499, %1444, !insn.addr !5673
  %1501 = udiv i32 %1500, 65536, !insn.addr !5674
  %1502 = mul i32 %1500, 65536, !insn.addr !5674
  %1503 = or i32 %1501, %1502, !insn.addr !5674
  %1504 = add i32 %1503, %1377, !insn.addr !5675
  %1505 = xor i32 %1504, %1403, !insn.addr !5676
  %1506 = udiv i32 %1505, 4096, !insn.addr !5677
  %1507 = mul i32 %1505, 1048576, !insn.addr !5677
  %1508 = or i32 %1506, %1507, !insn.addr !5677
  %1509 = add i32 %1499, %406, !insn.addr !5678
  %1510 = add i32 %1509, %1508, !insn.addr !5679
  %1511 = xor i32 %1510, %1503, !insn.addr !5680
  %1512 = udiv i32 %1511, 256, !insn.addr !5681
  %1513 = mul i32 %1511, 16777216, !insn.addr !5681
  %1514 = or i32 %1512, %1513, !insn.addr !5681
  %1515 = add i32 %1514, %1504, !insn.addr !5682
  %1516 = xor i32 %1515, %1508, !insn.addr !5683
  %1517 = udiv i32 %1516, 128, !insn.addr !5684
  %1518 = mul i32 %1516, 33554432, !insn.addr !5684
  %1519 = or i32 %1517, %1518, !insn.addr !5684
  %1520 = xor i32 %105, 953160567, !insn.addr !5685
  %1521 = add i32 %1440, %1520, !insn.addr !5686
  %1522 = add i32 %1521, %1427, !insn.addr !5687
  %1523 = xor i32 %1522, %1376, !insn.addr !5688
  %1524 = udiv i32 %1523, 65536, !insn.addr !5689
  %1525 = mul i32 %1523, 65536, !insn.addr !5689
  %1526 = or i32 %1524, %1525, !insn.addr !5689
  %1527 = add i32 %1526, %1399, !insn.addr !5690
  %1528 = xor i32 %1527, %1427, !insn.addr !5691
  %1529 = udiv i32 %1528, 4096, !insn.addr !5692
  %1530 = mul i32 %1528, 1048576, !insn.addr !5692
  %1531 = or i32 %1529, %1530, !insn.addr !5692
  %1532 = xor i32 %111, 57701188, !insn.addr !5693
  %1533 = add i32 %1522, %1532, !insn.addr !5694
  %1534 = add i32 %1533, %1531, !insn.addr !5695
  %1535 = xor i32 %1534, %1526, !insn.addr !5696
  %1536 = udiv i32 %1535, 256, !insn.addr !5697
  %1537 = mul i32 %1535, 16777216, !insn.addr !5697
  %1538 = or i32 %1536, %1537, !insn.addr !5697
  %1539 = add i32 %1538, %1527, !insn.addr !5698
  %1540 = xor i32 %1539, %1531, !insn.addr !5699
  %1541 = udiv i32 %1540, 128, !insn.addr !5700
  %1542 = mul i32 %1540, 33554432, !insn.addr !5700
  %1543 = or i32 %1541, %1542, !insn.addr !5700
  %1544 = xor i32 %107, 608135816, !insn.addr !5701
  %1545 = add i32 %1464, %1544, !insn.addr !5702
  %1546 = add i32 %1545, %1497, !insn.addr !5703
  %1547 = xor i32 %1546, %1538, !insn.addr !5704
  %1548 = udiv i32 %1547, 65536, !insn.addr !5705
  %1549 = mul i32 %1547, 65536, !insn.addr !5705
  %1550 = or i32 %1548, %1549, !insn.addr !5705
  %1551 = add i32 %1550, %1515, !insn.addr !5706
  %1552 = xor i32 %1551, %1497, !insn.addr !5707
  %1553 = udiv i32 %1552, 4096, !insn.addr !5708
  %1554 = mul i32 %1552, 1048576, !insn.addr !5708
  %1555 = or i32 %1553, %1554, !insn.addr !5708
  %1556 = xor i32 %102, 698298832, !insn.addr !5709
  %1557 = add i32 %1546, %1556, !insn.addr !5710
  %1558 = add i32 %1557, %1555, !insn.addr !5711
  %1559 = xor i32 %1558, %1550, !insn.addr !5712
  %1560 = udiv i32 %1559, 256, !insn.addr !5713
  %1561 = mul i32 %1559, 16777216, !insn.addr !5713
  %1562 = or i32 %1560, %1561, !insn.addr !5713
  %1563 = add i32 %1562, %1551, !insn.addr !5714
  %1564 = xor i32 %1563, %1555, !insn.addr !5715
  %1565 = udiv i32 %1564, 128, !insn.addr !5716
  %1566 = mul i32 %1564, 33554432, !insn.addr !5716
  %1567 = or i32 %1565, %1566, !insn.addr !5716
  %1568 = xor i32 %117, -1542899678, !insn.addr !5717
  %1569 = add i32 %1488, %1568, !insn.addr !5718
  %1570 = add i32 %1569, %1519, !insn.addr !5719
  %1571 = xor i32 %1570, %1468, !insn.addr !5720
  %1572 = udiv i32 %1571, 65536, !insn.addr !5721
  %1573 = mul i32 %1571, 65536, !insn.addr !5721
  %1574 = or i32 %1572, %1573, !insn.addr !5721
  %1575 = add i32 %1574, %1539, !insn.addr !5722
  %1576 = xor i32 %1575, %1519, !insn.addr !5723
  %1577 = udiv i32 %1576, 4096, !insn.addr !5724
  %1578 = mul i32 %1576, 1048576, !insn.addr !5724
  %1579 = or i32 %1577, %1578, !insn.addr !5724
  %1580 = xor i32 %106, -1253635817, !insn.addr !5725
  %1581 = add i32 %1570, %1580, !insn.addr !5726
  %1582 = add i32 %1581, %1579, !insn.addr !5727
  %1583 = xor i32 %1582, %1574, !insn.addr !5728
  %1584 = udiv i32 %1583, 256, !insn.addr !5729
  %1585 = mul i32 %1583, 16777216, !insn.addr !5729
  %1586 = or i32 %1584, %1585, !insn.addr !5729
  %1587 = add i32 %1586, %1575, !insn.addr !5730
  %1588 = xor i32 %1587, %1579, !insn.addr !5731
  %1589 = udiv i32 %1588, 128, !insn.addr !5732
  %1590 = mul i32 %1588, 33554432, !insn.addr !5732
  %1591 = or i32 %1589, %1590, !insn.addr !5732
  %1592 = add i32 %1510, %1038, !insn.addr !5733
  %1593 = add i32 %1592, %1543, !insn.addr !5734
  %1594 = xor i32 %1593, %1492, !insn.addr !5735
  %1595 = udiv i32 %1594, 65536, !insn.addr !5736
  %1596 = mul i32 %1594, 65536, !insn.addr !5736
  %1597 = or i32 %1595, %1596, !insn.addr !5736
  %1598 = add i32 %1597, %1469, !insn.addr !5737
  %1599 = xor i32 %1598, %1543, !insn.addr !5738
  %1600 = udiv i32 %1599, 4096, !insn.addr !5739
  %1601 = mul i32 %1599, 1048576, !insn.addr !5739
  %1602 = or i32 %1600, %1601, !insn.addr !5739
  %1603 = add i32 %1593, %1026, !insn.addr !5740
  %1604 = add i32 %1603, %1602, !insn.addr !5741
  %1605 = xor i32 %1604, %1597, !insn.addr !5742
  %1606 = udiv i32 %1605, 256, !insn.addr !5743
  %1607 = mul i32 %1605, 16777216, !insn.addr !5743
  %1608 = or i32 %1606, %1607, !insn.addr !5743
  %1609 = add i32 %1608, %1598, !insn.addr !5744
  %1610 = xor i32 %1609, %1602, !insn.addr !5745
  %1611 = udiv i32 %1610, 128, !insn.addr !5746
  %1612 = mul i32 %1610, 33554432, !insn.addr !5746
  %1613 = or i32 %1611, %1612, !insn.addr !5746
  %1614 = xor i32 %104, -1101764913, !insn.addr !5747
  %1615 = add i32 %1534, %1614, !insn.addr !5748
  %1616 = add i32 %1615, %1473, !insn.addr !5749
  %1617 = xor i32 %1616, %1514, !insn.addr !5750
  %1618 = udiv i32 %1617, 65536, !insn.addr !5751
  %1619 = mul i32 %1617, 65536, !insn.addr !5751
  %1620 = or i32 %1618, %1619, !insn.addr !5751
  %1621 = add i32 %1620, %1493, !insn.addr !5752
  %1622 = xor i32 %1621, %1473, !insn.addr !5753
  %1623 = udiv i32 %1622, 4096, !insn.addr !5754
  %1624 = mul i32 %1622, 1048576, !insn.addr !5754
  %1625 = or i32 %1623, %1624, !insn.addr !5754
  %1626 = xor i32 %112, or (i32 ptrtoint (i32** @global_var_8a2e to i32), i32 320405504), !insn.addr !5755
  %1627 = add i32 %1616, %1626, !insn.addr !5756
  %1628 = add i32 %1627, %1625, !insn.addr !5757
  %1629 = xor i32 %1628, %1620, !insn.addr !5758
  %1630 = udiv i32 %1629, 256, !insn.addr !5759
  %1631 = mul i32 %1629, 16777216, !insn.addr !5759
  %1632 = or i32 %1630, %1631, !insn.addr !5759
  %1633 = add i32 %1632, %1621, !insn.addr !5760
  %1634 = xor i32 %1633, %1625, !insn.addr !5761
  %1635 = udiv i32 %1634, 128, !insn.addr !5762
  %1636 = mul i32 %1634, 33554432, !insn.addr !5762
  %1637 = or i32 %1635, %1636, !insn.addr !5762
  %1638 = xor i32 %108, -1253635817, !insn.addr !5763
  %1639 = add i32 %1558, %1638, !insn.addr !5764
  %1640 = add i32 %1639, %1637, !insn.addr !5765
  %1641 = xor i32 %1640, %1586, !insn.addr !5766
  %1642 = udiv i32 %1641, 65536, !insn.addr !5767
  %1643 = mul i32 %1641, 65536, !insn.addr !5767
  %1644 = or i32 %1642, %1643, !insn.addr !5767
  %1645 = add i32 %1644, %1609, !insn.addr !5768
  %1646 = xor i32 %1645, %1637, !insn.addr !5769
  %1647 = udiv i32 %1646, 4096, !insn.addr !5770
  %1648 = mul i32 %1646, 1048576, !insn.addr !5770
  %1649 = or i32 %1647, %1648, !insn.addr !5770
  %1650 = xor i32 %117, 137296536, !insn.addr !5771
  %1651 = add i32 %1640, %1650, !insn.addr !5772
  %1652 = add i32 %1651, %1649, !insn.addr !5773
  %1653 = xor i32 %1652, %1644, !insn.addr !5774
  %1654 = udiv i32 %1653, 256, !insn.addr !5775
  %1655 = mul i32 %1653, 16777216, !insn.addr !5775
  %1656 = or i32 %1654, %1655, !insn.addr !5775
  %1657 = add i32 %1656, %1645, !insn.addr !5776
  %1658 = xor i32 %1657, %1649, !insn.addr !5777
  %1659 = udiv i32 %1658, 128, !insn.addr !5778
  %1660 = mul i32 %1658, 33554432, !insn.addr !5778
  %1661 = or i32 %1659, %1660, !insn.addr !5778
  %1662 = xor i32 %116, 953160567, !insn.addr !5779
  %1663 = add i32 %1582, %1662, !insn.addr !5780
  %1664 = add i32 %1663, %1567, !insn.addr !5781
  %1665 = xor i32 %1664, %1608, !insn.addr !5782
  %1666 = udiv i32 %1665, 65536, !insn.addr !5783
  %1667 = mul i32 %1665, 65536, !insn.addr !5783
  %1668 = or i32 %1666, %1667, !insn.addr !5783
  %1669 = add i32 %1668, %1633, !insn.addr !5784
  %1670 = xor i32 %1669, %1567, !insn.addr !5785
  %1671 = udiv i32 %1670, 4096, !insn.addr !5786
  %1672 = mul i32 %1670, 1048576, !insn.addr !5786
  %1673 = or i32 %1671, %1672, !insn.addr !5786
  %1674 = xor i32 %111, 1065670069, !insn.addr !5787
  %1675 = add i32 %1664, %1674, !insn.addr !5788
  %1676 = add i32 %1675, %1673, !insn.addr !5789
  %1677 = xor i32 %1676, %1668, !insn.addr !5790
  %1678 = udiv i32 %1677, 256, !insn.addr !5791
  %1679 = mul i32 %1677, 16777216, !insn.addr !5791
  %1680 = or i32 %1678, %1679, !insn.addr !5791
  %1681 = add i32 %1680, %1669, !insn.addr !5792
  %1682 = xor i32 %1681, %1673, !insn.addr !5793
  %1683 = udiv i32 %1682, 128, !insn.addr !5794
  %1684 = mul i32 %1682, 33554432, !insn.addr !5794
  %1685 = or i32 %1683, %1684, !insn.addr !5794
  %1686 = xor i32 %113, 57701188, !insn.addr !5795
  %1687 = add i32 %1604, %1686, !insn.addr !5796
  %1688 = add i32 %1687, %1591, !insn.addr !5797
  %1689 = xor i32 %1688, %1632, !insn.addr !5798
  %1690 = udiv i32 %1689, 65536, !insn.addr !5799
  %1691 = mul i32 %1689, 65536, !insn.addr !5799
  %1692 = or i32 %1690, %1691, !insn.addr !5799
  %1693 = add i32 %1692, %1563, !insn.addr !5800
  %1694 = xor i32 %1693, %1591, !insn.addr !5801
  %1695 = udiv i32 %1694, 4096, !insn.addr !5802
  %1696 = mul i32 %1694, 1048576, !insn.addr !5802
  %1697 = or i32 %1695, %1696, !insn.addr !5802
  %1698 = xor i32 %105, 887688300, !insn.addr !5803
  %1699 = add i32 %1688, %1698, !insn.addr !5804
  %1700 = add i32 %1699, %1697, !insn.addr !5805
  %1701 = xor i32 %1700, %1692, !insn.addr !5806
  %1702 = udiv i32 %1701, 256, !insn.addr !5807
  %1703 = mul i32 %1701, 16777216, !insn.addr !5807
  %1704 = or i32 %1702, %1703, !insn.addr !5807
  %1705 = add i32 %1704, %1693, !insn.addr !5808
  %1706 = xor i32 %1705, %1697, !insn.addr !5809
  %1707 = udiv i32 %1706, 128, !insn.addr !5810
  %1708 = mul i32 %1706, 33554432, !insn.addr !5810
  %1709 = or i32 %1707, %1708, !insn.addr !5810
  %1710 = xor i32 %102, 1160258022, !insn.addr !5811
  %1711 = add i32 %1628, %1710, !insn.addr !5812
  %1712 = add i32 %1711, %1613, !insn.addr !5813
  %1713 = xor i32 %1712, %1562, !insn.addr !5814
  %1714 = udiv i32 %1713, 65536, !insn.addr !5815
  %1715 = mul i32 %1713, 65536, !insn.addr !5815
  %1716 = or i32 %1714, %1715, !insn.addr !5815
  %1717 = add i32 %1716, %1587, !insn.addr !5816
  %1718 = xor i32 %1717, %1613, !insn.addr !5817
  %1719 = udiv i32 %1718, 4096, !insn.addr !5818
  %1720 = mul i32 %1718, 1048576, !insn.addr !5818
  %1721 = or i32 %1719, %1720, !insn.addr !5818
  %1722 = xor i32 %110, 608135816, !insn.addr !5819
  %1723 = add i32 %1712, %1722, !insn.addr !5820
  %1724 = add i32 %1723, %1721, !insn.addr !5821
  %1725 = xor i32 %1724, %1716, !insn.addr !5822
  %1726 = udiv i32 %1725, 256, !insn.addr !5823
  %1727 = mul i32 %1725, 16777216, !insn.addr !5823
  %1728 = or i32 %1726, %1727, !insn.addr !5823
  %1729 = add i32 %1728, %1717, !insn.addr !5824
  %1730 = xor i32 %1729, %1721, !insn.addr !5825
  %1731 = udiv i32 %1730, 128, !insn.addr !5826
  %1732 = mul i32 %1730, 33554432, !insn.addr !5826
  %1733 = or i32 %1731, %1732, !insn.addr !5826
  %1734 = add i32 %1652, %1086, !insn.addr !5827
  %1735 = add i32 %1734, %1685, !insn.addr !5828
  %1736 = xor i32 %1735, %1728, !insn.addr !5829
  %1737 = udiv i32 %1736, 65536, !insn.addr !5830
  %1738 = mul i32 %1736, 65536, !insn.addr !5830
  %1739 = or i32 %1737, %1738, !insn.addr !5830
  %1740 = add i32 %1739, %1705, !insn.addr !5831
  %1741 = xor i32 %1740, %1685, !insn.addr !5832
  %1742 = udiv i32 %1741, 4096, !insn.addr !5833
  %1743 = mul i32 %1741, 1048576, !insn.addr !5833
  %1744 = or i32 %1742, %1743, !insn.addr !5833
  %1745 = add i32 %1735, %1074, !insn.addr !5834
  %1746 = add i32 %1745, %1744, !insn.addr !5835
  %1747 = xor i32 %1746, %1739, !insn.addr !5836
  %1748 = udiv i32 %1747, 256, !insn.addr !5837
  %1749 = mul i32 %1747, 16777216, !insn.addr !5837
  %1750 = or i32 %1748, %1749, !insn.addr !5837
  %1751 = add i32 %1750, %1740, !insn.addr !5838
  %1752 = xor i32 %1751, %1744, !insn.addr !5839
  %1753 = udiv i32 %1752, 128, !insn.addr !5840
  %1754 = mul i32 %1752, 33554432, !insn.addr !5840
  %1755 = or i32 %1753, %1754, !insn.addr !5840
  %1756 = xor i32 %115, -330404727, !insn.addr !5841
  %1757 = add i32 %1676, %1756, !insn.addr !5842
  %1758 = add i32 %1757, %1709, !insn.addr !5843
  %1759 = xor i32 %1758, %1656, !insn.addr !5844
  %1760 = udiv i32 %1759, 65536, !insn.addr !5845
  %1761 = mul i32 %1759, 65536, !insn.addr !5845
  %1762 = or i32 %1760, %1761, !insn.addr !5845
  %1763 = add i32 %1762, %1729, !insn.addr !5846
  %1764 = xor i32 %1763, %1709, !insn.addr !5847
  %1765 = udiv i32 %1764, 4096, !insn.addr !5848
  %1766 = mul i32 %1764, 1048576, !insn.addr !5848
  %1767 = or i32 %1765, %1766, !insn.addr !5848
  %1768 = xor i32 %109, -914599715, !insn.addr !5849
  %1769 = add i32 %1758, %1768, !insn.addr !5850
  %1770 = add i32 %1769, %1767, !insn.addr !5851
  %1771 = xor i32 %1770, %1762, !insn.addr !5852
  %1772 = udiv i32 %1771, 256, !insn.addr !5853
  %1773 = mul i32 %1771, 16777216, !insn.addr !5853
  %1774 = or i32 %1772, %1773, !insn.addr !5853
  %1775 = add i32 %1774, %1763, !insn.addr !5854
  %1776 = xor i32 %1775, %1767, !insn.addr !5855
  %1777 = udiv i32 %1776, 128, !insn.addr !5856
  %1778 = mul i32 %1776, 33554432, !insn.addr !5856
  %1779 = or i32 %1777, %1778, !insn.addr !5856
  %1780 = xor i32 %103, -1542899678, !insn.addr !5857
  %1781 = add i32 %1700, %1780, !insn.addr !5858
  %1782 = add i32 %1781, %1733, !insn.addr !5859
  %1783 = xor i32 %1782, %1680, !insn.addr !5860
  %1784 = udiv i32 %1783, 65536, !insn.addr !5861
  %1785 = mul i32 %1783, 65536, !insn.addr !5861
  %1786 = or i32 %1784, %1785, !insn.addr !5861
  %1787 = add i32 %1786, %1657, !insn.addr !5862
  %1788 = xor i32 %1787, %1733, !insn.addr !5863
  %1789 = udiv i32 %1788, 4096, !insn.addr !5864
  %1790 = mul i32 %1788, 1048576, !insn.addr !5864
  %1791 = or i32 %1789, %1790, !insn.addr !5864
  %1792 = xor i32 %106, -2052912941, !insn.addr !5865
  %1793 = add i32 %1782, %1792, !insn.addr !5866
  %1794 = add i32 %1793, %1791, !insn.addr !5867
  %1795 = xor i32 %1794, %1786, !insn.addr !5868
  %1796 = udiv i32 %1795, 256, !insn.addr !5869
  %1797 = mul i32 %1795, 16777216, !insn.addr !5869
  %1798 = or i32 %1796, %1797, !insn.addr !5869
  %1799 = add i32 %1798, %1787, !insn.addr !5870
  %1800 = xor i32 %1799, %1791, !insn.addr !5871
  %1801 = udiv i32 %1800, 128, !insn.addr !5872
  %1802 = mul i32 %1800, 33554432, !insn.addr !5872
  %1803 = or i32 %1801, %1802, !insn.addr !5872
  %1804 = add i32 %1724, %822, !insn.addr !5873
  %1805 = add i32 %1804, %1661, !insn.addr !5874
  %1806 = xor i32 %1805, %1704, !insn.addr !5875
  %1807 = udiv i32 %1806, 65536, !insn.addr !5876
  %1808 = mul i32 %1806, 65536, !insn.addr !5876
  %1809 = or i32 %1807, %1808, !insn.addr !5876
  %1810 = add i32 %1809, %1681, !insn.addr !5877
  %1811 = xor i32 %1810, %1661, !insn.addr !5878
  %1812 = udiv i32 %1811, 4096, !insn.addr !5879
  %1813 = mul i32 %1811, 1048576, !insn.addr !5879
  %1814 = or i32 %1812, %1813, !insn.addr !5879
  %1815 = add i32 %1805, %810, !insn.addr !5880
  %1816 = add i32 %1815, %1814, !insn.addr !5881
  %1817 = xor i32 %1816, %1809, !insn.addr !5882
  %1818 = udiv i32 %1817, 256, !insn.addr !5883
  %1819 = mul i32 %1817, 16777216, !insn.addr !5883
  %1820 = or i32 %1818, %1819, !insn.addr !5883
  %1821 = add i32 %1820, %1810, !insn.addr !5884
  %1822 = xor i32 %1821, %1814, !insn.addr !5885
  %1823 = udiv i32 %1822, 128, !insn.addr !5886
  %1824 = mul i32 %1822, 33554432, !insn.addr !5886
  %1825 = or i32 %1823, %1824, !insn.addr !5886
  %1826 = add i32 %1746, %1626, !insn.addr !5887
  %1827 = add i32 %1826, %1825, !insn.addr !5888
  %1828 = xor i32 %1827, %1774, !insn.addr !5889
  %1829 = udiv i32 %1828, 65536, !insn.addr !5890
  %1830 = mul i32 %1828, 65536, !insn.addr !5890
  %1831 = or i32 %1829, %1830, !insn.addr !5890
  %1832 = add i32 %1831, %1799, !insn.addr !5891
  %1833 = xor i32 %1832, %1825, !insn.addr !5892
  %1834 = udiv i32 %1833, 4096, !insn.addr !5893
  %1835 = mul i32 %1833, 1048576, !insn.addr !5893
  %1836 = or i32 %1834, %1835, !insn.addr !5893
  %1837 = add i32 %1827, %1614, !insn.addr !5894
  %1838 = add i32 %1837, %1836, !insn.addr !5895
  %1839 = xor i32 %1838, %1831, !insn.addr !5896
  %1840 = udiv i32 %1839, 256, !insn.addr !5897
  %1841 = mul i32 %1839, 16777216, !insn.addr !5897
  %1842 = or i32 %1840, %1841, !insn.addr !5897
  %1843 = add i32 %1842, %1832, !insn.addr !5898
  %1844 = xor i32 %1843, %1836, !insn.addr !5899
  %1845 = udiv i32 %1844, 128, !insn.addr !5900
  %1846 = mul i32 %1844, 33554432, !insn.addr !5900
  %1847 = or i32 %1845, %1846, !insn.addr !5900
  %1848 = add i32 %1770, %346, !insn.addr !5901
  %1849 = add i32 %1848, %1755, !insn.addr !5902
  %1850 = xor i32 %1849, %1798, !insn.addr !5903
  %1851 = udiv i32 %1850, 65536, !insn.addr !5904
  %1852 = mul i32 %1850, 65536, !insn.addr !5904
  %1853 = or i32 %1851, %1852, !insn.addr !5904
  %1854 = add i32 %1853, %1821, !insn.addr !5905
  %1855 = xor i32 %1854, %1755, !insn.addr !5906
  %1856 = udiv i32 %1855, 4096, !insn.addr !5907
  %1857 = mul i32 %1855, 1048576, !insn.addr !5907
  %1858 = or i32 %1856, %1857, !insn.addr !5907
  %1859 = add i32 %1849, %334, !insn.addr !5908
  %1860 = add i32 %1859, %1858, !insn.addr !5909
  %1861 = xor i32 %1860, %1853, !insn.addr !5910
  %1862 = udiv i32 %1861, 256, !insn.addr !5911
  %1863 = mul i32 %1861, 16777216, !insn.addr !5911
  %1864 = or i32 %1862, %1863, !insn.addr !5911
  %1865 = add i32 %1864, %1854, !insn.addr !5912
  %1866 = xor i32 %1865, %1858, !insn.addr !5913
  %1867 = udiv i32 %1866, 128, !insn.addr !5914
  %1868 = mul i32 %1866, 33554432, !insn.addr !5914
  %1869 = or i32 %1867, %1868, !insn.addr !5914
  %1870 = add i32 %1794, %202, !insn.addr !5915
  %1871 = add i32 %1870, %1779, !insn.addr !5916
  %1872 = xor i32 %1871, %1820, !insn.addr !5917
  %1873 = udiv i32 %1872, 65536, !insn.addr !5918
  %1874 = mul i32 %1872, 65536, !insn.addr !5918
  %1875 = or i32 %1873, %1874, !insn.addr !5918
  %1876 = add i32 %1875, %1751, !insn.addr !5919
  %1877 = xor i32 %1876, %1779, !insn.addr !5920
  %1878 = udiv i32 %1877, 4096, !insn.addr !5921
  %1879 = mul i32 %1877, 1048576, !insn.addr !5921
  %1880 = or i32 %1878, %1879, !insn.addr !5921
  %1881 = add i32 %1871, %191, !insn.addr !5922
  %1882 = add i32 %1881, %1880, !insn.addr !5923
  %1883 = xor i32 %1882, %1875, !insn.addr !5924
  %1884 = udiv i32 %1883, 256, !insn.addr !5925
  %1885 = mul i32 %1883, 16777216, !insn.addr !5925
  %1886 = or i32 %1884, %1885, !insn.addr !5925
  %1887 = add i32 %1886, %1876, !insn.addr !5926
  %1888 = xor i32 %1887, %1880, !insn.addr !5927
  %1889 = udiv i32 %1888, 128, !insn.addr !5928
  %1890 = mul i32 %1888, 33554432, !insn.addr !5928
  %1891 = or i32 %1889, %1890, !insn.addr !5928
  %1892 = xor i32 %103, 698298832, !insn.addr !5929
  %1893 = add i32 %1816, %1892, !insn.addr !5930
  %1894 = add i32 %1893, %1803, !insn.addr !5931
  %1895 = xor i32 %1894, %1750, !insn.addr !5932
  %1896 = udiv i32 %1895, 65536, !insn.addr !5933
  %1897 = mul i32 %1895, 65536, !insn.addr !5933
  %1898 = or i32 %1896, %1897, !insn.addr !5933
  %1899 = add i32 %1898, %1775, !insn.addr !5934
  %1900 = xor i32 %1899, %1803, !insn.addr !5935
  %1901 = udiv i32 %1900, 4096, !insn.addr !5936
  %1902 = mul i32 %1900, 1048576, !insn.addr !5936
  %1903 = or i32 %1901, %1902, !insn.addr !5936
  %1904 = xor i32 %107, -2052912941, !insn.addr !5937
  %1905 = add i32 %1894, %1904, !insn.addr !5938
  %1906 = add i32 %1905, %1903, !insn.addr !5939
  %1907 = xor i32 %1906, %1898, !insn.addr !5940
  %1908 = udiv i32 %1907, 256, !insn.addr !5941
  %1909 = mul i32 %1907, 16777216, !insn.addr !5941
  %1910 = or i32 %1908, %1909, !insn.addr !5941
  %1911 = add i32 %1910, %1899, !insn.addr !5942
  %1912 = xor i32 %1911, %1903, !insn.addr !5943
  %1913 = udiv i32 %1912, 128, !insn.addr !5944
  %1914 = mul i32 %1912, 33554432, !insn.addr !5944
  %1915 = or i32 %1913, %1914, !insn.addr !5944
  %1916 = xor i32 %117, 887688300, !insn.addr !5945
  %1917 = add i32 %1838, %1916, !insn.addr !5946
  %1918 = add i32 %1917, %1869, !insn.addr !5947
  %1919 = xor i32 %1918, %1910, !insn.addr !5948
  %1920 = udiv i32 %1919, 65536, !insn.addr !5949
  %1921 = mul i32 %1919, 65536, !insn.addr !5949
  %1922 = or i32 %1920, %1921, !insn.addr !5949
  %1923 = add i32 %1922, %1887, !insn.addr !5950
  %1924 = xor i32 %1923, %1869, !insn.addr !5951
  %1925 = udiv i32 %1924, 4096, !insn.addr !5952
  %1926 = mul i32 %1924, 1048576, !insn.addr !5952
  %1927 = or i32 %1925, %1926, !insn.addr !5952
  %1928 = xor i32 %113, -1253635817, !insn.addr !5953
  %1929 = add i32 %1918, %1928, !insn.addr !5954
  %1930 = add i32 %1929, %1927, !insn.addr !5955
  %1931 = xor i32 %1930, %1922, !insn.addr !5956
  %1932 = udiv i32 %1931, 256, !insn.addr !5957
  %1933 = mul i32 %1931, 16777216, !insn.addr !5957
  %1934 = or i32 %1932, %1933, !insn.addr !5957
  %1935 = add i32 %1934, %1923, !insn.addr !5958
  %1936 = xor i32 %1935, %1927, !insn.addr !5959
  %1937 = udiv i32 %1936, 128, !insn.addr !5960
  %1938 = mul i32 %1936, 33554432, !insn.addr !5960
  %1939 = or i32 %1937, %1938, !insn.addr !5960
  %1940 = add i32 %1860, %1674, !insn.addr !5961
  %1941 = add i32 %1940, %1891, !insn.addr !5962
  %1942 = xor i32 %1941, %1842, !insn.addr !5963
  %1943 = udiv i32 %1942, 65536, !insn.addr !5964
  %1944 = mul i32 %1942, 65536, !insn.addr !5964
  %1945 = or i32 %1943, %1944, !insn.addr !5964
  %1946 = add i32 %1945, %1911, !insn.addr !5965
  %1947 = xor i32 %1946, %1891, !insn.addr !5966
  %1948 = udiv i32 %1947, 4096, !insn.addr !5967
  %1949 = mul i32 %1947, 1048576, !insn.addr !5967
  %1950 = or i32 %1948, %1949, !insn.addr !5967
  %1951 = add i32 %1941, %1662, !insn.addr !5968
  %1952 = add i32 %1951, %1950, !insn.addr !5969
  %1953 = xor i32 %1952, %1945, !insn.addr !5970
  %1954 = udiv i32 %1953, 256, !insn.addr !5971
  %1955 = mul i32 %1953, 16777216, !insn.addr !5971
  %1956 = or i32 %1954, %1955, !insn.addr !5971
  %1957 = add i32 %1956, %1946, !insn.addr !5972
  %1958 = xor i32 %1957, %1950, !insn.addr !5973
  %1959 = udiv i32 %1958, 128, !insn.addr !5974
  %1960 = mul i32 %1958, 33554432, !insn.addr !5974
  %1961 = or i32 %1959, %1960, !insn.addr !5974
  %1962 = xor i32 %105, -1062458953, !insn.addr !5975
  %1963 = add i32 %1882, %1962, !insn.addr !5976
  %1964 = add i32 %1963, %1915, !insn.addr !5977
  %1965 = xor i32 %1964, %1864, !insn.addr !5978
  %1966 = udiv i32 %1965, 65536, !insn.addr !5979
  %1967 = mul i32 %1965, 65536, !insn.addr !5979
  %1968 = or i32 %1966, %1967, !insn.addr !5979
  %1969 = add i32 %1968, %1843, !insn.addr !5980
  %1970 = xor i32 %1969, %1915, !insn.addr !5981
  %1971 = udiv i32 %1970, 4096, !insn.addr !5982
  %1972 = mul i32 %1970, 1048576, !insn.addr !5982
  %1973 = or i32 %1971, %1972, !insn.addr !5982
  %1974 = xor i32 %114, 57701188, !insn.addr !5983
  %1975 = add i32 %1964, %1974, !insn.addr !5984
  %1976 = add i32 %1975, %1973, !insn.addr !5985
  %1977 = xor i32 %1976, %1968, !insn.addr !5986
  %1978 = udiv i32 %1977, 256, !insn.addr !5987
  %1979 = mul i32 %1977, 16777216, !insn.addr !5987
  %1980 = or i32 %1978, %1979, !insn.addr !5987
  %1981 = add i32 %1980, %1969, !insn.addr !5988
  %1982 = xor i32 %1981, %1973, !insn.addr !5989
  %1983 = udiv i32 %1982, 128, !insn.addr !5990
  %1984 = mul i32 %1982, 33554432, !insn.addr !5990
  %1985 = or i32 %1983, %1984, !insn.addr !5990
  %1986 = xor i32 %115, 608135816, !insn.addr !5991
  %1987 = add i32 %1906, %1986, !insn.addr !5992
  %1988 = add i32 %1987, %1847, !insn.addr !5993
  %1989 = xor i32 %1988, %1886, !insn.addr !5994
  %1990 = udiv i32 %1989, 65536, !insn.addr !5995
  %1991 = mul i32 %1989, 65536, !insn.addr !5995
  %1992 = or i32 %1990, %1991, !insn.addr !5995
  %1993 = add i32 %1992, %1865, !insn.addr !5996
  %1994 = xor i32 %1993, %1847, !insn.addr !5997
  %1995 = udiv i32 %1994, 4096, !insn.addr !5998
  %1996 = mul i32 %1994, 1048576, !insn.addr !5998
  %1997 = or i32 %1995, %1996, !insn.addr !5998
  %1998 = xor i32 %102, -914599715, !insn.addr !5999
  %1999 = add i32 %1988, %1998, !insn.addr !6000
  %2000 = add i32 %1999, %1997, !insn.addr !6001
  %2001 = xor i32 %2000, %1992, !insn.addr !6002
  %2002 = udiv i32 %2001, 256, !insn.addr !6003
  %2003 = mul i32 %2001, 16777216, !insn.addr !6003
  %2004 = or i32 %2002, %2003, !insn.addr !6003
  %2005 = add i32 %2004, %1993, !insn.addr !6004
  %2006 = xor i32 %2005, %1997, !insn.addr !6005
  %2007 = udiv i32 %2006, 128, !insn.addr !6006
  %2008 = mul i32 %2006, 33554432, !insn.addr !6006
  %2009 = or i32 %2007, %2008, !insn.addr !6006
  %2010 = add i32 %1930, %119, !insn.addr !6007
  %2011 = add i32 %2010, %2009, !insn.addr !6008
  %2012 = xor i32 %2011, %1956, !insn.addr !6009
  %2013 = udiv i32 %2012, 65536, !insn.addr !6010
  %2014 = mul i32 %2012, 65536, !insn.addr !6010
  %2015 = or i32 %2013, %2014, !insn.addr !6010
  %2016 = add i32 %2015, %1981, !insn.addr !6011
  %2017 = xor i32 %2016, %2009, !insn.addr !6012
  %2018 = udiv i32 %2017, 4096, !insn.addr !6013
  %2019 = mul i32 %2017, 1048576, !insn.addr !6013
  %2020 = or i32 %2018, %2019, !insn.addr !6013
  %2021 = add i32 %2011, %130, !insn.addr !6014
  %2022 = add i32 %2021, %2020, !insn.addr !6015
  %2023 = xor i32 %2022, %2015, !insn.addr !6016
  %2024 = udiv i32 %2023, 256, !insn.addr !6017
  %2025 = mul i32 %2023, 16777216, !insn.addr !6017
  %2026 = or i32 %2024, %2025, !insn.addr !6017
  %2027 = add i32 %2026, %2016, !insn.addr !6018
  %2028 = xor i32 %2027, %2020, !insn.addr !6019
  %2029 = udiv i32 %2028, 128, !insn.addr !6020
  %2030 = mul i32 %2028, 33554432, !insn.addr !6020
  %2031 = or i32 %2029, %2030, !insn.addr !6020
  %2032 = add i32 %1952, %143, !insn.addr !6021
  %2033 = add i32 %2032, %1939, !insn.addr !6022
  %2034 = xor i32 %2033, %1980, !insn.addr !6023
  %2035 = udiv i32 %2034, 65536, !insn.addr !6024
  %2036 = mul i32 %2034, 65536, !insn.addr !6024
  %2037 = or i32 %2035, %2036, !insn.addr !6024
  %2038 = add i32 %2037, %2005, !insn.addr !6025
  %2039 = xor i32 %2038, %1939, !insn.addr !6026
  %2040 = udiv i32 %2039, 4096, !insn.addr !6027
  %2041 = mul i32 %2039, 1048576, !insn.addr !6027
  %2042 = or i32 %2040, %2041, !insn.addr !6027
  %2043 = add i32 %2033, %154, !insn.addr !6028
  %2044 = add i32 %2043, %2042, !insn.addr !6029
  %2045 = xor i32 %2044, %2037, !insn.addr !6030
  %2046 = udiv i32 %2045, 256, !insn.addr !6031
  %2047 = mul i32 %2045, 16777216, !insn.addr !6031
  %2048 = or i32 %2046, %2047, !insn.addr !6031
  %2049 = add i32 %2048, %2038, !insn.addr !6032
  %2050 = xor i32 %2049, %2042, !insn.addr !6033
  %2051 = udiv i32 %2050, 128, !insn.addr !6034
  %2052 = mul i32 %2050, 33554432, !insn.addr !6034
  %2053 = or i32 %2051, %2052, !insn.addr !6034
  %2054 = add i32 %1976, %167, !insn.addr !6035
  %2055 = add i32 %2054, %1961, !insn.addr !6036
  %2056 = xor i32 %2055, %2004, !insn.addr !6037
  %2057 = udiv i32 %2056, 65536, !insn.addr !6038
  %2058 = mul i32 %2056, 65536, !insn.addr !6038
  %2059 = or i32 %2057, %2058, !insn.addr !6038
  %2060 = add i32 %2059, %1935, !insn.addr !6039
  %2061 = xor i32 %2060, %1961, !insn.addr !6040
  %2062 = udiv i32 %2061, 4096, !insn.addr !6041
  %2063 = mul i32 %2061, 1048576, !insn.addr !6041
  %2064 = or i32 %2062, %2063, !insn.addr !6041
  %2065 = add i32 %2055, %178, !insn.addr !6042
  %2066 = add i32 %2065, %2064, !insn.addr !6043
  %2067 = xor i32 %2066, %2059, !insn.addr !6044
  %2068 = udiv i32 %2067, 256, !insn.addr !6045
  %2069 = mul i32 %2067, 16777216, !insn.addr !6045
  %2070 = or i32 %2068, %2069, !insn.addr !6045
  %2071 = add i32 %2070, %2060, !insn.addr !6046
  %2072 = xor i32 %2071, %2064, !insn.addr !6047
  %2073 = udiv i32 %2072, 128, !insn.addr !6048
  %2074 = mul i32 %2072, 33554432, !insn.addr !6048
  %2075 = or i32 %2073, %2074, !insn.addr !6048
  %2076 = add i32 %2000, %191, !insn.addr !6049
  %2077 = add i32 %2076, %1985, !insn.addr !6050
  %2078 = xor i32 %2077, %1934, !insn.addr !6051
  %2079 = udiv i32 %2078, 65536, !insn.addr !6052
  %2080 = mul i32 %2078, 65536, !insn.addr !6052
  %2081 = or i32 %2079, %2080, !insn.addr !6052
  %2082 = add i32 %2081, %1957, !insn.addr !6053
  %2083 = xor i32 %2082, %1985, !insn.addr !6054
  %2084 = udiv i32 %2083, 4096, !insn.addr !6055
  %2085 = mul i32 %2083, 1048576, !insn.addr !6055
  %2086 = or i32 %2084, %2085, !insn.addr !6055
  %2087 = add i32 %2077, %202, !insn.addr !6056
  %2088 = add i32 %2087, %2086, !insn.addr !6057
  %2089 = xor i32 %2088, %2081, !insn.addr !6058
  %2090 = udiv i32 %2089, 256, !insn.addr !6059
  %2091 = mul i32 %2089, 16777216, !insn.addr !6059
  %2092 = or i32 %2090, %2091, !insn.addr !6059
  %2093 = add i32 %2092, %2082, !insn.addr !6060
  %2094 = xor i32 %2093, %2086, !insn.addr !6061
  %2095 = udiv i32 %2094, 128, !insn.addr !6062
  %2096 = mul i32 %2094, 33554432, !insn.addr !6062
  %2097 = or i32 %2095, %2096, !insn.addr !6062
  %2098 = add i32 %2022, %214, !insn.addr !6063
  %2099 = add i32 %2098, %2053, !insn.addr !6064
  %2100 = xor i32 %2099, %2092, !insn.addr !6065
  %2101 = udiv i32 %2100, 65536, !insn.addr !6066
  %2102 = mul i32 %2100, 65536, !insn.addr !6066
  %2103 = or i32 %2101, %2102, !insn.addr !6066
  %2104 = add i32 %2103, %2071, !insn.addr !6067
  %2105 = xor i32 %2104, %2053, !insn.addr !6068
  %2106 = udiv i32 %2105, 4096, !insn.addr !6069
  %2107 = mul i32 %2105, 1048576, !insn.addr !6069
  %2108 = or i32 %2106, %2107, !insn.addr !6069
  %2109 = add i32 %2099, %226, !insn.addr !6070
  %2110 = add i32 %2109, %2108, !insn.addr !6071
  %2111 = xor i32 %2110, %2103, !insn.addr !6072
  %2112 = udiv i32 %2111, 256, !insn.addr !6073
  %2113 = mul i32 %2111, 16777216, !insn.addr !6073
  %2114 = or i32 %2112, %2113, !insn.addr !6073
  %2115 = add i32 %2114, %2104, !insn.addr !6074
  %2116 = xor i32 %2115, %2108, !insn.addr !6075
  %2117 = udiv i32 %2116, 128, !insn.addr !6076
  %2118 = mul i32 %2116, 33554432, !insn.addr !6076
  %2119 = or i32 %2117, %2118, !insn.addr !6076
  %2120 = add i32 %2044, %238, !insn.addr !6077
  %2121 = add i32 %2120, %2075, !insn.addr !6078
  %2122 = xor i32 %2121, %2026, !insn.addr !6079
  %2123 = udiv i32 %2122, 65536, !insn.addr !6080
  %2124 = mul i32 %2122, 65536, !insn.addr !6080
  %2125 = or i32 %2123, %2124, !insn.addr !6080
  %2126 = add i32 %2125, %2093, !insn.addr !6081
  %2127 = xor i32 %2126, %2075, !insn.addr !6082
  %2128 = udiv i32 %2127, 4096, !insn.addr !6083
  %2129 = mul i32 %2127, 1048576, !insn.addr !6083
  %2130 = or i32 %2128, %2129, !insn.addr !6083
  %2131 = add i32 %2121, %250, !insn.addr !6084
  %2132 = add i32 %2131, %2130, !insn.addr !6085
  %2133 = xor i32 %2132, %2125, !insn.addr !6086
  %2134 = udiv i32 %2133, 256, !insn.addr !6087
  %2135 = mul i32 %2133, 16777216, !insn.addr !6087
  %2136 = or i32 %2134, %2135, !insn.addr !6087
  %2137 = add i32 %2136, %2126, !insn.addr !6088
  %2138 = xor i32 %2137, %2130, !insn.addr !6089
  %2139 = udiv i32 %2138, 128, !insn.addr !6090
  %2140 = mul i32 %2138, 33554432, !insn.addr !6090
  %2141 = or i32 %2139, %2140, !insn.addr !6090
  %2142 = add i32 %2066, %262, !insn.addr !6091
  %2143 = add i32 %2142, %2097, !insn.addr !6092
  %2144 = xor i32 %2143, %2048, !insn.addr !6093
  %2145 = udiv i32 %2144, 65536, !insn.addr !6094
  %2146 = mul i32 %2144, 65536, !insn.addr !6094
  %2147 = or i32 %2145, %2146, !insn.addr !6094
  %2148 = add i32 %2147, %2027, !insn.addr !6095
  %2149 = xor i32 %2148, %2097, !insn.addr !6096
  %2150 = udiv i32 %2149, 4096, !insn.addr !6097
  %2151 = mul i32 %2149, 1048576, !insn.addr !6097
  %2152 = or i32 %2150, %2151, !insn.addr !6097
  %2153 = add i32 %2143, %274, !insn.addr !6098
  %2154 = add i32 %2153, %2152, !insn.addr !6099
  %2155 = xor i32 %2154, %2147, !insn.addr !6100
  %2156 = udiv i32 %2155, 256, !insn.addr !6101
  %2157 = mul i32 %2155, 16777216, !insn.addr !6101
  %2158 = or i32 %2156, %2157, !insn.addr !6101
  %2159 = add i32 %2158, %2148, !insn.addr !6102
  %2160 = xor i32 %2159, %2152, !insn.addr !6103
  %2161 = udiv i32 %2160, 128, !insn.addr !6104
  %2162 = mul i32 %2160, 33554432, !insn.addr !6104
  %2163 = or i32 %2161, %2162, !insn.addr !6104
  %2164 = add i32 %2088, %286, !insn.addr !6105
  %2165 = add i32 %2164, %2031, !insn.addr !6106
  %2166 = xor i32 %2165, %2070, !insn.addr !6107
  %2167 = udiv i32 %2166, 65536, !insn.addr !6108
  %2168 = mul i32 %2166, 65536, !insn.addr !6108
  %2169 = or i32 %2167, %2168, !insn.addr !6108
  %2170 = add i32 %2169, %2049, !insn.addr !6109
  %2171 = xor i32 %2170, %2031, !insn.addr !6110
  %2172 = udiv i32 %2171, 4096, !insn.addr !6111
  %2173 = mul i32 %2171, 1048576, !insn.addr !6111
  %2174 = or i32 %2172, %2173, !insn.addr !6111
  %2175 = add i32 %2165, %298, !insn.addr !6112
  %2176 = add i32 %2175, %2174, !insn.addr !6113
  %2177 = xor i32 %2176, %2169, !insn.addr !6114
  %2178 = udiv i32 %2177, 256, !insn.addr !6115
  %2179 = mul i32 %2177, 16777216, !insn.addr !6115
  %2180 = or i32 %2178, %2179, !insn.addr !6115
  %2181 = add i32 %2180, %2170, !insn.addr !6116
  %2182 = xor i32 %2181, %2174, !insn.addr !6117
  %2183 = udiv i32 %2182, 128, !insn.addr !6118
  %2184 = mul i32 %2182, 33554432, !insn.addr !6118
  %2185 = or i32 %2183, %2184, !insn.addr !6118
  %2186 = add i32 %2110, %310, !insn.addr !6119
  %2187 = add i32 %2186, %2185, !insn.addr !6120
  %2188 = xor i32 %2187, %2136, !insn.addr !6121
  %2189 = udiv i32 %2188, 65536, !insn.addr !6122
  %2190 = mul i32 %2188, 65536, !insn.addr !6122
  %2191 = or i32 %2189, %2190, !insn.addr !6122
  %2192 = add i32 %2191, %2159, !insn.addr !6123
  %2193 = xor i32 %2192, %2185, !insn.addr !6124
  %2194 = udiv i32 %2193, 4096, !insn.addr !6125
  %2195 = mul i32 %2193, 1048576, !insn.addr !6125
  %2196 = or i32 %2194, %2195, !insn.addr !6125
  %2197 = add i32 %2187, %322, !insn.addr !6126
  %2198 = add i32 %2197, %2196, !insn.addr !6127
  %2199 = xor i32 %2198, %2191, !insn.addr !6128
  %2200 = udiv i32 %2199, 256, !insn.addr !6129
  %2201 = mul i32 %2199, 16777216, !insn.addr !6129
  %2202 = or i32 %2200, %2201, !insn.addr !6129
  %2203 = add i32 %2202, %2192, !insn.addr !6130
  %2204 = xor i32 %2203, %2196, !insn.addr !6131
  %2205 = udiv i32 %2204, 128, !insn.addr !6132
  %2206 = mul i32 %2204, 33554432, !insn.addr !6132
  %2207 = or i32 %2205, %2206, !insn.addr !6132
  %2208 = add i32 %2132, %334, !insn.addr !6133
  %2209 = add i32 %2208, %2119, !insn.addr !6134
  %2210 = xor i32 %2209, %2158, !insn.addr !6135
  %2211 = udiv i32 %2210, 65536, !insn.addr !6136
  %2212 = mul i32 %2210, 65536, !insn.addr !6136
  %2213 = or i32 %2211, %2212, !insn.addr !6136
  %2214 = add i32 %2213, %2181, !insn.addr !6137
  %2215 = xor i32 %2214, %2119, !insn.addr !6138
  %2216 = udiv i32 %2215, 4096, !insn.addr !6139
  %2217 = mul i32 %2215, 1048576, !insn.addr !6139
  %2218 = or i32 %2216, %2217, !insn.addr !6139
  %2219 = add i32 %2209, %346, !insn.addr !6140
  %2220 = add i32 %2219, %2218, !insn.addr !6141
  %2221 = xor i32 %2220, %2213, !insn.addr !6142
  %2222 = udiv i32 %2221, 256, !insn.addr !6143
  %2223 = mul i32 %2221, 16777216, !insn.addr !6143
  %2224 = or i32 %2222, %2223, !insn.addr !6143
  %2225 = add i32 %2224, %2214, !insn.addr !6144
  %2226 = xor i32 %2225, %2218, !insn.addr !6145
  %2227 = udiv i32 %2226, 128, !insn.addr !6146
  %2228 = mul i32 %2226, 33554432, !insn.addr !6146
  %2229 = or i32 %2227, %2228, !insn.addr !6146
  %2230 = add i32 %2154, %358, !insn.addr !6147
  %2231 = add i32 %2230, %2141, !insn.addr !6148
  %2232 = xor i32 %2231, %2180, !insn.addr !6149
  %2233 = udiv i32 %2232, 65536, !insn.addr !6150
  %2234 = mul i32 %2232, 65536, !insn.addr !6150
  %2235 = or i32 %2233, %2234, !insn.addr !6150
  %2236 = add i32 %2235, %2115, !insn.addr !6151
  %2237 = xor i32 %2236, %2141, !insn.addr !6152
  %2238 = udiv i32 %2237, 4096, !insn.addr !6153
  %2239 = mul i32 %2237, 1048576, !insn.addr !6153
  %2240 = or i32 %2238, %2239, !insn.addr !6153
  %2241 = add i32 %2231, %370, !insn.addr !6154
  %2242 = add i32 %2241, %2240, !insn.addr !6155
  %2243 = xor i32 %2242, %2235, !insn.addr !6156
  %2244 = udiv i32 %2243, 256, !insn.addr !6157
  %2245 = mul i32 %2243, 16777216, !insn.addr !6157
  %2246 = or i32 %2244, %2245, !insn.addr !6157
  %2247 = add i32 %2246, %2236, !insn.addr !6158
  %2248 = xor i32 %2247, %2240, !insn.addr !6159
  %2249 = udiv i32 %2248, 128, !insn.addr !6160
  %2250 = mul i32 %2248, 33554432, !insn.addr !6160
  %2251 = or i32 %2249, %2250, !insn.addr !6160
  %2252 = add i32 %2176, %382, !insn.addr !6161
  %2253 = add i32 %2252, %2163, !insn.addr !6162
  %2254 = xor i32 %2253, %2114, !insn.addr !6163
  %2255 = udiv i32 %2254, 65536, !insn.addr !6164
  %2256 = mul i32 %2254, 65536, !insn.addr !6164
  %2257 = or i32 %2255, %2256, !insn.addr !6164
  %2258 = add i32 %2257, %2137, !insn.addr !6165
  %2259 = xor i32 %2258, %2163, !insn.addr !6166
  %2260 = udiv i32 %2259, 4096, !insn.addr !6167
  %2261 = mul i32 %2259, 1048576, !insn.addr !6167
  %2262 = or i32 %2260, %2261, !insn.addr !6167
  %2263 = add i32 %2253, %394, !insn.addr !6168
  %2264 = add i32 %2263, %2262, !insn.addr !6169
  %2265 = xor i32 %2264, %2257, !insn.addr !6170
  %2266 = udiv i32 %2265, 256, !insn.addr !6171
  %2267 = mul i32 %2265, 16777216, !insn.addr !6171
  %2268 = or i32 %2266, %2267, !insn.addr !6171
  %2269 = add i32 %2268, %2258, !insn.addr !6172
  %2270 = xor i32 %2269, %2262, !insn.addr !6173
  %2271 = udiv i32 %2270, 128, !insn.addr !6174
  %2272 = mul i32 %2270, 33554432, !insn.addr !6174
  %2273 = or i32 %2271, %2272, !insn.addr !6174
  %2274 = add i32 %2198, %406, !insn.addr !6175
  %2275 = add i32 %2274, %2229, !insn.addr !6176
  %2276 = xor i32 %2275, %2268, !insn.addr !6177
  %2277 = udiv i32 %2276, 65536, !insn.addr !6178
  %2278 = mul i32 %2276, 65536, !insn.addr !6178
  %2279 = or i32 %2277, %2278, !insn.addr !6178
  %2280 = add i32 %2279, %2247, !insn.addr !6179
  %2281 = xor i32 %2280, %2229, !insn.addr !6180
  %2282 = udiv i32 %2281, 4096, !insn.addr !6181
  %2283 = mul i32 %2281, 1048576, !insn.addr !6181
  %2284 = or i32 %2282, %2283, !insn.addr !6181
  %2285 = add i32 %2275, %418, !insn.addr !6182
  %2286 = add i32 %2285, %2284, !insn.addr !6183
  %2287 = xor i32 %2286, %2279, !insn.addr !6184
  %2288 = udiv i32 %2287, 256, !insn.addr !6185
  %2289 = mul i32 %2287, 16777216, !insn.addr !6185
  %2290 = or i32 %2288, %2289, !insn.addr !6185
  %2291 = add i32 %2290, %2280, !insn.addr !6186
  %2292 = xor i32 %2291, %2284, !insn.addr !6187
  %2293 = udiv i32 %2292, 128, !insn.addr !6188
  %2294 = mul i32 %2292, 33554432, !insn.addr !6188
  %2295 = or i32 %2293, %2294, !insn.addr !6188
  %2296 = add i32 %2220, %430, !insn.addr !6189
  %2297 = add i32 %2296, %2251, !insn.addr !6190
  %2298 = xor i32 %2297, %2202, !insn.addr !6191
  %2299 = udiv i32 %2298, 65536, !insn.addr !6192
  %2300 = mul i32 %2298, 65536, !insn.addr !6192
  %2301 = or i32 %2299, %2300, !insn.addr !6192
  %2302 = add i32 %2301, %2269, !insn.addr !6193
  %2303 = xor i32 %2302, %2251, !insn.addr !6194
  %2304 = udiv i32 %2303, 4096, !insn.addr !6195
  %2305 = mul i32 %2303, 1048576, !insn.addr !6195
  %2306 = or i32 %2304, %2305, !insn.addr !6195
  %2307 = add i32 %2297, %442, !insn.addr !6196
  %2308 = add i32 %2307, %2306, !insn.addr !6197
  %2309 = xor i32 %2308, %2301, !insn.addr !6198
  %2310 = udiv i32 %2309, 256, !insn.addr !6199
  %2311 = mul i32 %2309, 16777216, !insn.addr !6199
  %2312 = or i32 %2310, %2311, !insn.addr !6199
  %2313 = add i32 %2312, %2302, !insn.addr !6200
  %2314 = xor i32 %2313, %2306, !insn.addr !6201
  %2315 = udiv i32 %2314, 128, !insn.addr !6202
  %2316 = mul i32 %2314, 33554432, !insn.addr !6202
  %2317 = or i32 %2315, %2316, !insn.addr !6202
  %2318 = add i32 %2242, %454, !insn.addr !6203
  %2319 = add i32 %2318, %2273, !insn.addr !6204
  %2320 = xor i32 %2319, %2224, !insn.addr !6205
  %2321 = udiv i32 %2320, 65536, !insn.addr !6206
  %2322 = mul i32 %2320, 65536, !insn.addr !6206
  %2323 = or i32 %2321, %2322, !insn.addr !6206
  %2324 = add i32 %2323, %2203, !insn.addr !6207
  %2325 = xor i32 %2324, %2273, !insn.addr !6208
  %2326 = udiv i32 %2325, 4096, !insn.addr !6209
  %2327 = mul i32 %2325, 1048576, !insn.addr !6209
  %2328 = or i32 %2326, %2327, !insn.addr !6209
  %2329 = add i32 %2319, %466, !insn.addr !6210
  %2330 = add i32 %2329, %2328, !insn.addr !6211
  %2331 = xor i32 %2330, %2323, !insn.addr !6212
  %2332 = udiv i32 %2331, 256, !insn.addr !6213
  %2333 = mul i32 %2331, 16777216, !insn.addr !6213
  %2334 = or i32 %2332, %2333, !insn.addr !6213
  %2335 = add i32 %2334, %2324, !insn.addr !6214
  %2336 = xor i32 %2335, %2328, !insn.addr !6215
  %2337 = udiv i32 %2336, 128, !insn.addr !6216
  %2338 = mul i32 %2336, 33554432, !insn.addr !6216
  %2339 = or i32 %2337, %2338, !insn.addr !6216
  %2340 = add i32 %2264, %478, !insn.addr !6217
  %2341 = add i32 %2340, %2207, !insn.addr !6218
  %2342 = xor i32 %2341, %2246, !insn.addr !6219
  %2343 = udiv i32 %2342, 65536, !insn.addr !6220
  %2344 = mul i32 %2342, 65536, !insn.addr !6220
  %2345 = or i32 %2343, %2344, !insn.addr !6220
  %2346 = add i32 %2345, %2225, !insn.addr !6221
  %2347 = xor i32 %2346, %2207, !insn.addr !6222
  %2348 = udiv i32 %2347, 4096, !insn.addr !6223
  %2349 = mul i32 %2347, 1048576, !insn.addr !6223
  %2350 = or i32 %2348, %2349, !insn.addr !6223
  %2351 = add i32 %2341, %490, !insn.addr !6224
  %2352 = add i32 %2351, %2350, !insn.addr !6225
  %2353 = xor i32 %2352, %2345, !insn.addr !6226
  %2354 = udiv i32 %2353, 256, !insn.addr !6227
  %2355 = mul i32 %2353, 16777216, !insn.addr !6227
  %2356 = or i32 %2354, %2355, !insn.addr !6227
  %2357 = add i32 %2356, %2346, !insn.addr !6228
  %2358 = xor i32 %2357, %2350, !insn.addr !6229
  %2359 = udiv i32 %2358, 128, !insn.addr !6230
  %2360 = mul i32 %2358, 33554432, !insn.addr !6230
  %2361 = or i32 %2359, %2360, !insn.addr !6230
  %2362 = add i32 %2286, %502, !insn.addr !6231
  %2363 = add i32 %2362, %2361, !insn.addr !6232
  %2364 = xor i32 %2363, %2312, !insn.addr !6233
  %2365 = udiv i32 %2364, 65536, !insn.addr !6234
  %2366 = mul i32 %2364, 65536, !insn.addr !6234
  %2367 = or i32 %2365, %2366, !insn.addr !6234
  %2368 = add i32 %2367, %2335, !insn.addr !6235
  %2369 = xor i32 %2368, %2361, !insn.addr !6236
  %2370 = udiv i32 %2369, 4096, !insn.addr !6237
  %2371 = mul i32 %2369, 1048576, !insn.addr !6237
  %2372 = or i32 %2370, %2371, !insn.addr !6237
  %2373 = add i32 %2363, %514, !insn.addr !6238
  %2374 = add i32 %2373, %2372, !insn.addr !6239
  %2375 = xor i32 %2374, %2367, !insn.addr !6240
  %2376 = udiv i32 %2375, 256, !insn.addr !6241
  %2377 = mul i32 %2375, 16777216, !insn.addr !6241
  %2378 = or i32 %2376, %2377, !insn.addr !6241
  %2379 = add i32 %2378, %2368, !insn.addr !6242
  %2380 = xor i32 %2379, %2372, !insn.addr !6243
  %2381 = udiv i32 %2380, 128, !insn.addr !6244
  %2382 = mul i32 %2380, 33554432, !insn.addr !6244
  %2383 = or i32 %2381, %2382, !insn.addr !6244
  %2384 = add i32 %2308, %526, !insn.addr !6245
  %2385 = add i32 %2384, %2295, !insn.addr !6246
  %2386 = xor i32 %2385, %2334, !insn.addr !6247
  %2387 = udiv i32 %2386, 65536, !insn.addr !6248
  %2388 = mul i32 %2386, 65536, !insn.addr !6248
  %2389 = or i32 %2387, %2388, !insn.addr !6248
  %2390 = add i32 %2389, %2357, !insn.addr !6249
  %2391 = xor i32 %2390, %2295, !insn.addr !6250
  %2392 = udiv i32 %2391, 4096, !insn.addr !6251
  %2393 = mul i32 %2391, 1048576, !insn.addr !6251
  %2394 = or i32 %2392, %2393, !insn.addr !6251
  %2395 = add i32 %2385, %538, !insn.addr !6252
  %2396 = add i32 %2395, %2394, !insn.addr !6253
  %2397 = xor i32 %2396, %2389, !insn.addr !6254
  %2398 = udiv i32 %2397, 256, !insn.addr !6255
  %2399 = mul i32 %2397, 16777216, !insn.addr !6255
  %2400 = or i32 %2398, %2399, !insn.addr !6255
  %2401 = add i32 %2400, %2390, !insn.addr !6256
  %2402 = xor i32 %2401, %2394, !insn.addr !6257
  %2403 = udiv i32 %2402, 128, !insn.addr !6258
  %2404 = mul i32 %2402, 33554432, !insn.addr !6258
  %2405 = or i32 %2403, %2404, !insn.addr !6258
  %2406 = add i32 %2330, %550, !insn.addr !6259
  %2407 = add i32 %2406, %2317, !insn.addr !6260
  %2408 = xor i32 %2407, %2356, !insn.addr !6261
  %2409 = udiv i32 %2408, 65536, !insn.addr !6262
  %2410 = mul i32 %2408, 65536, !insn.addr !6262
  %2411 = or i32 %2409, %2410, !insn.addr !6262
  %2412 = add i32 %2411, %2291, !insn.addr !6263
  %2413 = xor i32 %2412, %2317, !insn.addr !6264
  %2414 = udiv i32 %2413, 4096, !insn.addr !6265
  %2415 = mul i32 %2413, 1048576, !insn.addr !6265
  %2416 = or i32 %2414, %2415, !insn.addr !6265
  %2417 = add i32 %2407, %562, !insn.addr !6266
  %2418 = add i32 %2417, %2416, !insn.addr !6267
  %2419 = xor i32 %2418, %2411, !insn.addr !6268
  %2420 = udiv i32 %2419, 256, !insn.addr !6269
  %2421 = mul i32 %2419, 16777216, !insn.addr !6269
  %2422 = or i32 %2420, %2421, !insn.addr !6269
  %2423 = add i32 %2422, %2412, !insn.addr !6270
  %2424 = xor i32 %2423, %2416, !insn.addr !6271
  %2425 = udiv i32 %2424, 128, !insn.addr !6272
  %2426 = mul i32 %2424, 33554432, !insn.addr !6272
  %2427 = or i32 %2425, %2426, !insn.addr !6272
  %2428 = add i32 %2352, %574, !insn.addr !6273
  %2429 = add i32 %2428, %2339, !insn.addr !6274
  %2430 = xor i32 %2429, %2290, !insn.addr !6275
  %2431 = udiv i32 %2430, 65536, !insn.addr !6276
  %2432 = mul i32 %2430, 65536, !insn.addr !6276
  %2433 = or i32 %2431, %2432, !insn.addr !6276
  %2434 = add i32 %2433, %2313, !insn.addr !6277
  %2435 = xor i32 %2434, %2339, !insn.addr !6278
  %2436 = udiv i32 %2435, 4096, !insn.addr !6279
  %2437 = mul i32 %2435, 1048576, !insn.addr !6279
  %2438 = or i32 %2436, %2437, !insn.addr !6279
  %2439 = add i32 %2429, %586, !insn.addr !6280
  %2440 = add i32 %2439, %2438, !insn.addr !6281
  %2441 = xor i32 %2440, %2433, !insn.addr !6282
  %2442 = udiv i32 %2441, 256, !insn.addr !6283
  %2443 = mul i32 %2441, 16777216, !insn.addr !6283
  %2444 = or i32 %2442, %2443, !insn.addr !6283
  %2445 = add i32 %2444, %2434, !insn.addr !6284
  %2446 = xor i32 %2445, %2438, !insn.addr !6285
  %2447 = udiv i32 %2446, 128, !insn.addr !6286
  %2448 = mul i32 %2446, 33554432, !insn.addr !6286
  %2449 = or i32 %2447, %2448, !insn.addr !6286
  %2450 = add i32 %2374, %322, !insn.addr !6287
  %2451 = add i32 %2450, %2405, !insn.addr !6288
  %2452 = xor i32 %2451, %2444, !insn.addr !6289
  %2453 = udiv i32 %2452, 65536, !insn.addr !6290
  %2454 = mul i32 %2452, 65536, !insn.addr !6290
  %2455 = or i32 %2453, %2454, !insn.addr !6290
  %2456 = add i32 %2455, %2423, !insn.addr !6291
  %2457 = xor i32 %2456, %2405, !insn.addr !6292
  %2458 = udiv i32 %2457, 4096, !insn.addr !6293
  %2459 = mul i32 %2457, 1048576, !insn.addr !6293
  %2460 = or i32 %2458, %2459, !insn.addr !6293
  %2461 = add i32 %2451, %310, !insn.addr !6294
  %2462 = add i32 %2461, %2460, !insn.addr !6295
  %2463 = xor i32 %2462, %2455, !insn.addr !6296
  %2464 = udiv i32 %2463, 256, !insn.addr !6297
  %2465 = mul i32 %2463, 16777216, !insn.addr !6297
  %2466 = or i32 %2464, %2465, !insn.addr !6297
  %2467 = add i32 %2466, %2456, !insn.addr !6298
  %2468 = xor i32 %2467, %2460, !insn.addr !6299
  %2469 = udiv i32 %2468, 128, !insn.addr !6300
  %2470 = mul i32 %2468, 33554432, !insn.addr !6300
  %2471 = or i32 %2469, %2470, !insn.addr !6300
  %2472 = add i32 %2396, %620, !insn.addr !6301
  %2473 = add i32 %2472, %2427, !insn.addr !6302
  %2474 = xor i32 %2473, %2378, !insn.addr !6303
  %2475 = udiv i32 %2474, 65536, !insn.addr !6304
  %2476 = mul i32 %2474, 65536, !insn.addr !6304
  %2477 = or i32 %2475, %2476, !insn.addr !6304
  %2478 = add i32 %2477, %2445, !insn.addr !6305
  %2479 = xor i32 %2478, %2427, !insn.addr !6306
  %2480 = udiv i32 %2479, 4096, !insn.addr !6307
  %2481 = mul i32 %2479, 1048576, !insn.addr !6307
  %2482 = or i32 %2480, %2481, !insn.addr !6307
  %2483 = add i32 %2473, %632, !insn.addr !6308
  %2484 = add i32 %2483, %2482, !insn.addr !6309
  %2485 = xor i32 %2484, %2477, !insn.addr !6310
  %2486 = udiv i32 %2485, 256, !insn.addr !6311
  %2487 = mul i32 %2485, 16777216, !insn.addr !6311
  %2488 = or i32 %2486, %2487, !insn.addr !6311
  %2489 = add i32 %2488, %2478, !insn.addr !6312
  %2490 = xor i32 %2489, %2482, !insn.addr !6313
  %2491 = udiv i32 %2490, 128, !insn.addr !6314
  %2492 = mul i32 %2490, 33554432, !insn.addr !6314
  %2493 = or i32 %2491, %2492, !insn.addr !6314
  %2494 = add i32 %2418, %644, !insn.addr !6315
  %2495 = add i32 %2494, %2449, !insn.addr !6316
  %2496 = xor i32 %2495, %2400, !insn.addr !6317
  %2497 = udiv i32 %2496, 65536, !insn.addr !6318
  %2498 = mul i32 %2496, 65536, !insn.addr !6318
  %2499 = or i32 %2497, %2498, !insn.addr !6318
  %2500 = add i32 %2499, %2379, !insn.addr !6319
  %2501 = xor i32 %2500, %2449, !insn.addr !6320
  %2502 = udiv i32 %2501, 4096, !insn.addr !6321
  %2503 = mul i32 %2501, 1048576, !insn.addr !6321
  %2504 = or i32 %2502, %2503, !insn.addr !6321
  %2505 = add i32 %2495, %656, !insn.addr !6322
  %2506 = add i32 %2505, %2504, !insn.addr !6323
  %2507 = xor i32 %2506, %2499, !insn.addr !6324
  %2508 = udiv i32 %2507, 256, !insn.addr !6325
  %2509 = mul i32 %2507, 16777216, !insn.addr !6325
  %2510 = or i32 %2508, %2509, !insn.addr !6325
  %2511 = add i32 %2510, %2500, !insn.addr !6326
  %2512 = xor i32 %2511, %2504, !insn.addr !6327
  %2513 = udiv i32 %2512, 128, !insn.addr !6328
  %2514 = mul i32 %2512, 33554432, !insn.addr !6328
  %2515 = or i32 %2513, %2514, !insn.addr !6328
  %2516 = add i32 %2440, %668, !insn.addr !6329
  %2517 = add i32 %2516, %2383, !insn.addr !6330
  %2518 = xor i32 %2517, %2422, !insn.addr !6331
  %2519 = udiv i32 %2518, 65536, !insn.addr !6332
  %2520 = mul i32 %2518, 65536, !insn.addr !6332
  %2521 = or i32 %2519, %2520, !insn.addr !6332
  %2522 = add i32 %2521, %2401, !insn.addr !6333
  %2523 = xor i32 %2522, %2383, !insn.addr !6334
  %2524 = udiv i32 %2523, 4096, !insn.addr !6335
  %2525 = mul i32 %2523, 1048576, !insn.addr !6335
  %2526 = or i32 %2524, %2525, !insn.addr !6335
  %2527 = add i32 %2517, %680, !insn.addr !6336
  %2528 = add i32 %2527, %2526, !insn.addr !6337
  %2529 = xor i32 %2528, %2521, !insn.addr !6338
  %2530 = udiv i32 %2529, 256, !insn.addr !6339
  %2531 = mul i32 %2529, 16777216, !insn.addr !6339
  %2532 = or i32 %2530, %2531, !insn.addr !6339
  %2533 = add i32 %2532, %2522, !insn.addr !6340
  %2534 = xor i32 %2533, %2526, !insn.addr !6341
  %2535 = udiv i32 %2534, 128, !insn.addr !6342
  %2536 = mul i32 %2534, 33554432, !insn.addr !6342
  %2537 = or i32 %2535, %2536, !insn.addr !6342
  %2538 = add i32 %2462, %692, !insn.addr !6343
  %2539 = add i32 %2538, %2537, !insn.addr !6344
  %2540 = xor i32 %2539, %2488, !insn.addr !6345
  %2541 = udiv i32 %2540, 65536, !insn.addr !6346
  %2542 = mul i32 %2540, 65536, !insn.addr !6346
  %2543 = or i32 %2541, %2542, !insn.addr !6346
  %2544 = add i32 %2543, %2511, !insn.addr !6347
  %2545 = xor i32 %2544, %2537, !insn.addr !6348
  %2546 = udiv i32 %2545, 4096, !insn.addr !6349
  %2547 = mul i32 %2545, 1048576, !insn.addr !6349
  %2548 = or i32 %2546, %2547, !insn.addr !6349
  %2549 = add i32 %2539, %704, !insn.addr !6350
  %2550 = add i32 %2549, %2548, !insn.addr !6351
  %2551 = xor i32 %2550, %2543, !insn.addr !6352
  %2552 = udiv i32 %2551, 256, !insn.addr !6353
  %2553 = mul i32 %2551, 16777216, !insn.addr !6353
  %2554 = or i32 %2552, %2553, !insn.addr !6353
  %2555 = add i32 %2554, %2544, !insn.addr !6354
  %2556 = xor i32 %2555, %2548, !insn.addr !6355
  %2557 = udiv i32 %2556, 128, !insn.addr !6356
  %2558 = mul i32 %2556, 33554432, !insn.addr !6356
  %2559 = or i32 %2557, %2558, !insn.addr !6356
  %2560 = add i32 %2484, %716, !insn.addr !6357
  %2561 = add i32 %2560, %2471, !insn.addr !6358
  %2562 = xor i32 %2561, %2510, !insn.addr !6359
  %2563 = udiv i32 %2562, 65536, !insn.addr !6360
  %2564 = mul i32 %2562, 65536, !insn.addr !6360
  %2565 = or i32 %2563, %2564, !insn.addr !6360
  %2566 = add i32 %2565, %2533, !insn.addr !6361
  %2567 = xor i32 %2566, %2471, !insn.addr !6362
  %2568 = udiv i32 %2567, 4096, !insn.addr !6363
  %2569 = mul i32 %2567, 1048576, !insn.addr !6363
  %2570 = or i32 %2568, %2569, !insn.addr !6363
  %2571 = add i32 %2561, %728, !insn.addr !6364
  %2572 = add i32 %2571, %2570, !insn.addr !6365
  %2573 = xor i32 %2572, %2565, !insn.addr !6366
  %2574 = udiv i32 %2573, 256, !insn.addr !6367
  %2575 = mul i32 %2573, 16777216, !insn.addr !6367
  %2576 = or i32 %2574, %2575, !insn.addr !6367
  %2577 = add i32 %2576, %2566, !insn.addr !6368
  %2578 = xor i32 %2577, %2570, !insn.addr !6369
  %2579 = udiv i32 %2578, 128, !insn.addr !6370
  %2580 = mul i32 %2578, 33554432, !insn.addr !6370
  %2581 = or i32 %2579, %2580, !insn.addr !6370
  %2582 = add i32 %2506, %274, !insn.addr !6371
  %2583 = add i32 %2582, %2493, !insn.addr !6372
  %2584 = xor i32 %2583, %2532, !insn.addr !6373
  %2585 = udiv i32 %2584, 65536, !insn.addr !6374
  %2586 = mul i32 %2584, 65536, !insn.addr !6374
  %2587 = or i32 %2585, %2586, !insn.addr !6374
  %2588 = add i32 %2587, %2467, !insn.addr !6375
  %2589 = xor i32 %2588, %2493, !insn.addr !6376
  %2590 = udiv i32 %2589, 4096, !insn.addr !6377
  %2591 = mul i32 %2589, 1048576, !insn.addr !6377
  %2592 = or i32 %2590, %2591, !insn.addr !6377
  %2593 = add i32 %2583, %262, !insn.addr !6378
  %2594 = add i32 %2593, %2592, !insn.addr !6379
  %2595 = xor i32 %2594, %2587, !insn.addr !6380
  %2596 = udiv i32 %2595, 256, !insn.addr !6381
  %2597 = mul i32 %2595, 16777216, !insn.addr !6381
  %2598 = or i32 %2596, %2597, !insn.addr !6381
  %2599 = add i32 %2598, %2588, !insn.addr !6382
  %2600 = xor i32 %2599, %2592, !insn.addr !6383
  %2601 = udiv i32 %2600, 128, !insn.addr !6384
  %2602 = mul i32 %2600, 33554432, !insn.addr !6384
  %2603 = or i32 %2601, %2602, !insn.addr !6384
  %2604 = add i32 %2528, %762, !insn.addr !6385
  %2605 = add i32 %2604, %2515, !insn.addr !6386
  %2606 = xor i32 %2605, %2466, !insn.addr !6387
  %2607 = udiv i32 %2606, 65536, !insn.addr !6388
  %2608 = mul i32 %2606, 65536, !insn.addr !6388
  %2609 = or i32 %2607, %2608, !insn.addr !6388
  %2610 = add i32 %2609, %2489, !insn.addr !6389
  %2611 = xor i32 %2610, %2515, !insn.addr !6390
  %2612 = udiv i32 %2611, 4096, !insn.addr !6391
  %2613 = mul i32 %2611, 1048576, !insn.addr !6391
  %2614 = or i32 %2612, %2613, !insn.addr !6391
  %2615 = add i32 %2605, %774, !insn.addr !6392
  %2616 = add i32 %2615, %2614, !insn.addr !6393
  %2617 = xor i32 %2616, %2609, !insn.addr !6394
  %2618 = udiv i32 %2617, 256, !insn.addr !6395
  %2619 = mul i32 %2617, 16777216, !insn.addr !6395
  %2620 = or i32 %2618, %2619, !insn.addr !6395
  %2621 = add i32 %2620, %2610, !insn.addr !6396
  %2622 = xor i32 %2621, %2614, !insn.addr !6397
  %2623 = udiv i32 %2622, 128, !insn.addr !6398
  %2624 = mul i32 %2622, 33554432, !insn.addr !6398
  %2625 = or i32 %2623, %2624, !insn.addr !6398
  %2626 = add i32 %2550, %786, !insn.addr !6399
  %2627 = add i32 %2626, %2581, !insn.addr !6400
  %2628 = xor i32 %2627, %2620, !insn.addr !6401
  %2629 = udiv i32 %2628, 65536, !insn.addr !6402
  %2630 = mul i32 %2628, 65536, !insn.addr !6402
  %2631 = or i32 %2629, %2630, !insn.addr !6402
  %2632 = add i32 %2631, %2599, !insn.addr !6403
  %2633 = xor i32 %2632, %2581, !insn.addr !6404
  %2634 = udiv i32 %2633, 4096, !insn.addr !6405
  %2635 = mul i32 %2633, 1048576, !insn.addr !6405
  %2636 = or i32 %2634, %2635, !insn.addr !6405
  %2637 = add i32 %2627, %798, !insn.addr !6406
  %2638 = add i32 %2637, %2636, !insn.addr !6407
  %2639 = xor i32 %2638, %2631, !insn.addr !6408
  %2640 = udiv i32 %2639, 256, !insn.addr !6409
  %2641 = mul i32 %2639, 16777216, !insn.addr !6409
  %2642 = or i32 %2640, %2641, !insn.addr !6409
  %2643 = add i32 %2642, %2632, !insn.addr !6410
  %2644 = xor i32 %2643, %2636, !insn.addr !6411
  %2645 = udiv i32 %2644, 128, !insn.addr !6412
  %2646 = mul i32 %2644, 33554432, !insn.addr !6412
  %2647 = or i32 %2645, %2646, !insn.addr !6412
  %2648 = add i32 %2572, %810, !insn.addr !6413
  %2649 = add i32 %2648, %2603, !insn.addr !6414
  %2650 = xor i32 %2649, %2554, !insn.addr !6415
  %2651 = udiv i32 %2650, 65536, !insn.addr !6416
  %2652 = mul i32 %2650, 65536, !insn.addr !6416
  %2653 = or i32 %2651, %2652, !insn.addr !6416
  %2654 = add i32 %2653, %2621, !insn.addr !6417
  %2655 = xor i32 %2654, %2603, !insn.addr !6418
  %2656 = udiv i32 %2655, 4096, !insn.addr !6419
  %2657 = mul i32 %2655, 1048576, !insn.addr !6419
  %2658 = or i32 %2656, %2657, !insn.addr !6419
  %2659 = add i32 %2649, %822, !insn.addr !6420
  %2660 = add i32 %2659, %2658, !insn.addr !6421
  %2661 = xor i32 %2660, %2653, !insn.addr !6422
  %2662 = udiv i32 %2661, 256, !insn.addr !6423
  %2663 = mul i32 %2661, 16777216, !insn.addr !6423
  %2664 = or i32 %2662, %2663, !insn.addr !6423
  %2665 = add i32 %2664, %2654, !insn.addr !6424
  %2666 = xor i32 %2665, %2658, !insn.addr !6425
  %2667 = udiv i32 %2666, 128, !insn.addr !6426
  %2668 = mul i32 %2666, 33554432, !insn.addr !6426
  %2669 = or i32 %2667, %2668, !insn.addr !6426
  %2670 = add i32 %2594, %834, !insn.addr !6427
  %2671 = add i32 %2670, %2625, !insn.addr !6428
  %2672 = xor i32 %2671, %2576, !insn.addr !6429
  %2673 = udiv i32 %2672, 65536, !insn.addr !6430
  %2674 = mul i32 %2672, 65536, !insn.addr !6430
  %2675 = or i32 %2673, %2674, !insn.addr !6430
  %2676 = add i32 %2675, %2555, !insn.addr !6431
  %2677 = xor i32 %2676, %2625, !insn.addr !6432
  %2678 = udiv i32 %2677, 4096, !insn.addr !6433
  %2679 = mul i32 %2677, 1048576, !insn.addr !6433
  %2680 = or i32 %2678, %2679, !insn.addr !6433
  %2681 = add i32 %2671, %846, !insn.addr !6434
  %2682 = add i32 %2681, %2680, !insn.addr !6435
  %2683 = xor i32 %2682, %2675, !insn.addr !6436
  %2684 = udiv i32 %2683, 256, !insn.addr !6437
  %2685 = mul i32 %2683, 16777216, !insn.addr !6437
  %2686 = or i32 %2684, %2685, !insn.addr !6437
  %2687 = add i32 %2686, %2676, !insn.addr !6438
  %2688 = xor i32 %2687, %2680, !insn.addr !6439
  %2689 = udiv i32 %2688, 128, !insn.addr !6440
  %2690 = mul i32 %2688, 33554432, !insn.addr !6440
  %2691 = or i32 %2689, %2690, !insn.addr !6440
  %2692 = add i32 %2616, %858, !insn.addr !6441
  %2693 = add i32 %2692, %2559, !insn.addr !6442
  %2694 = xor i32 %2693, %2598, !insn.addr !6443
  %2695 = udiv i32 %2694, 65536, !insn.addr !6444
  %2696 = mul i32 %2694, 65536, !insn.addr !6444
  %2697 = or i32 %2695, %2696, !insn.addr !6444
  %2698 = add i32 %2697, %2577, !insn.addr !6445
  %2699 = xor i32 %2698, %2559, !insn.addr !6446
  %2700 = udiv i32 %2699, 4096, !insn.addr !6447
  %2701 = mul i32 %2699, 1048576, !insn.addr !6447
  %2702 = or i32 %2700, %2701, !insn.addr !6447
  %2703 = add i32 %2693, %870, !insn.addr !6448
  %2704 = add i32 %2703, %2702, !insn.addr !6449
  %2705 = xor i32 %2704, %2697, !insn.addr !6450
  %2706 = udiv i32 %2705, 256, !insn.addr !6451
  %2707 = mul i32 %2705, 16777216, !insn.addr !6451
  %2708 = or i32 %2706, %2707, !insn.addr !6451
  %2709 = add i32 %2708, %2698, !insn.addr !6452
  %2710 = xor i32 %2709, %2702, !insn.addr !6453
  %2711 = udiv i32 %2710, 128, !insn.addr !6454
  %2712 = mul i32 %2710, 33554432, !insn.addr !6454
  %2713 = or i32 %2711, %2712, !insn.addr !6454
  %2714 = xor i32 %stack_var_-16.0.ph34.reload, %41, !insn.addr !6455
  %2715 = xor i32 %2714, %2638, !insn.addr !6456
  %2716 = xor i32 %2715, %2687, !insn.addr !6457
  %2717 = xor i32 %stack_var_-20.0.ph35.reload, %44, !insn.addr !6458
  %2718 = xor i32 %2717, %2660, !insn.addr !6459
  %2719 = xor i32 %2718, %2709, !insn.addr !6460
  %2720 = xor i32 %stack_var_-24.0.ph36.reload, %47, !insn.addr !6461
  %2721 = xor i32 %2720, %2682, !insn.addr !6462
  %2722 = xor i32 %2721, %2643, !insn.addr !6463
  %2723 = xor i32 %stack_var_-28.0.ph37.reload, %50, !insn.addr !6464
  %2724 = xor i32 %2723, %2704, !insn.addr !6465
  %2725 = xor i32 %2724, %2665, !insn.addr !6466
  %2726 = xor i32 %stack_var_-32.0.ph38.reload, %41, !insn.addr !6467
  %2727 = xor i32 %2726, %2713, !insn.addr !6468
  %2728 = xor i32 %2727, %2664, !insn.addr !6469
  %2729 = xor i32 %stack_var_-36.0.ph39.reload, %44, !insn.addr !6470
  %2730 = xor i32 %2729, %2647, !insn.addr !6471
  %2731 = xor i32 %2730, %2686, !insn.addr !6472
  %2732 = xor i32 %stack_var_-40.0.ph40.reload, %47, !insn.addr !6473
  %2733 = xor i32 %2732, %2708, !insn.addr !6474
  %2734 = xor i32 %2733, %2669, !insn.addr !6475
  %2735 = xor i32 %stack_var_-44.0.ph41.reload, %50, !insn.addr !6476
  %2736 = xor i32 %2735, %2642, !insn.addr !6477
  %2737 = xor i32 %2736, %2691, !insn.addr !6478
  %2738 = icmp eq i32 %89, 0, !insn.addr !4720
  store i32 %spec.select1, i32* %stack_var_-52.1.ph43.reg2mem, !insn.addr !4721
  store i32 %91, i32* %stack_var_-48.0.ph42.reg2mem, !insn.addr !4721
  store i32 %2737, i32* %stack_var_-44.0.ph41.reg2mem, !insn.addr !4721
  store i32 %2734, i32* %stack_var_-40.0.ph40.reg2mem, !insn.addr !4721
  store i32 %2731, i32* %stack_var_-36.0.ph39.reg2mem, !insn.addr !4721
  store i32 %2728, i32* %stack_var_-32.0.ph38.reg2mem, !insn.addr !4721
  store i32 %2725, i32* %stack_var_-28.0.ph37.reg2mem, !insn.addr !4721
  store i32 %2722, i32* %stack_var_-24.0.ph36.reg2mem, !insn.addr !4721
  store i32 %2719, i32* %stack_var_-20.0.ph35.reg2mem, !insn.addr !4721
  store i32 %2716, i32* %stack_var_-16.0.ph34.reg2mem, !insn.addr !4721
  store i32 0, i32* %stack_var_-12.0.ph33.reg2mem, !insn.addr !4721
  store i32 %89, i32* %stack_var_-220.0.ph32.reg2mem, !insn.addr !4721
  store i32 %88, i32* %stack_var_-216.0.ph31.reg2mem, !insn.addr !4721
  store i32 %2716, i32* %stack_var_-16.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %2719, i32* %stack_var_-20.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %2722, i32* %stack_var_-24.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %2725, i32* %stack_var_-28.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %2728, i32* %stack_var_-32.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %2731, i32* %stack_var_-36.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %2734, i32* %stack_var_-40.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %2737, i32* %stack_var_-44.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %91, i32* %stack_var_-48.0.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 %spec.select1, i32* %stack_var_-52.1.ph.lcssa.reg2mem, !insn.addr !4721
  store i32 0, i32* %stack_var_-12.0.lcssa.reg2mem, !insn.addr !4721
  store i32 %117, i32* %r0.0.lcssa.reg2mem, !insn.addr !4721
  br i1 %2738, label %dec_label_pc_19c2e, label %dec_label_pc_16380.lr.ph, !insn.addr !4721

dec_label_pc_16380.lr.ph:                         ; preds = %dec_label_pc_16380.lr.ph.lr.ph, %dec_label_pc_163de
  %stack_var_-216.0.ph31.reload = load i32, i32* %stack_var_-216.0.ph31.reg2mem
  %stack_var_-220.0.ph32.reload = load i32, i32* %stack_var_-220.0.ph32.reg2mem
  %stack_var_-12.0.ph33.reload = load i32, i32* %stack_var_-12.0.ph33.reg2mem
  %stack_var_-16.0.ph34.reload = load i32, i32* %stack_var_-16.0.ph34.reg2mem
  %stack_var_-20.0.ph35.reload = load i32, i32* %stack_var_-20.0.ph35.reg2mem
  %stack_var_-24.0.ph36.reload = load i32, i32* %stack_var_-24.0.ph36.reg2mem
  %stack_var_-28.0.ph37.reload = load i32, i32* %stack_var_-28.0.ph37.reg2mem
  %stack_var_-32.0.ph38.reload = load i32, i32* %stack_var_-32.0.ph38.reg2mem
  %stack_var_-36.0.ph39.reload = load i32, i32* %stack_var_-36.0.ph39.reg2mem
  %stack_var_-40.0.ph40.reload = load i32, i32* %stack_var_-40.0.ph40.reg2mem
  %stack_var_-44.0.ph41.reload = load i32, i32* %stack_var_-44.0.ph41.reg2mem
  %stack_var_-48.0.ph42.reload = load i32, i32* %stack_var_-48.0.ph42.reg2mem
  %stack_var_-52.1.ph43.reload = load i32, i32* %stack_var_-52.1.ph43.reg2mem
  store i32 %stack_var_-12.0.ph33.reload, i32* %stack_var_-12.07.reg2mem
  store i32 %stack_var_-220.0.ph32.reload, i32* %stack_var_-220.06.reg2mem
  store i32 %stack_var_-216.0.ph31.reload, i32* %stack_var_-216.05.reg2mem
  br label %dec_label_pc_16380

dec_label_pc_19c26:                               ; preds = %dec_label_pc_16380
  %2739 = icmp eq i32 %89, 0, !insn.addr !4720
  store i32 %87, i32* %stack_var_-12.07.reg2mem, !insn.addr !4721
  store i32 %89, i32* %stack_var_-220.06.reg2mem, !insn.addr !4721
  store i32 %88, i32* %stack_var_-216.05.reg2mem, !insn.addr !4721
  br i1 %2739, label %dec_label_pc_19c26.dec_label_pc_19c2e_crit_edge, label %dec_label_pc_16380, !insn.addr !4721

dec_label_pc_19c26.dec_label_pc_19c2e_crit_edge:  ; preds = %dec_label_pc_19c26
  %2740 = ptrtoint i32* %86 to i32, !insn.addr !4726
  store i32 %stack_var_-16.0.ph34.reload, i32* %stack_var_-16.0.ph.lcssa.reg2mem
  store i32 %stack_var_-20.0.ph35.reload, i32* %stack_var_-20.0.ph.lcssa.reg2mem
  store i32 %stack_var_-24.0.ph36.reload, i32* %stack_var_-24.0.ph.lcssa.reg2mem
  store i32 %stack_var_-28.0.ph37.reload, i32* %stack_var_-28.0.ph.lcssa.reg2mem
  store i32 %stack_var_-32.0.ph38.reload, i32* %stack_var_-32.0.ph.lcssa.reg2mem
  store i32 %stack_var_-36.0.ph39.reload, i32* %stack_var_-36.0.ph.lcssa.reg2mem
  store i32 %stack_var_-40.0.ph40.reload, i32* %stack_var_-40.0.ph.lcssa.reg2mem
  store i32 %stack_var_-44.0.ph41.reload, i32* %stack_var_-44.0.ph.lcssa.reg2mem
  store i32 %stack_var_-48.0.ph42.reload, i32* %stack_var_-48.0.ph.lcssa.reg2mem
  store i32 %stack_var_-52.1.ph43.reload, i32* %stack_var_-52.1.ph.lcssa.reg2mem
  store i32 %87, i32* %stack_var_-12.0.lcssa.reg2mem
  store i32 %2740, i32* %r0.0.lcssa.reg2mem
  br label %dec_label_pc_19c2e

dec_label_pc_19c2e:                               ; preds = %dec_label_pc_163de, %dec_label_pc_1630c, %dec_label_pc_19c26.dec_label_pc_19c2e_crit_edge
  %r0.0.lcssa.reload = load i32, i32* %r0.0.lcssa.reg2mem
  %stack_var_-12.0.lcssa.reload = load i32, i32* %stack_var_-12.0.lcssa.reg2mem
  %stack_var_-52.1.ph.lcssa.reload = load i32, i32* %stack_var_-52.1.ph.lcssa.reg2mem
  %stack_var_-48.0.ph.lcssa.reload = load i32, i32* %stack_var_-48.0.ph.lcssa.reg2mem
  %stack_var_-44.0.ph.lcssa.reload = load i32, i32* %stack_var_-44.0.ph.lcssa.reg2mem
  %stack_var_-40.0.ph.lcssa.reload = load i32, i32* %stack_var_-40.0.ph.lcssa.reg2mem
  %stack_var_-36.0.ph.lcssa.reload = load i32, i32* %stack_var_-36.0.ph.lcssa.reg2mem
  %stack_var_-32.0.ph.lcssa.reload = load i32, i32* %stack_var_-32.0.ph.lcssa.reg2mem
  %stack_var_-28.0.ph.lcssa.reload = load i32, i32* %stack_var_-28.0.ph.lcssa.reg2mem
  %stack_var_-24.0.ph.lcssa.reload = load i32, i32* %stack_var_-24.0.ph.lcssa.reg2mem
  %stack_var_-20.0.ph.lcssa.reload = load i32, i32* %stack_var_-20.0.ph.lcssa.reg2mem
  %stack_var_-16.0.ph.lcssa.reload = load i32, i32* %stack_var_-16.0.ph.lcssa.reg2mem
  store i32 %stack_var_-16.0.ph.lcssa.reload, i32* %16, align 4, !insn.addr !6479
  store i32 %stack_var_-20.0.ph.lcssa.reload, i32* %19, align 4, !insn.addr !6480
  store i32 %stack_var_-24.0.ph.lcssa.reload, i32* %22, align 4, !insn.addr !6481
  store i32 %stack_var_-28.0.ph.lcssa.reload, i32* %25, align 4, !insn.addr !6482
  store i32 %stack_var_-32.0.ph.lcssa.reload, i32* %28, align 4, !insn.addr !6483
  store i32 %stack_var_-36.0.ph.lcssa.reload, i32* %31, align 4, !insn.addr !6484
  store i32 %stack_var_-40.0.ph.lcssa.reload, i32* %34, align 4, !insn.addr !6485
  store i32 %stack_var_-44.0.ph.lcssa.reload, i32* %37, align 4, !insn.addr !6486
  store i32 %41, i32* %40, align 4, !insn.addr !6487
  store i32 %44, i32* %43, align 4, !insn.addr !6488
  store i32 %47, i32* %46, align 4, !insn.addr !6489
  store i32 %50, i32* %49, align 4, !insn.addr !6490
  store i32 %stack_var_-48.0.ph.lcssa.reload, i32* %52, align 4, !insn.addr !6491
  store i32 %stack_var_-52.1.ph.lcssa.reload, i32* %55, align 4, !insn.addr !6492
  store i32 %stack_var_-12.0.lcssa.reload, i32* %storemerge.reg2mem, !insn.addr !6493
  store i32 %r0.0.lcssa.reload, i32* %r0.1.reg2mem, !insn.addr !6493
  br label %dec_label_pc_19ca6, !insn.addr !6493

dec_label_pc_19ca6:                               ; preds = %dec_label_pc_19c2e, %dec_label_pc_162e0
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  store i32 %storemerge.reload, i32* %1, align 4
  ret i32 %r0.1.reload, !insn.addr !6494

; uselistorder directives
  uselistorder i32 %2708, { 1, 0 }
  uselistorder i32 %2704, { 1, 0 }
  uselistorder i32 %2687, { 1, 0 }
  uselistorder i32 %2682, { 1, 0 }
  uselistorder i32 %2665, { 1, 0 }
  uselistorder i32 %2660, { 1, 0 }
  uselistorder i32 %2642, { 1, 0 }
  uselistorder i32 %2638, { 1, 0 }
  uselistorder i32 %spec.select1, { 0, 1, 3, 2 }
  uselistorder i32 %91, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %89, { 1, 3, 0, 2 }
  uselistorder i32 %88, { 1, 0 }
  uselistorder i32 %spec.select, { 3, 0, 1, 2 }
  uselistorder i32 %77, { 0, 2, 1 }
  uselistorder i32 %stack_var_-12.07.reload, { 2, 1, 0 }
  uselistorder i32 %stack_var_-220.06.reload, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-216.05.reload, { 1, 0 }
  uselistorder i32 %56, { 1, 0 }
  uselistorder i32 %53, { 1, 0 }
  uselistorder i32 %50, { 3, 0, 1, 2 }
  uselistorder i32 %47, { 3, 0, 1, 2 }
  uselistorder i32 %44, { 3, 0, 1, 2 }
  uselistorder i32 %41, { 3, 0, 1, 2 }
  uselistorder i32 %38, { 1, 0 }
  uselistorder i32 %35, { 1, 0 }
  uselistorder i32 %32, { 1, 0 }
  uselistorder i32 %29, { 1, 0 }
  uselistorder i32 %26, { 1, 0 }
  uselistorder i32 %23, { 1, 0 }
  uselistorder i32 %20, { 1, 0 }
  uselistorder i32 %17, { 1, 0 }
  uselistorder i32 %3, { 1, 0 }
  uselistorder i32 %2, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-12.07.reg2mem, { 1, 2, 0 }
  uselistorder i32* %stack_var_-220.06.reg2mem, { 1, 2, 0 }
  uselistorder i32* %stack_var_-216.05.reg2mem, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16.0.ph.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-20.0.ph.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-24.0.ph.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-28.0.ph.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32.0.ph.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-36.0.ph.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-40.0.ph.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44.0.ph.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-48.0.ph.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-52.1.ph.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-12.0.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %r0.0.lcssa.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32 (i32)* @sph_dec32be_aligned, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 511, { 1, 0, 3, 2 }
  uselistorder i32 108, { 2, 0, 1 }
  uselistorder i32 84, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %arg1, { 15, 1, 5, 4, 3, 8, 7, 6, 11, 10, 9, 14, 13, 12, 18, 17, 16, 0, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 2, 33 }
  uselistorder label %dec_label_pc_19c2e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16380.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_16380, { 1, 0 }
}

define i32 @blake32_close(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_19cb0:
  %r0.0.lcssa.reg2mem = alloca i32, !insn.addr !6495
  %storemerge3.reg2mem = alloca i32, !insn.addr !6495
  %storemerge1.reg2mem = alloca i32, !insn.addr !6495
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %0 = add i32 %arg1, 64, !insn.addr !6496
  %1 = inttoptr i32 %0 to i32*, !insn.addr !6496
  %2 = load i32, i32* %1, align 4, !insn.addr !6496
  %3 = mul i32 %2, 8, !insn.addr !6497
  %4 = add i32 %3, %arg3, !insn.addr !6498
  %5 = lshr i32 128, %arg3, !insn.addr !6499
  %6 = sub i32 0, %5, !insn.addr !6500
  %7 = and i32 %6, %arg2, !insn.addr !6501
  %8 = or i32 %7, %5, !insn.addr !6502
  %9 = ptrtoint i32* %stack_var_-100 to i32, !insn.addr !6503
  %10 = add i32 %2, %9
  %11 = trunc i32 %8 to i8, !insn.addr !6504
  %12 = inttoptr i32 %10 to i8*, !insn.addr !6504
  store i8 %11, i8* %12, align 1, !insn.addr !6504
  %13 = add i32 %arg1, 116, !insn.addr !6505
  %14 = inttoptr i32 %13 to i32*, !insn.addr !6505
  %15 = load i32, i32* %14, align 4, !insn.addr !6505
  %16 = add i32 %15, %4, !insn.addr !6506
  %17 = add i32 %arg1, 120, !insn.addr !6507
  %18 = inttoptr i32 %17 to i32*, !insn.addr !6507
  %19 = load i32, i32* %18, align 4, !insn.addr !6507
  %20 = or i32 %2, %arg3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %dec_label_pc_19d16, label %dec_label_pc_19d2c, !insn.addr !6508

dec_label_pc_19d16:                               ; preds = %dec_label_pc_19cb0
  store i32 -512, i32* %14, align 4, !insn.addr !6509
  store i32 -1, i32* %18, align 4, !insn.addr !6510
  br label %dec_label_pc_19d5a, !insn.addr !6511

dec_label_pc_19d2c:                               ; preds = %dec_label_pc_19cb0
  %22 = icmp eq i32 %15, 0, !insn.addr !6512
  br i1 %22, label %dec_label_pc_19d34, label %dec_label_pc_19d4a, !insn.addr !6513

dec_label_pc_19d34:                               ; preds = %dec_label_pc_19d2c
  %23 = add i32 %4, -512, !insn.addr !6514
  store i32 %23, i32* %14, align 4, !insn.addr !6515
  %24 = load i32, i32* %18, align 4, !insn.addr !6516
  %25 = add i32 %24, -1, !insn.addr !6517
  store i32 %25, i32* %18, align 4, !insn.addr !6518
  br label %dec_label_pc_19d5a, !insn.addr !6519

dec_label_pc_19d4a:                               ; preds = %dec_label_pc_19d2c
  %26 = add i32 %16, -512, !insn.addr !6520
  store i32 %26, i32* %14, align 4, !insn.addr !6521
  br label %dec_label_pc_19d5a, !insn.addr !6521

dec_label_pc_19d5a:                               ; preds = %dec_label_pc_19d4a, %dec_label_pc_19d34, %dec_label_pc_19d16
  %27 = icmp ult i32 %4, 446, !insn.addr !6522
  %28 = icmp ne i1 %27, true, !insn.addr !6522
  %29 = icmp eq i32 %4, 446, !insn.addr !6522
  %30 = icmp ne i1 %29, true, !insn.addr !6523
  %31 = icmp eq i1 %28, %30, !insn.addr !6523
  %32 = add i32 %10, 1
  br i1 %31, label %dec_label_pc_19dc6, label %dec_label_pc_19d62, !insn.addr !6523

dec_label_pc_19d62:                               ; preds = %dec_label_pc_19d5a
  %33 = sub i32 55, %2, !insn.addr !6524
  %34 = inttoptr i32 %32 to i32*, !insn.addr !6525
  %35 = call i32* @memset(i32* %34, i32 0, i32 %33), !insn.addr !6525
  %36 = call i32 @sph_enc32be_aligned(i32* nonnull %stack_var_-44, i32 %19), !insn.addr !6526
  %37 = call i32 @sph_enc32be_aligned(i32* nonnull %stack_var_-40, i32 %16), !insn.addr !6527
  %38 = sub i32 64, %2, !insn.addr !6528
  %39 = call i32 @blake32(i32 %arg1, i32 %10, i32 %38), !insn.addr !6529
  store i32 %39, i32* %storemerge1.reg2mem, !insn.addr !6530
  br label %dec_label_pc_19e50, !insn.addr !6530

dec_label_pc_19dc6:                               ; preds = %dec_label_pc_19d5a
  %40 = sub i32 63, %2, !insn.addr !6531
  %41 = inttoptr i32 %32 to i32*, !insn.addr !6532
  %42 = call i32* @memset(i32* %41, i32 0, i32 %40), !insn.addr !6532
  %43 = sub i32 64, %2, !insn.addr !6533
  %44 = call i32 @blake32(i32 %arg1, i32 %10, i32 %43), !insn.addr !6534
  store i32 -512, i32* %14, align 4, !insn.addr !6535
  store i32 -1, i32* %18, align 4, !insn.addr !6536
  %45 = call i32* @memset(i32* nonnull %stack_var_-100, i32 0, i32 56), !insn.addr !6537
  %46 = call i32 @sph_enc32be_aligned(i32* nonnull %stack_var_-44, i32 %19), !insn.addr !6538
  %47 = call i32 @sph_enc32be_aligned(i32* nonnull %stack_var_-40, i32 %16), !insn.addr !6539
  %48 = call i32 @blake32(i32 %arg1, i32 %9, i32 64), !insn.addr !6540
  store i32 %48, i32* %storemerge1.reg2mem, !insn.addr !6540
  br label %dec_label_pc_19e50, !insn.addr !6540

dec_label_pc_19e50:                               ; preds = %dec_label_pc_19dc6, %dec_label_pc_19d62
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %49 = icmp eq i32 %arg5, 0, !insn.addr !6541
  store i32 %storemerge1.reload, i32* %r0.0.lcssa.reg2mem, !insn.addr !6542
  br i1 %49, label %dec_label_pc_19e84, label %dec_label_pc_19e5a.lr.ph, !insn.addr !6542

dec_label_pc_19e5a.lr.ph:                         ; preds = %dec_label_pc_19e50
  %50 = add i32 %arg1, 68, !insn.addr !6543
  store i32 0, i32* %storemerge3.reg2mem
  br label %dec_label_pc_19e5a

dec_label_pc_19e5a:                               ; preds = %dec_label_pc_19e5a.lr.ph, %dec_label_pc_19e5a
  %storemerge3.reload = load i32, i32* %storemerge3.reg2mem
  %51 = mul i32 %storemerge3.reload, 4, !insn.addr !6544
  %52 = add i32 %51, %arg4, !insn.addr !6545
  %53 = add i32 %50, %51, !insn.addr !6546
  %54 = inttoptr i32 %53 to i32*, !insn.addr !6546
  %55 = load i32, i32* %54, align 4, !insn.addr !6546
  %56 = call i32 @sph_enc32be(i32 %52, i32 %55), !insn.addr !6547
  %57 = add nuw i32 %storemerge3.reload, 1, !insn.addr !6548
  %58 = icmp ult i32 %57, %arg5, !insn.addr !6541
  store i32 %57, i32* %storemerge3.reg2mem, !insn.addr !6542
  store i32 %56, i32* %r0.0.lcssa.reg2mem, !insn.addr !6542
  br i1 %58, label %dec_label_pc_19e5a, label %dec_label_pc_19e84, !insn.addr !6542

dec_label_pc_19e84:                               ; preds = %dec_label_pc_19e5a, %dec_label_pc_19e50
  %r0.0.lcssa.reload = load i32, i32* %r0.0.lcssa.reg2mem
  ret i32 %r0.0.lcssa.reload, !insn.addr !6549

; uselistorder directives
  uselistorder i32 %32, { 1, 0 }
  uselistorder i32 %19, { 1, 0 }
  uselistorder i32* %18, { 2, 1, 0, 3, 4 }
  uselistorder i32 %16, { 2, 1, 0 }
  uselistorder i32* %14, { 0, 3, 2, 1, 4 }
  uselistorder i32 %10, { 2, 1, 0, 3 }
  uselistorder i32 %9, { 1, 0 }
  uselistorder i32 %4, { 1, 2, 0, 3 }
  uselistorder i32 %2, { 4, 5, 3, 6, 1, 2, 0 }
  uselistorder i32* %storemerge1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge3.reg2mem, { 1, 0, 2 }
  uselistorder i32 (i32*, i32)* @sph_enc32be_aligned, { 3, 2, 1, 0 }
  uselistorder i32 -512, { 2, 0, 1, 3 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_19e5a, { 1, 0 }
}

define i32 @blake64_init(i32 %arg1, i32* %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_19e8c:
  %0 = add i32 %arg1, 136, !insn.addr !6550
  %1 = inttoptr i32 %0 to i32*, !insn.addr !6551
  %2 = call i32* @memcpy(i32* %1, i32* %arg2, i32 64), !insn.addr !6551
  %3 = add i32 %arg1, 200, !insn.addr !6552
  %4 = inttoptr i32 %3 to i32*, !insn.addr !6553
  %5 = call i32* @memcpy(i32* %4, i32* %arg3, i32 32), !insn.addr !6553
  %6 = ptrtoint i32* %5 to i32, !insn.addr !6553
  %7 = add i32 %arg1, 240, !insn.addr !6554
  %8 = inttoptr i32 %7 to i32*, !insn.addr !6554
  store i32 0, i32* %8, align 4, !insn.addr !6554
  %9 = add i32 %arg1, 244, !insn.addr !6554
  %10 = inttoptr i32 %9 to i32*, !insn.addr !6554
  store i32 0, i32* %10, align 4, !insn.addr !6554
  %11 = inttoptr i32 %7 to i64*, !insn.addr !6555
  %12 = load i64, i64* %11, align 4, !insn.addr !6555
  %13 = trunc i64 %12 to i32, !insn.addr !6555
  %14 = udiv i64 %12, 4294967296, !insn.addr !6555
  %15 = trunc i64 %14 to i32, !insn.addr !6555
  %16 = add i32 %arg1, 232, !insn.addr !6556
  %17 = inttoptr i32 %16 to i32*, !insn.addr !6556
  store i32 %15, i32* %17, align 4, !insn.addr !6556
  %18 = add i32 %arg1, 236, !insn.addr !6556
  %19 = inttoptr i32 %18 to i32*, !insn.addr !6556
  store i32 %13, i32* %19, align 4, !insn.addr !6556
  %20 = add i32 %arg1, 128, !insn.addr !6557
  %21 = inttoptr i32 %20 to i32*, !insn.addr !6557
  store i32 0, i32* %21, align 4, !insn.addr !6557
  ret i32 %6, !insn.addr !6558

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3, 5, 6 }
}

define i32 @blake64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19ee0:
  %r0.1.reg2mem = alloca i32, !insn.addr !6559
  %storemerge32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-36.0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-436.0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-432.0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-112.0.ph.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-112.0.ph.off0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-104.0.ph.reg2mem = alloca i64, !insn.addr !6559
  %stack_var_-96.0.ph.reg2mem = alloca i64, !insn.addr !6559
  %stack_var_-88.0.ph.reg2mem = alloca i64, !insn.addr !6559
  %stack_var_-80.0.ph.reg2mem = alloca i64, !insn.addr !6559
  %stack_var_-72.0.ph.reg2mem = alloca i64, !insn.addr !6559
  %stack_var_-64.0.ph.reg2mem = alloca i64, !insn.addr !6559
  %stack_var_-56.0.ph.reg2mem = alloca i64, !insn.addr !6559
  %stack_var_-48.0.ph.reg2mem = alloca i64, !insn.addr !6559
  %stack_var_-36.0.ph.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-436.0.ph.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-432.0.ph.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-136.035.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-144.036.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-152.037.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-160.038.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-168.039.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-168.039.off0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-176.040.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-176.040.off0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-184.041.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-184.041.off0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-192.042.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-192.042.off0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-200.043.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-208.044.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-216.045.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-224.046.off32.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-232.047.off0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-240.048.off0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-248.049.off0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-256.050.off0.reg2mem = alloca i32, !insn.addr !6559
  %storemerge51.reg2mem = alloca i32, !insn.addr !6559
  %r0.0.reg2mem = alloca i32, !insn.addr !6559
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-120 = alloca i64, align 8
  %0 = add i32 %arg1, 128, !insn.addr !6560
  %1 = inttoptr i32 %0 to i32*, !insn.addr !6560
  %2 = load i32, i32* %1, align 4, !insn.addr !6560
  %3 = sub i32 128, %2, !insn.addr !6561
  %4 = icmp ult i32 %3, %arg3, !insn.addr !6562
  %5 = icmp ne i1 %4, true, !insn.addr !6562
  %6 = icmp eq i32 %3, %arg3, !insn.addr !6562
  %7 = icmp ne i1 %5, true, !insn.addr !6563
  %8 = or i1 %6, %7, !insn.addr !6563
  br i1 %8, label %dec_label_pc_19f64, label %dec_label_pc_19f26, !insn.addr !6563

dec_label_pc_19f26:                               ; preds = %dec_label_pc_19ee0
  %9 = add i32 %2, %arg1, !insn.addr !6564
  %10 = inttoptr i32 %9 to i32*, !insn.addr !6565
  %11 = inttoptr i32 %arg2 to i32*, !insn.addr !6565
  %12 = call i32* @memcpy(i32* %10, i32* %11, i32 %arg3), !insn.addr !6565
  %13 = ptrtoint i32* %12 to i32, !insn.addr !6565
  %14 = add i32 %2, %arg3, !insn.addr !6566
  store i32 %14, i32* %storemerge32.reg2mem, !insn.addr !6567
  store i32 %13, i32* %r0.1.reg2mem, !insn.addr !6567
  br label %dec_label_pc_1b67c, !insn.addr !6567

dec_label_pc_19f64:                               ; preds = %dec_label_pc_19ee0
  %15 = add i32 %arg1, 136, !insn.addr !6568
  %16 = inttoptr i32 %15 to i64*, !insn.addr !6568
  %17 = load i64, i64* %16, align 4, !insn.addr !6568
  %18 = ashr i64 %17, 32, !insn.addr !6569
  %19 = add i32 %arg1, 144, !insn.addr !6570
  %20 = inttoptr i32 %19 to i64*, !insn.addr !6570
  %21 = load i64, i64* %20, align 4, !insn.addr !6570
  %22 = ashr i64 %21, 32, !insn.addr !6571
  %23 = add i32 %arg1, 152, !insn.addr !6572
  %24 = inttoptr i32 %23 to i64*, !insn.addr !6572
  %25 = load i64, i64* %24, align 4, !insn.addr !6572
  %26 = ashr i64 %25, 32, !insn.addr !6573
  %27 = add i32 %arg1, 160, !insn.addr !6574
  %28 = inttoptr i32 %27 to i64*, !insn.addr !6574
  %29 = load i64, i64* %28, align 4, !insn.addr !6574
  %30 = ashr i64 %29, 32, !insn.addr !6575
  %31 = add i32 %arg1, 168, !insn.addr !6576
  %32 = inttoptr i32 %31 to i64*, !insn.addr !6576
  %33 = load i64, i64* %32, align 4, !insn.addr !6576
  %34 = ashr i64 %33, 32, !insn.addr !6577
  %35 = add i32 %arg1, 176, !insn.addr !6578
  %36 = inttoptr i32 %35 to i64*, !insn.addr !6578
  %37 = load i64, i64* %36, align 4, !insn.addr !6578
  %38 = ashr i64 %37, 32, !insn.addr !6579
  %39 = add i32 %arg1, 184, !insn.addr !6580
  %40 = inttoptr i32 %39 to i64*, !insn.addr !6580
  %41 = load i64, i64* %40, align 4, !insn.addr !6580
  %42 = ashr i64 %41, 32, !insn.addr !6581
  %43 = add i32 %arg1, 192, !insn.addr !6582
  %44 = inttoptr i32 %43 to i64*, !insn.addr !6582
  %45 = load i64, i64* %44, align 4, !insn.addr !6582
  %46 = ashr i64 %45, 32, !insn.addr !6583
  %47 = add i32 %arg1, 200, !insn.addr !6584
  %48 = inttoptr i32 %47 to i64*, !insn.addr !6584
  %49 = load i64, i64* %48, align 4, !insn.addr !6584
  %50 = ashr i64 %49, 32, !insn.addr !6585
  %51 = add i32 %arg1, 208, !insn.addr !6586
  %52 = inttoptr i32 %51 to i64*, !insn.addr !6586
  %53 = load i64, i64* %52, align 4, !insn.addr !6586
  %54 = ashr i64 %53, 32, !insn.addr !6587
  %55 = add i32 %arg1, 216, !insn.addr !6588
  %56 = inttoptr i32 %55 to i64*, !insn.addr !6588
  %57 = load i64, i64* %56, align 4, !insn.addr !6588
  %58 = ashr i64 %57, 32, !insn.addr !6589
  %59 = add i32 %arg1, 224, !insn.addr !6590
  %60 = inttoptr i32 %59 to i64*, !insn.addr !6590
  %61 = load i64, i64* %60, align 4, !insn.addr !6590
  %62 = ashr i64 %61, 32, !insn.addr !6591
  %63 = add i32 %arg1, 232, !insn.addr !6592
  %64 = inttoptr i32 %63 to i64*, !insn.addr !6592
  %65 = load i64, i64* %64, align 4, !insn.addr !6592
  %66 = ashr i64 %65, 32, !insn.addr !6593
  %67 = add i32 %arg1, 240, !insn.addr !6594
  %68 = inttoptr i32 %67 to i64*, !insn.addr !6594
  %69 = load i64, i64* %68, align 4, !insn.addr !6594
  %70 = ashr i64 %69, 32, !insn.addr !6595
  store i64 %70, i64* %stack_var_-120, align 8, !insn.addr !6595
  %71 = add i32 %arg1, 8
  %72 = add i32 %arg1, 16
  %73 = add i32 %arg1, 24
  %74 = add i32 %arg1, 32
  %75 = add i32 %arg1, 40
  %76 = add i32 %arg1, 48
  %77 = add i32 %arg1, 56
  %78 = add i32 %arg1, 64
  %79 = add i32 %arg1, 72
  %80 = add i32 %arg1, 80
  %81 = add i32 %arg1, 88
  %82 = add i32 %arg1, 96
  %83 = add i32 %arg1, 104
  %84 = add i32 %arg1, 112
  %85 = add i32 %arg1, 120
  %86 = ptrtoint i32* %stack_var_-424 to i32
  %extract.t115 = trunc i64 %66 to i32
  %extract118 = udiv i64 %66, 4294967296
  %extract.t119 = trunc i64 %extract118 to i32
  store i32 %arg2, i32* %stack_var_-432.0.ph.reg2mem, !insn.addr !6596
  store i32 %arg3, i32* %stack_var_-436.0.ph.reg2mem, !insn.addr !6596
  store i32 %2, i32* %stack_var_-36.0.ph.reg2mem, !insn.addr !6596
  store i64 %18, i64* %stack_var_-48.0.ph.reg2mem, !insn.addr !6596
  store i64 %22, i64* %stack_var_-56.0.ph.reg2mem, !insn.addr !6596
  store i64 %26, i64* %stack_var_-64.0.ph.reg2mem, !insn.addr !6596
  store i64 %30, i64* %stack_var_-72.0.ph.reg2mem, !insn.addr !6596
  store i64 %34, i64* %stack_var_-80.0.ph.reg2mem, !insn.addr !6596
  store i64 %38, i64* %stack_var_-88.0.ph.reg2mem, !insn.addr !6596
  store i64 %42, i64* %stack_var_-96.0.ph.reg2mem, !insn.addr !6596
  store i64 %46, i64* %stack_var_-104.0.ph.reg2mem, !insn.addr !6596
  store i32 %extract.t115, i32* %stack_var_-112.0.ph.off0.reg2mem, !insn.addr !6596
  store i32 %extract.t119, i32* %stack_var_-112.0.ph.off32.reg2mem, !insn.addr !6596
  br label %dec_label_pc_1b566.outer, !insn.addr !6596

dec_label_pc_1a064:                               ; preds = %dec_label_pc_1b566
  %stack_var_-432.0.reload = load i32, i32* %stack_var_-432.0.reg2mem
  %87 = sub i32 128, %stack_var_-36.0.reload, !insn.addr !6597
  %88 = icmp ult i32 %87, %stack_var_-436.0.reload, !insn.addr !6598
  %89 = icmp ne i1 %88, true, !insn.addr !6598
  %90 = icmp eq i32 %87, %stack_var_-436.0.reload, !insn.addr !6598
  %91 = icmp ne i1 %89, true, !insn.addr !6599
  %92 = or i1 %90, %91, !insn.addr !6599
  %spec.select = select i1 %92, i32 %87, i32 %stack_var_-436.0.reload
  %93 = add i32 %stack_var_-36.0.reload, %arg1, !insn.addr !6600
  %94 = inttoptr i32 %93 to i32*, !insn.addr !6601
  %95 = inttoptr i32 %stack_var_-432.0.reload to i32*, !insn.addr !6601
  %96 = call i32* @memcpy(i32* %94, i32* %95, i32 %spec.select), !insn.addr !6601
  %97 = add i32 %spec.select, %stack_var_-36.0.reload, !insn.addr !6602
  %98 = add i32 %spec.select, %stack_var_-432.0.reload, !insn.addr !6603
  %99 = sub i32 %stack_var_-436.0.reload, %spec.select, !insn.addr !6604
  %100 = icmp eq i32 %97, 128, !insn.addr !6605
  store i32 %98, i32* %stack_var_-432.0.reg2mem, !insn.addr !6606
  store i32 %99, i32* %stack_var_-436.0.reg2mem, !insn.addr !6606
  store i32 %97, i32* %stack_var_-36.0.reg2mem, !insn.addr !6606
  br i1 %100, label %dec_label_pc_1a0de, label %dec_label_pc_1b566, !insn.addr !6606

dec_label_pc_1a0de:                               ; preds = %dec_label_pc_1a064
  %101 = add i32 %stack_var_-112.0.ph.off32.reload, 1024, !insn.addr !6607
  %102 = ashr i32 %101, 31
  %103 = icmp eq i32 %101, 0, !insn.addr !6608
  store i32 %102, i32* %r0.0.reg2mem, !insn.addr !6609
  br i1 %103, label %104, label %106, !insn.addr !6609

; <label>:104:                                    ; preds = %dec_label_pc_1a0de
  %105 = call i32 @__asm_it(), !insn.addr !6609
  store i32 %105, i32* %r0.0.reg2mem, !insn.addr !6609
  br label %106, !insn.addr !6609

; <label>:106:                                    ; preds = %dec_label_pc_1a0de, %104
  %107 = icmp ne i32 %101, 0, !insn.addr !6608
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %108 = icmp ugt i32 %r0.0.reload, 1023
  %cpsr_c.0.in = select i1 %103, i1 %108, i1 %107
  br i1 %cpsr_c.0.in, label %dec_label_pc_1a124, label %dec_label_pc_1a10e, !insn.addr !6610

dec_label_pc_1a10e:                               ; preds = %106
  %109 = load i64, i64* %stack_var_-120, align 8, !insn.addr !6611
  %110 = mul i64 %109, 4294967296
  %111 = ashr exact i64 %110, 32, !insn.addr !6611
  %112 = udiv i64 %111, 4294967296, !insn.addr !6611
  %113 = trunc i64 %112 to i32, !insn.addr !6611
  %114 = add i32 %113, 1, !insn.addr !6612
  %115 = sext i32 %114 to i64, !insn.addr !6613
  store i64 %115, i64* %stack_var_-120, align 8, !insn.addr !6613
  br label %dec_label_pc_1a124, !insn.addr !6613

dec_label_pc_1a124:                               ; preds = %106, %dec_label_pc_1a10e
  %116 = sext i32 %101 to i64, !insn.addr !6614
  %117 = ashr i64 %stack_var_-48.0.ph.reload, 31, !insn.addr !6615
  %118 = ashr i64 %stack_var_-56.0.ph.reload, 31, !insn.addr !6616
  %119 = ashr i64 %stack_var_-64.0.ph.reload, 31, !insn.addr !6617
  %120 = ashr i64 %stack_var_-72.0.ph.reload, 31, !insn.addr !6618
  %121 = ashr i64 %stack_var_-80.0.ph.reload, 31, !insn.addr !6619
  %122 = ashr i64 %stack_var_-88.0.ph.reload, 31, !insn.addr !6620
  %123 = ashr i64 %stack_var_-96.0.ph.reload, 31, !insn.addr !6621
  %124 = ashr i64 %stack_var_-104.0.ph.reload, 31, !insn.addr !6622
  %125 = call i32 @__asm_adr(i32 560), !insn.addr !6623
  %126 = inttoptr i32 %125 to i64*, !insn.addr !6624
  %127 = load i64, i64* %126, align 4, !insn.addr !6624
  %128 = xor i64 %127, %50
  %129 = ashr i64 %128, 32, !insn.addr !6625
  %130 = call i32 @__asm_adr(i32 540), !insn.addr !6626
  %131 = inttoptr i32 %130 to i64*, !insn.addr !6627
  %132 = load i64, i64* %131, align 4, !insn.addr !6627
  %133 = xor i64 %132, %54
  %134 = ashr i64 %133, 32, !insn.addr !6628
  %135 = call i32 @__asm_adr(i32 516), !insn.addr !6629
  %136 = inttoptr i32 %135 to i64*, !insn.addr !6630
  %137 = load i64, i64* %136, align 4, !insn.addr !6630
  %138 = xor i64 %137, %58
  %139 = ashr i64 %138, 32, !insn.addr !6631
  %140 = call i32 @__asm_adr(i32 496), !insn.addr !6632
  %141 = inttoptr i32 %140 to i64*, !insn.addr !6633
  %142 = load i64, i64* %141, align 4, !insn.addr !6633
  %143 = xor i64 %142, %62
  %144 = ashr i64 %143, 32, !insn.addr !6634
  %145 = call i32 @__asm_adr(i32 472), !insn.addr !6635
  %146 = inttoptr i32 %145 to i64*, !insn.addr !6636
  %147 = load i64, i64* %146, align 4, !insn.addr !6636
  %148 = xor i64 %147, %116
  %149 = udiv i64 %148, 4294967296
  %150 = call i32 @__asm_adr(i32 452), !insn.addr !6637
  %151 = inttoptr i32 %150 to i64*, !insn.addr !6638
  %152 = load i64, i64* %151, align 4, !insn.addr !6638
  %153 = xor i64 %152, %116
  %154 = udiv i64 %153, 4294967296
  %155 = load i64, i64* %stack_var_-120, align 8, !insn.addr !6639
  %156 = mul i64 %155, 4294967296
  %157 = ashr exact i64 %156, 32, !insn.addr !6639
  %158 = call i32 @__asm_adr(i32 428), !insn.addr !6640
  %159 = inttoptr i32 %158 to i64*, !insn.addr !6641
  %160 = load i64, i64* %159, align 4, !insn.addr !6641
  %161 = xor i64 %160, %157
  %162 = udiv i64 %161, 4294967296
  %163 = load i64, i64* %stack_var_-120, align 8, !insn.addr !6642
  %164 = mul i64 %163, 4294967296
  %165 = ashr exact i64 %164, 32, !insn.addr !6642
  %166 = call i32 @__asm_adr(i32 408), !insn.addr !6643
  %167 = inttoptr i32 %166 to i64*, !insn.addr !6644
  %168 = load i64, i64* %167, align 4, !insn.addr !6644
  %169 = xor i64 %168, %165
  %170 = udiv i64 %169, 4294967296
  %171 = call i32 @sph_dec64be_aligned(i32 %arg1), !insn.addr !6645
  store i32 %171, i32* %stack_var_-424, align 4, !insn.addr !6646
  %172 = call i32 @sph_dec64be_aligned(i32 %71), !insn.addr !6647
  %173 = call i32 @sph_dec64be_aligned(i32 %72), !insn.addr !6648
  %174 = call i32 @sph_dec64be_aligned(i32 %73), !insn.addr !6649
  %175 = call i32 @sph_dec64be_aligned(i32 %74), !insn.addr !6650
  %176 = call i32 @sph_dec64be_aligned(i32 %75), !insn.addr !6651
  %177 = call i32 @sph_dec64be_aligned(i32 %76), !insn.addr !6652
  %178 = call i32 @sph_dec64be_aligned(i32 %77), !insn.addr !6653
  %179 = call i32 @sph_dec64be_aligned(i32 %78), !insn.addr !6654
  %180 = call i32 @sph_dec64be_aligned(i32 %79), !insn.addr !6655
  %181 = call i32 @sph_dec64be_aligned(i32 %80), !insn.addr !6656
  %182 = call i32 @sph_dec64be_aligned(i32 %81), !insn.addr !6657
  %183 = call i32 @sph_dec64be_aligned(i32 %82), !insn.addr !6658
  %184 = call i32 @sph_dec64be_aligned(i32 %83), !insn.addr !6659
  %185 = call i32 @sph_dec64be_aligned(i32 %84), !insn.addr !6660
  %186 = call i32 @sph_dec64be_aligned(i32 %85), !insn.addr !6661
  %extract.t = trunc i64 %170 to i32
  %extract.t53 = trunc i64 %162 to i32
  %extract.t55 = trunc i64 %154 to i32
  %extract.t57 = trunc i64 %149 to i32
  %extract = udiv i64 %144, 4294967296
  %extract.t59 = trunc i64 %extract to i32
  %extract62 = udiv i64 %139, 4294967296
  %extract.t63 = trunc i64 %extract62 to i32
  %extract66 = udiv i64 %134, 4294967296
  %extract.t67 = trunc i64 %extract66 to i32
  %extract70 = udiv i64 %129, 4294967296
  %extract.t71 = trunc i64 %extract70 to i32
  %extract.t74 = trunc i64 %124 to i32
  %extract76 = udiv i64 %124, 4294967296
  %extract.t77 = trunc i64 %extract76 to i32
  %extract.t80 = trunc i64 %123 to i32
  %extract82 = udiv i64 %123, 4294967296
  %extract.t83 = trunc i64 %extract82 to i32
  %extract.t86 = trunc i64 %122 to i32
  %extract88 = udiv i64 %122, 4294967296
  %extract.t89 = trunc i64 %extract88 to i32
  %extract.t92 = trunc i64 %121 to i32
  %extract94 = udiv i64 %121, 4294967296
  %extract.t95 = trunc i64 %extract94 to i32
  %extract98 = udiv i64 %120, 4294967296
  %extract.t99 = trunc i64 %extract98 to i32
  %extract102 = udiv i64 %119, 4294967296
  %extract.t103 = trunc i64 %extract102 to i32
  %extract106 = udiv i64 %118, 4294967296
  %extract.t107 = trunc i64 %extract106 to i32
  %extract110 = udiv i64 %117, 4294967296
  %extract.t111 = trunc i64 %extract110 to i32
  store i32 0, i32* %storemerge51.reg2mem
  store i32 %extract.t, i32* %stack_var_-256.050.off0.reg2mem
  store i32 %extract.t53, i32* %stack_var_-248.049.off0.reg2mem
  store i32 %extract.t55, i32* %stack_var_-240.048.off0.reg2mem
  store i32 %extract.t57, i32* %stack_var_-232.047.off0.reg2mem
  store i32 %extract.t59, i32* %stack_var_-224.046.off32.reg2mem
  store i32 %extract.t63, i32* %stack_var_-216.045.off32.reg2mem
  store i32 %extract.t67, i32* %stack_var_-208.044.off32.reg2mem
  store i32 %extract.t71, i32* %stack_var_-200.043.off32.reg2mem
  store i32 %extract.t74, i32* %stack_var_-192.042.off0.reg2mem
  store i32 %extract.t77, i32* %stack_var_-192.042.off32.reg2mem
  store i32 %extract.t80, i32* %stack_var_-184.041.off0.reg2mem
  store i32 %extract.t83, i32* %stack_var_-184.041.off32.reg2mem
  store i32 %extract.t86, i32* %stack_var_-176.040.off0.reg2mem
  store i32 %extract.t89, i32* %stack_var_-176.040.off32.reg2mem
  store i32 %extract.t92, i32* %stack_var_-168.039.off0.reg2mem
  store i32 %extract.t95, i32* %stack_var_-168.039.off32.reg2mem
  store i32 %extract.t99, i32* %stack_var_-160.038.off32.reg2mem
  store i32 %extract.t103, i32* %stack_var_-152.037.off32.reg2mem
  store i32 %extract.t107, i32* %stack_var_-144.036.off32.reg2mem
  store i32 %extract.t111, i32* %stack_var_-136.035.off32.reg2mem
  br label %dec_label_pc_1a420

dec_label_pc_1a420:                               ; preds = %dec_label_pc_1a124, %dec_label_pc_1a420
  %stack_var_-136.035.off32.reload = load i32, i32* %stack_var_-136.035.off32.reg2mem
  %stack_var_-144.036.off32.reload = load i32, i32* %stack_var_-144.036.off32.reg2mem
  %stack_var_-152.037.off32.reload = load i32, i32* %stack_var_-152.037.off32.reg2mem
  %stack_var_-160.038.off32.reload = load i32, i32* %stack_var_-160.038.off32.reg2mem
  %stack_var_-168.039.off32.reload = load i32, i32* %stack_var_-168.039.off32.reg2mem
  %stack_var_-168.039.off0.reload = load i32, i32* %stack_var_-168.039.off0.reg2mem
  %stack_var_-176.040.off32.reload = load i32, i32* %stack_var_-176.040.off32.reg2mem
  %stack_var_-176.040.off0.reload = load i32, i32* %stack_var_-176.040.off0.reg2mem
  %stack_var_-184.041.off32.reload = load i32, i32* %stack_var_-184.041.off32.reg2mem
  %stack_var_-184.041.off0.reload = load i32, i32* %stack_var_-184.041.off0.reg2mem
  %stack_var_-192.042.off32.reload = load i32, i32* %stack_var_-192.042.off32.reg2mem
  %stack_var_-192.042.off0.reload = load i32, i32* %stack_var_-192.042.off0.reg2mem
  %stack_var_-200.043.off32.reload = load i32, i32* %stack_var_-200.043.off32.reg2mem
  %stack_var_-208.044.off32.reload = load i32, i32* %stack_var_-208.044.off32.reg2mem
  %stack_var_-216.045.off32.reload = load i32, i32* %stack_var_-216.045.off32.reg2mem
  %stack_var_-224.046.off32.reload = load i32, i32* %stack_var_-224.046.off32.reg2mem
  %stack_var_-232.047.off0.reload = load i32, i32* %stack_var_-232.047.off0.reg2mem
  %stack_var_-240.048.off0.reload = load i32, i32* %stack_var_-240.048.off0.reg2mem
  %stack_var_-248.049.off0.reload = load i32, i32* %stack_var_-248.049.off0.reg2mem
  %stack_var_-256.050.off0.reload = load i32, i32* %stack_var_-256.050.off0.reg2mem
  %storemerge51.reload = load i32, i32* %storemerge51.reg2mem
  %187 = add i32 %stack_var_-136.035.off32.reload, %stack_var_-168.039.off32.reload, !insn.addr !6662
  %188 = mul i32 %storemerge51.reload, 64, !insn.addr !6663
  %189 = add i32 %188, ptrtoint (i32* @global_var_2b390 to i32), !insn.addr !6664
  %190 = inttoptr i32 %189 to i32*, !insn.addr !6665
  %191 = load i32, i32* %190, align 4, !insn.addr !6665
  %192 = mul i32 %191, 8, !insn.addr !6666
  %193 = add i32 %192, %86, !insn.addr !6667
  %194 = inttoptr i32 %193 to i64*, !insn.addr !6668
  %195 = load i64, i64* %194, align 4, !insn.addr !6668
  %196 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 4), !insn.addr !6669
  %197 = inttoptr i32 %196 to i32*, !insn.addr !6670
  %198 = load i32, i32* %197, align 4, !insn.addr !6670
  %199 = mul i32 %198, 8, !insn.addr !6671
  %200 = add i32 %199, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6672
  %201 = inttoptr i32 %200 to i64*, !insn.addr !6673
  %202 = load i64, i64* %201, align 4, !insn.addr !6673
  %203 = xor i64 %202, %195
  %204 = udiv i64 %203, 4294967296
  %205 = trunc i64 %204 to i32, !insn.addr !6674
  %206 = add i32 %187, %205, !insn.addr !6675
  %207 = xor i32 %206, %stack_var_-232.047.off0.reload, !insn.addr !6676
  %208 = ashr i32 %207, 31
  %209 = add i32 %208, %stack_var_-200.043.off32.reload, !insn.addr !6677
  %210 = xor i32 %209, %stack_var_-168.039.off0.reload, !insn.addr !6678
  %211 = mul i32 %210, 128, !insn.addr !6679
  %212 = ashr i32 %211, 31
  %213 = ashr i32 %206, 31
  %214 = add i32 %199, %86, !insn.addr !6680
  %215 = inttoptr i32 %214 to i64*, !insn.addr !6681
  %216 = load i64, i64* %215, align 4, !insn.addr !6681
  %217 = add i32 %192, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6682
  %218 = inttoptr i32 %217 to i64*, !insn.addr !6683
  %219 = load i64, i64* %218, align 4, !insn.addr !6683
  %220 = xor i64 %219, %216
  %221 = udiv i64 %220, 4294967296
  %222 = trunc i64 %221 to i32, !insn.addr !6684
  %223 = add i32 %213, %222, !insn.addr !6685
  %224 = add i32 %223, %212, !insn.addr !6686
  %225 = xor i32 %224, %208, !insn.addr !6687
  %226 = mul i32 %225, 65536, !insn.addr !6688
  %227 = ashr i32 %226, 31
  %228 = ashr i32 %209, 31
  %229 = add nsw i32 %227, %228, !insn.addr !6689
  %230 = xor i32 %229, %212, !insn.addr !6690
  %231 = ashr i32 %230, 10
  %232 = add i32 %stack_var_-144.036.off32.reload, %stack_var_-176.040.off32.reload, !insn.addr !6691
  %233 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 8), !insn.addr !6692
  %234 = inttoptr i32 %233 to i32*, !insn.addr !6693
  %235 = load i32, i32* %234, align 4, !insn.addr !6693
  %236 = mul i32 %235, 8, !insn.addr !6694
  %237 = add i32 %236, %86, !insn.addr !6695
  %238 = inttoptr i32 %237 to i64*, !insn.addr !6696
  %239 = load i64, i64* %238, align 4, !insn.addr !6696
  %240 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 12), !insn.addr !6697
  %241 = inttoptr i32 %240 to i32*, !insn.addr !6698
  %242 = load i32, i32* %241, align 4, !insn.addr !6698
  %243 = mul i32 %242, 8, !insn.addr !6699
  %244 = add i32 %243, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6700
  %245 = inttoptr i32 %244 to i64*, !insn.addr !6701
  %246 = load i64, i64* %245, align 4, !insn.addr !6701
  %247 = xor i64 %246, %239
  %248 = udiv i64 %247, 4294967296
  %249 = trunc i64 %248 to i32, !insn.addr !6702
  %250 = add i32 %232, %249, !insn.addr !6703
  %251 = xor i32 %250, %stack_var_-240.048.off0.reload, !insn.addr !6704
  %252 = ashr i32 %251, 31
  %253 = add i32 %252, %stack_var_-208.044.off32.reload, !insn.addr !6705
  %254 = xor i32 %253, %stack_var_-176.040.off0.reload, !insn.addr !6706
  %255 = mul i32 %254, 128, !insn.addr !6707
  %256 = ashr i32 %255, 31
  %257 = ashr i32 %250, 31
  %258 = add i32 %243, %86, !insn.addr !6708
  %259 = inttoptr i32 %258 to i64*, !insn.addr !6709
  %260 = load i64, i64* %259, align 4, !insn.addr !6709
  %261 = add i32 %236, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6710
  %262 = inttoptr i32 %261 to i64*, !insn.addr !6711
  %263 = load i64, i64* %262, align 4, !insn.addr !6711
  %264 = xor i64 %263, %260
  %265 = udiv i64 %264, 4294967296
  %266 = trunc i64 %265 to i32, !insn.addr !6712
  %267 = add i32 %257, %266, !insn.addr !6713
  %268 = add i32 %267, %256, !insn.addr !6714
  %269 = xor i32 %268, %252, !insn.addr !6715
  %270 = mul i32 %269, 65536, !insn.addr !6716
  %271 = ashr i32 %270, 31
  %272 = ashr i32 %253, 31
  %273 = add nsw i32 %271, %272, !insn.addr !6717
  %274 = xor i32 %273, %256, !insn.addr !6718
  %275 = ashr i32 %274, 10
  %276 = add i32 %stack_var_-152.037.off32.reload, %stack_var_-184.041.off32.reload, !insn.addr !6719
  %277 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 16), !insn.addr !6720
  %278 = inttoptr i32 %277 to i32*, !insn.addr !6721
  %279 = load i32, i32* %278, align 4, !insn.addr !6721
  %280 = mul i32 %279, 8, !insn.addr !6722
  %281 = add i32 %280, %86, !insn.addr !6723
  %282 = inttoptr i32 %281 to i64*, !insn.addr !6724
  %283 = load i64, i64* %282, align 4, !insn.addr !6724
  %284 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 20), !insn.addr !6725
  %285 = inttoptr i32 %284 to i32*, !insn.addr !6726
  %286 = load i32, i32* %285, align 4, !insn.addr !6726
  %287 = mul i32 %286, 8, !insn.addr !6727
  %288 = add i32 %287, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6728
  %289 = inttoptr i32 %288 to i64*, !insn.addr !6729
  %290 = load i64, i64* %289, align 4, !insn.addr !6729
  %291 = xor i64 %290, %283
  %292 = udiv i64 %291, 4294967296
  %293 = trunc i64 %292 to i32, !insn.addr !6730
  %294 = add i32 %276, %293, !insn.addr !6731
  %295 = xor i32 %294, %stack_var_-248.049.off0.reload, !insn.addr !6732
  %296 = ashr i32 %295, 31
  %297 = add i32 %296, %stack_var_-216.045.off32.reload, !insn.addr !6733
  %298 = xor i32 %297, %stack_var_-184.041.off0.reload, !insn.addr !6734
  %299 = mul i32 %298, 128, !insn.addr !6735
  %300 = ashr i32 %299, 31
  %301 = ashr i32 %294, 31
  %302 = add i32 %287, %86, !insn.addr !6736
  %303 = inttoptr i32 %302 to i64*, !insn.addr !6737
  %304 = load i64, i64* %303, align 4, !insn.addr !6737
  %305 = add i32 %280, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6738
  %306 = inttoptr i32 %305 to i64*, !insn.addr !6739
  %307 = load i64, i64* %306, align 4, !insn.addr !6739
  %308 = xor i64 %307, %304
  %309 = udiv i64 %308, 4294967296
  %310 = trunc i64 %309 to i32, !insn.addr !6740
  %311 = add i32 %301, %310, !insn.addr !6741
  %312 = add i32 %311, %300, !insn.addr !6742
  %313 = xor i32 %312, %296, !insn.addr !6743
  %314 = mul i32 %313, 65536, !insn.addr !6744
  %315 = ashr i32 %314, 31
  %316 = ashr i32 %297, 31
  %317 = add nsw i32 %315, %316, !insn.addr !6745
  %318 = xor i32 %317, %300, !insn.addr !6746
  %319 = ashr i32 %318, 10
  %320 = add i32 %stack_var_-160.038.off32.reload, %stack_var_-192.042.off32.reload, !insn.addr !6747
  %321 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 24), !insn.addr !6748
  %322 = inttoptr i32 %321 to i32*, !insn.addr !6749
  %323 = load i32, i32* %322, align 4, !insn.addr !6749
  %324 = mul i32 %323, 8, !insn.addr !6750
  %325 = add i32 %324, %86, !insn.addr !6751
  %326 = inttoptr i32 %325 to i64*, !insn.addr !6752
  %327 = load i64, i64* %326, align 4, !insn.addr !6752
  %328 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 28), !insn.addr !6753
  %329 = inttoptr i32 %328 to i32*, !insn.addr !6754
  %330 = load i32, i32* %329, align 4, !insn.addr !6754
  %331 = mul i32 %330, 8, !insn.addr !6755
  %332 = add i32 %331, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6756
  %333 = inttoptr i32 %332 to i64*, !insn.addr !6757
  %334 = load i64, i64* %333, align 4, !insn.addr !6757
  %335 = xor i64 %334, %327
  %336 = udiv i64 %335, 4294967296
  %337 = trunc i64 %336 to i32, !insn.addr !6758
  %338 = add i32 %320, %337, !insn.addr !6759
  %339 = xor i32 %338, %stack_var_-256.050.off0.reload, !insn.addr !6760
  %340 = ashr i32 %339, 31
  %341 = add i32 %340, %stack_var_-224.046.off32.reload, !insn.addr !6761
  %342 = xor i32 %341, %stack_var_-192.042.off0.reload, !insn.addr !6762
  %343 = mul i32 %342, 128, !insn.addr !6763
  %344 = ashr i32 %343, 31
  %345 = ashr i32 %338, 31
  %346 = add i32 %331, %86, !insn.addr !6764
  %347 = inttoptr i32 %346 to i64*, !insn.addr !6765
  %348 = load i64, i64* %347, align 4, !insn.addr !6765
  %349 = add i32 %324, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6766
  %350 = inttoptr i32 %349 to i64*, !insn.addr !6767
  %351 = load i64, i64* %350, align 4, !insn.addr !6767
  %352 = xor i64 %351, %348
  %353 = udiv i64 %352, 4294967296
  %354 = trunc i64 %353 to i32, !insn.addr !6768
  %355 = add i32 %345, %354, !insn.addr !6769
  %356 = add i32 %355, %344, !insn.addr !6770
  %357 = xor i32 %356, %340, !insn.addr !6771
  %358 = mul i32 %357, 65536, !insn.addr !6772
  %359 = ashr i32 %358, 31
  %360 = ashr i32 %341, 31
  %361 = add nsw i32 %359, %360, !insn.addr !6773
  %362 = xor i32 %361, %344, !insn.addr !6774
  %363 = ashr i32 %362, 10
  %364 = ashr i32 %224, 31
  %365 = add nsw i32 %275, %364, !insn.addr !6775
  %366 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 32), !insn.addr !6776
  %367 = inttoptr i32 %366 to i32*, !insn.addr !6777
  %368 = load i32, i32* %367, align 4, !insn.addr !6777
  %369 = mul i32 %368, 8, !insn.addr !6778
  %370 = add i32 %369, %86, !insn.addr !6779
  %371 = inttoptr i32 %370 to i64*, !insn.addr !6780
  %372 = load i64, i64* %371, align 4, !insn.addr !6780
  %373 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 36), !insn.addr !6781
  %374 = inttoptr i32 %373 to i32*, !insn.addr !6782
  %375 = load i32, i32* %374, align 4, !insn.addr !6782
  %376 = mul i32 %375, 8, !insn.addr !6783
  %377 = add i32 %376, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6784
  %378 = inttoptr i32 %377 to i64*, !insn.addr !6785
  %379 = load i64, i64* %378, align 4, !insn.addr !6785
  %380 = xor i64 %379, %372
  %381 = udiv i64 %380, 4294967296
  %382 = trunc i64 %381 to i32, !insn.addr !6786
  %383 = add i32 %365, %382, !insn.addr !6787
  %384 = xor i32 %359, %383, !insn.addr !6788
  %385 = ashr i32 %384, 31
  %386 = ashr i32 %317, 31
  %387 = add nsw i32 %385, %386, !insn.addr !6789
  %388 = xor i32 %387, %275, !insn.addr !6790
  %389 = ashr i32 %388, 24
  %390 = ashr i32 %383, 31
  %391 = add i32 %376, %86, !insn.addr !6791
  %392 = inttoptr i32 %391 to i64*, !insn.addr !6792
  %393 = load i64, i64* %392, align 4, !insn.addr !6792
  %394 = add i32 %369, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6793
  %395 = inttoptr i32 %394 to i64*, !insn.addr !6794
  %396 = load i64, i64* %395, align 4, !insn.addr !6794
  %397 = xor i64 %396, %393
  %398 = udiv i64 %397, 4294967296
  %399 = trunc i64 %398 to i32, !insn.addr !6795
  %400 = add i32 %390, %399, !insn.addr !6796
  %401 = add i32 %400, %389, !insn.addr !6797
  %402 = xor i32 %401, %385, !insn.addr !6798
  %403 = mul i32 %402, 65536, !insn.addr !6799
  %404 = ashr i32 %403, 31
  %405 = ashr i32 %387, 31
  %406 = add nsw i32 %404, %405, !insn.addr !6800
  %407 = xor i32 %406, %389, !insn.addr !6801
  %408 = ashr i32 %407, 10
  %409 = ashr i32 %268, 31
  %410 = add nsw i32 %319, %409, !insn.addr !6802
  %411 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 40), !insn.addr !6803
  %412 = inttoptr i32 %411 to i32*, !insn.addr !6804
  %413 = load i32, i32* %412, align 4, !insn.addr !6804
  %414 = mul i32 %413, 8, !insn.addr !6805
  %415 = add i32 %414, %86, !insn.addr !6806
  %416 = inttoptr i32 %415 to i64*, !insn.addr !6807
  %417 = load i64, i64* %416, align 4, !insn.addr !6807
  %418 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 44), !insn.addr !6808
  %419 = inttoptr i32 %418 to i32*, !insn.addr !6809
  %420 = load i32, i32* %419, align 4, !insn.addr !6809
  %421 = mul i32 %420, 8, !insn.addr !6810
  %422 = add i32 %421, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6811
  %423 = inttoptr i32 %422 to i64*, !insn.addr !6812
  %424 = load i64, i64* %423, align 4, !insn.addr !6812
  %425 = xor i64 %424, %417
  %426 = udiv i64 %425, 4294967296
  %427 = trunc i64 %426 to i32, !insn.addr !6813
  %428 = add i32 %410, %427, !insn.addr !6814
  %429 = xor i32 %428, %227, !insn.addr !6815
  %430 = ashr i32 %429, 31
  %431 = ashr i32 %361, 31
  %432 = add nsw i32 %430, %431, !insn.addr !6816
  %433 = xor i32 %432, %319, !insn.addr !6817
  %434 = ashr i32 %433, 24
  %435 = ashr i32 %428, 31
  %436 = add i32 %421, %86, !insn.addr !6818
  %437 = inttoptr i32 %436 to i64*, !insn.addr !6819
  %438 = load i64, i64* %437, align 4, !insn.addr !6819
  %439 = add i32 %414, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6820
  %440 = inttoptr i32 %439 to i64*, !insn.addr !6821
  %441 = load i64, i64* %440, align 4, !insn.addr !6821
  %442 = xor i64 %441, %438
  %443 = udiv i64 %442, 4294967296
  %444 = trunc i64 %443 to i32, !insn.addr !6822
  %445 = add i32 %435, %444, !insn.addr !6823
  %446 = add i32 %445, %434, !insn.addr !6824
  %447 = xor i32 %446, %430, !insn.addr !6825
  %448 = mul i32 %447, 65536, !insn.addr !6826
  %449 = ashr i32 %448, 31
  %450 = ashr i32 %432, 31
  %451 = add nsw i32 %449, %450, !insn.addr !6827
  %452 = xor i32 %451, %434, !insn.addr !6828
  %453 = ashr i32 %452, 10
  %454 = ashr i32 %312, 31
  %455 = add nsw i32 %363, %454, !insn.addr !6829
  %456 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 48), !insn.addr !6830
  %457 = inttoptr i32 %456 to i32*, !insn.addr !6831
  %458 = load i32, i32* %457, align 4, !insn.addr !6831
  %459 = mul i32 %458, 8, !insn.addr !6832
  %460 = add i32 %459, %86, !insn.addr !6833
  %461 = inttoptr i32 %460 to i64*, !insn.addr !6834
  %462 = load i64, i64* %461, align 4, !insn.addr !6834
  %463 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 52), !insn.addr !6835
  %464 = inttoptr i32 %463 to i32*, !insn.addr !6836
  %465 = load i32, i32* %464, align 4, !insn.addr !6836
  %466 = mul i32 %465, 8, !insn.addr !6837
  %467 = add i32 %466, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6838
  %468 = inttoptr i32 %467 to i64*, !insn.addr !6839
  %469 = load i64, i64* %468, align 4, !insn.addr !6839
  %470 = xor i64 %469, %462
  %471 = udiv i64 %470, 4294967296
  %472 = trunc i64 %471 to i32, !insn.addr !6840
  %473 = add i32 %455, %472, !insn.addr !6841
  %474 = xor i32 %473, %271, !insn.addr !6842
  %475 = ashr i32 %474, 31
  %476 = ashr i32 %229, 31
  %477 = add nsw i32 %475, %476, !insn.addr !6843
  %478 = xor i32 %477, %363, !insn.addr !6844
  %479 = ashr i32 %478, 24
  %480 = ashr i32 %473, 31
  %481 = add i32 %466, %86, !insn.addr !6845
  %482 = inttoptr i32 %481 to i64*, !insn.addr !6846
  %483 = load i64, i64* %482, align 4, !insn.addr !6846
  %484 = add i32 %459, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6847
  %485 = inttoptr i32 %484 to i64*, !insn.addr !6848
  %486 = load i64, i64* %485, align 4, !insn.addr !6848
  %487 = xor i64 %486, %483
  %488 = udiv i64 %487, 4294967296
  %489 = trunc i64 %488 to i32, !insn.addr !6849
  %490 = add i32 %480, %489, !insn.addr !6850
  %491 = add i32 %490, %479, !insn.addr !6851
  %492 = xor i32 %491, %475, !insn.addr !6852
  %493 = mul i32 %492, 65536, !insn.addr !6853
  %494 = ashr i32 %493, 31
  %495 = ashr i32 %477, 31
  %496 = add nsw i32 %494, %495, !insn.addr !6854
  %497 = xor i32 %496, %479, !insn.addr !6855
  %498 = ashr i32 %497, 10
  %499 = ashr i32 %356, 31
  %500 = add nsw i32 %499, %231, !insn.addr !6856
  %501 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 56), !insn.addr !6857
  %502 = inttoptr i32 %501 to i32*, !insn.addr !6858
  %503 = load i32, i32* %502, align 4, !insn.addr !6858
  %504 = mul i32 %503, 8, !insn.addr !6859
  %505 = add i32 %504, %86, !insn.addr !6860
  %506 = inttoptr i32 %505 to i64*, !insn.addr !6861
  %507 = load i64, i64* %506, align 4, !insn.addr !6861
  %508 = add i32 %188, add (i32 ptrtoint (i32* @global_var_2b390 to i32), i32 60), !insn.addr !6862
  %509 = inttoptr i32 %508 to i32*, !insn.addr !6863
  %510 = load i32, i32* %509, align 4, !insn.addr !6863
  %511 = mul i32 %510, 8, !insn.addr !6864
  %512 = add i32 %511, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6865
  %513 = inttoptr i32 %512 to i64*, !insn.addr !6866
  %514 = load i64, i64* %513, align 4, !insn.addr !6866
  %515 = xor i64 %514, %507
  %516 = udiv i64 %515, 4294967296
  %517 = trunc i64 %516 to i32, !insn.addr !6867
  %518 = add i32 %500, %517, !insn.addr !6868
  %519 = xor i32 %518, %315, !insn.addr !6869
  %520 = ashr i32 %519, 31
  %521 = ashr i32 %273, 31
  %522 = add nsw i32 %520, %521, !insn.addr !6870
  %523 = xor i32 %522, %231, !insn.addr !6871
  %524 = ashr i32 %523, 24
  %525 = ashr i32 %518, 31
  %526 = add i32 %511, %86, !insn.addr !6872
  %527 = inttoptr i32 %526 to i64*, !insn.addr !6873
  %528 = load i64, i64* %527, align 4, !insn.addr !6873
  %529 = add i32 %504, ptrtoint (i64** @global_var_2b790 to i32), !insn.addr !6874
  %530 = inttoptr i32 %529 to i64*, !insn.addr !6875
  %531 = load i64, i64* %530, align 4, !insn.addr !6875
  %532 = xor i64 %531, %528
  %533 = udiv i64 %532, 4294967296
  %534 = trunc i64 %533 to i32, !insn.addr !6876
  %535 = add i32 %525, %534, !insn.addr !6877
  %536 = add i32 %535, %524, !insn.addr !6878
  %537 = xor i32 %536, %520
  %538 = mul i32 %537, 65536, !insn.addr !6879
  %539 = ashr i32 %522, 31
  %540 = ashr i32 %538, 31
  %541 = add nsw i32 %540, %539, !insn.addr !6880
  %542 = xor i32 %541, %524
  %543 = mul i32 %542, 2097152, !insn.addr !6881
  %544 = add i32 %storemerge51.reload, 1, !insn.addr !6882
  %545 = icmp ult i32 %544, 15, !insn.addr !6883
  %546 = icmp ne i1 %545, true, !insn.addr !6883
  %547 = icmp eq i32 %544, 15, !insn.addr !6883
  %548 = icmp ne i1 %546, true, !insn.addr !6884
  %549 = or i1 %547, %548, !insn.addr !6884
  %extract.t61 = ashr i32 %451, 31
  %extract.t65 = ashr i32 %406, 31
  %extract.t69 = ashr i32 %541, 31
  %extract.t73 = ashr i32 %496, 31
  %extract.t97 = ashr i32 %542, 10
  %extract.t101 = ashr i32 %536, 31
  %extract.t105 = ashr i32 %491, 31
  %extract.t109 = ashr i32 %446, 31
  %extract.t113 = ashr i32 %401, 31
  store i32 %544, i32* %storemerge51.reg2mem, !insn.addr !6884
  store i32 %404, i32* %stack_var_-256.050.off0.reg2mem, !insn.addr !6884
  store i32 %538, i32* %stack_var_-248.049.off0.reg2mem, !insn.addr !6884
  store i32 %494, i32* %stack_var_-240.048.off0.reg2mem, !insn.addr !6884
  store i32 %449, i32* %stack_var_-232.047.off0.reg2mem, !insn.addr !6884
  store i32 %extract.t61, i32* %stack_var_-224.046.off32.reg2mem, !insn.addr !6884
  store i32 %extract.t65, i32* %stack_var_-216.045.off32.reg2mem, !insn.addr !6884
  store i32 %extract.t69, i32* %stack_var_-208.044.off32.reg2mem, !insn.addr !6884
  store i32 %extract.t73, i32* %stack_var_-200.043.off32.reg2mem, !insn.addr !6884
  store i32 %498, i32* %stack_var_-192.042.off0.reg2mem, !insn.addr !6884
  store i32 %498, i32* %stack_var_-192.042.off32.reg2mem, !insn.addr !6884
  store i32 %453, i32* %stack_var_-184.041.off0.reg2mem, !insn.addr !6884
  store i32 %453, i32* %stack_var_-184.041.off32.reg2mem, !insn.addr !6884
  store i32 %408, i32* %stack_var_-176.040.off0.reg2mem, !insn.addr !6884
  store i32 %408, i32* %stack_var_-176.040.off32.reg2mem, !insn.addr !6884
  store i32 %543, i32* %stack_var_-168.039.off0.reg2mem, !insn.addr !6884
  store i32 %extract.t97, i32* %stack_var_-168.039.off32.reg2mem, !insn.addr !6884
  store i32 %extract.t101, i32* %stack_var_-160.038.off32.reg2mem, !insn.addr !6884
  store i32 %extract.t105, i32* %stack_var_-152.037.off32.reg2mem, !insn.addr !6884
  store i32 %extract.t109, i32* %stack_var_-144.036.off32.reg2mem, !insn.addr !6884
  store i32 %extract.t113, i32* %stack_var_-136.035.off32.reg2mem, !insn.addr !6884
  br i1 %549, label %dec_label_pc_1a420, label %dec_label_pc_1b360, !insn.addr !6884

dec_label_pc_1b360:                               ; preds = %dec_label_pc_1a420
  %550 = zext i32 %404 to i64
  %551 = zext i32 %538 to i64
  %552 = zext i32 %494 to i64
  %553 = zext i32 %449 to i64
  %554 = zext i32 %451 to i64
  %555 = zext i32 %406 to i64
  %556 = zext i32 %541 to i64
  %557 = zext i32 %496 to i64
  %558 = zext i32 %498 to i64
  %559 = zext i32 %453 to i64
  %560 = zext i32 %408 to i64
  %561 = zext i32 %543 to i64
  %562 = zext i32 %536 to i64
  %563 = zext i32 %491 to i64
  %564 = zext i32 %446 to i64
  %565 = zext i32 %401 to i64
  %566 = xor i64 %stack_var_-48.0.ph.reload, %50
  %567 = xor i64 %566, %565
  %568 = xor i64 %567, %557
  %569 = mul i64 %568, 4294967296
  %570 = ashr i64 %569, 63, !insn.addr !6885
  %571 = xor i64 %stack_var_-56.0.ph.reload, %54
  %572 = xor i64 %571, %564
  %573 = xor i64 %572, %556
  %574 = mul i64 %573, 4294967296
  %575 = ashr i64 %574, 63, !insn.addr !6886
  %576 = xor i64 %stack_var_-64.0.ph.reload, %58
  %577 = xor i64 %576, %555
  %578 = xor i64 %577, %563
  %579 = mul i64 %578, 4294967296
  %580 = ashr i64 %579, 63, !insn.addr !6887
  %581 = xor i64 %stack_var_-72.0.ph.reload, %62
  %582 = xor i64 %581, %554
  %583 = xor i64 %582, %562
  %584 = mul i64 %583, 4294967296
  %585 = ashr i64 %584, 63, !insn.addr !6888
  %586 = xor i64 %stack_var_-80.0.ph.reload, %50
  %587 = xor i64 %586, %553
  %588 = xor i64 %587, %561
  %589 = mul i64 %588, 4294967296
  %590 = ashr i64 %589, 63, !insn.addr !6889
  %591 = xor i64 %stack_var_-88.0.ph.reload, %54
  %592 = xor i64 %591, %560
  %593 = xor i64 %592, %552
  %594 = mul i64 %593, 4294967296
  %595 = ashr i64 %594, 63, !insn.addr !6890
  %596 = xor i64 %stack_var_-96.0.ph.reload, %58
  %597 = xor i64 %596, %559
  %598 = xor i64 %597, %551
  %599 = mul i64 %598, 4294967296
  %600 = ashr i64 %599, 63, !insn.addr !6891
  %601 = xor i64 %stack_var_-104.0.ph.reload, %62
  %602 = xor i64 %601, %550
  %603 = xor i64 %602, %558
  %604 = mul i64 %603, 4294967296
  %605 = ashr i64 %604, 63, !insn.addr !6892
  store i32 %98, i32* %stack_var_-432.0.ph.reg2mem, !insn.addr !6893
  store i32 %99, i32* %stack_var_-436.0.ph.reg2mem, !insn.addr !6893
  store i32 0, i32* %stack_var_-36.0.ph.reg2mem, !insn.addr !6893
  store i64 %570, i64* %stack_var_-48.0.ph.reg2mem, !insn.addr !6893
  store i64 %575, i64* %stack_var_-56.0.ph.reg2mem, !insn.addr !6893
  store i64 %580, i64* %stack_var_-64.0.ph.reg2mem, !insn.addr !6893
  store i64 %585, i64* %stack_var_-72.0.ph.reg2mem, !insn.addr !6893
  store i64 %590, i64* %stack_var_-80.0.ph.reg2mem, !insn.addr !6893
  store i64 %595, i64* %stack_var_-88.0.ph.reg2mem, !insn.addr !6893
  store i64 %600, i64* %stack_var_-96.0.ph.reg2mem, !insn.addr !6893
  store i64 %605, i64* %stack_var_-104.0.ph.reg2mem, !insn.addr !6893
  store i32 %101, i32* %stack_var_-112.0.ph.off0.reg2mem, !insn.addr !6893
  store i32 %102, i32* %stack_var_-112.0.ph.off32.reg2mem, !insn.addr !6893
  br label %dec_label_pc_1b566.outer, !insn.addr !6893

dec_label_pc_1b566.outer:                         ; preds = %dec_label_pc_1b360, %dec_label_pc_19f64
  %stack_var_-112.0.ph.off32.reload = load i32, i32* %stack_var_-112.0.ph.off32.reg2mem
  %stack_var_-112.0.ph.off0.reload = load i32, i32* %stack_var_-112.0.ph.off0.reg2mem
  %stack_var_-104.0.ph.reload = load i64, i64* %stack_var_-104.0.ph.reg2mem
  %stack_var_-96.0.ph.reload = load i64, i64* %stack_var_-96.0.ph.reg2mem
  %stack_var_-88.0.ph.reload = load i64, i64* %stack_var_-88.0.ph.reg2mem
  %stack_var_-80.0.ph.reload = load i64, i64* %stack_var_-80.0.ph.reg2mem
  %stack_var_-72.0.ph.reload = load i64, i64* %stack_var_-72.0.ph.reg2mem
  %stack_var_-64.0.ph.reload = load i64, i64* %stack_var_-64.0.ph.reg2mem
  %stack_var_-56.0.ph.reload = load i64, i64* %stack_var_-56.0.ph.reg2mem
  %stack_var_-48.0.ph.reload = load i64, i64* %stack_var_-48.0.ph.reg2mem
  %stack_var_-36.0.ph.reload = load i32, i32* %stack_var_-36.0.ph.reg2mem
  %stack_var_-436.0.ph.reload = load i32, i32* %stack_var_-436.0.ph.reg2mem
  %stack_var_-432.0.ph.reload = load i32, i32* %stack_var_-432.0.ph.reg2mem
  store i32 %stack_var_-432.0.ph.reload, i32* %stack_var_-432.0.reg2mem
  store i32 %stack_var_-436.0.ph.reload, i32* %stack_var_-436.0.reg2mem
  store i32 %stack_var_-36.0.ph.reload, i32* %stack_var_-36.0.reg2mem
  br label %dec_label_pc_1b566

dec_label_pc_1b566:                               ; preds = %dec_label_pc_1b566.outer, %dec_label_pc_1a064
  %stack_var_-36.0.reload = load i32, i32* %stack_var_-36.0.reg2mem
  %stack_var_-436.0.reload = load i32, i32* %stack_var_-436.0.reg2mem
  %606 = icmp eq i32 %stack_var_-436.0.reload, 0, !insn.addr !6894
  br i1 %606, label %dec_label_pc_1b572, label %dec_label_pc_1a064, !insn.addr !6895

dec_label_pc_1b572:                               ; preds = %dec_label_pc_1b566
  %607 = trunc i64 %stack_var_-48.0.ph.reload to i32, !insn.addr !6896
  %608 = udiv i64 %stack_var_-48.0.ph.reload, 4294967296, !insn.addr !6896
  %609 = trunc i64 %608 to i32, !insn.addr !6896
  %610 = inttoptr i32 %15 to i32*, !insn.addr !6897
  store i32 %609, i32* %610, align 4, !insn.addr !6897
  %611 = add i32 %arg1, 140, !insn.addr !6897
  %612 = inttoptr i32 %611 to i32*, !insn.addr !6897
  store i32 %607, i32* %612, align 4, !insn.addr !6897
  %613 = trunc i64 %stack_var_-56.0.ph.reload to i32, !insn.addr !6898
  %614 = udiv i64 %stack_var_-56.0.ph.reload, 4294967296, !insn.addr !6898
  %615 = trunc i64 %614 to i32, !insn.addr !6898
  %616 = inttoptr i32 %19 to i32*, !insn.addr !6899
  store i32 %615, i32* %616, align 4, !insn.addr !6899
  %617 = add i32 %arg1, 148, !insn.addr !6899
  %618 = inttoptr i32 %617 to i32*, !insn.addr !6899
  store i32 %613, i32* %618, align 4, !insn.addr !6899
  %619 = trunc i64 %stack_var_-64.0.ph.reload to i32, !insn.addr !6900
  %620 = udiv i64 %stack_var_-64.0.ph.reload, 4294967296, !insn.addr !6900
  %621 = trunc i64 %620 to i32, !insn.addr !6900
  %622 = inttoptr i32 %23 to i32*, !insn.addr !6901
  store i32 %621, i32* %622, align 4, !insn.addr !6901
  %623 = add i32 %arg1, 156, !insn.addr !6901
  %624 = inttoptr i32 %623 to i32*, !insn.addr !6901
  store i32 %619, i32* %624, align 4, !insn.addr !6901
  %625 = trunc i64 %stack_var_-72.0.ph.reload to i32, !insn.addr !6902
  %626 = udiv i64 %stack_var_-72.0.ph.reload, 4294967296, !insn.addr !6902
  %627 = trunc i64 %626 to i32, !insn.addr !6902
  %628 = inttoptr i32 %27 to i32*, !insn.addr !6903
  store i32 %627, i32* %628, align 4, !insn.addr !6903
  %629 = add i32 %arg1, 164, !insn.addr !6903
  %630 = inttoptr i32 %629 to i32*, !insn.addr !6903
  store i32 %625, i32* %630, align 4, !insn.addr !6903
  %631 = trunc i64 %stack_var_-80.0.ph.reload to i32, !insn.addr !6904
  %632 = udiv i64 %stack_var_-80.0.ph.reload, 4294967296, !insn.addr !6904
  %633 = trunc i64 %632 to i32, !insn.addr !6904
  %634 = inttoptr i32 %31 to i32*, !insn.addr !6905
  store i32 %633, i32* %634, align 4, !insn.addr !6905
  %635 = add i32 %arg1, 172, !insn.addr !6905
  %636 = inttoptr i32 %635 to i32*, !insn.addr !6905
  store i32 %631, i32* %636, align 4, !insn.addr !6905
  %637 = trunc i64 %stack_var_-88.0.ph.reload to i32, !insn.addr !6906
  %638 = udiv i64 %stack_var_-88.0.ph.reload, 4294967296, !insn.addr !6906
  %639 = trunc i64 %638 to i32, !insn.addr !6906
  %640 = inttoptr i32 %35 to i32*, !insn.addr !6907
  store i32 %639, i32* %640, align 4, !insn.addr !6907
  %641 = add i32 %arg1, 180, !insn.addr !6907
  %642 = inttoptr i32 %641 to i32*, !insn.addr !6907
  store i32 %637, i32* %642, align 4, !insn.addr !6907
  %643 = trunc i64 %stack_var_-96.0.ph.reload to i32, !insn.addr !6908
  %644 = udiv i64 %stack_var_-96.0.ph.reload, 4294967296, !insn.addr !6908
  %645 = trunc i64 %644 to i32, !insn.addr !6908
  %646 = inttoptr i32 %39 to i32*, !insn.addr !6909
  store i32 %645, i32* %646, align 4, !insn.addr !6909
  %647 = add i32 %arg1, 188, !insn.addr !6909
  %648 = inttoptr i32 %647 to i32*, !insn.addr !6909
  store i32 %643, i32* %648, align 4, !insn.addr !6909
  %649 = trunc i64 %stack_var_-104.0.ph.reload to i32, !insn.addr !6910
  %650 = udiv i64 %stack_var_-104.0.ph.reload, 4294967296, !insn.addr !6910
  %651 = trunc i64 %650 to i32, !insn.addr !6910
  %652 = inttoptr i32 %43 to i32*, !insn.addr !6911
  store i32 %651, i32* %652, align 4, !insn.addr !6911
  %653 = add i32 %arg1, 196, !insn.addr !6911
  %654 = inttoptr i32 %653 to i32*, !insn.addr !6911
  store i32 %649, i32* %654, align 4, !insn.addr !6911
  %655 = trunc i64 %50 to i32, !insn.addr !6912
  %656 = udiv i64 %50, 4294967296, !insn.addr !6912
  %657 = trunc i64 %656 to i32, !insn.addr !6912
  %658 = inttoptr i32 %47 to i32*, !insn.addr !6913
  store i32 %657, i32* %658, align 4, !insn.addr !6913
  %659 = add i32 %arg1, 204, !insn.addr !6913
  %660 = inttoptr i32 %659 to i32*, !insn.addr !6913
  store i32 %655, i32* %660, align 4, !insn.addr !6913
  %661 = trunc i64 %54 to i32, !insn.addr !6914
  %662 = udiv i64 %54, 4294967296, !insn.addr !6914
  %663 = trunc i64 %662 to i32, !insn.addr !6914
  %664 = inttoptr i32 %51 to i32*, !insn.addr !6915
  store i32 %663, i32* %664, align 4, !insn.addr !6915
  %665 = add i32 %arg1, 212, !insn.addr !6915
  %666 = inttoptr i32 %665 to i32*, !insn.addr !6915
  store i32 %661, i32* %666, align 4, !insn.addr !6915
  %667 = trunc i64 %58 to i32, !insn.addr !6916
  %668 = udiv i64 %58, 4294967296, !insn.addr !6916
  %669 = trunc i64 %668 to i32, !insn.addr !6916
  %670 = inttoptr i32 %55 to i32*, !insn.addr !6917
  store i32 %669, i32* %670, align 4, !insn.addr !6917
  %671 = add i32 %arg1, 220, !insn.addr !6917
  %672 = inttoptr i32 %671 to i32*, !insn.addr !6917
  store i32 %667, i32* %672, align 4, !insn.addr !6917
  %673 = trunc i64 %62 to i32, !insn.addr !6918
  %674 = udiv i64 %62, 4294967296, !insn.addr !6918
  %675 = trunc i64 %674 to i32, !insn.addr !6918
  %676 = inttoptr i32 %59 to i32*, !insn.addr !6919
  store i32 %675, i32* %676, align 4, !insn.addr !6919
  %677 = add i32 %arg1, 228, !insn.addr !6919
  %678 = inttoptr i32 %677 to i32*, !insn.addr !6919
  store i32 %673, i32* %678, align 4, !insn.addr !6919
  %679 = inttoptr i32 %63 to i32*, !insn.addr !6920
  store i32 %stack_var_-112.0.ph.off32.reload, i32* %679, align 4, !insn.addr !6920
  %680 = add i32 %arg1, 236, !insn.addr !6920
  %681 = inttoptr i32 %680 to i32*, !insn.addr !6920
  store i32 %stack_var_-112.0.ph.off0.reload, i32* %681, align 4, !insn.addr !6920
  %682 = ptrtoint i64* %stack_var_-120 to i32, !insn.addr !6921
  %683 = load i64, i64* %stack_var_-120, align 8, !insn.addr !6922
  %684 = mul i64 %683, 4294967296
  %685 = ashr exact i64 %684, 32, !insn.addr !6922
  %686 = trunc i64 %685 to i32, !insn.addr !6922
  %687 = udiv i64 %685, 4294967296, !insn.addr !6922
  %688 = trunc i64 %687 to i32, !insn.addr !6922
  %689 = inttoptr i32 %67 to i32*, !insn.addr !6923
  store i32 %688, i32* %689, align 4, !insn.addr !6923
  %690 = add i32 %arg1, 244, !insn.addr !6923
  %691 = inttoptr i32 %690 to i32*, !insn.addr !6923
  store i32 %686, i32* %691, align 4, !insn.addr !6923
  store i32 %stack_var_-36.0.reload, i32* %storemerge32.reg2mem, !insn.addr !6924
  store i32 %682, i32* %r0.1.reg2mem, !insn.addr !6924
  br label %dec_label_pc_1b67c, !insn.addr !6924

dec_label_pc_1b67c:                               ; preds = %dec_label_pc_1b572, %dec_label_pc_19f26
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %storemerge32.reload = load i32, i32* %storemerge32.reg2mem
  store i32 %storemerge32.reload, i32* %1, align 4
  ret i32 %r0.1.reload, !insn.addr !6925

; uselistorder directives
  uselistorder i32 %stack_var_-436.0.reload, { 0, 1, 2, 4, 3 }
  uselistorder i64 %stack_var_-48.0.ph.reload, { 3, 2, 0, 1 }
  uselistorder i64 %stack_var_-56.0.ph.reload, { 3, 2, 0, 1 }
  uselistorder i64 %stack_var_-64.0.ph.reload, { 3, 2, 0, 1 }
  uselistorder i64 %stack_var_-72.0.ph.reload, { 3, 2, 0, 1 }
  uselistorder i64 %stack_var_-80.0.ph.reload, { 3, 2, 0, 1 }
  uselistorder i64 %stack_var_-88.0.ph.reload, { 3, 2, 0, 1 }
  uselistorder i64 %stack_var_-96.0.ph.reload, { 3, 2, 0, 1 }
  uselistorder i64 %stack_var_-104.0.ph.reload, { 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-112.0.ph.off32.reload, { 1, 0 }
  uselistorder i32 %544, { 0, 2, 1 }
  uselistorder i32 %543, { 1, 0 }
  uselistorder i32 %542, { 1, 0 }
  uselistorder i32 %541, { 0, 2, 1 }
  uselistorder i32 %538, { 2, 0, 1 }
  uselistorder i32 %536, { 0, 2, 1 }
  uselistorder i32 %522, { 1, 0 }
  uselistorder i32 %518, { 1, 0 }
  uselistorder i32 %511, { 1, 0 }
  uselistorder i32 %498, { 2, 0, 1 }
  uselistorder i32 %496, { 0, 2, 1 }
  uselistorder i32 %494, { 1, 0, 2 }
  uselistorder i32 %491, { 0, 2, 1 }
  uselistorder i32 %477, { 1, 0 }
  uselistorder i32 %473, { 1, 0 }
  uselistorder i32 %466, { 1, 0 }
  uselistorder i32 %453, { 2, 0, 1 }
  uselistorder i32 %451, { 0, 2, 1 }
  uselistorder i32 %449, { 1, 0, 2 }
  uselistorder i32 %446, { 0, 2, 1 }
  uselistorder i32 %432, { 1, 0 }
  uselistorder i32 %428, { 1, 0 }
  uselistorder i32 %421, { 1, 0 }
  uselistorder i32 %408, { 2, 0, 1 }
  uselistorder i32 %406, { 0, 2, 1 }
  uselistorder i32 %404, { 1, 0, 2 }
  uselistorder i32 %401, { 0, 2, 1 }
  uselistorder i32 %387, { 1, 0 }
  uselistorder i32 %383, { 1, 0 }
  uselistorder i32 %376, { 1, 0 }
  uselistorder i32 %361, { 1, 0 }
  uselistorder i32 %356, { 1, 0 }
  uselistorder i32 %341, { 1, 0 }
  uselistorder i32 %338, { 1, 0 }
  uselistorder i32 %331, { 1, 0 }
  uselistorder i32 %317, { 1, 0 }
  uselistorder i32 %312, { 1, 0 }
  uselistorder i32 %297, { 1, 0 }
  uselistorder i32 %294, { 1, 0 }
  uselistorder i32 %287, { 1, 0 }
  uselistorder i32 %273, { 1, 0 }
  uselistorder i32 %268, { 1, 0 }
  uselistorder i32 %253, { 1, 0 }
  uselistorder i32 %250, { 1, 0 }
  uselistorder i32 %243, { 1, 0 }
  uselistorder i32 %229, { 1, 0 }
  uselistorder i32 %224, { 1, 0 }
  uselistorder i32 %209, { 1, 0 }
  uselistorder i32 %206, { 1, 0 }
  uselistorder i32 %199, { 1, 0 }
  uselistorder i32 %188, { 14, 15, 12, 13, 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 1, 0 }
  uselistorder i32 %101, { 0, 4, 2, 1, 3 }
  uselistorder i32 %99, { 1, 0 }
  uselistorder i32 %98, { 1, 0 }
  uselistorder i32 %spec.select, { 3, 0, 1, 2 }
  uselistorder i32 %87, { 0, 2, 1 }
  uselistorder i32 %stack_var_-432.0.reload, { 1, 0 }
  uselistorder i64 %62, { 0, 4, 1, 2, 3 }
  uselistorder i64 %58, { 0, 4, 1, 2, 3 }
  uselistorder i64 %54, { 0, 4, 1, 2, 3 }
  uselistorder i64 %50, { 0, 4, 1, 2, 3 }
  uselistorder i32 %3, { 1, 0 }
  uselistorder i64* %stack_var_-120, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-424, { 1, 0 }
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge51.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-256.050.off0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-248.049.off0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-240.048.off0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-232.047.off0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-224.046.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216.045.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-208.044.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-200.043.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-192.042.off0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-192.042.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184.041.off0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184.041.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-176.040.off0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-176.040.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-168.039.off0.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-168.039.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-160.038.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152.037.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144.036.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-136.035.off32.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-432.0.ph.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-436.0.ph.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36.0.ph.reg2mem, { 0, 2, 1 }
  uselistorder i64* %stack_var_-48.0.ph.reg2mem, { 0, 2, 1 }
  uselistorder i64* %stack_var_-56.0.ph.reg2mem, { 0, 2, 1 }
  uselistorder i64* %stack_var_-64.0.ph.reg2mem, { 0, 2, 1 }
  uselistorder i64* %stack_var_-72.0.ph.reg2mem, { 0, 2, 1 }
  uselistorder i64* %stack_var_-80.0.ph.reg2mem, { 0, 2, 1 }
  uselistorder i64* %stack_var_-88.0.ph.reg2mem, { 0, 2, 1 }
  uselistorder i64* %stack_var_-96.0.ph.reg2mem, { 0, 2, 1 }
  uselistorder i64* %stack_var_-104.0.ph.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112.0.ph.off0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112.0.ph.off32.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-432.0.reg2mem, { 1, 2, 0 }
  uselistorder i32 204, { 18, 0, 1, 2, 3, 6, 5, 4, 9, 8, 7, 16, 17, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 188, { 9, 0, 3, 2, 1, 6, 5, 4, 7, 8 }
  uselistorder i32 156, { 1, 0 }
  uselistorder i32 140, { 1, 0 }
  uselistorder i32 (i32)* @sph_dec64be_aligned, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1023, { 2, 5, 3, 6, 0, 4, 7, 1 }
  uselistorder i32 96, { 2, 3, 4, 0, 1 }
  uselistorder i32 144, { 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg1, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 15, 0, 2, 5, 4, 3, 8, 7, 6, 11, 10, 9, 14, 13, 12, 17, 16, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 1, 46 }
  uselistorder label %dec_label_pc_1a420, { 1, 0 }
  uselistorder label %dec_label_pc_1a124, { 1, 0 }
  uselistorder label %106, { 1, 0 }
}

define i32 @blake64_close(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1b688:
  %r0.0.lcssa.reg2mem = alloca i32, !insn.addr !6926
  %storemerge5.reg2mem = alloca i32, !insn.addr !6926
  %storemerge3.reg2mem = alloca i32, !insn.addr !6926
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %0 = add i32 %arg1, 128, !insn.addr !6927
  %1 = inttoptr i32 %0 to i32*, !insn.addr !6927
  %2 = load i32, i32* %1, align 4, !insn.addr !6927
  %3 = mul i32 %2, 8, !insn.addr !6928
  %4 = add i32 %3, %arg3, !insn.addr !6929
  %5 = lshr i32 128, %arg3, !insn.addr !6930
  %6 = sub i32 0, %5, !insn.addr !6931
  %7 = and i32 %6, %arg2, !insn.addr !6932
  %8 = or i32 %7, %5, !insn.addr !6933
  %9 = ptrtoint i32* %stack_var_-184 to i32, !insn.addr !6934
  %10 = add i32 %2, %9
  %11 = trunc i32 %8 to i8, !insn.addr !6935
  %12 = inttoptr i32 %10 to i8*, !insn.addr !6935
  store i8 %11, i8* %12, align 1, !insn.addr !6935
  %13 = add i32 %arg1, 232, !insn.addr !6936
  %14 = inttoptr i32 %13 to i64*, !insn.addr !6936
  %15 = load i64, i64* %14, align 4, !insn.addr !6936
  %16 = udiv i64 %15, 4294967296, !insn.addr !6936
  %17 = trunc i64 %16 to i32, !insn.addr !6936
  %18 = add i32 %arg1, 240, !insn.addr !6937
  %19 = inttoptr i32 %18 to i64*, !insn.addr !6937
  %20 = load i64, i64* %19, align 4, !insn.addr !6937
  %21 = or i32 %2, %arg3
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %dec_label_pc_1b712, label %dec_label_pc_1b734, !insn.addr !6938

dec_label_pc_1b712:                               ; preds = %dec_label_pc_1b688
  %23 = inttoptr i32 %13 to i32*, !insn.addr !6939
  store i32 -1024, i32* %23, align 4, !insn.addr !6939
  %24 = add i32 %arg1, 236, !insn.addr !6939
  %25 = inttoptr i32 %24 to i32*, !insn.addr !6939
  store i32 -1, i32* %25, align 4, !insn.addr !6939
  %26 = inttoptr i32 %18 to i32*, !insn.addr !6940
  store i32 -1, i32* %26, align 4, !insn.addr !6940
  %27 = add i32 %arg1, 244, !insn.addr !6940
  %28 = inttoptr i32 %27 to i32*, !insn.addr !6940
  store i32 -1, i32* %28, align 4, !insn.addr !6940
  br label %dec_label_pc_1b78a, !insn.addr !6941

dec_label_pc_1b734:                               ; preds = %dec_label_pc_1b688
  %29 = or i64 %16, %15
  %30 = trunc i64 %29 to i32, !insn.addr !6942
  %31 = icmp eq i32 %30, 0, !insn.addr !6942
  br i1 %31, label %dec_label_pc_1b740, label %dec_label_pc_1b76c, !insn.addr !6943

dec_label_pc_1b740:                               ; preds = %dec_label_pc_1b734
  %32 = add i32 %4, -1024, !insn.addr !6944
  %33 = icmp ult i32 %4, 1024, !insn.addr !6944
  %34 = sext i1 %33 to i32, !insn.addr !6945
  %35 = inttoptr i32 %13 to i32*, !insn.addr !6946
  store i32 %32, i32* %35, align 4, !insn.addr !6946
  %36 = add i32 %arg1, 236, !insn.addr !6946
  %37 = inttoptr i32 %36 to i32*, !insn.addr !6946
  store i32 %34, i32* %37, align 4, !insn.addr !6946
  %38 = load i64, i64* %19, align 4, !insn.addr !6947
  %39 = trunc i64 %38 to i32, !insn.addr !6947
  %40 = udiv i64 %38, 4294967296, !insn.addr !6947
  %41 = trunc i64 %40 to i32, !insn.addr !6947
  %42 = add i32 %41, -1, !insn.addr !6948
  %43 = icmp ne i32 %41, 0, !insn.addr !6948
  %44 = add i32 %39, -1, !insn.addr !6949
  %45 = zext i1 %43 to i32, !insn.addr !6949
  %46 = add i32 %44, %45, !insn.addr !6949
  %47 = inttoptr i32 %18 to i32*, !insn.addr !6950
  store i32 %42, i32* %47, align 4, !insn.addr !6950
  %48 = add i32 %arg1, 244, !insn.addr !6950
  %49 = inttoptr i32 %48 to i32*, !insn.addr !6950
  store i32 %46, i32* %49, align 4, !insn.addr !6950
  br label %dec_label_pc_1b78a, !insn.addr !6951

dec_label_pc_1b76c:                               ; preds = %dec_label_pc_1b734
  %50 = trunc i64 %15 to i32, !insn.addr !6952
  %51 = sub i32 1024, %4, !insn.addr !6953
  %52 = sub i32 %17, %51, !insn.addr !6954
  %53 = icmp ugt i32 %51, %17, !insn.addr !6954
  %54 = icmp ne i1 %53, true, !insn.addr !6954
  %55 = icmp eq i1 %54, false, !insn.addr !6955
  %56 = zext i1 %55 to i32, !insn.addr !6955
  %57 = sub i32 %50, %56, !insn.addr !6955
  %58 = inttoptr i32 %13 to i32*, !insn.addr !6956
  store i32 %52, i32* %58, align 4, !insn.addr !6956
  %59 = add i32 %arg1, 236, !insn.addr !6956
  %60 = inttoptr i32 %59 to i32*, !insn.addr !6956
  store i32 %57, i32* %60, align 4, !insn.addr !6956
  br label %dec_label_pc_1b78a, !insn.addr !6956

dec_label_pc_1b78a:                               ; preds = %dec_label_pc_1b76c, %dec_label_pc_1b740, %dec_label_pc_1b712
  %61 = add i32 %4, %17, !insn.addr !6957
  %62 = sext i32 %61 to i64, !insn.addr !6958
  %63 = ashr i64 %20, 32, !insn.addr !6959
  %64 = icmp ult i32 %4, 894, !insn.addr !6960
  %65 = icmp ne i1 %64, true, !insn.addr !6960
  %66 = icmp eq i32 %4, 894, !insn.addr !6960
  %67 = icmp ne i1 %66, true, !insn.addr !6961
  %68 = icmp eq i1 %65, %67, !insn.addr !6961
  %69 = add i32 %10, 1
  br i1 %68, label %dec_label_pc_1b808, label %dec_label_pc_1b796, !insn.addr !6961

dec_label_pc_1b796:                               ; preds = %dec_label_pc_1b78a
  %70 = sub i32 111, %2, !insn.addr !6962
  %71 = inttoptr i32 %69 to i32*, !insn.addr !6963
  %72 = call i32* @memset(i32* %71, i32 0, i32 %70), !insn.addr !6963
  %73 = trunc i64 %63 to i32, !insn.addr !6964
  %74 = ashr i64 %20, 63, !insn.addr !6965
  %75 = call i32 @sph_enc64be_aligned(i32* nonnull %stack_var_-72, i32 0, i64 %74, i32 %73), !insn.addr !6965
  %76 = ashr i64 %62, 31, !insn.addr !6966
  %77 = call i32 @sph_enc64be_aligned(i32* nonnull %stack_var_-64, i32 0, i64 %76, i32 %61), !insn.addr !6966
  %78 = sub i32 128, %2, !insn.addr !6967
  %79 = call i32 @blake64(i32 %arg1, i32 %10, i32 %78, i32 %78), !insn.addr !6968
  store i32 %79, i32* %storemerge3.reg2mem, !insn.addr !6969
  br label %dec_label_pc_1b8ac, !insn.addr !6969

dec_label_pc_1b808:                               ; preds = %dec_label_pc_1b78a
  %80 = sub i32 127, %2, !insn.addr !6970
  %81 = inttoptr i32 %69 to i32*, !insn.addr !6971
  %82 = call i32* @memset(i32* %81, i32 0, i32 %80), !insn.addr !6971
  %83 = sub i32 128, %2, !insn.addr !6972
  %84 = call i32 @blake64(i32 %arg1, i32 %10, i32 %83, i32 %83), !insn.addr !6973
  %85 = inttoptr i32 %13 to i32*, !insn.addr !6974
  store i32 -1024, i32* %85, align 4, !insn.addr !6974
  %86 = add i32 %arg1, 236, !insn.addr !6974
  %87 = inttoptr i32 %86 to i32*, !insn.addr !6974
  store i32 -1, i32* %87, align 4, !insn.addr !6974
  %88 = inttoptr i32 %18 to i32*, !insn.addr !6975
  store i32 -1, i32* %88, align 4, !insn.addr !6975
  %89 = add i32 %arg1, 244, !insn.addr !6975
  %90 = inttoptr i32 %89 to i32*, !insn.addr !6975
  store i32 -1, i32* %90, align 4, !insn.addr !6975
  %91 = call i32* @memset(i32* nonnull %stack_var_-184, i32 0, i32 112), !insn.addr !6976
  %92 = trunc i64 %63 to i32, !insn.addr !6977
  %93 = ashr i64 %20, 63, !insn.addr !6978
  %94 = call i32 @sph_enc64be_aligned(i32* nonnull %stack_var_-72, i32 0, i64 %93, i32 %92), !insn.addr !6978
  %95 = ashr i64 %62, 31, !insn.addr !6979
  %96 = call i32 @sph_enc64be_aligned(i32* nonnull %stack_var_-64, i32 0, i64 %95, i32 %61), !insn.addr !6979
  %97 = call i32 @blake64(i32 %arg1, i32 %9, i32 128, i32 %9), !insn.addr !6980
  store i32 %97, i32* %storemerge3.reg2mem, !insn.addr !6980
  br label %dec_label_pc_1b8ac, !insn.addr !6980

dec_label_pc_1b8ac:                               ; preds = %dec_label_pc_1b808, %dec_label_pc_1b796
  %storemerge3.reload = load i32, i32* %storemerge3.reg2mem
  %98 = icmp eq i32 %arg5, 0, !insn.addr !6981
  store i32 %storemerge3.reload, i32* %r0.0.lcssa.reg2mem, !insn.addr !6982
  br i1 %98, label %dec_label_pc_1b8f2, label %dec_label_pc_1b8ba.lr.ph, !insn.addr !6982

dec_label_pc_1b8ba.lr.ph:                         ; preds = %dec_label_pc_1b8ac
  %99 = add i32 %arg1, 136, !insn.addr !6983
  store i32 0, i32* %storemerge5.reg2mem
  br label %dec_label_pc_1b8ba

dec_label_pc_1b8ba:                               ; preds = %dec_label_pc_1b8ba.lr.ph, %dec_label_pc_1b8ba
  %storemerge5.reload = load i32, i32* %storemerge5.reg2mem
  %100 = mul i32 %storemerge5.reload, 8, !insn.addr !6984
  %101 = add i32 %100, %arg4, !insn.addr !6985
  %102 = add i32 %99, %100, !insn.addr !6986
  %103 = inttoptr i32 %102 to i64*, !insn.addr !6987
  %104 = load i64, i64* %103, align 4, !insn.addr !6987
  %105 = ashr i64 %104, 32, !insn.addr !6988
  %106 = mul i64 %104, 4294967296
  %107 = ashr exact i64 %106, 32, !insn.addr !6988
  %108 = call i32 @sph_enc64be(i32 %101, i32 %101, i64 %105, i64 %107), !insn.addr !6988
  %109 = add nuw i32 %storemerge5.reload, 1, !insn.addr !6989
  %110 = icmp ult i32 %109, %arg5, !insn.addr !6981
  store i32 %109, i32* %storemerge5.reg2mem, !insn.addr !6982
  store i32 %108, i32* %r0.0.lcssa.reg2mem, !insn.addr !6982
  br i1 %110, label %dec_label_pc_1b8ba, label %dec_label_pc_1b8f2, !insn.addr !6982

dec_label_pc_1b8f2:                               ; preds = %dec_label_pc_1b8ba, %dec_label_pc_1b8ac
  %r0.0.lcssa.reload = load i32, i32* %r0.0.lcssa.reg2mem
  ret i32 %r0.0.lcssa.reload, !insn.addr !6990

; uselistorder directives
  uselistorder i32 %101, { 1, 0 }
  uselistorder i32 %83, { 1, 0 }
  uselistorder i32 %78, { 1, 0 }
  uselistorder i32 %69, { 1, 0 }
  uselistorder i64 %63, { 1, 0 }
  uselistorder i32 %18, { 1, 0, 2, 3 }
  uselistorder i32 %17, { 0, 2, 1 }
  uselistorder i64 %16, { 1, 0 }
  uselistorder i64 %15, { 2, 1, 0 }
  uselistorder i32 %13, { 0, 3, 2, 1, 4 }
  uselistorder i32 %10, { 2, 1, 0, 3 }
  uselistorder i32 %9, { 2, 1, 0 }
  uselistorder i32 %4, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %2, { 4, 5, 3, 6, 1, 2, 0 }
  uselistorder i32* %storemerge3.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge5.reg2mem, { 1, 0, 2 }
  uselistorder i32 136, { 0, 2, 3, 1 }
  uselistorder i32 112, { 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i64 31, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32*, i32, i64, i32)* @sph_enc64be_aligned, { 3, 2, 1, 0 }
  uselistorder i32 894, { 1, 0 }
  uselistorder i32 240, { 1, 2, 3, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 3, 4, 6, 5, 2, 10, 1, 9, 7, 8, 11, 12, 13 }
  uselistorder label %dec_label_pc_1b8ba, { 1, 0 }
}

define i32 @sph_blake224_init(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b8fc:
  %0 = call i32 @blake32_init(i32 %arg1, i32 or (i32 ptrtoint (i32* @global_var_b2d0 to i32), i32 131072), i32 or (i32 ptrtoint ([3 x i8]* @global_var_b810 to i32), i32 131072)), !insn.addr !6991
  ret i32 %0, !insn.addr !6992
}

define i32 @sph_blake224(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b924:
  %0 = call i32 @blake32(i32 %arg1, i32 %arg2, i32 %arg3), !insn.addr !6993
  ret i32 %0, !insn.addr !6994
}

define i32 @sph_blake224_close(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b944:
  %0 = call i32 @sph_blake224_addbits_and_close(i32 %arg1, i32 0, i32 0, i32 %arg2), !insn.addr !6995
  ret i32 %0, !insn.addr !6996
}

define i32 @sph_blake224_addbits_and_close(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b964:
  %0 = call i32 @blake32_close(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 7), !insn.addr !6997
  %1 = call i32 @sph_blake224_init(i32 %arg1), !insn.addr !6998
  ret i32 %1, !insn.addr !6999
}

define i32 @sph_blake256_init(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b990:
  %0 = ptrtoint i32* %arg1 to i32
  %1 = call i32 @blake32_init(i32 %0, i32 ptrtoint (i32* @global_var_2b2f0 to i32), i32 or (i32 ptrtoint ([3 x i8]* @global_var_b810 to i32), i32 131072)), !insn.addr !7000
  ret i32 %1, !insn.addr !7001
}

define i32 @sph_blake256(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b9b8:
  %0 = ptrtoint i32* %arg1 to i32
  %1 = call i32 @blake32(i32 %0, i32 %arg2, i32 %arg3), !insn.addr !7002
  ret i32 %1, !insn.addr !7003

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @blake32, { 0, 4, 3, 2, 1 }
}

define i32 @sph_blake256_close(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b9d8:
  %0 = ptrtoint i32* %arg1 to i32
  %1 = call i32 @sph_blake256_addbits_and_close(i32 %0, i32 0, i32 0, i32 %arg2), !insn.addr !7004
  ret i32 %1, !insn.addr !7005
}

define i32 @sph_blake256_addbits_and_close(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b9f8:
  %0 = call i32 @blake32_close(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 8), !insn.addr !7006
  %1 = inttoptr i32 %arg1 to i32*, !insn.addr !7007
  %2 = call i32 @sph_blake256_init(i32* %1), !insn.addr !7007
  ret i32 %2, !insn.addr !7008

; uselistorder directives
  uselistorder i32 (i32*)* @sph_blake256_init, { 1, 0 }
}

define i32 @sph_blake384_init(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ba24:
  %0 = call i32 @blake64_init(i32 %arg1, i32* nonnull @global_var_2b310, i32* nonnull @global_var_2b820), !insn.addr !7009
  ret i32 %0, !insn.addr !7010
}

define i32 @sph_blake384(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ba4c:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = call i32 @blake64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %1), !insn.addr !7011
  ret i32 %2, !insn.addr !7012
}

define i32 @sph_blake384_close(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ba6c:
  %0 = call i32 @sph_blake384_addbits_and_close(i32 %arg1, i32 0, i32 0, i32 %arg2), !insn.addr !7013
  ret i32 %0, !insn.addr !7014
}

define i32 @sph_blake384_addbits_and_close(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ba8c:
  %0 = call i32 @blake64_close(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 6), !insn.addr !7015
  %1 = call i32 @sph_blake384_init(i32 %arg1), !insn.addr !7016
  ret i32 %1, !insn.addr !7017
}

define i32 @sph_blake512_init(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bab8:
  %0 = call i32 @blake64_init(i32 %arg1, i32* bitcast ([8 x i64]* @SHA512_at_2b350 to i32*), i32* nonnull @global_var_2b820), !insn.addr !7018
  ret i32 %0, !insn.addr !7019

; uselistorder directives
  uselistorder i32 (i32, i32*, i32*)* @blake64_init, { 1, 0 }
}

define i32 @sph_blake512(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bae0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = call i32 @blake64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %1), !insn.addr !7020
  ret i32 %2, !insn.addr !7021

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @blake64, { 4, 3, 2, 1, 0 }
}

define i32 @sph_blake512_close(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bb00:
  %0 = call i32 @sph_blake512_addbits_and_close(i32 %arg1, i32 0, i32 0, i32 %arg2), !insn.addr !7022
  ret i32 %0, !insn.addr !7023
}

define i32 @sph_blake512_addbits_and_close(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1bb20:
  %0 = call i32 @blake64_close(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 8), !insn.addr !7024
  %1 = call i32 @sph_blake512_init(i32 %arg1), !insn.addr !7025
  ret i32 %1, !insn.addr !7026

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @blake64_close, { 1, 0 }
}

define i32 @function_1bb4c() local_unnamed_addr {
dec_label_pc_1bb4c:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1, !insn.addr !7027
}

define i32 @platform_dump_capability(i32* %arg1) local_unnamed_addr {
dec_label_pc_1bb50:
  %r0.1.reg2mem = alloca i32, !insn.addr !7028
  %storemerge12.reg2mem = alloca i32, !insn.addr !7028
  %storemerge3.reg2mem = alloca i32, !insn.addr !7028
  %0 = ptrtoint i32* %arg1 to i32
  %1 = icmp eq i32* %arg1, null, !insn.addr !7029
  store i32 %0, i32* %r0.1.reg2mem, !insn.addr !7030
  br i1 %1, label %dec_label_pc_1bc8a, label %dec_label_pc_1bb60, !insn.addr !7030

dec_label_pc_1bb60:                               ; preds = %dec_label_pc_1bb50
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2baf4, i32 0, i32 0), i32 32), !insn.addr !7031
  %3 = call i32 @puts(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_2b848, i32 0, i32 0)), !insn.addr !7032
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2baf4, i32 0, i32 0), i32 33), !insn.addr !7033
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2b890, i32 0, i32 0), i32 %4), !insn.addr !7034
  %6 = icmp eq i32 %5, 0, !insn.addr !7035
  br i1 %6, label %dec_label_pc_1bc68, label %dec_label_pc_1bbb0.lr.ph, !insn.addr !7036

dec_label_pc_1bbb0.lr.ph:                         ; preds = %dec_label_pc_1bb60
  %7 = add i32 %0, 12
  store i32 0, i32* %storemerge3.reg2mem
  br label %dec_label_pc_1bbb0

dec_label_pc_1bbb0:                               ; preds = %dec_label_pc_1bbb0.lr.ph, %dec_label_pc_1bc58
  %storemerge3.reload = load i32, i32* %storemerge3.reg2mem
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2baf4, i32 0, i32 0), i32 35), !insn.addr !7037
  %9 = mul i32 %storemerge3.reload, 72, !insn.addr !7038
  %10 = add i32 %9, %0, !insn.addr !7039
  %11 = add i32 %10, 4, !insn.addr !7040
  %12 = inttoptr i32 %11 to i32*, !insn.addr !7041
  %13 = load i32, i32* %12, align 4, !insn.addr !7041
  %14 = add i32 %10, 8, !insn.addr !7042
  %15 = inttoptr i32 %14 to i32*, !insn.addr !7043
  %16 = load i32, i32* %15, align 4, !insn.addr !7043
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2b8a0, i32 0, i32 0), i32 %13, i32 %16), !insn.addr !7044
  %18 = load i32, i32* %15, align 4, !insn.addr !7045
  %19 = icmp eq i32 %18, 0, !insn.addr !7046
  br i1 %19, label %dec_label_pc_1bc58, label %dec_label_pc_1bbfe.lr.ph, !insn.addr !7047

dec_label_pc_1bbfe.lr.ph:                         ; preds = %dec_label_pc_1bbb0
  %20 = mul i32 %storemerge3.reload, 18
  store i32 0, i32* %storemerge12.reg2mem
  br label %dec_label_pc_1bbfe

dec_label_pc_1bbfe:                               ; preds = %dec_label_pc_1bbfe.lr.ph, %dec_label_pc_1bbfe
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2baf4, i32 0, i32 0), i32 37), !insn.addr !7048
  %22 = add i32 %storemerge12.reload, %20, !insn.addr !7049
  %23 = mul i32 %22, 4, !insn.addr !7050
  %24 = add i32 %7, %23, !insn.addr !7051
  %25 = inttoptr i32 %24 to i32*, !insn.addr !7051
  %26 = load i32, i32* %25, align 4, !insn.addr !7051
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2b8c0, i32 0, i32 0), i32 %26), !insn.addr !7052
  %28 = add nuw i32 %storemerge12.reload, 1, !insn.addr !7053
  %29 = load i32, i32* %15, align 4, !insn.addr !7045
  %30 = icmp ult i32 %28, %29, !insn.addr !7046
  store i32 %28, i32* %storemerge12.reg2mem, !insn.addr !7047
  br i1 %30, label %dec_label_pc_1bbfe, label %dec_label_pc_1bc58, !insn.addr !7047

dec_label_pc_1bc58:                               ; preds = %dec_label_pc_1bbfe, %dec_label_pc_1bbb0
  %31 = add nuw i32 %storemerge3.reload, 1, !insn.addr !7054
  %32 = icmp ult i32 %31, %0, !insn.addr !7035
  store i32 %31, i32* %storemerge3.reg2mem, !insn.addr !7036
  br i1 %32, label %dec_label_pc_1bbb0, label %dec_label_pc_1bc68, !insn.addr !7036

dec_label_pc_1bc68:                               ; preds = %dec_label_pc_1bc58, %dec_label_pc_1bb60
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2baf4, i32 0, i32 0), i32 41), !insn.addr !7055
  %34 = call i32 @puts(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_2b8d0, i32 0, i32 0)), !insn.addr !7056
  store i32 %34, i32* %r0.1.reg2mem, !insn.addr !7056
  br label %dec_label_pc_1bc8a, !insn.addr !7056

dec_label_pc_1bc8a:                               ; preds = %dec_label_pc_1bc68, %dec_label_pc_1bb50
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  ret i32 %r0.1.reload, !insn.addr !7057

; uselistorder directives
  uselistorder i32* %15, { 1, 0, 2 }
  uselistorder i32 %storemerge3.reload, { 2, 0, 1 }
  uselistorder i32 %0, { 2, 1, 3, 0 }
  uselistorder i32* %storemerge3.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge12.reg2mem, { 1, 0, 2 }
  uselistorder i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2baf4, i32 0, i32 0), { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1bbfe, { 1, 0 }
  uselistorder label %dec_label_pc_1bbb0, { 1, 0 }
}

define i32 @platform_init() local_unnamed_addr {
dec_label_pc_1bc94:
  %r3.0.reg2mem = alloca i32, !insn.addr !7058
  %.reg2mem5 = alloca i32, !insn.addr !7058
  %.reg2mem = alloca i32, !insn.addr !7058
  %stack_var_-12.03.reg2mem = alloca i32, !insn.addr !7058
  %stack_var_-532 = alloca i32, align 4
  %stack_var_-528 = alloca i32, align 4
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !7059
  %1 = icmp eq i32 %0, 0, !insn.addr !7060
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7061
  br i1 %1, label %dec_label_pc_1bcae, label %dec_label_pc_1c08e, !insn.addr !7061

dec_label_pc_1bcae:                               ; preds = %dec_label_pc_1bc94
  %2 = call i32 @fpga_init(), !insn.addr !7062
  %3 = icmp eq i32 %2, 0, !insn.addr !7063
  br i1 %3, label %dec_label_pc_1bce0, label %dec_label_pc_1bcb8, !insn.addr !7064

dec_label_pc_1bcb8:                               ; preds = %dec_label_pc_1bcae
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2bae4, i32 0, i32 0), i32 47), !insn.addr !7065
  %5 = call i32 @puts(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2b918, i32 0, i32 0)), !insn.addr !7066
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !7067
  br label %dec_label_pc_1c08e, !insn.addr !7067

dec_label_pc_1bce0:                               ; preds = %dec_label_pc_1bcae
  %6 = call i32 @gpio_init(), !insn.addr !7068
  %7 = icmp eq i32 %6, 0, !insn.addr !7069
  br i1 %7, label %dec_label_pc_1bd12, label %dec_label_pc_1bcea, !insn.addr !7070

dec_label_pc_1bcea:                               ; preds = %dec_label_pc_1bce0
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2bae4, i32 0, i32 0), i32 51), !insn.addr !7071
  %9 = call i32 @puts(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2b92c, i32 0, i32 0)), !insn.addr !7072
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !7073
  br label %dec_label_pc_1c08e, !insn.addr !7073

dec_label_pc_1bd12:                               ; preds = %dec_label_pc_1bce0
  %10 = call i32* @memset(i32* nonnull @global_var_235c5c, i32 0, i32 292), !insn.addr !7074
  %11 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2b940, i32 0, i32 0)), !insn.addr !7075
  %12 = icmp eq i8* %11, null, !insn.addr !7076
  %13 = bitcast i32* %stack_var_-528 to i8*
  br i1 %12, label %dec_label_pc_1bd3c, label %dec_label_pc_1bd5c, !insn.addr !7077

dec_label_pc_1bd3c:                               ; preds = %dec_label_pc_1bd12
  %14 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* nonnull %13, i32 512, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2b950, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2b960, i32 0, i32 0)), !insn.addr !7078
  br label %dec_label_pc_1bd80, !insn.addr !7079

dec_label_pc_1bd5c:                               ; preds = %dec_label_pc_1bd12
  %15 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* nonnull %13, i32 512, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b970, i32 0, i32 0), i8* nonnull %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2b960, i32 0, i32 0)), !insn.addr !7080
  br label %dec_label_pc_1bd80, !insn.addr !7080

dec_label_pc_1bd80:                               ; preds = %dec_label_pc_1bd5c, %dec_label_pc_1bd3c
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2bae4, i32 0, i32 0), i32 65), !insn.addr !7081
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2b978, i32 0, i32 0), i32* nonnull %stack_var_-528), !insn.addr !7082
  %18 = call i32 @hal_load_conf(i32* nonnull %stack_var_-528), !insn.addr !7083
  %19 = icmp eq i32 %18, 0, !insn.addr !7084
  br i1 %19, label %dec_label_pc_1bde8, label %dec_label_pc_1bdb8, !insn.addr !7085

dec_label_pc_1bdb8:                               ; preds = %dec_label_pc_1bd80
  %20 = call i32 @fpga_uninit(), !insn.addr !7086
  %21 = call i32 @gpio_uninit(), !insn.addr !7087
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2bae4, i32 0, i32 0), i32 69), !insn.addr !7088
  %23 = call i32 @puts(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_2b990, i32 0, i32 0)), !insn.addr !7089
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !7090
  br label %dec_label_pc_1c08e, !insn.addr !7090

dec_label_pc_1bde8:                               ; preds = %dec_label_pc_1bd80
  store i32 0, i32* %stack_var_-532, align 4, !insn.addr !7091
  %24 = call i32 @fpga_read(i32 2, i32* nonnull %stack_var_-532), !insn.addr !7092
  %25 = load i32, i32* %stack_var_-532, align 4, !insn.addr !7093
  %26 = icmp eq i32 %25, 0, !insn.addr !7094
  br i1 %26, label %dec_label_pc_1be06, label %dec_label_pc_1be2a, !insn.addr !7095

dec_label_pc_1be06:                               ; preds = %dec_label_pc_1bde8
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2bae4, i32 0, i32 0), i32 76), !insn.addr !7096
  %28 = call i32 @puts(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_2b9ac, i32 0, i32 0)), !insn.addr !7097
  br label %dec_label_pc_1bfc0, !insn.addr !7098

dec_label_pc_1be2a:                               ; preds = %dec_label_pc_1bde8
  %29 = icmp ult i32 %25, 16777216, !insn.addr !7099
  br i1 %29, label %dec_label_pc_1be76, label %dec_label_pc_1be36, !insn.addr !7100

dec_label_pc_1be36:                               ; preds = %dec_label_pc_1be2a
  store i32 1, i32* @global_var_235c58, align 4, !insn.addr !7101
  %30 = udiv i32 %25, 16777216, !insn.addr !7102
  store i32 %30, i32* %stack_var_-532, align 4, !insn.addr !7103
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2bae4, i32 0, i32 0), i32 81), !insn.addr !7104
  %32 = load i32, i32* %stack_var_-532, align 4, !insn.addr !7105
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2b9c8, i32 0, i32 0), i32 %32), !insn.addr !7106
  br label %dec_label_pc_1bfc0, !insn.addr !7107

dec_label_pc_1be76:                               ; preds = %dec_label_pc_1be2a
  store i32 0, i32* @global_var_235c58, align 4, !insn.addr !7108
  %34 = urem i32 %25, 65536, !insn.addr !7109
  store i32 %34, i32* %stack_var_-532, align 4, !insn.addr !7110
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2bae4, i32 0, i32 0), i32 87), !insn.addr !7111
  %36 = load i32, i32* %stack_var_-532, align 4, !insn.addr !7112
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2b9e0, i32 0, i32 0), i32 %36), !insn.addr !7113
  %.pr = load i32, i32* %stack_var_-532, align 4
  %38 = icmp eq i32 %.pr, 0, !insn.addr !7114
  store i32 0, i32* %stack_var_-12.03.reg2mem, !insn.addr !7115
  store i32 %.pr, i32* %.reg2mem, !insn.addr !7115
  br i1 %38, label %dec_label_pc_1bfc0, label %dec_label_pc_1beb6, !insn.addr !7115

dec_label_pc_1beb6:                               ; preds = %dec_label_pc_1be76, %dec_label_pc_1bfa2
  %.reload = load i32, i32* %.reg2mem
  %stack_var_-12.03.reload = load i32, i32* %stack_var_-12.03.reg2mem
  %39 = urem i32 %.reload, 2, !insn.addr !7116
  %40 = icmp eq i32 %39, 0, !insn.addr !7117
  store i32 %.reload, i32* %.reg2mem5, !insn.addr !7118
  br i1 %40, label %dec_label_pc_1bfa2, label %dec_label_pc_1bec2, !insn.addr !7118

dec_label_pc_1bec2:                               ; preds = %dec_label_pc_1beb6
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2bae4, i32 0, i32 0), i32 90), !insn.addr !7119
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2b9f8, i32 0, i32 0), i32 %stack_var_-12.03.reload), !insn.addr !7120
  %43 = load i32, i32* @global_var_235c5c, align 4, !insn.addr !7121
  %44 = mul i32 %43, 72, !insn.addr !7122
  %45 = add i32 %44, add (i32 ptrtoint (i32* @global_var_235c5c to i32), i32 4), !insn.addr !7123
  %46 = inttoptr i32 %45 to i32*, !insn.addr !7124
  store i32 %stack_var_-12.03.reload, i32* %46, align 4, !insn.addr !7124
  %47 = load i32, i32* @global_var_235c5c, align 4
  %48 = mul i32 %47, 72, !insn.addr !7125
  %49 = add i32 %48, add (i32 ptrtoint (i32* @global_var_235c5c to i32), i32 8), !insn.addr !7126
  %50 = inttoptr i32 %49 to i32*, !insn.addr !7127
  %51 = load i32, i32* %50, align 4, !insn.addr !7127
  %52 = mul i32 %47, 18, !insn.addr !7128
  %53 = add i32 %52, %51, !insn.addr !7129
  %54 = mul i32 %53, 4, !insn.addr !7130
  %55 = add i32 %54, add (i32 ptrtoint (i32* @global_var_235c5c to i32), i32 12), !insn.addr !7131
  %56 = inttoptr i32 %55 to i32*, !insn.addr !7131
  store i32 %stack_var_-12.03.reload, i32* %56, align 4, !insn.addr !7131
  %57 = load i32, i32* @global_var_235c5c, align 4, !insn.addr !7132
  %58 = mul i32 %57, 72, !insn.addr !7133
  %59 = add i32 %58, add (i32 ptrtoint (i32* @global_var_235c5c to i32), i32 8), !insn.addr !7134
  %60 = inttoptr i32 %59 to i32*, !insn.addr !7135
  %61 = load i32, i32* %60, align 4, !insn.addr !7135
  %62 = add i32 %61, 1, !insn.addr !7136
  store i32 %62, i32* %60, align 4, !insn.addr !7137
  %63 = load i32, i32* @global_var_235c5c, align 4, !insn.addr !7138
  %64 = add i32 %63, 1, !insn.addr !7139
  store i32 %64, i32* @global_var_235c5c, align 4, !insn.addr !7140
  %.pre = load i32, i32* %stack_var_-532, align 4
  store i32 %.pre, i32* %.reg2mem5, !insn.addr !7140
  br label %dec_label_pc_1bfa2, !insn.addr !7140

dec_label_pc_1bfa2:                               ; preds = %dec_label_pc_1bec2, %dec_label_pc_1beb6
  %.reload6 = load i32, i32* %.reg2mem5, !insn.addr !7141
  %65 = udiv i32 %.reload6, 2, !insn.addr !7142
  store i32 %65, i32* %stack_var_-532, align 4, !insn.addr !7143
  %66 = add i32 %stack_var_-12.03.reload, 1, !insn.addr !7144
  %67 = icmp ult i32 %.reload6, 2
  store i32 %66, i32* %stack_var_-12.03.reg2mem, !insn.addr !7115
  store i32 %65, i32* %.reg2mem, !insn.addr !7115
  br i1 %67, label %dec_label_pc_1bfc0, label %dec_label_pc_1beb6, !insn.addr !7115

dec_label_pc_1bfc0:                               ; preds = %dec_label_pc_1bfa2, %dec_label_pc_1be76, %dec_label_pc_1be36, %dec_label_pc_1be06
  %68 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7145
  %69 = icmp eq i32 %68, 0, !insn.addr !7146
  br i1 %69, label %dec_label_pc_1bfe4, label %dec_label_pc_1bfce, !insn.addr !7147

dec_label_pc_1bfce:                               ; preds = %dec_label_pc_1bfc0
  %70 = load i32, i32* @global_var_35550, align 4, !insn.addr !7148
  %71 = call i32 @fpga_read(i32 %70, i32* nonnull %stack_var_-532), !insn.addr !7149
  br label %dec_label_pc_1bff8, !insn.addr !7150

dec_label_pc_1bfe4:                               ; preds = %dec_label_pc_1bfc0
  %72 = load i32, i32* @global_var_357e4, align 4, !insn.addr !7151
  %73 = call i32 @fpga_read(i32 %72, i32* nonnull %stack_var_-532), !insn.addr !7152
  br label %dec_label_pc_1bff8, !insn.addr !7152

dec_label_pc_1bff8:                               ; preds = %dec_label_pc_1bfe4, %dec_label_pc_1bfce
  %74 = load i32, i32* %stack_var_-532, align 4, !insn.addr !7153
  %75 = or i32 %74, 536870912, !insn.addr !7154
  store i32 %75, i32* %stack_var_-532, align 4, !insn.addr !7155
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2bae4, i32 0, i32 0), i32 104), !insn.addr !7156
  %77 = load i32, i32* %stack_var_-532, align 4, !insn.addr !7157
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2ba08, i32 0, i32 0), i32 %77), !insn.addr !7158
  %79 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7159
  %80 = icmp eq i32 %79, 0, !insn.addr !7160
  br i1 %80, label %dec_label_pc_1c052, label %dec_label_pc_1c03a, !insn.addr !7161

dec_label_pc_1c03a:                               ; preds = %dec_label_pc_1bff8
  %81 = load i32, i32* @global_var_35550, align 4, !insn.addr !7162
  %82 = load i32, i32* %stack_var_-532, align 4, !insn.addr !7163
  %83 = call i32 @fpga_write(i32 %81, i32 %82), !insn.addr !7164
  br label %dec_label_pc_1c068, !insn.addr !7165

dec_label_pc_1c052:                               ; preds = %dec_label_pc_1bff8
  %84 = load i32, i32* @global_var_357e4, align 4, !insn.addr !7166
  %85 = load i32, i32* %stack_var_-532, align 4, !insn.addr !7167
  %86 = call i32 @fpga_write(i32 %84, i32 %85), !insn.addr !7168
  br label %dec_label_pc_1c068, !insn.addr !7168

dec_label_pc_1c068:                               ; preds = %dec_label_pc_1c052, %dec_label_pc_1c03a
  %87 = call i32 @platform_dump_capability(i32* nonnull @global_var_235c5c), !insn.addr !7169
  store i32 1, i32* @global_var_235c54, align 4, !insn.addr !7170
  %88 = call i32 @fan_init(), !insn.addr !7171
  %89 = call i32 @ui_init(), !insn.addr !7172
  %90 = call i32 @uart_init(), !insn.addr !7173
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7174
  br label %dec_label_pc_1c08e, !insn.addr !7174

dec_label_pc_1c08e:                               ; preds = %dec_label_pc_1bc94, %dec_label_pc_1c068, %dec_label_pc_1bdb8, %dec_label_pc_1bcea, %dec_label_pc_1bcb8
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7175

; uselistorder directives
  uselistorder i32 %.reload6, { 1, 0 }
  uselistorder i32 %stack_var_-12.03.reload, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-528, { 1, 0, 2 }
  uselistorder i32* %stack_var_-532, { 5, 6, 7, 8, 9, 2, 3, 10, 0, 1, 11, 12, 13, 14, 15, 4, 16 }
  uselistorder i32* %stack_var_-12.03.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem, { 2, 0, 1 }
  uselistorder i32* %.reg2mem5, { 0, 2, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 104, { 0, 3, 4, 1, 2 }
  uselistorder i32 18, { 0, 1, 5, 6, 7, 8, 9, 2, 3, 4 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 76, { 3, 4, 0, 1, 2 }
  uselistorder i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2bae4, i32 0, i32 0), { 3, 0, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1c08e, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1beb6, { 1, 0 }
}

define i32 @platform_uninit() local_unnamed_addr {
dec_label_pc_1c098:
  %r0.0.reg2mem = alloca i32, !insn.addr !7176
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !7177
  %1 = icmp eq i32 %0, 0, !insn.addr !7178
  br i1 %1, label %dec_label_pc_1c0ca, label %dec_label_pc_1c0aa, !insn.addr !7179

dec_label_pc_1c0aa:                               ; preds = %dec_label_pc_1c098
  %2 = call i32 @uart_uninit(), !insn.addr !7180
  %3 = call i32 @fpga_uninit(), !insn.addr !7181
  %4 = call i32 @fan_uninit(i32 %3), !insn.addr !7182
  %5 = call i32 @ui_uninit(), !insn.addr !7183
  %6 = call i32 @gpio_uninit(), !insn.addr !7184
  store i32 0, i32* @global_var_235c54, align 4, !insn.addr !7185
  store i32 %6, i32* %r0.0.reg2mem, !insn.addr !7185
  br label %dec_label_pc_1c0ca, !insn.addr !7185

dec_label_pc_1c0ca:                               ; preds = %dec_label_pc_1c0aa, %dec_label_pc_1c098
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !7186

; uselistorder directives
  uselistorder i32 ()* @fpga_uninit, { 1, 0 }
}

define i32 @get_system_capability(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c0cc:
  %r0.0.in.reg2mem = alloca i32, !insn.addr !7187
  %0 = icmp eq i32* %arg1, null, !insn.addr !7188
  store i32 0, i32* %r0.0.in.reg2mem, !insn.addr !7189
  br i1 %0, label %dec_label_pc_1c0ec, label %dec_label_pc_1c0da, !insn.addr !7189

dec_label_pc_1c0da:                               ; preds = %dec_label_pc_1c0cc
  %1 = call i32* @memcpy(i32* nonnull %arg1, i32* nonnull @global_var_235c5c, i32 292), !insn.addr !7190
  %phitmp = ptrtoint i32* %1 to i32
  store i32 %phitmp, i32* %r0.0.in.reg2mem, !insn.addr !7190
  br label %dec_label_pc_1c0ec, !insn.addr !7190

dec_label_pc_1c0ec:                               ; preds = %dec_label_pc_1c0da, %dec_label_pc_1c0cc
  %r0.0.in.reload = load i32, i32* %r0.0.in.reg2mem
  ret i32 %r0.0.in.reload, !insn.addr !7191

; uselistorder directives
  uselistorder i32* @global_var_235c5c, { 0, 2, 1, 4, 5, 6, 8, 7, 3 }
}

define i32 @get_eth_mac(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c0f4:
  %r3.0.reg2mem = alloca i32, !insn.addr !7192
  %storemerge2.reg2mem = alloca i32, !insn.addr !7192
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %0 = call i32 @socket(i32 2, i32 1, i32 0), !insn.addr !7193
  %1 = icmp slt i32 %0, 0, !insn.addr !7194
  br i1 %1, label %dec_label_pc_1c114, label %dec_label_pc_1c13c, !insn.addr !7195

dec_label_pc_1c114:                               ; preds = %dec_label_pc_1c0f4
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2bad8, i32 0, i32 0), i32 143), !insn.addr !7196
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2ba24, i32 0, i32 0)), !insn.addr !7197
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !7198
  br label %dec_label_pc_1c1b8, !insn.addr !7198

dec_label_pc_1c13c:                               ; preds = %dec_label_pc_1c0f4
  %4 = bitcast i32* %stack_var_-48 to i8*, !insn.addr !7199
  %5 = call i8* @strcpy(i8* nonnull %4, i8* %arg1), !insn.addr !7199
  %6 = call i32 (i32, i32, ...) @ioctl(i32 %0, i32 ptrtoint ([13 x i8]* @global_var_8927 to i32)), !insn.addr !7200
  %7 = icmp slt i32 %6, 0, !insn.addr !7201
  br i1 %7, label %dec_label_pc_1c15e, label %dec_label_pc_1c1aa.preheader, !insn.addr !7202

dec_label_pc_1c1aa.preheader:                     ; preds = %dec_label_pc_1c13c
  %8 = ptrtoint i32* %stack_var_-32 to i32, !insn.addr !7203
  %9 = or i32 %8, 2, !insn.addr !7204
  store i32 0, i32* %storemerge2.reg2mem
  br label %dec_label_pc_1c192

dec_label_pc_1c15e:                               ; preds = %dec_label_pc_1c13c
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2bad8, i32 0, i32 0), i32 149), !insn.addr !7205
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2ba30, i32 0, i32 0)), !insn.addr !7206
  %12 = call i32 @close(i32 %0), !insn.addr !7207
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !7208
  br label %dec_label_pc_1c1b8, !insn.addr !7208

dec_label_pc_1c192:                               ; preds = %dec_label_pc_1c1aa.preheader, %dec_label_pc_1c192
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %13 = add i32 %storemerge2.reload, %arg2, !insn.addr !7209
  %14 = add i32 %storemerge2.reload, %9, !insn.addr !7210
  %15 = inttoptr i32 %14 to i8*, !insn.addr !7210
  %16 = load i8, i8* %15, align 1, !insn.addr !7210
  %17 = inttoptr i32 %13 to i8*, !insn.addr !7211
  store i8 %16, i8* %17, align 1, !insn.addr !7211
  %18 = add nuw nsw i32 %storemerge2.reload, 1, !insn.addr !7212
  %19 = icmp ult i32 %18, 6, !insn.addr !7213
  store i32 %18, i32* %storemerge2.reg2mem, !insn.addr !7213
  br i1 %19, label %dec_label_pc_1c192, label %dec_label_pc_1c1b0, !insn.addr !7213

dec_label_pc_1c1b0:                               ; preds = %dec_label_pc_1c192
  %20 = call i32 @close(i32 %0), !insn.addr !7214
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7215
  br label %dec_label_pc_1c1b8, !insn.addr !7215

dec_label_pc_1c1b8:                               ; preds = %dec_label_pc_1c1b0, %dec_label_pc_1c15e, %dec_label_pc_1c114
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7216

; uselistorder directives
  uselistorder i32 %storemerge2.reload, { 0, 2, 1 }
  uselistorder i32* %storemerge2.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c192, { 1, 0 }
}

define i32 @get_uuid(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c1c4:
  %storemerge.reg2mem = alloca i32, !insn.addr !7217
  %0 = icmp eq i32 %arg1, 0, !insn.addr !7218
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !7219
  br i1 %0, label %dec_label_pc_1c1f6, label %dec_label_pc_1c1d2, !insn.addr !7219

dec_label_pc_1c1d2:                               ; preds = %dec_label_pc_1c1c4
  %1 = inttoptr i32 %arg1 to i32*, !insn.addr !7220
  %2 = call i32* @memset(i32* %1, i32 0, i32 16), !insn.addr !7220
  %3 = call i32 @get_eth_mac(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2ba3c, i32 0, i32 0), i32 %arg1), !insn.addr !7221
  store i32 %3, i32* %storemerge.reg2mem, !insn.addr !7222
  br label %dec_label_pc_1c1f6, !insn.addr !7222

dec_label_pc_1c1f6:                               ; preds = %dec_label_pc_1c1c4, %dec_label_pc_1c1d2
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7223

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c1f6, { 1, 0 }
}

define i32 @get_mac(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c200:
  %storemerge.reg2mem = alloca i32, !insn.addr !7224
  %0 = icmp eq i32 %arg1, 0, !insn.addr !7225
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !7226
  br i1 %0, label %dec_label_pc_1c226, label %dec_label_pc_1c20e, !insn.addr !7226

dec_label_pc_1c20e:                               ; preds = %dec_label_pc_1c200
  %1 = call i32 @get_eth_mac(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2ba3c, i32 0, i32 0), i32 %arg1), !insn.addr !7227
  store i32 %1, i32* %storemerge.reg2mem, !insn.addr !7228
  br label %dec_label_pc_1c226, !insn.addr !7228

dec_label_pc_1c226:                               ; preds = %dec_label_pc_1c200, %dec_label_pc_1c20e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7229

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i8*, i32)* @get_eth_mac, { 1, 0 }
  uselistorder label %dec_label_pc_1c226, { 1, 0 }
}

define i32 @chain_reset(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c230:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = load i32, i32* %0
  %4 = call i32 @chain_reset_low(i32 %arg1), !insn.addr !7230
  %5 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !7231
  %6 = call i32 @chain_reset_high(i32 %arg1), !insn.addr !7232
  %7 = call i32 @__asm_nop(i32 %6, i32 %3, i32 %2, i32 %1), !insn.addr !7233
  ret i32 %7, !insn.addr !7234

; uselistorder directives
  uselistorder i32* %0, { 2, 1, 0 }
  uselistorder i32 (i32)* @chain_reset_high, { 2, 1, 0 }
  uselistorder i32 (i32)* @chain_reset_low, { 2, 1, 0 }
}

define i32 @chain_reset_low(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c25c:
  %storemerge.reg2mem = alloca i32, !insn.addr !7235
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !7236
  %0 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7237
  %1 = icmp eq i32 %0, 0, !insn.addr !7238
  br i1 %1, label %dec_label_pc_1c28e, label %dec_label_pc_1c276, !insn.addr !7239

dec_label_pc_1c276:                               ; preds = %dec_label_pc_1c25c
  %2 = load i32, i32* @global_var_35580, align 4, !insn.addr !7240
  %3 = call i32 @fpga_read(i32 %2, i32* nonnull %stack_var_-12), !insn.addr !7241
  br label %dec_label_pc_1c2a4, !insn.addr !7242

dec_label_pc_1c28e:                               ; preds = %dec_label_pc_1c25c
  %4 = load i32, i32* @global_var_35814, align 4, !insn.addr !7243
  %5 = call i32 @fpga_read(i32 %4, i32* nonnull %stack_var_-12), !insn.addr !7244
  br label %dec_label_pc_1c2a4, !insn.addr !7244

dec_label_pc_1c2a4:                               ; preds = %dec_label_pc_1c28e, %dec_label_pc_1c276
  %6 = shl i32 1, %arg1, !insn.addr !7245
  %7 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7246
  %8 = or i32 %7, %6, !insn.addr !7247
  store i32 %8, i32* %stack_var_-12, align 4, !insn.addr !7248
  %9 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7249
  %10 = icmp eq i32 %9, 0, !insn.addr !7250
  br i1 %10, label %dec_label_pc_1c2d8, label %dec_label_pc_1c2c2, !insn.addr !7251

dec_label_pc_1c2c2:                               ; preds = %dec_label_pc_1c2a4
  %11 = load i32, i32* @global_var_35580, align 4, !insn.addr !7252
  %12 = call i32 @fpga_write(i32 %11, i32 %8), !insn.addr !7253
  store i32 %12, i32* %storemerge.reg2mem, !insn.addr !7254
  br label %dec_label_pc_1c2ec, !insn.addr !7254

dec_label_pc_1c2d8:                               ; preds = %dec_label_pc_1c2a4
  %13 = load i32, i32* @global_var_35814, align 4, !insn.addr !7255
  %14 = call i32 @fpga_write(i32 %13, i32 %8), !insn.addr !7256
  store i32 %14, i32* %storemerge.reg2mem, !insn.addr !7256
  br label %dec_label_pc_1c2ec, !insn.addr !7256

dec_label_pc_1c2ec:                               ; preds = %dec_label_pc_1c2d8, %dec_label_pc_1c2c2
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7257

; uselistorder directives
  uselistorder i32 %8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 2, 3, 0, 1, 4 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
}

define i32 @chain_reset_high(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c2f4:
  %storemerge.reg2mem = alloca i32, !insn.addr !7258
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !7259
  %0 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7260
  %1 = icmp eq i32 %0, 0, !insn.addr !7261
  br i1 %1, label %dec_label_pc_1c326, label %dec_label_pc_1c30e, !insn.addr !7262

dec_label_pc_1c30e:                               ; preds = %dec_label_pc_1c2f4
  %2 = load i32, i32* @global_var_35580, align 4, !insn.addr !7263
  %3 = call i32 @fpga_read(i32 %2, i32* nonnull %stack_var_-12), !insn.addr !7264
  br label %dec_label_pc_1c33c, !insn.addr !7265

dec_label_pc_1c326:                               ; preds = %dec_label_pc_1c2f4
  %4 = load i32, i32* @global_var_35814, align 4, !insn.addr !7266
  %5 = call i32 @fpga_read(i32 %4, i32* nonnull %stack_var_-12), !insn.addr !7267
  br label %dec_label_pc_1c33c, !insn.addr !7267

dec_label_pc_1c33c:                               ; preds = %dec_label_pc_1c326, %dec_label_pc_1c30e
  %6 = shl i32 -1, %arg1
  %7 = add i32 %6, -1, !insn.addr !7268
  %8 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7269
  %9 = and i32 %8, %7, !insn.addr !7270
  store i32 %9, i32* %stack_var_-12, align 4, !insn.addr !7271
  %10 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7272
  %11 = icmp eq i32 %10, 0, !insn.addr !7273
  br i1 %11, label %dec_label_pc_1c372, label %dec_label_pc_1c35c, !insn.addr !7274

dec_label_pc_1c35c:                               ; preds = %dec_label_pc_1c33c
  %12 = load i32, i32* @global_var_35580, align 4, !insn.addr !7275
  %13 = call i32 @fpga_write(i32 %12, i32 %9), !insn.addr !7276
  store i32 %13, i32* %storemerge.reg2mem, !insn.addr !7277
  br label %dec_label_pc_1c386, !insn.addr !7277

dec_label_pc_1c372:                               ; preds = %dec_label_pc_1c33c
  %14 = load i32, i32* @global_var_35814, align 4, !insn.addr !7278
  %15 = call i32 @fpga_write(i32 %14, i32 %9), !insn.addr !7279
  store i32 %15, i32* %storemerge.reg2mem, !insn.addr !7279
  br label %dec_label_pc_1c386, !insn.addr !7279

dec_label_pc_1c386:                               ; preds = %dec_label_pc_1c372, %dec_label_pc_1c35c
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7280

; uselistorder directives
  uselistorder i32 %9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 2, 3, 0, 1, 4 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
}

define i32 @board_reset(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c390:
  %0 = call i32 @board_reset_low(i32 %arg1), !insn.addr !7281
  %1 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !7282
  %2 = call i32 @board_reset_high(i32 %arg1), !insn.addr !7283
  ret i32 %2, !insn.addr !7284
}

define i32 @board_reset_low(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c3b8:
  ret i32 %arg1, !insn.addr !7285
}

define i32 @board_reset_high(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c3cc:
  ret i32 %arg1, !insn.addr !7286
}

define i32 @get_hardware_type() local_unnamed_addr {
dec_label_pc_1c3e0:
  %r3.0.reg2mem = alloca i32, !insn.addr !7287
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !7288
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !7289
  %1 = icmp eq i32 %0, 0, !insn.addr !7290
  br i1 %1, label %dec_label_pc_1c3f8, label %dec_label_pc_1c41e, !insn.addr !7291

dec_label_pc_1c3f8:                               ; preds = %dec_label_pc_1c3e0
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2bac4, i32 0, i32 0), i32 222), !insn.addr !7292
  %3 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2ba44, i32 0, i32 0)), !insn.addr !7293
  store i32 2, i32* %r3.0.reg2mem, !insn.addr !7294
  br label %dec_label_pc_1c462, !insn.addr !7294

dec_label_pc_1c41e:                               ; preds = %dec_label_pc_1c3e0
  %4 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7295
  %5 = icmp eq i32 %4, 0, !insn.addr !7296
  br i1 %5, label %dec_label_pc_1c442, label %dec_label_pc_1c42c, !insn.addr !7297

dec_label_pc_1c42c:                               ; preds = %dec_label_pc_1c41e
  %6 = load i32, i32* @global_var_35550, align 4, !insn.addr !7298
  %7 = call i32 @fpga_read(i32 %6, i32* nonnull %stack_var_-12), !insn.addr !7299
  br label %dec_label_pc_1c456, !insn.addr !7300

dec_label_pc_1c442:                               ; preds = %dec_label_pc_1c41e
  %8 = load i32, i32* @global_var_357e4, align 4, !insn.addr !7301
  %9 = call i32 @fpga_read(i32 %8, i32* nonnull %stack_var_-12), !insn.addr !7302
  br label %dec_label_pc_1c456, !insn.addr !7302

dec_label_pc_1c456:                               ; preds = %dec_label_pc_1c442, %dec_label_pc_1c42c
  %10 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7303
  %11 = icmp slt i32 %10, 0, !insn.addr !7304
  %. = zext i1 %11 to i32
  store i32 %., i32* %r3.0.reg2mem, !insn.addr !7305
  br label %dec_label_pc_1c462, !insn.addr !7305

dec_label_pc_1c462:                               ; preds = %dec_label_pc_1c456, %dec_label_pc_1c3f8
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7306

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 2, 0, 1, 3 }
}

define i32 @set_hardware_type(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c46c:
  %storemerge.reg2mem = alloca i32, !insn.addr !7307
  %storemerge1.reg2mem = alloca i32, !insn.addr !7307
  %r2.0.reg2mem = alloca i32, !insn.addr !7307
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !7308
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !7309
  %1 = icmp eq i32 %0, 0, !insn.addr !7310
  br i1 %1, label %dec_label_pc_1c486, label %dec_label_pc_1c4ae, !insn.addr !7311

dec_label_pc_1c486:                               ; preds = %dec_label_pc_1c46c
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2bab0, i32 0, i32 0), i32 237), !insn.addr !7312
  %3 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2ba44, i32 0, i32 0)), !insn.addr !7313
  store i32 -2, i32* %storemerge.reg2mem, !insn.addr !7314
  br label %dec_label_pc_1c544, !insn.addr !7314

dec_label_pc_1c4ae:                               ; preds = %dec_label_pc_1c46c
  %4 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7315
  %5 = icmp eq i32 %4, 0, !insn.addr !7316
  br i1 %5, label %dec_label_pc_1c4d4, label %dec_label_pc_1c4bc, !insn.addr !7317

dec_label_pc_1c4bc:                               ; preds = %dec_label_pc_1c4ae
  %6 = load i32, i32* @global_var_35550, align 4, !insn.addr !7318
  %7 = call i32 @fpga_read(i32 %6, i32* nonnull %stack_var_-12), !insn.addr !7319
  store i32 %6, i32* %r2.0.reg2mem, !insn.addr !7320
  store i32 %7, i32* %storemerge1.reg2mem, !insn.addr !7320
  br label %dec_label_pc_1c4ea, !insn.addr !7320

dec_label_pc_1c4d4:                               ; preds = %dec_label_pc_1c4ae
  %8 = load i32, i32* @global_var_357e4, align 4, !insn.addr !7321
  %9 = call i32 @fpga_read(i32 %8, i32* nonnull %stack_var_-12), !insn.addr !7322
  store i32 %8, i32* %r2.0.reg2mem, !insn.addr !7322
  store i32 %9, i32* %storemerge1.reg2mem, !insn.addr !7322
  br label %dec_label_pc_1c4ea, !insn.addr !7322

dec_label_pc_1c4ea:                               ; preds = %dec_label_pc_1c4d4, %dec_label_pc_1c4bc
  switch i32 %arg1, label %dec_label_pc_1c508 [
    i32 0, label %dec_label_pc_1c4fe
    i32 1, label %dec_label_pc_1c4f4
  ]

dec_label_pc_1c4f4:                               ; preds = %dec_label_pc_1c4ea
  %10 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7323
  %11 = or i32 %10, -2147483648, !insn.addr !7324
  store i32 %11, i32* %stack_var_-12, align 4, !insn.addr !7325
  br label %dec_label_pc_1c50a, !insn.addr !7326

dec_label_pc_1c4fe:                               ; preds = %dec_label_pc_1c4ea
  %12 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7327
  %13 = bitcast i32 %12 to float
  %14 = call float @llvm.fabs.f32(float %13)
  %15 = bitcast float %14 to i32, !insn.addr !7328
  store i32 %15, i32* %stack_var_-12, align 4, !insn.addr !7329
  br label %dec_label_pc_1c50a, !insn.addr !7330

dec_label_pc_1c508:                               ; preds = %dec_label_pc_1c4ea
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %r2.0.reload = load i32, i32* %r2.0.reg2mem
  %r1.0 = ptrtoint i32* %stack_var_-12 to i32
  %16 = call i32 @__asm_nop(i32 %storemerge1.reload, i32 %r1.0, i32 %r2.0.reload, i32 %arg1), !insn.addr !7331
  br label %dec_label_pc_1c50a, !insn.addr !7331

dec_label_pc_1c50a:                               ; preds = %dec_label_pc_1c508, %dec_label_pc_1c4fe, %dec_label_pc_1c4f4
  %17 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7332
  %18 = icmp eq i32 %17, 0, !insn.addr !7333
  br i1 %18, label %dec_label_pc_1c52e, label %dec_label_pc_1c518, !insn.addr !7334

dec_label_pc_1c518:                               ; preds = %dec_label_pc_1c50a
  %19 = load i32, i32* @global_var_35550, align 4, !insn.addr !7335
  %20 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7336
  %21 = call i32 @fpga_write(i32 %19, i32 %20), !insn.addr !7337
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !7338
  br label %dec_label_pc_1c544, !insn.addr !7338

dec_label_pc_1c52e:                               ; preds = %dec_label_pc_1c50a
  %22 = load i32, i32* @global_var_357e4, align 4, !insn.addr !7339
  %23 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7340
  %24 = call i32 @fpga_write(i32 %22, i32 %23), !insn.addr !7341
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !7341
  br label %dec_label_pc_1c544, !insn.addr !7341

dec_label_pc_1c544:                               ; preds = %dec_label_pc_1c518, %dec_label_pc_1c52e, %dec_label_pc_1c486
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7342

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 3, 4, 0, 5, 6, 7, 8, 1, 2, 9 }
  uselistorder i32* %r2.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1c544, { 1, 0, 2 }
}

define i32 @enable_bypass_mode() local_unnamed_addr {
dec_label_pc_1c550:
  %storemerge.reg2mem = alloca i32, !insn.addr !7343
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !7344
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !7345
  %1 = icmp eq i32 %0, 0, !insn.addr !7346
  br i1 %1, label %dec_label_pc_1c568, label %dec_label_pc_1c592, !insn.addr !7347

dec_label_pc_1c568:                               ; preds = %dec_label_pc_1c550
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2ba9c, i32 0, i32 0), i32 260), !insn.addr !7348
  %3 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2ba44, i32 0, i32 0)), !insn.addr !7349
  store i32 -2, i32* %storemerge.reg2mem, !insn.addr !7350
  br label %dec_label_pc_1c60c, !insn.addr !7350

dec_label_pc_1c592:                               ; preds = %dec_label_pc_1c550
  %4 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7351
  %5 = icmp eq i32 %4, 0, !insn.addr !7352
  br i1 %5, label %dec_label_pc_1c5b6, label %dec_label_pc_1c5a0, !insn.addr !7353

dec_label_pc_1c5a0:                               ; preds = %dec_label_pc_1c592
  %6 = load i32, i32* @global_var_35550, align 4, !insn.addr !7354
  %7 = call i32 @fpga_read(i32 %6, i32* nonnull %stack_var_-12), !insn.addr !7355
  br label %dec_label_pc_1c5ca, !insn.addr !7356

dec_label_pc_1c5b6:                               ; preds = %dec_label_pc_1c592
  %8 = load i32, i32* @global_var_357e4, align 4, !insn.addr !7357
  %9 = call i32 @fpga_read(i32 %8, i32* nonnull %stack_var_-12), !insn.addr !7358
  br label %dec_label_pc_1c5ca, !insn.addr !7358

dec_label_pc_1c5ca:                               ; preds = %dec_label_pc_1c5b6, %dec_label_pc_1c5a0
  %10 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7359
  %11 = or i32 %10, 536870912, !insn.addr !7360
  store i32 %11, i32* %stack_var_-12, align 4, !insn.addr !7361
  %12 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7362
  %13 = icmp eq i32 %12, 0, !insn.addr !7363
  br i1 %13, label %dec_label_pc_1c5f6, label %dec_label_pc_1c5e0, !insn.addr !7364

dec_label_pc_1c5e0:                               ; preds = %dec_label_pc_1c5ca
  %14 = load i32, i32* @global_var_35550, align 4, !insn.addr !7365
  %15 = call i32 @fpga_write(i32 %14, i32 %11), !insn.addr !7366
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !7367
  br label %dec_label_pc_1c60c, !insn.addr !7367

dec_label_pc_1c5f6:                               ; preds = %dec_label_pc_1c5ca
  %16 = load i32, i32* @global_var_357e4, align 4, !insn.addr !7368
  %17 = call i32 @fpga_write(i32 %16, i32 %11), !insn.addr !7369
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !7369
  br label %dec_label_pc_1c60c, !insn.addr !7369

dec_label_pc_1c60c:                               ; preds = %dec_label_pc_1c5e0, %dec_label_pc_1c5f6, %dec_label_pc_1c568
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7370

; uselistorder directives
  uselistorder i32 %11, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 2, 3, 0, 1, 4 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1c60c, { 1, 0, 2 }
}

define i32 @disable_bypass_mode() local_unnamed_addr {
dec_label_pc_1c618:
  %storemerge.reg2mem = alloca i32, !insn.addr !7371
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !7372
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !7373
  %1 = icmp eq i32 %0, 0, !insn.addr !7374
  br i1 %1, label %dec_label_pc_1c630, label %dec_label_pc_1c65a, !insn.addr !7375

dec_label_pc_1c630:                               ; preds = %dec_label_pc_1c618
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2ba88, i32 0, i32 0), i32 274), !insn.addr !7376
  %3 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2ba44, i32 0, i32 0)), !insn.addr !7377
  store i32 -2, i32* %storemerge.reg2mem, !insn.addr !7378
  br label %dec_label_pc_1c6d4, !insn.addr !7378

dec_label_pc_1c65a:                               ; preds = %dec_label_pc_1c618
  %4 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7379
  %5 = icmp eq i32 %4, 0, !insn.addr !7380
  br i1 %5, label %dec_label_pc_1c67e, label %dec_label_pc_1c668, !insn.addr !7381

dec_label_pc_1c668:                               ; preds = %dec_label_pc_1c65a
  %6 = load i32, i32* @global_var_35550, align 4, !insn.addr !7382
  %7 = call i32 @fpga_read(i32 %6, i32* nonnull %stack_var_-12), !insn.addr !7383
  br label %dec_label_pc_1c692, !insn.addr !7384

dec_label_pc_1c67e:                               ; preds = %dec_label_pc_1c65a
  %8 = load i32, i32* @global_var_357e4, align 4, !insn.addr !7385
  %9 = call i32 @fpga_read(i32 %8, i32* nonnull %stack_var_-12), !insn.addr !7386
  br label %dec_label_pc_1c692, !insn.addr !7386

dec_label_pc_1c692:                               ; preds = %dec_label_pc_1c67e, %dec_label_pc_1c668
  %10 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7387
  %11 = and i32 %10, -536870913, !insn.addr !7388
  store i32 %11, i32* %stack_var_-12, align 4, !insn.addr !7389
  %12 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7390
  %13 = icmp eq i32 %12, 0, !insn.addr !7391
  br i1 %13, label %dec_label_pc_1c6be, label %dec_label_pc_1c6a8, !insn.addr !7392

dec_label_pc_1c6a8:                               ; preds = %dec_label_pc_1c692
  %14 = load i32, i32* @global_var_35550, align 4, !insn.addr !7393
  %15 = call i32 @fpga_write(i32 %14, i32 %11), !insn.addr !7394
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !7395
  br label %dec_label_pc_1c6d4, !insn.addr !7395

dec_label_pc_1c6be:                               ; preds = %dec_label_pc_1c692
  %16 = load i32, i32* @global_var_357e4, align 4, !insn.addr !7396
  %17 = call i32 @fpga_write(i32 %16, i32 %11), !insn.addr !7397
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !7397
  br label %dec_label_pc_1c6d4, !insn.addr !7397

dec_label_pc_1c6d4:                               ; preds = %dec_label_pc_1c6a8, %dec_label_pc_1c6be, %dec_label_pc_1c630
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7398

; uselistorder directives
  uselistorder i32 %11, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 2, 3, 0, 1, 4 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1c6d4, { 1, 0, 2 }
}

define i32 @is_bypass_mode_enable() local_unnamed_addr {
dec_label_pc_1c6e0:
  %storemerge.reg2mem = alloca i32, !insn.addr !7399
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !7400
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !7401
  %1 = icmp eq i32 %0, 0, !insn.addr !7402
  br i1 %1, label %dec_label_pc_1c6f8, label %dec_label_pc_1c720, !insn.addr !7403

dec_label_pc_1c6f8:                               ; preds = %dec_label_pc_1c6e0
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2ba70, i32 0, i32 0), i32 288), !insn.addr !7404
  %3 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2ba44, i32 0, i32 0)), !insn.addr !7405
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !7406
  br label %dec_label_pc_1c76c, !insn.addr !7406

dec_label_pc_1c720:                               ; preds = %dec_label_pc_1c6e0
  %4 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7407
  %5 = icmp eq i32 %4, 0, !insn.addr !7408
  br i1 %5, label %dec_label_pc_1c744, label %dec_label_pc_1c72e, !insn.addr !7409

dec_label_pc_1c72e:                               ; preds = %dec_label_pc_1c720
  %6 = load i32, i32* @global_var_35550, align 4, !insn.addr !7410
  %7 = call i32 @fpga_read(i32 %6, i32* nonnull %stack_var_-12), !insn.addr !7411
  br label %dec_label_pc_1c758, !insn.addr !7412

dec_label_pc_1c744:                               ; preds = %dec_label_pc_1c720
  %8 = load i32, i32* @global_var_357e4, align 4, !insn.addr !7413
  %9 = call i32 @fpga_read(i32 %8, i32* nonnull %stack_var_-12), !insn.addr !7414
  br label %dec_label_pc_1c758, !insn.addr !7414

dec_label_pc_1c758:                               ; preds = %dec_label_pc_1c744, %dec_label_pc_1c72e
  %10 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7415
  %11 = and i32 %10, 536870912, !insn.addr !7416
  store i32 %11, i32* %stack_var_-12, align 4, !insn.addr !7417
  %12 = icmp eq i32 %11, 0, !insn.addr !7418
  br i1 %12, label %13, label %15, !insn.addr !7419

; <label>:13:                                     ; preds = %dec_label_pc_1c758
  %14 = call i32 @__asm_ite(), !insn.addr !7419
  br label %15, !insn.addr !7419

; <label>:15:                                     ; preds = %dec_label_pc_1c758, %13
  %not. = icmp ne i1 %12, true
  %r3.1 = zext i1 %not. to i32
  store i32 %r3.1, i32* %storemerge.reg2mem, !insn.addr !7420
  br label %dec_label_pc_1c76c, !insn.addr !7420

dec_label_pc_1c76c:                               ; preds = %15, %dec_label_pc_1c6f8
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7421

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 2, 3, 0, 1, 4 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %15, { 1, 0 }
}

define i32 @get_hardware_version() local_unnamed_addr {
dec_label_pc_1c778:
  %storemerge.reg2mem = alloca i32, !insn.addr !7422
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %stack_var_-12, align 4, !insn.addr !7423
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !7424
  %1 = icmp eq i32 %0, 0, !insn.addr !7425
  br i1 %1, label %dec_label_pc_1c790, label %dec_label_pc_1c7b8, !insn.addr !7426

dec_label_pc_1c790:                               ; preds = %dec_label_pc_1c778
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2ba58, i32 0, i32 0), i32 301), !insn.addr !7427
  %3 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2ba44, i32 0, i32 0)), !insn.addr !7428
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !7429
  br label %dec_label_pc_1c7f4, !insn.addr !7429

dec_label_pc_1c7b8:                               ; preds = %dec_label_pc_1c778
  %4 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7430
  %5 = icmp eq i32 %4, 0, !insn.addr !7431
  br i1 %5, label %dec_label_pc_1c7dc, label %dec_label_pc_1c7c6, !insn.addr !7432

dec_label_pc_1c7c6:                               ; preds = %dec_label_pc_1c7b8
  %6 = load i32, i32* @global_var_35550, align 4, !insn.addr !7433
  %7 = call i32 @fpga_read(i32 %6, i32* nonnull %stack_var_-12), !insn.addr !7434
  br label %dec_label_pc_1c7f0, !insn.addr !7435

dec_label_pc_1c7dc:                               ; preds = %dec_label_pc_1c7b8
  %8 = load i32, i32* @global_var_357e4, align 4, !insn.addr !7436
  %9 = call i32 @fpga_read(i32 %8, i32* nonnull %stack_var_-12), !insn.addr !7437
  br label %dec_label_pc_1c7f0, !insn.addr !7437

dec_label_pc_1c7f0:                               ; preds = %dec_label_pc_1c7dc, %dec_label_pc_1c7c6
  %10 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7438
  %11 = urem i32 %10, 65536, !insn.addr !7439
  store i32 %11, i32* %storemerge.reg2mem, !insn.addr !7439
  br label %dec_label_pc_1c7f4, !insn.addr !7439

dec_label_pc_1c7f4:                               ; preds = %dec_label_pc_1c7f0, %dec_label_pc_1c790
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7440

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 2, 0, 1, 3 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2b840, i32 0, i32 0), { 0, 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21 }
}

define i32 @fan_init() local_unnamed_addr {
dec_label_pc_1c800:
  %storemerge.reg2mem = alloca i32, !insn.addr !7441
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !7442
  %1 = icmp eq i32 %0, 0, !insn.addr !7443
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !7444
  br i1 %1, label %dec_label_pc_1c812, label %dec_label_pc_1c83c, !insn.addr !7444

dec_label_pc_1c812:                               ; preds = %dec_label_pc_1c800
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bb10, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2bb70, i32 0, i32 0), i32 11), !insn.addr !7445
  %3 = call i32 @puts(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2bb18, i32 0, i32 0)), !insn.addr !7446
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !7447
  br label %dec_label_pc_1c83c, !insn.addr !7447

dec_label_pc_1c83c:                               ; preds = %dec_label_pc_1c800, %dec_label_pc_1c812
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7448

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1c83c, { 1, 0 }
}

define i32 @fan_uninit(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c840:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = load i32, i32* %0
  %4 = call i32 @__asm_nop(i32 %arg1, i32 %3, i32 %2, i32 %1), !insn.addr !7449
  ret i32 %4, !insn.addr !7450

; uselistorder directives
  uselistorder i32* %0, { 2, 1, 0 }
}

define i32 @fan_get_realtime_speed(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c84c:
  %storemerge.reg2mem = alloca i32, !insn.addr !7451
  %storemerge12.reg2mem = alloca i32, !insn.addr !7451
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* %stack_var_-16, align 4, !insn.addr !7452
  store i32 0, i32* %storemerge12.reg2mem
  br label %dec_label_pc_1c85e

dec_label_pc_1c85e:                               ; preds = %dec_label_pc_1c84c, %dec_label_pc_1c8dc
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %0 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7453
  %1 = icmp eq i32 %0, 0, !insn.addr !7454
  br i1 %1, label %dec_label_pc_1c884, label %dec_label_pc_1c86c, !insn.addr !7455

dec_label_pc_1c86c:                               ; preds = %dec_label_pc_1c85e
  %2 = load i32, i32* @global_var_35554, align 4, !insn.addr !7456
  %3 = call i32 @fpga_read(i32 %2, i32* nonnull %stack_var_-16), !insn.addr !7457
  br label %dec_label_pc_1c89a, !insn.addr !7458

dec_label_pc_1c884:                               ; preds = %dec_label_pc_1c85e
  %4 = load i32, i32* @global_var_357e8, align 4, !insn.addr !7459
  %5 = call i32 @fpga_read(i32 %4, i32* nonnull %stack_var_-16), !insn.addr !7460
  br label %dec_label_pc_1c89a, !insn.addr !7460

dec_label_pc_1c89a:                               ; preds = %dec_label_pc_1c884, %dec_label_pc_1c86c
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bb10, i32 0, i32 0), i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_bb58 to i32), i32 131072) to i8*), i32 32), !insn.addr !7461
  %7 = load i32, i32* %stack_var_-16, align 4, !insn.addr !7462
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2bb38, i32 0, i32 0), i32 %7), !insn.addr !7463
  %9 = load i32, i32* %stack_var_-16, align 4, !insn.addr !7464
  %10 = udiv i32 %9, 256, !insn.addr !7465
  %11 = urem i32 %10, 8, !insn.addr !7466
  %12 = icmp eq i32 %11, %arg1, !insn.addr !7467
  br i1 %12, label %dec_label_pc_1c8ce, label %dec_label_pc_1c8dc, !insn.addr !7468

dec_label_pc_1c8ce:                               ; preds = %dec_label_pc_1c89a
  %13 = urem i32 %9, 256, !insn.addr !7469
  %14 = mul nuw nsw i32 %13, 120, !insn.addr !7470
  store i32 %14, i32* %storemerge.reg2mem, !insn.addr !7471
  br label %dec_label_pc_1c8f4, !insn.addr !7471

dec_label_pc_1c8dc:                               ; preds = %dec_label_pc_1c89a
  %15 = call i32 @usleep(i32 10000), !insn.addr !7472
  %16 = add nuw nsw i32 %storemerge12.reload, 1, !insn.addr !7473
  %17 = icmp ult i32 %16, 6, !insn.addr !7474
  store i32 %16, i32* %storemerge12.reg2mem, !insn.addr !7474
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !7474
  br i1 %17, label %dec_label_pc_1c85e, label %dec_label_pc_1c8f4, !insn.addr !7474

dec_label_pc_1c8f4:                               ; preds = %dec_label_pc_1c8dc, %dec_label_pc_1c8ce
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7475

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 2, 3, 0, 1, 4 }
  uselistorder i32* %storemerge12.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c85e, { 1, 0 }
}

define i32 @fan_get_max_num() local_unnamed_addr {
dec_label_pc_1c900:
  %0 = call i32 @hal_fan_number(), !insn.addr !7476
  ret i32 %0, !insn.addr !7477
}

define i32 @fan_get_max_speed(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c910:
  %0 = call i32 @hal_fan_max_speed(i32 %arg1), !insn.addr !7478
  ret i32 %0, !insn.addr !7479
}

define i32 @reset() local_unnamed_addr {
dec_label_pc_1c92c:
  %stack_var_-12 = alloca i32, align 4
  store i32 -2147450880, i32* %stack_var_-12, align 4, !insn.addr !7480
  %0 = call i32 @fpga_write(i32 16, i32 -2147450880), !insn.addr !7481
  br label %dec_label_pc_1c942, !insn.addr !7481

dec_label_pc_1c942:                               ; preds = %dec_label_pc_1c942, %dec_label_pc_1c92c
  %1 = call i32 @usleep(i32 or (i32 ptrtoint (i32* @global_var_86a0 to i32), i32 65536)), !insn.addr !7482
  %2 = call i32 @fpga_read(i32 16, i32* nonnull %stack_var_-12), !insn.addr !7483
  %3 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7484
  %4 = icmp slt i32 %3, 0, !insn.addr !7485
  br i1 %4, label %dec_label_pc_1c942, label %dec_label_pc_1c95e, !insn.addr !7486

dec_label_pc_1c95e:                               ; preds = %dec_label_pc_1c942
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bb7c, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc5c, i32 0, i32 0), i32 291), !insn.addr !7487
  %6 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2bb84, i32 0, i32 0)), !insn.addr !7488
  ret i32 %6, !insn.addr !7489

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0, 2 }
}

define i32 @fpga_init() local_unnamed_addr {
dec_label_pc_1c98c:
  %r3.0.reg2mem = alloca i32, !insn.addr !7490
  %0 = load i32, i32* @global_var_235d80, align 4, !insn.addr !7491
  %1 = icmp eq i32 %0, 0, !insn.addr !7492
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7493
  br i1 %1, label %dec_label_pc_1c9a4, label %dec_label_pc_1cac2, !insn.addr !7493

dec_label_pc_1c9a4:                               ; preds = %dec_label_pc_1c98c
  %2 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2bb98, i32 0, i32 0), i32 2), !insn.addr !7494
  store i32 %2, i32* @global_var_235d84, align 4, !insn.addr !7495
  %3 = icmp slt i32 %2, 0, !insn.addr !7496
  br i1 %3, label %dec_label_pc_1c9cc, label %dec_label_pc_1ca02, !insn.addr !7497

dec_label_pc_1c9cc:                               ; preds = %dec_label_pc_1c9a4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bb7c, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2bc50, i32 0, i32 0), i32 303), !insn.addr !7498
  %5 = load i32, i32* @global_var_235d84, align 4, !insn.addr !7499
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_2bbac, i32 0, i32 0), i32 %5), !insn.addr !7500
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !7501
  br label %dec_label_pc_1cac2, !insn.addr !7501

dec_label_pc_1ca02:                               ; preds = %dec_label_pc_1c9a4
  %7 = call i32* @mmap(i32* null, i32 4608, i32 3, i32 1, i32 %2, i32 0), !insn.addr !7502
  %8 = ptrtoint i32* %7 to i32, !insn.addr !7502
  store i32 %8, i32* @global_var_235d88, align 4, !insn.addr !7503
  %9 = icmp eq i32* %7, null, !insn.addr !7504
  br i1 %9, label %dec_label_pc_1ca3a, label %dec_label_pc_1ca80, !insn.addr !7505

dec_label_pc_1ca3a:                               ; preds = %dec_label_pc_1ca02
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bb7c, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2bc50, i32 0, i32 0), i32 310), !insn.addr !7506
  %11 = load i32, i32* @global_var_235d88, align 4, !insn.addr !7507
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @global_var_2bbd4, i32 0, i32 0), i32 %11), !insn.addr !7508
  %13 = load i32, i32* @global_var_235d84, align 4, !insn.addr !7509
  %14 = call i32 @close(i32 %13), !insn.addr !7510
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !7511
  br label %dec_label_pc_1cac2, !insn.addr !7511

dec_label_pc_1ca80:                               ; preds = %dec_label_pc_1ca02
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bb7c, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2bc50, i32 0, i32 0), i32 314), !insn.addr !7512
  %16 = load i32, i32* @global_var_235d88, align 4, !insn.addr !7513
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @global_var_2bc08, i32 0, i32 0), i32 %16), !insn.addr !7514
  %18 = call i32 @reset(), !insn.addr !7515
  store i32 1, i32* @global_var_235d80, align 4, !insn.addr !7516
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7517
  br label %dec_label_pc_1cac2, !insn.addr !7517

dec_label_pc_1cac2:                               ; preds = %dec_label_pc_1c98c, %dec_label_pc_1ca80, %dec_label_pc_1ca3a, %dec_label_pc_1c9cc
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7518

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_1cac2, { 1, 2, 3, 0 }
}

define i32 @fpga_uninit() local_unnamed_addr {
dec_label_pc_1cac8:
  %0 = alloca i32
  %storemerge.reg2mem = alloca i32, !insn.addr !7519
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = load i32, i32* %0
  %4 = load i32, i32* @global_var_235d80, align 4, !insn.addr !7520
  %5 = icmp eq i32 %4, 0, !insn.addr !7521
  br i1 %5, label %dec_label_pc_1cb3a, label %dec_label_pc_1cadc, !insn.addr !7522

dec_label_pc_1cadc:                               ; preds = %dec_label_pc_1cac8
  %6 = load i32, i32* @global_var_235d88, align 4, !insn.addr !7523
  %7 = inttoptr i32 %6 to i32*, !insn.addr !7524
  %8 = call i32 @munmap(i32* %7, i32 4608), !insn.addr !7524
  %9 = icmp slt i32 %8, 0, !insn.addr !7525
  br i1 %9, label %dec_label_pc_1caf8, label %dec_label_pc_1cb1c, !insn.addr !7526

dec_label_pc_1caf8:                               ; preds = %dec_label_pc_1cadc
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bb7c, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2bc44, i32 0, i32 0), i32 330), !insn.addr !7527
  %11 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_bc34 to i32), i32 131072) to i8*)), !insn.addr !7528
  br label %dec_label_pc_1cb1c, !insn.addr !7528

dec_label_pc_1cb1c:                               ; preds = %dec_label_pc_1cadc, %dec_label_pc_1caf8
  store i32 0, i32* @global_var_235d80, align 4, !insn.addr !7529
  %12 = load i32, i32* @global_var_235d84, align 4, !insn.addr !7530
  %13 = call i32 @close(i32 %12), !insn.addr !7531
  store i32 %13, i32* %storemerge.reg2mem, !insn.addr !7532
  br label %dec_label_pc_1cb3c, !insn.addr !7532

dec_label_pc_1cb3a:                               ; preds = %dec_label_pc_1cac8
  %14 = call i32 @__asm_nop(i32 %3, i32 %2, i32 %1, i32 0), !insn.addr !7533
  store i32 %14, i32* %storemerge.reg2mem, !insn.addr !7533
  br label %dec_label_pc_1cb3c, !insn.addr !7533

dec_label_pc_1cb3c:                               ; preds = %dec_label_pc_1cb3a, %dec_label_pc_1cb1c
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7534

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32* %0, { 2, 1, 0 }
  uselistorder i32* @global_var_235d84, { 1, 2, 3, 0 }
  uselistorder i32* @global_var_235d80, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1cb1c, { 1, 0 }
}

define i32 @fpga_read(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1cb44:
  %0 = load i32, i32* @global_var_235d88, align 4, !insn.addr !7535
  %1 = mul i32 %arg1, 4, !insn.addr !7536
  %2 = add i32 %0, %1, !insn.addr !7537
  %3 = inttoptr i32 %2 to i32*, !insn.addr !7538
  %4 = load i32, i32* %3, align 4, !insn.addr !7538
  store i32 %4, i32* %arg2, align 4, !insn.addr !7539
  ret i32 0, !insn.addr !7540
}

define i32 @fpga_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cb74:
  %0 = load i32, i32* @global_var_235d88, align 4, !insn.addr !7541
  %1 = mul i32 %arg1, 4, !insn.addr !7542
  %2 = add i32 %0, %1, !insn.addr !7543
  %3 = inttoptr i32 %2 to i32*, !insn.addr !7544
  store i32 %arg2, i32* %3, align 4, !insn.addr !7544
  ret i32 0, !insn.addr !7545

; uselistorder directives
  uselistorder i32* @global_var_235d88, { 1, 2, 3, 4, 5, 0 }
}

define i32 @gpio_compare_e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cba0:
  %0 = sub i32 %arg1, %arg2, !insn.addr !7546
  ret i32 %0, !insn.addr !7547
}

define i32 @gpio_thread_function(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cbc0:
  %r1.3.reg2mem = alloca i32, !insn.addr !7548
  %r1.2.reg2mem = alloca i32, !insn.addr !7548
  %.reg2mem = alloca i32*, !insn.addr !7548
  %.lcssa.reg2mem = alloca i32, !insn.addr !7548
  %r1.42.reg2mem = alloca i32, !insn.addr !7548
  %r2.03.reg2mem = alloca i32, !insn.addr !7548
  %stack_var_-33 = alloca i8, align 1
  %0 = load i32, i32* @global_var_235d90, align 4, !insn.addr !7549
  %1 = icmp eq i32 %0, 0, !insn.addr !7550
  br i1 %1, label %dec_label_pc_1cd12, label %dec_label_pc_1cbce, !insn.addr !7551

dec_label_pc_1cbce:                               ; preds = %dec_label_pc_1cbc0, %dec_label_pc_1ccea
  %r1.42.reload = load i32, i32* %r1.42.reg2mem
  %2 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235db0), !insn.addr !7552
  %3 = icmp eq i32 %2, 0, !insn.addr !7553
  br i1 %3, label %dec_label_pc_1cbe2, label %dec_label_pc_1cce8, !insn.addr !7554

dec_label_pc_1cbe2:                               ; preds = %dec_label_pc_1cbce
  %4 = load i32, i32* @global_var_235dc8, align 4, !insn.addr !7555
  %5 = call i32 @new_iterator_c_map(i32 %4), !insn.addr !7556
  %6 = icmp eq i32 %5, 0, !insn.addr !7557
  store i32 %r1.42.reload, i32* %r1.2.reg2mem, !insn.addr !7558
  br i1 %6, label %dec_label_pc_1ccd4, label %dec_label_pc_1cc00.lr.ph, !insn.addr !7558

dec_label_pc_1cc00.lr.ph:                         ; preds = %dec_label_pc_1cbe2
  %7 = add i32 %5, 20, !insn.addr !7559
  %8 = inttoptr i32 %7 to i32*, !insn.addr !7559
  %9 = add i32 %5, 4
  %10 = inttoptr i32 %9 to i32*
  %11 = inttoptr i32 %5 to i32*
  %12 = load i32, i32* %8, align 4, !insn.addr !7559
  %13 = add i32 %12, 16, !insn.addr !7560
  %14 = inttoptr i32 %13 to i32*, !insn.addr !7560
  %15 = load i32, i32* %14, align 4, !insn.addr !7560
  %16 = inttoptr i32 %15 to i32*, !insn.addr !7561
  %17 = load i32, i32* %16, align 4, !insn.addr !7561
  %18 = inttoptr i32 %17 to i32*, !insn.addr !7562
  %19 = load i32, i32* %18, align 4, !insn.addr !7562
  store i8 0, i8* %stack_var_-33, align 1, !insn.addr !7563
  %20 = call i32 @gpio_read(i32 %19, i8* nonnull %stack_var_-33), !insn.addr !7564
  %21 = icmp eq i32 %20, 0, !insn.addr !7565
  store i32 %19, i32* %.lcssa.reg2mem, !insn.addr !7566
  store i32* %14, i32** %.reg2mem, !insn.addr !7566
  br i1 %21, label %dec_label_pc_1cc5e, label %dec_label_pc_1cc32, !insn.addr !7566

dec_label_pc_1cc32:                               ; preds = %dec_label_pc_1ccbe, %dec_label_pc_1cc00.lr.ph
  %.lcssa.reload = load i32, i32* %.lcssa.reg2mem
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2c0b8, i32 0, i32 0), i32 50), !insn.addr !7567
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2bc70, i32 0, i32 0), i32 %.lcssa.reload), !insn.addr !7568
  call void @free(i32* %11), !insn.addr !7569
  store i32 %.lcssa.reload, i32* %r1.2.reg2mem, !insn.addr !7570
  br label %dec_label_pc_1ccd4, !insn.addr !7570

dec_label_pc_1cc5e:                               ; preds = %dec_label_pc_1cc00.lr.ph, %dec_label_pc_1ccbe
  %24 = load i32, i32* %10, align 4, !insn.addr !7571
  %25 = load i8, i8* %stack_var_-33, align 1, !insn.addr !7572
  %26 = zext i8 %25 to i32, !insn.addr !7572
  %27 = icmp eq i32 %24, %26, !insn.addr !7573
  br i1 %27, label %dec_label_pc_1ccbe, label %dec_label_pc_1cc68, !insn.addr !7574

dec_label_pc_1cc68:                               ; preds = %dec_label_pc_1cc5e
  %.reload = load i32*, i32** %.reg2mem
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2c0b8, i32 0, i32 0), i32 55), !insn.addr !7575
  %29 = load i32, i32* %.reload, align 4, !insn.addr !7576
  %30 = inttoptr i32 %29 to i32*, !insn.addr !7577
  %31 = load i32, i32* %30, align 4, !insn.addr !7577
  %32 = inttoptr i32 %31 to i32*, !insn.addr !7578
  %33 = load i32, i32* %32, align 4, !insn.addr !7578
  %34 = load i32, i32* %10, align 4, !insn.addr !7579
  %35 = load i8, i8* %stack_var_-33, align 1, !insn.addr !7580
  %36 = zext i8 %35 to i32, !insn.addr !7580
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_var_2bc90, i32 0, i32 0), i32 %33, i32 %34, i32 %36), !insn.addr !7581
  br label %dec_label_pc_1ccbe, !insn.addr !7582

dec_label_pc_1ccbe:                               ; preds = %dec_label_pc_1cc68, %dec_label_pc_1cc5e
  call void @free(i32* %11), !insn.addr !7583
  %38 = load i32, i32* %8, align 4, !insn.addr !7559
  %39 = add i32 %38, 16, !insn.addr !7560
  %40 = inttoptr i32 %39 to i32*, !insn.addr !7560
  %41 = load i32, i32* %40, align 4, !insn.addr !7560
  %42 = inttoptr i32 %41 to i32*, !insn.addr !7561
  %43 = load i32, i32* %42, align 4, !insn.addr !7561
  %44 = inttoptr i32 %43 to i32*, !insn.addr !7562
  %45 = load i32, i32* %44, align 4, !insn.addr !7562
  store i8 0, i8* %stack_var_-33, align 1, !insn.addr !7563
  %46 = call i32 @gpio_read(i32 %45, i8* nonnull %stack_var_-33), !insn.addr !7564
  %47 = icmp eq i32 %46, 0, !insn.addr !7565
  store i32 %45, i32* %.lcssa.reg2mem, !insn.addr !7566
  store i32* %40, i32** %.reg2mem, !insn.addr !7566
  br i1 %47, label %dec_label_pc_1cc5e, label %dec_label_pc_1cc32, !insn.addr !7566

dec_label_pc_1ccd4:                               ; preds = %dec_label_pc_1cbe2, %dec_label_pc_1cc32
  %r1.2.reload = load i32, i32* %r1.2.reg2mem
  %48 = call i32 @delete_iterator_c_map(i32 %5), !insn.addr !7584
  %49 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235db0), !insn.addr !7585
  store i32 %r1.2.reload, i32* %r1.3.reg2mem, !insn.addr !7586
  br label %dec_label_pc_1ccea, !insn.addr !7586

dec_label_pc_1cce8:                               ; preds = %dec_label_pc_1cbce
  %r2.03.reload = load i32, i32* %r2.03.reg2mem
  %50 = call i32 @__asm_nop(i32 %2, i32 %r1.42.reload, i32 %r2.03.reload, i32 %2), !insn.addr !7587
  store i32 %r1.42.reload, i32* %r1.3.reg2mem, !insn.addr !7587
  br label %dec_label_pc_1ccea, !insn.addr !7587

dec_label_pc_1ccea:                               ; preds = %dec_label_pc_1cce8, %dec_label_pc_1ccd4
  %r1.3.reload = load i32, i32* %r1.3.reg2mem
  %51 = call i32 @usleep(i32 200000), !insn.addr !7588
  %52 = load i32, i32* @global_var_235d90, align 4, !insn.addr !7549
  %53 = icmp eq i32 %52, 0, !insn.addr !7550
  store i32 1000, i32* %r2.03.reg2mem, !insn.addr !7551
  store i32 %r1.3.reload, i32* %r1.42.reg2mem, !insn.addr !7551
  br i1 %53, label %dec_label_pc_1cd12, label %dec_label_pc_1cbce, !insn.addr !7551

dec_label_pc_1cd12:                               ; preds = %dec_label_pc_1ccea, %dec_label_pc_1cbc0
  ret i32 0, !insn.addr !7589

; uselistorder directives
  uselistorder i32* %11, { 1, 0 }
  uselistorder i32* %8, { 1, 0 }
  uselistorder i32 %5, { 4, 2, 1, 3, 0 }
  uselistorder i32 %2, { 1, 0, 2 }
  uselistorder i32 %r1.42.reload, { 0, 2, 1 }
  uselistorder i8* %stack_var_-33, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32* %r2.03.reg2mem, { 1, 0 }
  uselistorder i32* %r1.42.reg2mem, { 1, 0 }
  uselistorder i32* %.lcssa.reg2mem, { 1, 0, 2 }
  uselistorder i32** %.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r1.2.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32, i8*)* @gpio_read, { 1, 0 }
  uselistorder label %dec_label_pc_1ccd4, { 1, 0 }
  uselistorder label %dec_label_pc_1cc5e, { 1, 0 }
  uselistorder label %dec_label_pc_1cbce, { 1, 0 }
}

define i32 @gpio_init() local_unnamed_addr {
dec_label_pc_1cd20:
  %0 = load i32, i32* @global_var_235d8c, align 4, !insn.addr !7590
  %1 = icmp eq i32 %0, 0, !insn.addr !7591
  br i1 %1, label %dec_label_pc_1cd58, label %dec_label_pc_1cd32, !insn.addr !7592

dec_label_pc_1cd32:                               ; preds = %dec_label_pc_1cd20
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c0ac, i32 0, i32 0), i32 78), !insn.addr !7593
  %3 = call i32 @puts(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2bcbc, i32 0, i32 0)), !insn.addr !7594
  br label %dec_label_pc_1cdc2, !insn.addr !7595

dec_label_pc_1cd58:                               ; preds = %dec_label_pc_1cd20
  %4 = call i32 @pthread_mutex_init(i32* nonnull @global_var_235db0, i32* null), !insn.addr !7596
  %5 = call i32 @new_c_map(i32 or (i32 ptrtoint (i32* @global_var_cba1 to i32), i32 65536), i32 0, i32 0), !insn.addr !7597
  store i32 %5, i32* @global_var_235dc8, align 4, !insn.addr !7598
  %6 = call i32 @pthread_mutex_init(i32* nonnull @global_var_235d98, i32* null), !insn.addr !7599
  store i32 1, i32* @global_var_235d90, align 4, !insn.addr !7600
  %7 = call i32 @pthread_create(i32* nonnull @global_var_235d94, i32* null, i32* (i32*)* inttoptr (i32 117697 to i32* (i32*)*), i32* null), !insn.addr !7601
  store i32 1, i32* @global_var_235d8c, align 4, !insn.addr !7602
  br label %dec_label_pc_1cdc2, !insn.addr !7603

dec_label_pc_1cdc2:                               ; preds = %dec_label_pc_1cd58, %dec_label_pc_1cd32
  ret i32 0, !insn.addr !7604
}

define i32 @gpio_uninit() local_unnamed_addr {
dec_label_pc_1cdc8:
  %r3.0.reg2mem = alloca i32, !insn.addr !7605
  %r2.0.reg2mem = alloca i32, !insn.addr !7605
  %r1.0.reg2mem = alloca i32, !insn.addr !7605
  %r0.0.reg2mem = alloca i32, !insn.addr !7605
  %0 = load i32, i32* @global_var_235d8c, align 4, !insn.addr !7606
  %1 = icmp eq i32 %0, 0, !insn.addr !7607
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7608
  br i1 %1, label %dec_label_pc_1ce2c, label %dec_label_pc_1cdda, !insn.addr !7608

dec_label_pc_1cdda:                               ; preds = %dec_label_pc_1cdc8
  store i32 0, i32* @global_var_235d90, align 4, !insn.addr !7609
  %2 = load i32, i32* @global_var_235d94, align 4, !insn.addr !7610
  %3 = call i32 @pthread_join(i32 %2, i32** null), !insn.addr !7611
  %4 = call i32 @pthread_mutex_destroy(i32* nonnull @global_var_235db0), !insn.addr !7612
  %5 = load i32, i32* @global_var_235dc8, align 4, !insn.addr !7613
  %6 = call i32 @delete_c_map(i32 %5), !insn.addr !7614
  store i32 0, i32* @global_var_235d8c, align 4, !insn.addr !7615
  %7 = call i32 @pthread_mutex_destroy(i32* nonnull @global_var_235d98), !insn.addr !7616
  store i32 %7, i32* %r0.0.reg2mem, !insn.addr !7616
  store i32 0, i32* %r1.0.reg2mem, !insn.addr !7616
  store i32 0, i32* %r2.0.reg2mem, !insn.addr !7616
  store i32 ptrtoint (i32* @global_var_235d8c to i32), i32* %r3.0.reg2mem, !insn.addr !7616
  br label %dec_label_pc_1ce2c, !insn.addr !7616

dec_label_pc_1ce2c:                               ; preds = %dec_label_pc_1cdda, %dec_label_pc_1cdc8
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  %r2.0.reload = load i32, i32* %r2.0.reg2mem
  %r1.0.reload = load i32, i32* %r1.0.reg2mem
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %8 = call i32 @__asm_nop(i32 %r0.0.reload, i32 %r1.0.reload, i32 %r2.0.reload, i32 %r3.0.reload), !insn.addr !7617
  ret i32 %8, !insn.addr !7618

; uselistorder directives
  uselistorder i32* @global_var_235d94, { 1, 0 }
  uselistorder i32* @global_var_235d90, { 1, 2, 3, 0 }
  uselistorder i32* @global_var_235d8c, { 4, 0, 2, 1, 3 }
}

define i32 @gpio_reg_callback(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ce30:
  %r3.0.reg2mem = alloca i32, !insn.addr !7619
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4, !insn.addr !7620
  %0 = icmp eq i32 %arg2, 0, !insn.addr !7621
  br i1 %0, label %dec_label_pc_1ce40, label %dec_label_pc_1ce68, !insn.addr !7622

dec_label_pc_1ce40:                               ; preds = %dec_label_pc_1ce30
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2c098, i32 0, i32 0), i32 120), !insn.addr !7623
  %2 = call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2bccc, i32 0, i32 0)), !insn.addr !7624
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !7625
  br label %dec_label_pc_1cf40, !insn.addr !7625

dec_label_pc_1ce68:                               ; preds = %dec_label_pc_1ce30
  %3 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235db0), !insn.addr !7626
  %4 = icmp eq i32 %3, 0, !insn.addr !7627
  br i1 %4, label %dec_label_pc_1cea2, label %dec_label_pc_1ce7a, !insn.addr !7628

dec_label_pc_1ce7a:                               ; preds = %dec_label_pc_1ce68
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2c098, i32 0, i32 0), i32 124), !insn.addr !7629
  %6 = call i32 @puts(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2bcd8, i32 0, i32 0)), !insn.addr !7630
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !7631
  br label %dec_label_pc_1cf40, !insn.addr !7631

dec_label_pc_1cea2:                               ; preds = %dec_label_pc_1ce68
  %7 = load i32, i32* @global_var_235dc8, align 4, !insn.addr !7632
  %8 = call i32 @exists_c_map(i32 %7, i32* nonnull %stack_var_-20), !insn.addr !7633
  %9 = icmp eq i32 %8, 0, !insn.addr !7634
  br i1 %9, label %dec_label_pc_1cebc, label %dec_label_pc_1cf0c, !insn.addr !7635

dec_label_pc_1cebc:                               ; preds = %dec_label_pc_1cea2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2c098, i32 0, i32 0), i32 129), !insn.addr !7636
  %11 = load i32, i32* %stack_var_-20, align 4, !insn.addr !7637
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2bcf8, i32 0, i32 0), i32 %11), !insn.addr !7638
  store i32 %arg2, i32* %stack_var_-16, align 4, !insn.addr !7639
  %13 = load i32, i32* @global_var_235dc8, align 4, !insn.addr !7640
  %14 = call i32 @insert_c_map(i32 %13, i32* nonnull %stack_var_-20, i32 4, i32* nonnull %stack_var_-16, i32 8), !insn.addr !7641
  br label %dec_label_pc_1cf32, !insn.addr !7642

dec_label_pc_1cf0c:                               ; preds = %dec_label_pc_1cea2
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2c098, i32 0, i32 0), i32 133), !insn.addr !7643
  %16 = load i32, i32* %stack_var_-20, align 4, !insn.addr !7644
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_2bd10, i32 0, i32 0), i32 %16), !insn.addr !7645
  br label %dec_label_pc_1cf32, !insn.addr !7645

dec_label_pc_1cf32:                               ; preds = %dec_label_pc_1cf0c, %dec_label_pc_1cebc
  %18 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235db0), !insn.addr !7646
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7647
  br label %dec_label_pc_1cf40, !insn.addr !7647

dec_label_pc_1cf40:                               ; preds = %dec_label_pc_1cf32, %dec_label_pc_1ce7a, %dec_label_pc_1ce40
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7648

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 2, 0, 3, 1, 4 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3 }
  uselistorder i32 120, { 1, 0, 4, 5, 6, 7, 2, 3 }
}

define i32 @gpio_unreg_callback(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cf4c:
  %r3.0.reg2mem = alloca i32, !insn.addr !7649
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4, !insn.addr !7650
  %0 = icmp eq i32 %arg2, 0, !insn.addr !7651
  br i1 %0, label %dec_label_pc_1cf5c, label %dec_label_pc_1cf84, !insn.addr !7652

dec_label_pc_1cf5c:                               ; preds = %dec_label_pc_1cf4c
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2c084, i32 0, i32 0), i32 148), !insn.addr !7653
  %2 = call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2bccc, i32 0, i32 0)), !insn.addr !7654
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !7655
  br label %dec_label_pc_1d044, !insn.addr !7655

dec_label_pc_1cf84:                               ; preds = %dec_label_pc_1cf4c
  %3 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235db0), !insn.addr !7656
  %4 = icmp eq i32 %3, 0, !insn.addr !7657
  br i1 %4, label %dec_label_pc_1cfbe, label %dec_label_pc_1cf96, !insn.addr !7658

dec_label_pc_1cf96:                               ; preds = %dec_label_pc_1cf84
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2c084, i32 0, i32 0), i32 152), !insn.addr !7659
  %6 = call i32 @puts(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2bcd8, i32 0, i32 0)), !insn.addr !7660
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !7661
  br label %dec_label_pc_1d044, !insn.addr !7661

dec_label_pc_1cfbe:                               ; preds = %dec_label_pc_1cf84
  %7 = load i32, i32* @global_var_235dc8, align 4, !insn.addr !7662
  %8 = call i32 @exists_c_map(i32 %7, i32* nonnull %stack_var_-12), !insn.addr !7663
  %9 = icmp eq i32 %8, 1, !insn.addr !7664
  br i1 %9, label %dec_label_pc_1cfd8, label %dec_label_pc_1d014, !insn.addr !7665

dec_label_pc_1cfd8:                               ; preds = %dec_label_pc_1cfbe
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2c084, i32 0, i32 0), i32 157), !insn.addr !7666
  %11 = load i32, i32* %stack_var_-12, align 4, !insn.addr !7667
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @global_var_2bd38, i32 0, i32 0), i32 %11), !insn.addr !7668
  %13 = load i32, i32* @global_var_235dc8, align 4, !insn.addr !7669
  %14 = call i32 @remove_c_map(i32 %13, i32* nonnull %stack_var_-12), !insn.addr !7670
  br label %dec_label_pc_1d036, !insn.addr !7671

dec_label_pc_1d014:                               ; preds = %dec_label_pc_1cfbe
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2c084, i32 0, i32 0), i32 160), !insn.addr !7672
  %16 = call i32 @puts(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_2bd58, i32 0, i32 0)), !insn.addr !7673
  br label %dec_label_pc_1d036, !insn.addr !7673

dec_label_pc_1d036:                               ; preds = %dec_label_pc_1d014, %dec_label_pc_1cfd8
  %17 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235db0), !insn.addr !7674
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7675
  br label %dec_label_pc_1d044, !insn.addr !7675

dec_label_pc_1d044:                               ; preds = %dec_label_pc_1d036, %dec_label_pc_1cf96, %dec_label_pc_1cf5c
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7676

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 0, 2, 1, 3 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3 }
  uselistorder i32 152, { 0, 2, 1 }
  uselistorder i32 148, { 0, 2, 1 }
}

define i32 @gpio_export(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d050:
  %r3.0.reg2mem = alloca i32, !insn.addr !7677
  %stack_var_-80 = alloca i32, align 4
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235d98), !insn.addr !7678
  %1 = icmp eq i32 %0, 0, !insn.addr !7679
  br i1 %1, label %dec_label_pc_1d092, label %dec_label_pc_1d06a, !insn.addr !7680

dec_label_pc_1d06a:                               ; preds = %dec_label_pc_1d050
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_c078 to i32), i32 131072) to i8*), i32 177), !insn.addr !7681
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2bd80, i32 0, i32 0)), !insn.addr !7682
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !7683
  br label %dec_label_pc_1d1e6, !insn.addr !7683

dec_label_pc_1d092:                               ; preds = %dec_label_pc_1d050
  %4 = bitcast i32* %stack_var_-80 to i8*, !insn.addr !7684
  %5 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* nonnull %4, i32 64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2bd94, i32 0, i32 0), i32 %arg1), !insn.addr !7684
  %6 = call i32 @access(i8* nonnull %4, i32 0), !insn.addr !7685
  %7 = icmp eq i32 %6, 0, !insn.addr !7686
  br i1 %7, label %dec_label_pc_1d0ba, label %dec_label_pc_1d0fa, !insn.addr !7687

dec_label_pc_1d0ba:                               ; preds = %dec_label_pc_1d092
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_c078 to i32), i32 131072) to i8*), i32 183), !insn.addr !7688
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_2bdac, i32 0, i32 0), i32 %arg1), !insn.addr !7689
  call void @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2bdc8, i32 0, i32 0)), !insn.addr !7690
  %10 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7691
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7692
  br label %dec_label_pc_1d1e6, !insn.addr !7692

dec_label_pc_1d0fa:                               ; preds = %dec_label_pc_1d092
  %11 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2bdd8, i32 0, i32 0), i32 1), !insn.addr !7693
  %12 = icmp slt i32 %11, 0, !insn.addr !7694
  br i1 %12, label %dec_label_pc_1d110, label %dec_label_pc_1d144, !insn.addr !7695

dec_label_pc_1d110:                               ; preds = %dec_label_pc_1d0fa
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_c078 to i32), i32 131072) to i8*), i32 191), !insn.addr !7696
  %14 = call i32 @puts(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_2bdf0, i32 0, i32 0)), !insn.addr !7697
  %15 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7698
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !7699
  br label %dec_label_pc_1d1e6, !insn.addr !7699

dec_label_pc_1d144:                               ; preds = %dec_label_pc_1d0fa
  %16 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* nonnull %4, i32 64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2be14, i32 0, i32 0), i32 %arg1), !insn.addr !7700
  %17 = call i32 @write(i32 %11, i32* nonnull %stack_var_-80, i32 %16), !insn.addr !7701
  %18 = icmp slt i32 %17, 0, !insn.addr !7702
  br i1 %18, label %dec_label_pc_1d172, label %dec_label_pc_1d1ae, !insn.addr !7703

dec_label_pc_1d172:                               ; preds = %dec_label_pc_1d144
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_c078 to i32), i32 131072) to i8*), i32 198), !insn.addr !7704
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_2be18, i32 0, i32 0), i32 %arg1), !insn.addr !7705
  %21 = call i32 @close(i32 %11), !insn.addr !7706
  %22 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7707
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !7708
  br label %dec_label_pc_1d1e6, !insn.addr !7708

dec_label_pc_1d1ae:                               ; preds = %dec_label_pc_1d144
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* inttoptr (i32 or (i32 ptrtoint ([3 x i8]* @global_var_c078 to i32), i32 131072) to i8*), i32 203), !insn.addr !7709
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2be34, i32 0, i32 0), i32 %arg1), !insn.addr !7710
  %25 = call i32 @close(i32 %11), !insn.addr !7711
  %26 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7712
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7713
  br label %dec_label_pc_1d1e6, !insn.addr !7713

dec_label_pc_1d1e6:                               ; preds = %dec_label_pc_1d1ae, %dec_label_pc_1d172, %dec_label_pc_1d110, %dec_label_pc_1d0ba, %dec_label_pc_1d06a
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7714

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 4, 5, 1 }
}

define i32 @gpio_unexport(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d1f0:
  %r3.0.reg2mem = alloca i32, !insn.addr !7715
  %stack_var_-80 = alloca i32, align 4
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235d98), !insn.addr !7716
  %1 = icmp eq i32 %0, 0, !insn.addr !7717
  br i1 %1, label %dec_label_pc_1d232, label %dec_label_pc_1d20a, !insn.addr !7718

dec_label_pc_1d20a:                               ; preds = %dec_label_pc_1d1f0
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2c068, i32 0, i32 0), i32 220), !insn.addr !7719
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2bd80, i32 0, i32 0)), !insn.addr !7720
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !7721
  br label %dec_label_pc_1d38a, !insn.addr !7721

dec_label_pc_1d232:                               ; preds = %dec_label_pc_1d1f0
  %4 = bitcast i32* %stack_var_-80 to i8*, !insn.addr !7722
  %5 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* nonnull %4, i32 64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2bd94, i32 0, i32 0), i32 %arg1), !insn.addr !7722
  %6 = call i32 @access(i8* nonnull %4, i32 0), !insn.addr !7723
  %7 = icmp eq i32 %6, 0, !insn.addr !7724
  br i1 %7, label %dec_label_pc_1d29e, label %dec_label_pc_1d25c, !insn.addr !7725

dec_label_pc_1d25c:                               ; preds = %dec_label_pc_1d232
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2c068, i32 0, i32 0), i32 226), !insn.addr !7726
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_2be4c, i32 0, i32 0), i32 %arg1, i32 %6), !insn.addr !7727
  call void @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2bdc8, i32 0, i32 0)), !insn.addr !7728
  %10 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7729
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7730
  br label %dec_label_pc_1d38a, !insn.addr !7730

dec_label_pc_1d29e:                               ; preds = %dec_label_pc_1d232
  %11 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2be74, i32 0, i32 0), i32 1), !insn.addr !7731
  %12 = icmp slt i32 %11, 0, !insn.addr !7732
  br i1 %12, label %dec_label_pc_1d2b4, label %dec_label_pc_1d2e8, !insn.addr !7733

dec_label_pc_1d2b4:                               ; preds = %dec_label_pc_1d29e
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2c068, i32 0, i32 0), i32 234), !insn.addr !7734
  %14 = call i32 @puts(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_2be90, i32 0, i32 0)), !insn.addr !7735
  %15 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7736
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !7737
  br label %dec_label_pc_1d38a, !insn.addr !7737

dec_label_pc_1d2e8:                               ; preds = %dec_label_pc_1d29e
  %16 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* nonnull %4, i32 64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2be14, i32 0, i32 0), i32 %arg1), !insn.addr !7738
  %17 = call i32 @write(i32 %11, i32* nonnull %stack_var_-80, i32 %16), !insn.addr !7739
  %18 = icmp slt i32 %17, 0, !insn.addr !7740
  br i1 %18, label %dec_label_pc_1d316, label %dec_label_pc_1d352, !insn.addr !7741

dec_label_pc_1d316:                               ; preds = %dec_label_pc_1d2e8
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2c068, i32 0, i32 0), i32 241), !insn.addr !7742
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_2beb8, i32 0, i32 0), i32 %arg1), !insn.addr !7743
  %21 = call i32 @close(i32 %11), !insn.addr !7744
  %22 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7745
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !7746
  br label %dec_label_pc_1d38a, !insn.addr !7746

dec_label_pc_1d352:                               ; preds = %dec_label_pc_1d2e8
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2c068, i32 0, i32 0), i32 246), !insn.addr !7747
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_2bed4, i32 0, i32 0), i32 %arg1), !insn.addr !7748
  %25 = call i32 @close(i32 %11), !insn.addr !7749
  %26 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7750
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7751
  br label %dec_label_pc_1d38a, !insn.addr !7751

dec_label_pc_1d38a:                               ; preds = %dec_label_pc_1d352, %dec_label_pc_1d316, %dec_label_pc_1d2b4, %dec_label_pc_1d25c, %dec_label_pc_1d20a
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7752

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 4, 5, 2, 1 }
  uselistorder void (i8*)* @perror, { 1, 0 }
  uselistorder i32 (i8*, i32)* @access, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
}

define i32 @gpio_direction(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d394:
  %r3.0.reg2mem = alloca i32, !insn.addr !7753
  %stack_var_-76 = alloca i32, align 4
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235d98), !insn.addr !7754
  %1 = icmp eq i32 %0, 0, !insn.addr !7755
  br i1 %1, label %dec_label_pc_1d3da, label %dec_label_pc_1d3b0, !insn.addr !7756

dec_label_pc_1d3b0:                               ; preds = %dec_label_pc_1d394
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2c050, i32 0, i32 0), i32 266), !insn.addr !7757
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2bd80, i32 0, i32 0)), !insn.addr !7758
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !7759
  br label %dec_label_pc_1d516, !insn.addr !7759

dec_label_pc_1d3da:                               ; preds = %dec_label_pc_1d394
  %4 = bitcast i32* %stack_var_-76 to i8*, !insn.addr !7760
  %5 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* nonnull %4, i32 64, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_2bef0, i32 0, i32 0), i32 %arg1), !insn.addr !7760
  %6 = call i32 (i8*, i32, ...) @open(i8* nonnull %4, i32 1), !insn.addr !7761
  %7 = icmp slt i32 %6, 0, !insn.addr !7762
  br i1 %7, label %dec_label_pc_1d404, label %dec_label_pc_1d43c, !insn.addr !7763

dec_label_pc_1d404:                               ; preds = %dec_label_pc_1d3da
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2c050, i32 0, i32 0), i32 273), !insn.addr !7764
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_2bf14, i32 0, i32 0), i32 %arg1), !insn.addr !7765
  %10 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7766
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !7767
  br label %dec_label_pc_1d516, !insn.addr !7767

dec_label_pc_1d43c:                               ; preds = %dec_label_pc_1d3da
  %11 = icmp eq i32 %arg2, 0, !insn.addr !7768
  %. = select i1 %11, i32 ptrtoint ([3 x i8]* @global_var_2c060 to i32), i32 add (i32 ptrtoint ([3 x i8]* @global_var_2c060 to i32), i32 3)
  %storemerge2 = select i1 %11, i32 2, i32 3
  %12 = inttoptr i32 %. to i32*, !insn.addr !7769
  %13 = call i32 @write(i32 %6, i32* %12, i32 %storemerge2), !insn.addr !7769
  %14 = icmp slt i32 %13, 0, !insn.addr !7770
  br i1 %14, label %dec_label_pc_1d46e, label %dec_label_pc_1d4c4, !insn.addr !7771

dec_label_pc_1d46e:                               ; preds = %dec_label_pc_1d43c
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2c050, i32 0, i32 0), i32 279), !insn.addr !7772
  %16 = inttoptr i32 %. to i8*, !insn.addr !7773
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_2bf44, i32 0, i32 0), i32 %arg1, i8* %16), !insn.addr !7773
  %18 = call i32 @close(i32 %6), !insn.addr !7774
  %19 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7775
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !7776
  br label %dec_label_pc_1d516, !insn.addr !7776

dec_label_pc_1d4c4:                               ; preds = %dec_label_pc_1d43c
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2c050, i32 0, i32 0), i32 284), !insn.addr !7777
  %21 = inttoptr i32 %. to i8*, !insn.addr !7778
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_2bf6c, i32 0, i32 0), i32 %arg1, i8* %21), !insn.addr !7778
  %23 = call i32 @close(i32 %6), !insn.addr !7779
  %24 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7780
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7781
  br label %dec_label_pc_1d516, !insn.addr !7781

dec_label_pc_1d516:                               ; preds = %dec_label_pc_1d4c4, %dec_label_pc_1d46e, %dec_label_pc_1d404, %dec_label_pc_1d3b0
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7782

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 4, 1 }
}

define i32 @gpio_read(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_1d520:
  %r3.0.reg2mem = alloca i32, !insn.addr !7783
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 0, i32* %stack_var_-80, align 4, !insn.addr !7784
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235d98), !insn.addr !7785
  %1 = icmp eq i32 %0, 0, !insn.addr !7786
  br i1 %1, label %dec_label_pc_1d56a, label %dec_label_pc_1d540, !insn.addr !7787

dec_label_pc_1d540:                               ; preds = %dec_label_pc_1d520
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c044, i32 0, i32 0), i32 303), !insn.addr !7788
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2bd80, i32 0, i32 0)), !insn.addr !7789
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !7790
  br label %dec_label_pc_1d642, !insn.addr !7790

dec_label_pc_1d56a:                               ; preds = %dec_label_pc_1d520
  %4 = bitcast i32* %stack_var_-76 to i8*, !insn.addr !7791
  %5 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* nonnull %4, i32 64, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2bf90, i32 0, i32 0), i32 %arg1), !insn.addr !7791
  %6 = call i32 (i8*, i32, ...) @open(i8* nonnull %4, i32 0), !insn.addr !7792
  %7 = icmp slt i32 %6, 0, !insn.addr !7793
  br i1 %7, label %dec_label_pc_1d594, label %dec_label_pc_1d5cc, !insn.addr !7794

dec_label_pc_1d594:                               ; preds = %dec_label_pc_1d56a
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c044, i32 0, i32 0), i32 310), !insn.addr !7795
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_var_2bfb0, i32 0, i32 0), i32 %arg1), !insn.addr !7796
  %10 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7797
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !7798
  br label %dec_label_pc_1d642, !insn.addr !7798

dec_label_pc_1d5cc:                               ; preds = %dec_label_pc_1d56a
  %11 = call i32 @read(i32 %6, i32* nonnull %stack_var_-80, i32 4), !insn.addr !7799
  %12 = icmp slt i32 %11, 0, !insn.addr !7800
  br i1 %12, label %dec_label_pc_1d5e0, label %dec_label_pc_1d61c, !insn.addr !7801

dec_label_pc_1d5e0:                               ; preds = %dec_label_pc_1d5cc
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c044, i32 0, i32 0), i32 316), !insn.addr !7802
  %14 = call i32 @puts(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2bfdc, i32 0, i32 0)), !insn.addr !7803
  %15 = call i32 @close(i32 %6), !insn.addr !7804
  %16 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7805
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !7806
  br label %dec_label_pc_1d642, !insn.addr !7806

dec_label_pc_1d61c:                               ; preds = %dec_label_pc_1d5cc
  %17 = call i32 @close(i32 %6), !insn.addr !7807
  %18 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7808
  %19 = bitcast i32* %stack_var_-80 to i8*, !insn.addr !7809
  %20 = call i32 @atoi(i8* nonnull %19), !insn.addr !7809
  %21 = trunc i32 %20 to i8, !insn.addr !7810
  store i8 %21, i8* %arg2, align 1, !insn.addr !7810
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !7811
  br label %dec_label_pc_1d642, !insn.addr !7811

dec_label_pc_1d642:                               ; preds = %dec_label_pc_1d61c, %dec_label_pc_1d5e0, %dec_label_pc_1d594, %dec_label_pc_1d540
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7812

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 4, 1 }
}

define i32 @gpio_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d64c:
  %r3.2.reg2mem = alloca i32, !insn.addr !7813
  %stack_var_-76 = alloca i32, align 4
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235d98), !insn.addr !7814
  %1 = icmp eq i32 %0, 0, !insn.addr !7815
  br i1 %1, label %dec_label_pc_1d694, label %dec_label_pc_1d66a, !insn.addr !7816

dec_label_pc_1d66a:                               ; preds = %dec_label_pc_1d64c
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2c034, i32 0, i32 0), i32 341), !insn.addr !7817
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2bd80, i32 0, i32 0)), !insn.addr !7818
  store i32 -1, i32* %r3.2.reg2mem, !insn.addr !7819
  br label %dec_label_pc_1d76c, !insn.addr !7819

dec_label_pc_1d694:                               ; preds = %dec_label_pc_1d64c
  %4 = bitcast i32* %stack_var_-76 to i8*, !insn.addr !7820
  %5 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* nonnull %4, i32 64, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2bf90, i32 0, i32 0), i32 %arg1), !insn.addr !7820
  %6 = call i32 (i8*, i32, ...) @open(i8* nonnull %4, i32 1), !insn.addr !7821
  %7 = icmp slt i32 %6, 0, !insn.addr !7822
  br i1 %7, label %dec_label_pc_1d6be, label %dec_label_pc_1d6f4, !insn.addr !7823

dec_label_pc_1d6be:                               ; preds = %dec_label_pc_1d694
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2c034, i32 0, i32 0), i32 348), !insn.addr !7824
  %9 = call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_2bff4, i32 0, i32 0)), !insn.addr !7825
  %10 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7826
  store i32 -2, i32* %r3.2.reg2mem, !insn.addr !7827
  br label %dec_label_pc_1d76c, !insn.addr !7827

dec_label_pc_1d6f4:                               ; preds = %dec_label_pc_1d694
  %11 = urem i32 %arg2, 256
  %12 = icmp eq i32 %11, 0, !insn.addr !7828
  br i1 %12, label %13, label %15, !insn.addr !7829

; <label>:13:                                     ; preds = %dec_label_pc_1d6f4
  %14 = call i32 @__asm_ite(), !insn.addr !7829
  br label %15, !insn.addr !7829

; <label>:15:                                     ; preds = %dec_label_pc_1d6f4, %13
  %16 = select i1 %12, i32 ptrtoint ([3 x i8]* @global_var_2c040 to i32), i32 add (i32 ptrtoint ([3 x i8]* @global_var_2c040 to i32), i32 1), !insn.addr !7830
  %17 = inttoptr i32 %16 to i32*, !insn.addr !7831
  %18 = call i32 @write(i32 %6, i32* %17, i32 1), !insn.addr !7831
  %19 = icmp slt i32 %18, 0, !insn.addr !7832
  br i1 %19, label %dec_label_pc_1d71c, label %dec_label_pc_1d758, !insn.addr !7833

dec_label_pc_1d71c:                               ; preds = %15
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2bc68, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2c034, i32 0, i32 0), i32 354), !insn.addr !7834
  %21 = call i32 @puts(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2c01c, i32 0, i32 0)), !insn.addr !7835
  %22 = call i32 @close(i32 %6), !insn.addr !7836
  %23 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7837
  store i32 -3, i32* %r3.2.reg2mem, !insn.addr !7838
  br label %dec_label_pc_1d76c, !insn.addr !7838

dec_label_pc_1d758:                               ; preds = %15
  %24 = call i32 @close(i32 %6), !insn.addr !7839
  %25 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235d98), !insn.addr !7840
  store i32 0, i32* %r3.2.reg2mem, !insn.addr !7841
  br label %dec_label_pc_1d76c, !insn.addr !7841

dec_label_pc_1d76c:                               ; preds = %dec_label_pc_1d758, %dec_label_pc_1d71c, %dec_label_pc_1d6be, %dec_label_pc_1d66a
  %r3.2.reload = load i32, i32* %r3.2.reg2mem
  ret i32 %r3.2.reload, !insn.addr !7842

; uselistorder directives
  uselistorder i32* %r3.2.reg2mem, { 0, 2, 3, 4, 1 }
  uselistorder label %15, { 1, 0 }
}

define i32 @iic_init(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d778:
  %r3.0.reg2mem = alloca i32, !insn.addr !7843
  %stack_var_-12.01.reg2mem = alloca i32, !insn.addr !7843
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235dcc), !insn.addr !7844
  %1 = icmp eq i32 %0, 0, !insn.addr !7845
  br i1 %1, label %dec_label_pc_1d7c4, label %dec_label_pc_1d79c, !insn.addr !7846

dec_label_pc_1d79c:                               ; preds = %dec_label_pc_1d778
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c0d0, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2c1d4, i32 0, i32 0), i32 19), !insn.addr !7847
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c0d8, i32 0, i32 0)), !insn.addr !7848
  store i32 -4, i32* %r3.0.reg2mem, !insn.addr !7849
  br label %dec_label_pc_1d912, !insn.addr !7849

dec_label_pc_1d7c4:                               ; preds = %dec_label_pc_1d778
  %4 = icmp eq i32* %arg1, null, !insn.addr !7850
  br i1 %4, label %dec_label_pc_1d7ca, label %dec_label_pc_1d7f4, !insn.addr !7851

dec_label_pc_1d7ca:                               ; preds = %dec_label_pc_1d7c4
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c0d0, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2c1d4, i32 0, i32 0), i32 25), !insn.addr !7852
  %6 = call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c0ec, i32 0, i32 0)), !insn.addr !7853
  store i32 -3, i32* %stack_var_-12.01.reg2mem, !insn.addr !7854
  br label %dec_label_pc_1d904, !insn.addr !7854

dec_label_pc_1d7f4:                               ; preds = %dec_label_pc_1d7c4
  %7 = call i32 @i2c_init(i32 0), !insn.addr !7855
  %8 = icmp slt i32 %7, 0, !insn.addr !7856
  br i1 %8, label %dec_label_pc_1d802, label %dec_label_pc_1d82c, !insn.addr !7857

dec_label_pc_1d802:                               ; preds = %dec_label_pc_1d7f4
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c0d0, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2c1d4, i32 0, i32 0), i32 31), !insn.addr !7858
  %10 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c0f8, i32 0, i32 0)), !insn.addr !7859
  store i32 -1, i32* %stack_var_-12.01.reg2mem, !insn.addr !7860
  br label %dec_label_pc_1d904, !insn.addr !7860

dec_label_pc_1d82c:                               ; preds = %dec_label_pc_1d7f4
  %11 = ptrtoint i32* %arg1 to i32
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c0d0, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2c1d4, i32 0, i32 0), i32 35), !insn.addr !7861
  %13 = add i32 %11, 4, !insn.addr !7862
  %14 = inttoptr i32 %13 to i16*, !insn.addr !7862
  %15 = load i16, i16* %14, align 2, !insn.addr !7862
  %16 = zext i16 %15 to i32, !insn.addr !7862
  %17 = add i32 %11, 6, !insn.addr !7863
  %18 = inttoptr i32 %17 to i8*, !insn.addr !7863
  %19 = load i8, i8* %18, align 1, !insn.addr !7863
  %20 = zext i8 %19 to i32, !insn.addr !7863
  %21 = add i32 %11, 7, !insn.addr !7864
  %22 = inttoptr i32 %21 to i8*, !insn.addr !7864
  %23 = load i8, i8* %22, align 1, !insn.addr !7864
  %24 = zext i8 %23 to i32, !insn.addr !7864
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_2c10c, i32 0, i32 0), i32 %12, i32 %16, i32 %20, i32 %24), !insn.addr !7865
  %26 = load i16, i16* %14, align 2, !insn.addr !7866
  %27 = zext i16 %26 to i32, !insn.addr !7866
  %28 = call i32 @i2c_select(i32 %7, i32 %27), !insn.addr !7867
  %29 = icmp eq i32 %28, 0, !insn.addr !7868
  br i1 %29, label %dec_label_pc_1d89e, label %dec_label_pc_1d874, !insn.addr !7869

dec_label_pc_1d874:                               ; preds = %dec_label_pc_1d82c
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c0d0, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2c1d4, i32 0, i32 0), i32 37), !insn.addr !7870
  %31 = call i32 @puts(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2c150, i32 0, i32 0)), !insn.addr !7871
  br label %dec_label_pc_1d8f8, !insn.addr !7872

dec_label_pc_1d89e:                               ; preds = %dec_label_pc_1d82c
  %32 = load i8, i8* %18, align 1, !insn.addr !7873
  %33 = zext i8 %32 to i32, !insn.addr !7873
  %34 = mul i32 %33, 16, !insn.addr !7874
  %35 = load i8, i8* %22, align 1, !insn.addr !7875
  %36 = zext i8 %35 to i32, !insn.addr !7875
  %37 = mul i32 %36, 2, !insn.addr !7876
  %38 = or i32 %37, %34, !insn.addr !7877
  %39 = call i32 @i2c_ioctl(i32 %7, i32 1795, i32 %38), !insn.addr !7878
  %40 = icmp eq i32 %39, 0, !insn.addr !7879
  br i1 %40, label %dec_label_pc_1d8e8, label %dec_label_pc_1d8be, !insn.addr !7880

dec_label_pc_1d8be:                               ; preds = %dec_label_pc_1d89e
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c0d0, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2c1d4, i32 0, i32 0), i32 42), !insn.addr !7881
  %42 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2c168, i32 0, i32 0)), !insn.addr !7882
  br label %dec_label_pc_1d8f8, !insn.addr !7883

dec_label_pc_1d8e8:                               ; preds = %dec_label_pc_1d89e
  %43 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235dcc), !insn.addr !7884
  store i32 %7, i32* %r3.0.reg2mem, !insn.addr !7885
  br label %dec_label_pc_1d912, !insn.addr !7885

dec_label_pc_1d8f8:                               ; preds = %dec_label_pc_1d8be, %dec_label_pc_1d874
  %44 = icmp slt i32 %7, 1, !insn.addr !7886
  store i32 -1, i32* %stack_var_-12.01.reg2mem, !insn.addr !7886
  br i1 %44, label %dec_label_pc_1d904, label %dec_label_pc_1d8fe, !insn.addr !7886

dec_label_pc_1d8fe:                               ; preds = %dec_label_pc_1d8f8
  %45 = call i32 @i2c_uninit(i32 %7), !insn.addr !7887
  store i32 -1, i32* %stack_var_-12.01.reg2mem, !insn.addr !7887
  br label %dec_label_pc_1d904, !insn.addr !7887

dec_label_pc_1d904:                               ; preds = %dec_label_pc_1d802, %dec_label_pc_1d7ca, %dec_label_pc_1d8fe, %dec_label_pc_1d8f8
  %stack_var_-12.01.reload = load i32, i32* %stack_var_-12.01.reg2mem
  %46 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235dcc), !insn.addr !7888
  store i32 %stack_var_-12.01.reload, i32* %r3.0.reg2mem, !insn.addr !7889
  br label %dec_label_pc_1d912, !insn.addr !7889

dec_label_pc_1d912:                               ; preds = %dec_label_pc_1d904, %dec_label_pc_1d8e8, %dec_label_pc_1d79c
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7890

; uselistorder directives
  uselistorder i32 %11, { 2, 1, 0 }
  uselistorder i32 %7, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %stack_var_-12.01.reg2mem, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32 35, { 1, 2, 0, 3 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1d904, { 2, 3, 0, 1 }
}

define i32 @iic_uninit(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d91c:
  %0 = alloca i32
  %storemerge.reg2mem = alloca i32, !insn.addr !7891
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235dcc), !insn.addr !7892
  %4 = icmp eq i32 %3, 0, !insn.addr !7893
  br i1 %4, label %dec_label_pc_1d95e, label %dec_label_pc_1d93a, !insn.addr !7894

dec_label_pc_1d93a:                               ; preds = %dec_label_pc_1d91c
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c0d0, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2c1c8, i32 0, i32 0), i32 63), !insn.addr !7895
  %6 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c17c, i32 0, i32 0)), !insn.addr !7896
  store i32 %6, i32* %storemerge.reg2mem, !insn.addr !7897
  br label %dec_label_pc_1d972, !insn.addr !7897

dec_label_pc_1d95e:                               ; preds = %dec_label_pc_1d91c
  %7 = call i32 @i2c_uninit(i32 %arg1), !insn.addr !7898
  %8 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235dcc), !insn.addr !7899
  %9 = call i32 @__asm_nop(i32 %8, i32 %2, i32 %1, i32 0), !insn.addr !7900
  store i32 %9, i32* %storemerge.reg2mem, !insn.addr !7900
  br label %dec_label_pc_1d972, !insn.addr !7900

dec_label_pc_1d972:                               ; preds = %dec_label_pc_1d95e, %dec_label_pc_1d93a
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7901

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32* %0, { 1, 0 }
  uselistorder i32 (i32)* @i2c_uninit, { 1, 0 }
}

define i32 @iic_read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d97c:
  %storemerge.reg2mem = alloca i32, !insn.addr !7902
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235dcc), !insn.addr !7903
  %1 = icmp eq i32 %0, 0, !insn.addr !7904
  br i1 %1, label %dec_label_pc_1d9c2, label %dec_label_pc_1d99a, !insn.addr !7905

dec_label_pc_1d99a:                               ; preds = %dec_label_pc_1d97c
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c0d0, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2c1bc, i32 0, i32 0), i32 82), !insn.addr !7906
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c17c, i32 0, i32 0)), !insn.addr !7907
  store i32 -4, i32* %storemerge.reg2mem, !insn.addr !7908
  br label %dec_label_pc_1d9de, !insn.addr !7908

dec_label_pc_1d9c2:                               ; preds = %dec_label_pc_1d97c
  %4 = call i32 @i2c_read(i32 %arg1, i32 %arg2, i32 %arg3), !insn.addr !7909
  %5 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235dcc), !insn.addr !7910
  store i32 %4, i32* %storemerge.reg2mem, !insn.addr !7911
  br label %dec_label_pc_1d9de, !insn.addr !7911

dec_label_pc_1d9de:                               ; preds = %dec_label_pc_1d9c2, %dec_label_pc_1d99a
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7912

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
}

define i32 @iic_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d9e8:
  %storemerge.reg2mem = alloca i32, !insn.addr !7913
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235dcc), !insn.addr !7914
  %1 = icmp eq i32 %0, 0, !insn.addr !7915
  br i1 %1, label %dec_label_pc_1da2e, label %dec_label_pc_1da06, !insn.addr !7916

dec_label_pc_1da06:                               ; preds = %dec_label_pc_1d9e8
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c0d0, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c1b0, i32 0, i32 0), i32 102), !insn.addr !7917
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c17c, i32 0, i32 0)), !insn.addr !7918
  store i32 -4, i32* %storemerge.reg2mem, !insn.addr !7919
  br label %dec_label_pc_1da4a, !insn.addr !7919

dec_label_pc_1da2e:                               ; preds = %dec_label_pc_1d9e8
  %4 = call i32 @i2c_write(i32 %arg1, i32 %arg2, i32 %arg3), !insn.addr !7920
  %5 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235dcc), !insn.addr !7921
  store i32 %4, i32* %storemerge.reg2mem, !insn.addr !7922
  br label %dec_label_pc_1da4a, !insn.addr !7922

dec_label_pc_1da4a:                               ; preds = %dec_label_pc_1da2e, %dec_label_pc_1da06
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7923

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
}

define i32 @iic_read_reg(i32 %arg1, i8* %arg2, i32 %arg3, i8* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1da54:
  %storemerge.reg2mem = alloca i32, !insn.addr !7924
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235dcc), !insn.addr !7925
  %1 = icmp eq i32 %0, 0, !insn.addr !7926
  br i1 %1, label %dec_label_pc_1da9c, label %dec_label_pc_1da74, !insn.addr !7927

dec_label_pc_1da74:                               ; preds = %dec_label_pc_1da54
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c0d0, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2c1a0, i32 0, i32 0), i32 123), !insn.addr !7928
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c17c, i32 0, i32 0)), !insn.addr !7929
  store i32 -4, i32* %storemerge.reg2mem, !insn.addr !7930
  br label %dec_label_pc_1dabe, !insn.addr !7930

dec_label_pc_1da9c:                               ; preds = %dec_label_pc_1da54
  %4 = ptrtoint i8* %arg2 to i32, !insn.addr !7931
  %5 = ptrtoint i8* %arg4 to i32, !insn.addr !7932
  %6 = call i32 @i2c_read_reg(i32 %arg1, i32 %4, i32 %arg3, i32 %5, i32 %arg5), !insn.addr !7933
  %7 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235dcc), !insn.addr !7934
  store i32 %6, i32* %storemerge.reg2mem, !insn.addr !7935
  br label %dec_label_pc_1dabe, !insn.addr !7935

dec_label_pc_1dabe:                               ; preds = %dec_label_pc_1da9c, %dec_label_pc_1da74
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7936

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
}

define i32 @iic_write_reg(i32 %arg1, i8* %arg2, i32 %arg3, i8* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1dac8:
  %storemerge.reg2mem = alloca i32, !insn.addr !7937
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_235dcc), !insn.addr !7938
  %1 = icmp eq i32 %0, 0, !insn.addr !7939
  br i1 %1, label %dec_label_pc_1db10, label %dec_label_pc_1dae8, !insn.addr !7940

dec_label_pc_1dae8:                               ; preds = %dec_label_pc_1dac8
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c0d0, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2c190, i32 0, i32 0), i32 145), !insn.addr !7941
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c17c, i32 0, i32 0)), !insn.addr !7942
  store i32 -4, i32* %storemerge.reg2mem, !insn.addr !7943
  br label %dec_label_pc_1db32, !insn.addr !7943

dec_label_pc_1db10:                               ; preds = %dec_label_pc_1dac8
  %4 = ptrtoint i8* %arg2 to i32, !insn.addr !7944
  %5 = ptrtoint i8* %arg4 to i32, !insn.addr !7945
  %6 = call i32 @i2c_write_reg(i32 %arg1, i32 %4, i32 %arg3, i32 %5, i32 %arg5), !insn.addr !7946
  %7 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_235dcc), !insn.addr !7947
  store i32 %6, i32* %storemerge.reg2mem, !insn.addr !7948
  br label %dec_label_pc_1db32, !insn.addr !7948

dec_label_pc_1db32:                               ; preds = %dec_label_pc_1db10, %dec_label_pc_1dae8
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7949

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32* @global_var_235dcc, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12 }
}

define i32 @pwm_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1db3c:
  %r3.0.reg2mem = alloca i32, !insn.addr !7950
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !7951
  %1 = icmp eq i32 %0, 0, !insn.addr !7952
  br i1 %1, label %dec_label_pc_1db54, label %dec_label_pc_1db7c, !insn.addr !7953

dec_label_pc_1db54:                               ; preds = %dec_label_pc_1db3c
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c1e0, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2c264, i32 0, i32 0), i32 16), !insn.addr !7954
  %3 = call i32 @puts(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2c1e8, i32 0, i32 0)), !insn.addr !7955
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !7956
  br label %dec_label_pc_1dbd0, !insn.addr !7956

dec_label_pc_1db7c:                               ; preds = %dec_label_pc_1db3c
  %4 = icmp eq i32 %arg1, 0, !insn.addr !7957
  %5 = icmp ne i1 %4, true, !insn.addr !7957
  %6 = icmp eq i32 %arg1, 1, !insn.addr !7957
  %7 = icmp ne i1 %5, true, !insn.addr !7958
  %8 = or i1 %6, %7, !insn.addr !7958
  br i1 %8, label %dec_label_pc_1dbaa, label %dec_label_pc_1db82, !insn.addr !7958

dec_label_pc_1db82:                               ; preds = %dec_label_pc_1db7c
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c1e0, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2c264, i32 0, i32 0), i32 20), !insn.addr !7959
  %10 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_c208 to i32), i32 131072) to i8*)), !insn.addr !7960
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !7961
  br label %dec_label_pc_1dbd0, !insn.addr !7961

dec_label_pc_1dbaa:                               ; preds = %dec_label_pc_1db7c
  %11 = mul i32 %arg1, 8, !insn.addr !7962
  %12 = add i32 %11, ptrtoint (i32* @global_var_235de4 to i32), !insn.addr !7962
  %13 = inttoptr i32 %12 to i32*, !insn.addr !7962
  store i32 %arg2, i32* %13, align 4, !insn.addr !7962
  %14 = add i32 %11, add (i32 ptrtoint (i32* @global_var_235de4 to i32), i32 4), !insn.addr !7963
  %15 = inttoptr i32 %14 to i8*, !insn.addr !7963
  store i8 1, i8* %15, align 4, !insn.addr !7963
  %16 = add i32 %arg1, 1, !insn.addr !7964
  store i32 %16, i32* %r3.0.reg2mem, !insn.addr !7964
  br label %dec_label_pc_1dbd0, !insn.addr !7964

dec_label_pc_1dbd0:                               ; preds = %dec_label_pc_1dbaa, %dec_label_pc_1db82, %dec_label_pc_1db54
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !7965

; uselistorder directives
  uselistorder i32 %11, { 1, 0 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
}

define i32 @pwm_uninit(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dbdc:
  %storemerge.reg2mem = alloca i32, !insn.addr !7966
  %0 = add i32 %arg1, -1, !insn.addr !7967
  %1 = icmp slt i32 %0, 2, !insn.addr !7968
  br i1 %1, label %dec_label_pc_1dc10, label %dec_label_pc_1dbec, !insn.addr !7968

dec_label_pc_1dbec:                               ; preds = %dec_label_pc_1dbdc
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c1e0, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2c258, i32 0, i32 0), i32 29), !insn.addr !7969
  %3 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_c208 to i32), i32 131072) to i8*)), !insn.addr !7970
  store i32 %3, i32* %storemerge.reg2mem, !insn.addr !7971
  br label %dec_label_pc_1dc38, !insn.addr !7971

dec_label_pc_1dc10:                               ; preds = %dec_label_pc_1dbdc
  %4 = mul i32 %arg1, 8, !insn.addr !7972
  %5 = add i32 %4, add (i32 ptrtoint (i32* @global_var_235de4 to i32), i32 -8), !insn.addr !7973
  %6 = inttoptr i32 %5 to i32*, !insn.addr !7973
  store i32 0, i32* %6, align 4, !insn.addr !7973
  %7 = add i32 %4, add (i32 ptrtoint (i32* @global_var_235de4 to i32), i32 -4), !insn.addr !7974
  %8 = inttoptr i32 %7 to i8*, !insn.addr !7974
  store i8 0, i8* %8, align 4, !insn.addr !7974
  %9 = call i32 @__asm_nop(i32 %arg1, i32 0, i32 0, i32 %5), !insn.addr !7975
  store i32 %9, i32* %storemerge.reg2mem, !insn.addr !7975
  br label %dec_label_pc_1dc38, !insn.addr !7975

dec_label_pc_1dc38:                               ; preds = %dec_label_pc_1dc10, %dec_label_pc_1dbec
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !7976

; uselistorder directives
  uselistorder i32 %4, { 1, 0 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @pwm_set(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dc40:
  %storemerge.reg2mem = alloca i32, !insn.addr !7977
  %0 = add i32 %arg1, -1, !insn.addr !7978
  %1 = icmp slt i32 %0, 2, !insn.addr !7979
  br i1 %1, label %dec_label_pc_1dc7a, label %dec_label_pc_1dc52, !insn.addr !7979

dec_label_pc_1dc52:                               ; preds = %dec_label_pc_1dc40
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c1e0, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2c250, i32 0, i32 0), i32 45), !insn.addr !7980
  %3 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_c208 to i32), i32 131072) to i8*)), !insn.addr !7981
  store i32 -3, i32* %storemerge.reg2mem, !insn.addr !7982
  br label %dec_label_pc_1dd06, !insn.addr !7982

dec_label_pc_1dc7a:                               ; preds = %dec_label_pc_1dc40
  %4 = icmp eq i32 %arg1, 1, !insn.addr !7983
  br i1 %4, label %dec_label_pc_1dc82, label %dec_label_pc_1dcda, !insn.addr !7984

dec_label_pc_1dc82:                               ; preds = %dec_label_pc_1dc7a
  %5 = icmp ult i32 %arg2, 100, !insn.addr !7985
  %6 = icmp ne i1 %5, true, !insn.addr !7985
  br i1 %6, label %7, label %9, !insn.addr !7986

; <label>:7:                                      ; preds = %dec_label_pc_1dc82
  %8 = call i32 @__asm_it(), !insn.addr !7986
  br label %9, !insn.addr !7986

; <label>:9:                                      ; preds = %dec_label_pc_1dc82, %7
  %spec.select = select i1 %6, i32 100, i32 %arg2
  %10 = load i32, i32* @global_var_235c58, align 4, !insn.addr !7987
  %11 = icmp eq i32 %10, 0, !insn.addr !7988
  br i1 %11, label %dec_label_pc_1dcba, label %dec_label_pc_1dc9a, !insn.addr !7989

dec_label_pc_1dc9a:                               ; preds = %9
  %12 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @global_var_35598, i32 0, i32 0), align 16, !insn.addr !7990
  %13 = mul i32 %spec.select, 65536, !insn.addr !7991
  %14 = sub i32 100, %spec.select, !insn.addr !7992
  %15 = or i32 %14, %13, !insn.addr !7993
  %16 = call i32 @fpga_write(i32 %12, i32 %15), !insn.addr !7994
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !7995
  br label %dec_label_pc_1dd06, !insn.addr !7995

dec_label_pc_1dcba:                               ; preds = %9
  %17 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @global_var_3582c, i32 0, i32 0), align 16, !insn.addr !7996
  %18 = mul i32 %spec.select, 65536, !insn.addr !7997
  %19 = sub i32 100, %spec.select, !insn.addr !7998
  %20 = or i32 %19, %18, !insn.addr !7999
  %21 = call i32 @fpga_write(i32 %17, i32 %20), !insn.addr !8000
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8001
  br label %dec_label_pc_1dd06, !insn.addr !8001

dec_label_pc_1dcda:                               ; preds = %dec_label_pc_1dc7a
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c1e0, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2c250, i32 0, i32 0), i32 55), !insn.addr !8002
  %23 = call i32 (i8*, ...) @printf(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_c214 to i32), i32 131072) to i8*)), !insn.addr !8003
  %24 = call i32 @__asm_nop(i32 %23, i32 %0, i32 55, i32 %0), !insn.addr !8004
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8004
  br label %dec_label_pc_1dd06, !insn.addr !8004

dec_label_pc_1dd06:                               ; preds = %dec_label_pc_1dc9a, %dec_label_pc_1dcba, %dec_label_pc_1dcda, %dec_label_pc_1dc52
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8005

; uselistorder directives
  uselistorder i32 %spec.select, { 3, 0, 2, 1 }
  uselistorder i32 %0, { 1, 0, 2 }
  uselistorder i32* %storemerge.reg2mem, { 0, 3, 2, 1, 4 }
  uselistorder i32 55, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1dd06, { 2, 1, 0, 3 }
  uselistorder label %9, { 1, 0 }
}

define i32 @pwm_get(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dd10:
  %0 = alloca i32
  %storemerge.reg2mem = alloca i32, !insn.addr !8006
  %.pre-phi.reg2mem = alloca i32*, !insn.addr !8006
  %1 = load i32, i32* %0
  %2 = add i32 %arg1, -1, !insn.addr !8007
  %3 = icmp slt i32 %2, 2, !insn.addr !8008
  br i1 %3, label %dec_label_pc_1dd50, label %dec_label_pc_1dd28, !insn.addr !8008

dec_label_pc_1dd28:                               ; preds = %dec_label_pc_1dd10
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c1e0, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2c248, i32 0, i32 0), i32 71), !insn.addr !8009
  %5 = call i32 @puts(i8* inttoptr (i32 or (i32 ptrtoint (i8** @global_var_c208 to i32), i32 131072) to i8*)), !insn.addr !8010
  store i32 -3, i32* %storemerge.reg2mem, !insn.addr !8011
  br label %dec_label_pc_1ddc8, !insn.addr !8011

dec_label_pc_1dd50:                               ; preds = %dec_label_pc_1dd10
  %6 = icmp eq i32 %2, 0, !insn.addr !8012
  br i1 %6, label %dec_label_pc_1dd58, label %dec_label_pc_1ddc4, !insn.addr !8013

dec_label_pc_1dd58:                               ; preds = %dec_label_pc_1dd50
  %7 = load i32, i32* @global_var_235c58, align 4, !insn.addr !8014
  %8 = icmp eq i32 %7, 0, !insn.addr !8015
  br i1 %8, label %dec_label_pc_1dd7a, label %dec_label_pc_1dd66, !insn.addr !8016

dec_label_pc_1dd66:                               ; preds = %dec_label_pc_1dd58
  %9 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @global_var_35598, i32 0, i32 0), align 16, !insn.addr !8017
  %10 = inttoptr i32 %arg2 to i32*
  %11 = call i32 @fpga_read(i32 %9, i32* %10), !insn.addr !8018
  store i32* %10, i32** %.pre-phi.reg2mem, !insn.addr !8019
  br label %dec_label_pc_1dd8c, !insn.addr !8019

dec_label_pc_1dd7a:                               ; preds = %dec_label_pc_1dd58
  %12 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @global_var_3582c, i32 0, i32 0), align 16, !insn.addr !8020
  %13 = inttoptr i32 %arg2 to i32*
  %14 = call i32 @fpga_read(i32 %12, i32* %13), !insn.addr !8021
  store i32* %13, i32** %.pre-phi.reg2mem, !insn.addr !8021
  br label %dec_label_pc_1dd8c, !insn.addr !8021

dec_label_pc_1dd8c:                               ; preds = %dec_label_pc_1dd7a, %dec_label_pc_1dd66
  %.pre-phi.reload = load i32*, i32** %.pre-phi.reg2mem
  %15 = udiv i32 %arg2, 65536, !insn.addr !8022
  store i32 %15, i32* %.pre-phi.reload, align 4, !insn.addr !8023
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c1e0, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2c248, i32 0, i32 0), i32 79), !insn.addr !8024
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2c230, i32 0, i32 0), i32 ptrtoint ([8 x i8]* @global_var_2c248 to i32)), !insn.addr !8025
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8026
  br label %dec_label_pc_1ddc8, !insn.addr !8026

dec_label_pc_1ddc4:                               ; preds = %dec_label_pc_1dd50
  %18 = call i32 @__asm_nop(i32 %arg1, i32 %arg2, i32 %1, i32 %2), !insn.addr !8027
  store i32 -5, i32* %storemerge.reg2mem, !insn.addr !8027
  br label %dec_label_pc_1ddc8, !insn.addr !8027

dec_label_pc_1ddc8:                               ; preds = %dec_label_pc_1dd8c, %dec_label_pc_1ddc4, %dec_label_pc_1dd28
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8028

; uselistorder directives
  uselistorder i32 %2, { 1, 0, 2 }
  uselistorder i32** %.pre-phi.reg2mem, { 0, 2, 1 }
  uselistorder i32 131072, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 104, 105, 107, 108, 109, 110, 111, 112 }
  uselistorder [8 x i8]* @global_var_2c248, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1ddc8, { 1, 0, 2 }
}

define i32 @get_send_address_info(i32 %arg1, i32* %arg2, i32* %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_1ddd4:
  %0 = load i32, i32* @global_var_235c58, align 4, !insn.addr !8029
  %1 = icmp eq i32 %0, 0, !insn.addr !8030
  br i1 %1, label %dec_label_pc_1e182, label %dec_label_pc_1ddf6, !insn.addr !8031

dec_label_pc_1ddf6:                               ; preds = %dec_label_pc_1ddd4
  %2 = icmp ult i32 %arg1, 13, !insn.addr !8032
  %3 = icmp ne i1 %2, true, !insn.addr !8032
  %4 = icmp eq i32 %arg1, 13, !insn.addr !8032
  %5 = icmp ne i1 %4, true, !insn.addr !8033
  %6 = icmp eq i1 %3, %5, !insn.addr !8033
  br i1 %6, label %dec_label_pc_1e14e, label %dec_label_pc_1ddfe, !insn.addr !8033

dec_label_pc_1ddfe:                               ; preds = %dec_label_pc_1ddf6
  %7 = call i32 @__asm_adr(i32 4), !insn.addr !8034
  ret i32 %arg1, !insn.addr !8035

dec_label_pc_1e14e:                               ; preds = %dec_label_pc_1ddf6
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c5ac, i32 0, i32 0), i32 124), !insn.addr !8036
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_2c278, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c5ac, i32 0, i32 0), i32 %arg1), !insn.addr !8037
  br label %dec_label_pc_1e41c, !insn.addr !8038

dec_label_pc_1e182:                               ; preds = %dec_label_pc_1ddd4
  %10 = icmp ult i32 %arg1, 9, !insn.addr !8039
  %11 = icmp ne i1 %10, true, !insn.addr !8039
  %12 = icmp eq i32 %arg1, 9, !insn.addr !8039
  %13 = icmp ne i1 %12, true, !insn.addr !8040
  %14 = icmp eq i1 %11, %13, !insn.addr !8040
  br i1 %14, label %dec_label_pc_1e3e8, label %dec_label_pc_1e18a, !insn.addr !8040

dec_label_pc_1e18a:                               ; preds = %dec_label_pc_1e182
  %15 = call i32 @__asm_adr(i32 4), !insn.addr !8041
  ret i32 %arg1, !insn.addr !8042

dec_label_pc_1e3e8:                               ; preds = %dec_label_pc_1e182
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c5ac, i32 0, i32 0), i32 201), !insn.addr !8043
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_2c278, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c5ac, i32 0, i32 0), i32 %arg1), !insn.addr !8044
  %18 = call i32 @__asm_nop(i32 %17, i32 ptrtoint ([22 x i8]* @global_var_2c5ac to i32), i32 %arg1, i32 -1), !insn.addr !8045
  br label %dec_label_pc_1e41c, !insn.addr !8045

dec_label_pc_1e41c:                               ; preds = %dec_label_pc_1e3e8, %dec_label_pc_1e14e
  ret i32 -1, !insn.addr !8046

; uselistorder directives
  uselistorder [22 x i8]* @global_var_2c5ac, { 1, 0 }
  uselistorder i32 %arg1, { 3, 4, 2, 5, 6, 1, 0, 8, 7 }
}

define i32 @get_read_address_info(i32 %arg1, i32* %arg2, i32* %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_1e428:
  %0 = load i32, i32* @global_var_235c58, align 4, !insn.addr !8047
  %1 = icmp eq i32 %0, 0, !insn.addr !8048
  br i1 %1, label %dec_label_pc_1e61c, label %dec_label_pc_1e448, !insn.addr !8049

dec_label_pc_1e448:                               ; preds = %dec_label_pc_1e428
  %2 = icmp ult i32 %arg1, 13, !insn.addr !8050
  %3 = icmp ne i1 %2, true, !insn.addr !8050
  %4 = icmp eq i32 %arg1, 13, !insn.addr !8050
  %5 = icmp ne i1 %4, true, !insn.addr !8051
  %6 = icmp eq i1 %3, %5, !insn.addr !8051
  br i1 %6, label %dec_label_pc_1e5e6, label %dec_label_pc_1e450, !insn.addr !8051

dec_label_pc_1e450:                               ; preds = %dec_label_pc_1e448
  %7 = call i32 @__asm_adr(i32 4), !insn.addr !8052
  ret i32 %arg1, !insn.addr !8053

dec_label_pc_1e5e6:                               ; preds = %dec_label_pc_1e448
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c594, i32 0, i32 0), i32 268), !insn.addr !8054
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_2c2a0, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c594, i32 0, i32 0), i32 %arg1), !insn.addr !8055
  br label %dec_label_pc_1e7de, !insn.addr !8056

dec_label_pc_1e61c:                               ; preds = %dec_label_pc_1e428
  %10 = icmp ult i32 %arg1, 9, !insn.addr !8057
  %11 = icmp ne i1 %10, true, !insn.addr !8057
  %12 = icmp eq i32 %arg1, 9, !insn.addr !8057
  %13 = icmp ne i1 %12, true, !insn.addr !8058
  %14 = icmp eq i1 %11, %13, !insn.addr !8058
  br i1 %14, label %dec_label_pc_1e7a8, label %dec_label_pc_1e624, !insn.addr !8058

dec_label_pc_1e624:                               ; preds = %dec_label_pc_1e61c
  %15 = call i32 @__asm_adr(i32 4), !insn.addr !8059
  ret i32 %arg1, !insn.addr !8060

dec_label_pc_1e7a8:                               ; preds = %dec_label_pc_1e61c
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c594, i32 0, i32 0), i32 326), !insn.addr !8061
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_2c2a0, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c594, i32 0, i32 0), i32 %arg1), !insn.addr !8062
  %18 = call i32 @__asm_nop(i32 %17, i32 ptrtoint ([22 x i8]* @global_var_2c594 to i32), i32 %arg1, i32 -1), !insn.addr !8063
  br label %dec_label_pc_1e7de, !insn.addr !8063

dec_label_pc_1e7de:                               ; preds = %dec_label_pc_1e7a8, %dec_label_pc_1e5e6
  ret i32 -1, !insn.addr !8064

; uselistorder directives
  uselistorder [22 x i8]* @global_var_2c594, { 1, 0 }
  uselistorder i32 %arg1, { 3, 4, 2, 5, 6, 1, 0, 8, 7 }
}

define i32 @check_how_many_uart_data_in_fpga(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e7ec:
  %0 = urem i32 %arg1, 256
  %1 = load i32, i32* @global_var_235c58, align 4, !insn.addr !8065
  %2 = icmp eq i32 %1, 0, !insn.addr !8066
  br i1 %2, label %dec_label_pc_1ea52, label %dec_label_pc_1e80a, !insn.addr !8067

dec_label_pc_1e80a:                               ; preds = %dec_label_pc_1e7ec
  %3 = icmp ult i32 %0, 13, !insn.addr !8068
  %4 = icmp ne i1 %3, true, !insn.addr !8068
  %5 = icmp eq i32 %0, 13, !insn.addr !8068
  %6 = icmp ne i1 %5, true, !insn.addr !8069
  %7 = icmp eq i1 %4, %6, !insn.addr !8069
  br i1 %7, label %dec_label_pc_1ea1e, label %dec_label_pc_1e812, !insn.addr !8069

dec_label_pc_1e812:                               ; preds = %dec_label_pc_1e80a
  %8 = call i32 @__asm_adr(i32 4), !insn.addr !8070
  ret i32 %arg1, !insn.addr !8071

dec_label_pc_1ea1e:                               ; preds = %dec_label_pc_1e80a
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_2c570, i32 0, i32 0), i32 394), !insn.addr !8072
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_2c2a0, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_2c570, i32 0, i32 0), i32 %0), !insn.addr !8073
  br label %dec_label_pc_1ec04, !insn.addr !8074

dec_label_pc_1ea52:                               ; preds = %dec_label_pc_1e7ec
  %11 = icmp ult i32 %0, 9, !insn.addr !8075
  %12 = icmp ne i1 %11, true, !insn.addr !8075
  %13 = icmp eq i32 %0, 9, !insn.addr !8075
  %14 = icmp ne i1 %13, true, !insn.addr !8076
  %15 = icmp eq i1 %12, %14, !insn.addr !8076
  br i1 %15, label %dec_label_pc_1ebd2, label %dec_label_pc_1ea5a, !insn.addr !8076

dec_label_pc_1ea5a:                               ; preds = %dec_label_pc_1ea52
  %16 = call i32 @__asm_adr(i32 4), !insn.addr !8077
  ret i32 %arg1, !insn.addr !8078

dec_label_pc_1ebd2:                               ; preds = %dec_label_pc_1ea52
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_2c570, i32 0, i32 0), i32 449), !insn.addr !8079
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_2c2a0, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_2c570, i32 0, i32 0), i32 %0), !insn.addr !8080
  br label %dec_label_pc_1ec04, !insn.addr !8081

dec_label_pc_1ec04:                               ; preds = %dec_label_pc_1ebd2, %dec_label_pc_1ea1e
  ret i32 0, !insn.addr !8082

; uselistorder directives
  uselistorder i32 %0, { 4, 1, 0, 5, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @read_uart_data_in_fpga(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ec10:
  %storemerge.reg2mem = alloca i32, !insn.addr !8083
  %storemerge1.lcssa.reg2mem = alloca i32, !insn.addr !8083
  %storemerge12.reg2mem = alloca i32, !insn.addr !8083
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 0, i32* %stack_var_-28, align 4, !insn.addr !8084
  store i32 0, i32* %stack_var_-32, align 4, !insn.addr !8085
  store i32 0, i32* %stack_var_-36, align 4, !insn.addr !8086
  %0 = call i32 @get_read_address_info(i32 %arg1, i32* nonnull %stack_var_-28, i32* nonnull %stack_var_-32, i32* nonnull %stack_var_-32), !insn.addr !8087
  %1 = icmp eq i32 %0, 0, !insn.addr !8088
  br i1 %1, label %dec_label_pc_1ec7a, label %dec_label_pc_1ec50, !insn.addr !8089

dec_label_pc_1ec50:                               ; preds = %dec_label_pc_1ec10
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2c558, i32 0, i32 0), i32 461), !insn.addr !8090
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_var_2c2c4, i32 0, i32 0), i32 %arg1), !insn.addr !8091
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8092
  br label %dec_label_pc_1eddc, !insn.addr !8092

dec_label_pc_1ec7a:                               ; preds = %dec_label_pc_1ec10
  %4 = call i32 @__asm_ubfx(i32 %arg3, i32 0, i32 10), !insn.addr !8093
  %5 = or i32 %4, -2147483648, !insn.addr !8094
  %6 = load i32, i32* %stack_var_-28, align 4, !insn.addr !8095
  %7 = call i32 @fpga_write(i32 %6, i32 %5), !insn.addr !8096
  %8 = udiv i32 %arg3, 4, !insn.addr !8097
  %9 = icmp ult i32 %arg3, 4
  store i32 0, i32* %storemerge12.reg2mem, !insn.addr !8098
  store i32 0, i32* %storemerge1.lcssa.reg2mem, !insn.addr !8098
  br i1 %9, label %dec_label_pc_1ecfc, label %dec_label_pc_1ec9c, !insn.addr !8098

dec_label_pc_1ec9c:                               ; preds = %dec_label_pc_1ec7a, %dec_label_pc_1ec9c
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %10 = load i32, i32* %stack_var_-32, align 4, !insn.addr !8099
  %11 = call i32 @fpga_read(i32 %10, i32* nonnull %stack_var_-36), !insn.addr !8100
  %12 = mul i32 %storemerge12.reload, 4, !insn.addr !8101
  %13 = add i32 %12, %arg2, !insn.addr !8102
  %14 = load i32, i32* %stack_var_-36, align 4, !insn.addr !8103
  %15 = udiv i32 %14, 16777216, !insn.addr !8104
  %16 = trunc i32 %15 to i8, !insn.addr !8105
  %17 = inttoptr i32 %13 to i8*, !insn.addr !8105
  store i8 %16, i8* %17, align 1, !insn.addr !8105
  %18 = or i32 %12, 1, !insn.addr !8106
  %19 = add i32 %18, %arg2, !insn.addr !8107
  %20 = load i32, i32* %stack_var_-36, align 4, !insn.addr !8108
  %21 = udiv i32 %20, 65536, !insn.addr !8109
  %22 = trunc i32 %21 to i8, !insn.addr !8110
  %23 = inttoptr i32 %19 to i8*, !insn.addr !8110
  store i8 %22, i8* %23, align 1, !insn.addr !8110
  %24 = or i32 %12, 2, !insn.addr !8111
  %25 = add i32 %24, %arg2, !insn.addr !8112
  %26 = load i32, i32* %stack_var_-36, align 4, !insn.addr !8113
  %27 = udiv i32 %26, 256, !insn.addr !8114
  %28 = trunc i32 %27 to i8, !insn.addr !8115
  %29 = inttoptr i32 %25 to i8*, !insn.addr !8115
  store i8 %28, i8* %29, align 1, !insn.addr !8115
  %30 = or i32 %12, 3, !insn.addr !8116
  %31 = add i32 %30, %arg2, !insn.addr !8117
  %32 = load i32, i32* %stack_var_-36, align 4, !insn.addr !8118
  %33 = trunc i32 %32 to i8, !insn.addr !8119
  %34 = inttoptr i32 %31 to i8*, !insn.addr !8119
  store i8 %33, i8* %34, align 1, !insn.addr !8119
  %35 = add nuw nsw i32 %storemerge12.reload, 1, !insn.addr !8120
  %36 = icmp ult i32 %35, %8, !insn.addr !8121
  store i32 %35, i32* %storemerge12.reg2mem, !insn.addr !8098
  br i1 %36, label %dec_label_pc_1ec9c, label %dec_label_pc_1ecf4.dec_label_pc_1ecfc_crit_edge, !insn.addr !8098

dec_label_pc_1ecf4.dec_label_pc_1ecfc_crit_edge:  ; preds = %dec_label_pc_1ec9c
  %phitmp = mul i32 %35, 4
  store i32 %phitmp, i32* %storemerge1.lcssa.reg2mem
  br label %dec_label_pc_1ecfc

dec_label_pc_1ecfc:                               ; preds = %dec_label_pc_1ec7a, %dec_label_pc_1ecf4.dec_label_pc_1ecfc_crit_edge
  %37 = and i32 %arg3, -4, !insn.addr !8122
  %38 = urem i32 %arg3, 4, !insn.addr !8123
  %39 = icmp eq i32 %38, 0, !insn.addr !8124
  store i32 %37, i32* %storemerge.reg2mem, !insn.addr !8125
  br i1 %39, label %dec_label_pc_1eddc, label %dec_label_pc_1ed10, !insn.addr !8125

dec_label_pc_1ed10:                               ; preds = %dec_label_pc_1ecfc
  %storemerge1.lcssa.reload = load i32, i32* %storemerge1.lcssa.reg2mem
  %40 = load i32, i32* %stack_var_-32, align 4, !insn.addr !8126
  %41 = call i32 @fpga_read(i32 %40, i32* nonnull %stack_var_-36), !insn.addr !8127
  %trunc = trunc i32 %arg3 to i2
  switch i2 %trunc, label %dec_label_pc_1edaa [
    i2 -2, label %dec_label_pc_1ed44
    i2 -1, label %dec_label_pc_1ed6e
    i2 1, label %dec_label_pc_1ed2c
  ]

dec_label_pc_1ed2c:                               ; preds = %dec_label_pc_1ed10
  %42 = add i32 %storemerge1.lcssa.reload, %arg2, !insn.addr !8128
  %43 = load i32, i32* %stack_var_-36, align 4, !insn.addr !8129
  %44 = udiv i32 %43, 16777216, !insn.addr !8130
  %45 = trunc i32 %44 to i8, !insn.addr !8131
  %46 = inttoptr i32 %42 to i8*, !insn.addr !8131
  store i8 %45, i8* %46, align 1, !insn.addr !8131
  %47 = or i32 %37, 1, !insn.addr !8132
  store i32 %47, i32* %storemerge.reg2mem, !insn.addr !8133
  br label %dec_label_pc_1eddc, !insn.addr !8133

dec_label_pc_1ed44:                               ; preds = %dec_label_pc_1ed10
  %48 = add i32 %storemerge1.lcssa.reload, %arg2, !insn.addr !8134
  %49 = load i32, i32* %stack_var_-36, align 4, !insn.addr !8135
  %50 = udiv i32 %49, 16777216, !insn.addr !8136
  %51 = trunc i32 %50 to i8, !insn.addr !8137
  %52 = inttoptr i32 %48 to i8*, !insn.addr !8137
  store i8 %51, i8* %52, align 1, !insn.addr !8137
  %53 = or i32 %storemerge1.lcssa.reload, 1, !insn.addr !8138
  %54 = add i32 %53, %arg2, !insn.addr !8139
  %55 = load i32, i32* %stack_var_-36, align 4, !insn.addr !8140
  %56 = udiv i32 %55, 65536, !insn.addr !8141
  %57 = trunc i32 %56 to i8, !insn.addr !8142
  %58 = inttoptr i32 %54 to i8*, !insn.addr !8142
  store i8 %57, i8* %58, align 1, !insn.addr !8142
  %59 = or i32 %37, 2, !insn.addr !8143
  store i32 %59, i32* %storemerge.reg2mem, !insn.addr !8144
  br label %dec_label_pc_1eddc, !insn.addr !8144

dec_label_pc_1ed6e:                               ; preds = %dec_label_pc_1ed10
  %60 = add i32 %storemerge1.lcssa.reload, %arg2, !insn.addr !8145
  %61 = load i32, i32* %stack_var_-36, align 4, !insn.addr !8146
  %62 = udiv i32 %61, 16777216, !insn.addr !8147
  %63 = trunc i32 %62 to i8, !insn.addr !8148
  %64 = inttoptr i32 %60 to i8*, !insn.addr !8148
  store i8 %63, i8* %64, align 1, !insn.addr !8148
  %65 = or i32 %storemerge1.lcssa.reload, 1, !insn.addr !8149
  %66 = add i32 %65, %arg2, !insn.addr !8150
  %67 = load i32, i32* %stack_var_-36, align 4, !insn.addr !8151
  %68 = udiv i32 %67, 65536, !insn.addr !8152
  %69 = trunc i32 %68 to i8, !insn.addr !8153
  %70 = inttoptr i32 %66 to i8*, !insn.addr !8153
  store i8 %69, i8* %70, align 1, !insn.addr !8153
  %71 = or i32 %storemerge1.lcssa.reload, 2, !insn.addr !8154
  %72 = add i32 %71, %arg2, !insn.addr !8155
  %73 = load i32, i32* %stack_var_-36, align 4, !insn.addr !8156
  %74 = udiv i32 %73, 256, !insn.addr !8157
  %75 = trunc i32 %74 to i8, !insn.addr !8158
  %76 = inttoptr i32 %72 to i8*, !insn.addr !8158
  store i8 %75, i8* %76, align 1, !insn.addr !8158
  %77 = or i32 %arg3, 3, !insn.addr !8159
  store i32 %77, i32* %storemerge.reg2mem, !insn.addr !8160
  br label %dec_label_pc_1eddc, !insn.addr !8160

dec_label_pc_1edaa:                               ; preds = %dec_label_pc_1ed10
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2c558, i32 0, i32 0), i32 507), !insn.addr !8161
  %79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_2c2f0, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2c558, i32 0, i32 0), i32 %arg1), !insn.addr !8162
  %80 = call i32 @__asm_nop(i32 %79, i32 ptrtoint ([23 x i8]* @global_var_2c558 to i32), i32 %arg1, i32 %38), !insn.addr !8163
  store i32 %37, i32* %storemerge.reg2mem, !insn.addr !8163
  br label %dec_label_pc_1eddc, !insn.addr !8163

dec_label_pc_1eddc:                               ; preds = %dec_label_pc_1ecfc, %dec_label_pc_1ed2c, %dec_label_pc_1ed44, %dec_label_pc_1ed6e, %dec_label_pc_1edaa, %dec_label_pc_1ec50
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8164

; uselistorder directives
  uselistorder i32 %storemerge1.lcssa.reload, { 1, 2, 4, 0, 5, 3 }
  uselistorder i32 %38, { 1, 0 }
  uselistorder i32 %37, { 0, 2, 3, 1 }
  uselistorder i32 %35, { 1, 0, 2 }
  uselistorder i32 %12, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 2, 3, 0, 1, 4 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 11, 1, 12 }
  uselistorder i32* %storemerge12.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge1.lcssa.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder [23 x i8]* @global_var_2c558, { 1, 0 }
  uselistorder i32 %arg3, { 4, 3, 1, 5, 0, 2, 6 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1eddc, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_1ecfc, { 1, 0 }
  uselistorder label %dec_label_pc_1ec9c, { 1, 0 }
}

define i32 @uart_init() local_unnamed_addr {
dec_label_pc_1ede8:
  %storemerge.reg2mem = alloca i32, !insn.addr !8165
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !8166
  %1 = icmp eq i32 %0, 0, !insn.addr !8167
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8168
  br i1 %1, label %dec_label_pc_1edfa, label %dec_label_pc_1ee26, !insn.addr !8168

dec_label_pc_1edfa:                               ; preds = %dec_label_pc_1ede8
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c54c, i32 0, i32 0), i32 518), !insn.addr !8169
  %3 = call i32 @puts(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2c324, i32 0, i32 0)), !insn.addr !8170
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !8171
  br label %dec_label_pc_1ee26, !insn.addr !8171

dec_label_pc_1ee26:                               ; preds = %dec_label_pc_1ede8, %dec_label_pc_1edfa
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8172

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ee26, { 1, 0 }
}

define i32 @uart_uninit() local_unnamed_addr {
dec_label_pc_1ee2c:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1, !insn.addr !8173
}

define i32 @hexdump(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ee38:
  %r0.1.reg2mem = alloca i32, !insn.addr !8174
  %stack_var_-28.010.reg2mem = alloca i32, !insn.addr !8174
  %stack_var_-12.011.reg2mem = alloca i32, !insn.addr !8174
  %r1.212.reg2mem = alloca i32, !insn.addr !8174
  %r2.3.reg2mem = alloca i32, !insn.addr !8174
  %storemerge1.reg2mem = alloca i32, !insn.addr !8174
  %storemerge8.reg2mem = alloca i32, !insn.addr !8174
  %r1.0.reg2mem = alloca i32, !insn.addr !8174
  %r1.15.reg2mem = alloca i32, !insn.addr !8174
  %storemerge26.reg2mem = alloca i32, !insn.addr !8174
  %0 = inttoptr i32 %arg1 to i8*, !insn.addr !8175
  %1 = inttoptr i32 %arg2 to i32*, !insn.addr !8175
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @global_var_2c344, i32 0, i32 0), i32 %arg3, i8* %0, i32* %1), !insn.addr !8175
  %3 = icmp sgt i32 %arg3, 0, !insn.addr !8176
  store i32 %arg3, i32* %r1.212.reg2mem, !insn.addr !8176
  store i32 %arg2, i32* %stack_var_-12.011.reg2mem, !insn.addr !8176
  store i32 %arg3, i32* %stack_var_-28.010.reg2mem, !insn.addr !8176
  store i32 %2, i32* %r0.1.reg2mem, !insn.addr !8176
  br i1 %3, label %dec_label_pc_1ee94.preheader, label %dec_label_pc_1ef08, !insn.addr !8176

dec_label_pc_1ee62:                               ; preds = %dec_label_pc_1ee94.preheader, %dec_label_pc_1ee8e
  %storemerge26.reload = load i32, i32* %storemerge26.reg2mem
  %4 = icmp ult i32 %stack_var_-28.010.reload, %storemerge26.reload, !insn.addr !8177
  %5 = icmp ne i1 %4, true, !insn.addr !8177
  %6 = icmp eq i32 %stack_var_-28.010.reload, %storemerge26.reload, !insn.addr !8177
  %7 = icmp ne i1 %5, true, !insn.addr !8178
  %8 = or i1 %6, %7, !insn.addr !8178
  br i1 %8, label %dec_label_pc_1ee82, label %dec_label_pc_1ee6a, !insn.addr !8178

dec_label_pc_1ee6a:                               ; preds = %dec_label_pc_1ee62
  %9 = add i32 %storemerge26.reload, %stack_var_-12.011.reload, !insn.addr !8179
  %10 = inttoptr i32 %9 to i8*, !insn.addr !8180
  %11 = load i8, i8* %10, align 1, !insn.addr !8180
  %12 = zext i8 %11 to i32, !insn.addr !8180
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c364, i32 0, i32 0), i32 %12), !insn.addr !8181
  store i32 %12, i32* %r1.0.reg2mem, !insn.addr !8182
  br label %dec_label_pc_1ee8e, !insn.addr !8182

dec_label_pc_1ee82:                               ; preds = %dec_label_pc_1ee62
  %r1.15.reload = load i32, i32* %r1.15.reg2mem
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2c36c, i32 0, i32 0)), !insn.addr !8183
  store i32 %r1.15.reload, i32* %r1.0.reg2mem, !insn.addr !8183
  br label %dec_label_pc_1ee8e, !insn.addr !8183

dec_label_pc_1ee8e:                               ; preds = %dec_label_pc_1ee82, %dec_label_pc_1ee6a
  %r1.0.reload = load i32, i32* %r1.0.reg2mem
  %15 = add i32 %storemerge26.reload, 1, !insn.addr !8184
  %16 = icmp ult i32 %15, 15, !insn.addr !8185
  %17 = icmp ne i1 %16, true, !insn.addr !8185
  %18 = icmp eq i32 %15, 15, !insn.addr !8185
  %19 = icmp ne i1 %17, true, !insn.addr !8186
  %20 = or i1 %18, %19, !insn.addr !8186
  store i32 %15, i32* %storemerge26.reg2mem, !insn.addr !8186
  store i32 %r1.0.reload, i32* %r1.15.reg2mem, !insn.addr !8186
  store i32 0, i32* %storemerge8.reg2mem, !insn.addr !8186
  br i1 %20, label %dec_label_pc_1ee62, label %dec_label_pc_1eea0, !insn.addr !8186

dec_label_pc_1eea0:                               ; preds = %dec_label_pc_1ee8e, %dec_label_pc_1eeda
  %storemerge8.reload = load i32, i32* %storemerge8.reg2mem
  %21 = icmp ult i32 %stack_var_-28.010.reload, %storemerge8.reload, !insn.addr !8187
  %22 = icmp ne i1 %21, true, !insn.addr !8187
  %23 = icmp eq i32 %stack_var_-28.010.reload, %storemerge8.reload, !insn.addr !8187
  %24 = icmp ne i1 %22, true, !insn.addr !8188
  %25 = or i1 %23, %24, !insn.addr !8188
  br i1 %25, label %dec_label_pc_1eed4, label %dec_label_pc_1eea8, !insn.addr !8188

dec_label_pc_1eea8:                               ; preds = %dec_label_pc_1eea0
  %26 = add i32 %storemerge8.reload, %stack_var_-12.011.reload, !insn.addr !8189
  %27 = inttoptr i32 %26 to i8*, !insn.addr !8190
  %28 = load i8, i8* %27, align 1, !insn.addr !8190
  %29 = icmp ult i8 %28, 31, !insn.addr !8191
  %30 = icmp ne i1 %29, true, !insn.addr !8191
  %31 = icmp eq i8 %28, 31, !insn.addr !8191
  %32 = icmp ne i1 %30, true, !insn.addr !8192
  %33 = or i1 %31, %32, !insn.addr !8192
  store i32 46, i32* %storemerge1.reg2mem, !insn.addr !8192
  br i1 %33, label %dec_label_pc_1eecc, label %dec_label_pc_1eeb4, !insn.addr !8192

dec_label_pc_1eeb4:                               ; preds = %dec_label_pc_1eea8
  %34 = icmp ult i8 %28, 126, !insn.addr !8193
  %35 = icmp ne i1 %34, true, !insn.addr !8193
  %36 = icmp eq i8 %28, 126, !insn.addr !8193
  %37 = icmp ne i1 %36, true, !insn.addr !8194
  %38 = icmp eq i1 %35, %37, !insn.addr !8194
  %39 = zext i8 %28 to i32
  %spec.select = select i1 %38, i32 46, i32 %39
  store i32 %spec.select, i32* %storemerge1.reg2mem
  br label %dec_label_pc_1eecc

dec_label_pc_1eecc:                               ; preds = %dec_label_pc_1eeb4, %dec_label_pc_1eea8
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %40 = call i32 @putchar(i32 %storemerge1.reload), !insn.addr !8195
  store i32 %stack_var_-12.011.reload, i32* %r2.3.reg2mem, !insn.addr !8196
  br label %dec_label_pc_1eeda, !insn.addr !8196

dec_label_pc_1eed4:                               ; preds = %dec_label_pc_1eea0
  %41 = call i32 @putchar(i32 32), !insn.addr !8197
  store i32 %stack_var_-28.010.reload, i32* %r2.3.reg2mem, !insn.addr !8197
  br label %dec_label_pc_1eeda, !insn.addr !8197

dec_label_pc_1eeda:                               ; preds = %dec_label_pc_1eed4, %dec_label_pc_1eecc
  %42 = add i32 %storemerge8.reload, 1, !insn.addr !8198
  %43 = icmp ult i32 %42, 15, !insn.addr !8199
  %44 = icmp ne i1 %43, true, !insn.addr !8199
  %45 = icmp eq i32 %42, 15, !insn.addr !8199
  %46 = icmp ne i1 %44, true, !insn.addr !8200
  %47 = or i1 %45, %46, !insn.addr !8200
  store i32 %42, i32* %storemerge8.reg2mem, !insn.addr !8200
  br i1 %47, label %dec_label_pc_1eea0, label %dec_label_pc_1eee6, !insn.addr !8200

dec_label_pc_1eee6:                               ; preds = %dec_label_pc_1eeda
  %48 = call i32 @putchar(i32 10), !insn.addr !8201
  %49 = icmp slt i32 %stack_var_-28.010.reload, 17, !insn.addr !8202
  br i1 %49, label %dec_label_pc_1ef06, label %dec_label_pc_1eef8, !insn.addr !8202

dec_label_pc_1eef8:                               ; preds = %dec_label_pc_1eee6
  %50 = add i32 %stack_var_-12.011.reload, 16, !insn.addr !8203
  %51 = add nsw i32 %stack_var_-28.010.reload, -16, !insn.addr !8204
  store i32 %r1.0.reload, i32* %r1.212.reg2mem
  store i32 %50, i32* %stack_var_-12.011.reg2mem
  store i32 %51, i32* %stack_var_-28.010.reg2mem
  br label %dec_label_pc_1ee94.preheader

dec_label_pc_1ee94.preheader:                     ; preds = %dec_label_pc_1ee38, %dec_label_pc_1eef8
  %stack_var_-28.010.reload = load i32, i32* %stack_var_-28.010.reg2mem
  %stack_var_-12.011.reload = load i32, i32* %stack_var_-12.011.reg2mem
  %r1.212.reload = load i32, i32* %r1.212.reg2mem
  store i32 0, i32* %storemerge26.reg2mem
  store i32 %r1.212.reload, i32* %r1.15.reg2mem
  br label %dec_label_pc_1ee62

dec_label_pc_1ef06:                               ; preds = %dec_label_pc_1eee6
  %r2.3.reload = load i32, i32* %r2.3.reg2mem
  %52 = call i32 @__asm_nop(i32 %48, i32 %r1.0.reload, i32 %r2.3.reload, i32 %stack_var_-28.010.reload), !insn.addr !8205
  store i32 %52, i32* %r0.1.reg2mem, !insn.addr !8205
  br label %dec_label_pc_1ef08, !insn.addr !8205

dec_label_pc_1ef08:                               ; preds = %dec_label_pc_1ee38, %dec_label_pc_1ef06
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  ret i32 %r0.1.reload, !insn.addr !8206

; uselistorder directives
  uselistorder i32 %stack_var_-12.011.reload, { 1, 2, 3, 0 }
  uselistorder i32 %stack_var_-28.010.reload, { 6, 5, 4, 3, 2, 7, 1, 0 }
  uselistorder i32 %42, { 0, 2, 1 }
  uselistorder i8 %28, { 0, 2, 1, 3, 4 }
  uselistorder i32 %storemerge8.reload, { 2, 3, 0, 1 }
  uselistorder i32 %15, { 0, 2, 1 }
  uselistorder i32 %r1.0.reload, { 1, 0, 2 }
  uselistorder i32 %storemerge26.reload, { 2, 3, 0, 1 }
  uselistorder i32* %storemerge26.reg2mem, { 2, 1, 0 }
  uselistorder i32* %r1.15.reg2mem, { 2, 1, 0 }
  uselistorder i32* %r1.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge8.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r2.3.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r1.212.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-12.011.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28.010.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32)* @putchar, { 23, 25, 24, 22, 21, 20, 19, 17, 18, 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 15, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1ef08, { 1, 0 }
  uselistorder label %dec_label_pc_1ee94.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1eea0, { 1, 0 }
}

define i32 @uart_send(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ef10:
  %storemerge.reg2mem = alloca i32, !insn.addr !8207
  %stack_var_-24.1.reg2mem = alloca i32, !insn.addr !8207
  %storemerge1.lcssa.reg2mem = alloca i32, !insn.addr !8207
  %storemerge13.reg2mem = alloca i32, !insn.addr !8207
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %0 = call i32* @memset(i32* nonnull %stack_var_-292, i32 0, i32 256), !insn.addr !8208
  store i32 0, i32* %stack_var_-296, align 4, !insn.addr !8209
  store i32 0, i32* %stack_var_-300, align 4, !insn.addr !8210
  store i32 0, i32* %stack_var_-308, align 4, !insn.addr !8211
  store i32 0, i32* %stack_var_-312, align 4, !insn.addr !8212
  %1 = mul i32 %arg1, 24
  %2 = add i32 %1, ptrtoint (i32* @global_var_235df4 to i32)
  %3 = inttoptr i32 %2 to i32*
  %4 = call i32 @pthread_mutex_lock(i32* %3), !insn.addr !8213
  %5 = call i32 @get_send_address_info(i32 %arg1, i32* nonnull %stack_var_-312, i32* nonnull %stack_var_-296, i32* nonnull %stack_var_-300), !insn.addr !8214
  %6 = icmp eq i32 %5, 0, !insn.addr !8215
  br i1 %6, label %dec_label_pc_1f018.preheader, label %dec_label_pc_1efc2, !insn.addr !8216

dec_label_pc_1f018.preheader:                     ; preds = %dec_label_pc_1ef10
  %7 = ptrtoint i32* %stack_var_-308 to i32, !insn.addr !8217
  br label %dec_label_pc_1f018

dec_label_pc_1efc2:                               ; preds = %dec_label_pc_1ef10
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c540, i32 0, i32 0), i32 584), !insn.addr !8218
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_var_2c370, i32 0, i32 0), i32 %arg1), !insn.addr !8219
  %10 = call i32 @pthread_mutex_unlock(i32* %3), !insn.addr !8220
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8221
  br label %dec_label_pc_1f208, !insn.addr !8221

dec_label_pc_1f018:                               ; preds = %dec_label_pc_1f018.preheader, %dec_label_pc_1f018
  %11 = load i32, i32* %stack_var_-296, align 4, !insn.addr !8222
  %12 = call i32 @fpga_read(i32 %11, i32* nonnull %stack_var_-308), !insn.addr !8223
  %13 = load i32, i32* %stack_var_-308, align 4, !insn.addr !8224
  %14 = load i32, i32* %stack_var_-312, align 4, !insn.addr !8225
  %15 = lshr i32 %13, %14, !insn.addr !8226
  %16 = urem i32 %15, 256, !insn.addr !8227
  store i32 %16, i32* %stack_var_-308, align 4, !insn.addr !8228
  %17 = icmp ult i32 %16, %arg3, !insn.addr !8229
  %18 = call i32 @__asm_nop(i32 %12, i32 %7, i32 %16, i32 %arg3)
  br i1 %17, label %dec_label_pc_1f018, label %dec_label_pc_1f05c, !insn.addr !8230

dec_label_pc_1f05c:                               ; preds = %dec_label_pc_1f018, %dec_label_pc_1f05c
  %19 = load i32, i32* %stack_var_-300, align 4, !insn.addr !8231
  %20 = call i32 @fpga_read(i32 %19, i32* nonnull %stack_var_-308), !insn.addr !8232
  %21 = load i32, i32* %stack_var_-308, align 4, !insn.addr !8233
  %22 = icmp slt i32 %21, 0
  %23 = zext i1 %22 to i32, !insn.addr !8234
  %24 = call i32 @__asm_nop(i32 %20, i32 %7, i32 %19, i32 %23)
  br i1 %22, label %dec_label_pc_1f05c, label %dec_label_pc_1f07a, !insn.addr !8235

dec_label_pc_1f07a:                               ; preds = %dec_label_pc_1f05c
  %25 = call i32* @memcpy(i32* nonnull %stack_var_-292, i32* %arg2, i32 %arg3), !insn.addr !8236
  %26 = icmp ult i32 %arg3, 4
  store i32 0, i32* %storemerge1.lcssa.reg2mem, !insn.addr !8237
  br i1 %26, label %dec_label_pc_1f10e, label %dec_label_pc_1f0a2.lr.ph, !insn.addr !8237

dec_label_pc_1f0a2.lr.ph:                         ; preds = %dec_label_pc_1f07a
  %27 = udiv i32 %arg3, 4, !insn.addr !8238
  %28 = ptrtoint i32* %stack_var_-292 to i32, !insn.addr !8239
  store i32 0, i32* %storemerge13.reg2mem
  br label %dec_label_pc_1f0a2

dec_label_pc_1f0a2:                               ; preds = %dec_label_pc_1f0a2.lr.ph, %dec_label_pc_1f0a2
  %storemerge13.reload = load i32, i32* %storemerge13.reg2mem
  %29 = mul i32 %storemerge13.reload, 4, !insn.addr !8240
  %30 = add i32 %29, %28, !insn.addr !8241
  %31 = inttoptr i32 %30 to i8*, !insn.addr !8241
  %32 = load i8, i8* %31, align 4, !insn.addr !8241
  %33 = zext i8 %32 to i32, !insn.addr !8241
  %34 = mul i32 %33, 16777216, !insn.addr !8242
  %35 = or i32 %29, 1, !insn.addr !8243
  %36 = add i32 %35, %28, !insn.addr !8244
  %37 = inttoptr i32 %36 to i8*, !insn.addr !8244
  %38 = load i8, i8* %37, align 1, !insn.addr !8244
  %39 = zext i8 %38 to i32, !insn.addr !8244
  %40 = mul i32 %39, 65536, !insn.addr !8245
  %41 = or i32 %40, %34, !insn.addr !8246
  %42 = or i32 %29, 2, !insn.addr !8247
  %43 = add i32 %42, %28, !insn.addr !8248
  %44 = inttoptr i32 %43 to i8*, !insn.addr !8248
  %45 = load i8, i8* %44, align 2, !insn.addr !8248
  %46 = zext i8 %45 to i32, !insn.addr !8248
  %47 = mul i32 %46, 256, !insn.addr !8249
  %48 = or i32 %41, %47, !insn.addr !8250
  %49 = or i32 %29, 3, !insn.addr !8251
  %50 = add i32 %49, %28, !insn.addr !8252
  %51 = inttoptr i32 %50 to i8*, !insn.addr !8252
  %52 = load i8, i8* %51, align 1, !insn.addr !8252
  %53 = zext i8 %52 to i32, !insn.addr !8252
  %54 = or i32 %48, %53, !insn.addr !8253
  %55 = call i32 @fpga_write(i32 0, i32 %54), !insn.addr !8254
  %56 = add nuw nsw i32 %storemerge13.reload, 1, !insn.addr !8255
  %57 = icmp ult i32 %56, %27, !insn.addr !8237
  store i32 %56, i32* %storemerge13.reg2mem, !insn.addr !8237
  br i1 %57, label %dec_label_pc_1f0a2, label %dec_label_pc_1f102.dec_label_pc_1f10e_crit_edge, !insn.addr !8237

dec_label_pc_1f102.dec_label_pc_1f10e_crit_edge:  ; preds = %dec_label_pc_1f0a2
  %phitmp = mul i32 %56, 4
  store i32 %phitmp, i32* %storemerge1.lcssa.reg2mem
  br label %dec_label_pc_1f10e

dec_label_pc_1f10e:                               ; preds = %dec_label_pc_1f07a, %dec_label_pc_1f102.dec_label_pc_1f10e_crit_edge
  %storemerge1.lcssa.reload = load i32, i32* %storemerge1.lcssa.reg2mem
  %trunc = trunc i32 %arg3 to i2
  switch i2 %trunc, label %dec_label_pc_1f1a42 [
    i2 0, label %dec_label_pc_1f1d0
    i2 -2, label %dec_label_pc_1f146
    i2 -1, label %dec_label_pc_1f16c
    i2 1, label %dec_label_pc_1f132
  ]

dec_label_pc_1f132:                               ; preds = %dec_label_pc_1f10e
  %58 = ptrtoint i32* %stack_var_-292 to i32, !insn.addr !8256
  %59 = add i32 %storemerge1.lcssa.reload, %58, !insn.addr !8257
  %60 = inttoptr i32 %59 to i8*, !insn.addr !8257
  %61 = load i8, i8* %60, align 4, !insn.addr !8257
  %62 = zext i8 %61 to i32, !insn.addr !8257
  %63 = mul i32 %62, 16777216, !insn.addr !8258
  store i32 %63, i32* %stack_var_-24.1.reg2mem, !insn.addr !8259
  br label %dec_label_pc_1f1c0, !insn.addr !8259

dec_label_pc_1f146:                               ; preds = %dec_label_pc_1f10e
  %64 = ptrtoint i32* %stack_var_-292 to i32, !insn.addr !8260
  %65 = add i32 %storemerge1.lcssa.reload, %64, !insn.addr !8261
  %66 = inttoptr i32 %65 to i8*, !insn.addr !8261
  %67 = load i8, i8* %66, align 4, !insn.addr !8261
  %68 = zext i8 %67 to i32, !insn.addr !8261
  %69 = mul i32 %68, 16777216, !insn.addr !8262
  %70 = or i32 %storemerge1.lcssa.reload, 1, !insn.addr !8263
  %71 = add i32 %70, %64, !insn.addr !8264
  %72 = inttoptr i32 %71 to i8*, !insn.addr !8264
  %73 = load i8, i8* %72, align 1, !insn.addr !8264
  %74 = zext i8 %73 to i32, !insn.addr !8264
  %75 = mul i32 %74, 65536, !insn.addr !8265
  %76 = or i32 %75, %69, !insn.addr !8266
  store i32 %76, i32* %stack_var_-24.1.reg2mem, !insn.addr !8267
  br label %dec_label_pc_1f1c0, !insn.addr !8267

dec_label_pc_1f16c:                               ; preds = %dec_label_pc_1f10e
  %77 = ptrtoint i32* %stack_var_-292 to i32, !insn.addr !8268
  %78 = add i32 %storemerge1.lcssa.reload, %77, !insn.addr !8269
  %79 = inttoptr i32 %78 to i8*, !insn.addr !8269
  %80 = load i8, i8* %79, align 4, !insn.addr !8269
  %81 = zext i8 %80 to i32, !insn.addr !8269
  %82 = mul i32 %81, 16777216, !insn.addr !8270
  %83 = or i32 %storemerge1.lcssa.reload, 1, !insn.addr !8271
  %84 = add i32 %83, %77, !insn.addr !8272
  %85 = inttoptr i32 %84 to i8*, !insn.addr !8272
  %86 = load i8, i8* %85, align 1, !insn.addr !8272
  %87 = zext i8 %86 to i32, !insn.addr !8272
  %88 = mul i32 %87, 65536, !insn.addr !8273
  %89 = or i32 %88, %82, !insn.addr !8274
  %90 = or i32 %storemerge1.lcssa.reload, 2, !insn.addr !8275
  %91 = add i32 %90, %77, !insn.addr !8276
  %92 = inttoptr i32 %91 to i8*, !insn.addr !8276
  %93 = load i8, i8* %92, align 2, !insn.addr !8276
  %94 = zext i8 %93 to i32, !insn.addr !8276
  %95 = mul i32 %94, 256, !insn.addr !8277
  %96 = or i32 %89, %95, !insn.addr !8278
  store i32 %96, i32* %stack_var_-24.1.reg2mem, !insn.addr !8279
  br label %dec_label_pc_1f1c0, !insn.addr !8279

dec_label_pc_1f1a42:                              ; preds = %dec_label_pc_1f10e
  unreachable

dec_label_pc_1f1c0:                               ; preds = %dec_label_pc_1f16c, %dec_label_pc_1f146, %dec_label_pc_1f132
  %stack_var_-24.1.reload = load i32, i32* %stack_var_-24.1.reg2mem
  %97 = call i32 @fpga_write(i32 0, i32 %stack_var_-24.1.reload), !insn.addr !8280
  br label %dec_label_pc_1f1d0, !insn.addr !8280

dec_label_pc_1f1d0:                               ; preds = %dec_label_pc_1f10e, %dec_label_pc_1f1c0
  %98 = load i32, i32* %stack_var_-300, align 4, !insn.addr !8281
  %99 = or i32 %arg3, -2147483648, !insn.addr !8282
  %100 = call i32 @fpga_write(i32 %98, i32 %99), !insn.addr !8283
  %101 = call i32 @pthread_mutex_unlock(i32* %3), !insn.addr !8284
  store i32 %arg3, i32* %storemerge.reg2mem, !insn.addr !8285
  br label %dec_label_pc_1f208, !insn.addr !8285

dec_label_pc_1f208:                               ; preds = %dec_label_pc_1f1d0, %dec_label_pc_1efc2
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8286

; uselistorder directives
  uselistorder i32 %storemerge1.lcssa.reload, { 1, 2, 4, 0, 5, 3 }
  uselistorder i32 %56, { 1, 0, 2 }
  uselistorder i32 %29, { 2, 1, 0, 3 }
  uselistorder i32 %16, { 2, 1, 0 }
  uselistorder i32* %stack_var_-292, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %stack_var_-296, { 1, 0, 2 }
  uselistorder i32* %stack_var_-300, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-308, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32* %stack_var_-312, { 1, 0, 2 }
  uselistorder i32* %storemerge13.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge1.lcssa.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.1.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 4, 3, 2, 1, 5, 7, 6 }
  uselistorder label %dec_label_pc_1f1d0, { 1, 0 }
  uselistorder label %dec_label_pc_1f10e, { 1, 0 }
  uselistorder label %dec_label_pc_1f0a2, { 1, 0 }
  uselistorder label %dec_label_pc_1f05c, { 1, 0 }
  uselistorder label %dec_label_pc_1f018, { 1, 0 }
}

define i32 @uart_receive(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f214:
  %storemerge.reg2mem = alloca i32, !insn.addr !8287
  %0 = mul i32 %arg1, 24, !insn.addr !8288
  %1 = add i32 %0, ptrtoint (i32* @global_var_235f74 to i32), !insn.addr !8289
  %2 = inttoptr i32 %1 to i32*, !insn.addr !8290
  %3 = call i32 @pthread_mutex_lock(i32* %2), !insn.addr !8290
  %4 = urem i32 %arg1, 256, !insn.addr !8291
  %5 = call i32 @check_how_many_uart_data_in_fpga(i32 %4, i32 %arg2, i32 ptrtoint (i32* @global_var_235f74 to i32), i32 %4), !insn.addr !8292
  %6 = icmp ult i32 %5, %arg3, !insn.addr !8293
  %7 = icmp ne i1 %6, true, !insn.addr !8293
  %8 = icmp eq i32 %5, %arg3, !insn.addr !8293
  %9 = icmp ne i1 %7, true, !insn.addr !8294
  %10 = or i1 %8, %9, !insn.addr !8294
  %spec.select = select i1 %10, i32 %5, i32 %arg3
  %11 = icmp eq i32 %spec.select, 0, !insn.addr !8295
  br i1 %11, label %dec_label_pc_1f2aa, label %dec_label_pc_1f268, !insn.addr !8296

dec_label_pc_1f268:                               ; preds = %dec_label_pc_1f214
  %12 = call i32 @read_uart_data_in_fpga(i32 %arg1, i32 %arg2, i32 %spec.select), !insn.addr !8297
  %13 = call i32 @pthread_mutex_unlock(i32* %2), !insn.addr !8298
  store i32 %12, i32* %storemerge.reg2mem, !insn.addr !8299
  br label %dec_label_pc_1f2c6, !insn.addr !8299

dec_label_pc_1f2aa:                               ; preds = %dec_label_pc_1f214
  %14 = call i32 @pthread_mutex_unlock(i32* %2), !insn.addr !8300
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8301
  br label %dec_label_pc_1f2c6, !insn.addr !8301

dec_label_pc_1f2c6:                               ; preds = %dec_label_pc_1f2aa, %dec_label_pc_1f268
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8302

; uselistorder directives
  uselistorder i32 %spec.select, { 1, 0 }
  uselistorder i32 %5, { 0, 2, 1 }
  uselistorder i32* %2, { 1, 0, 2 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @uart_set_config(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f2d0:
  %storemerge.reg2mem = alloca i32, !insn.addr !8303
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !8303
  %0 = icmp eq i32* %arg3, null, !insn.addr !8304
  store i32 -3, i32* %storemerge.reg2mem, !insn.addr !8305
  br i1 %0, label %dec_label_pc_1f396, label %dec_label_pc_1f2f0, !insn.addr !8305

dec_label_pc_1f2f0:                               ; preds = %dec_label_pc_1f2d0
  %1 = mul i32 %arg1, 24, !insn.addr !8306
  %2 = add i32 %1, ptrtoint (i32* @global_var_235df4 to i32), !insn.addr !8307
  %3 = inttoptr i32 %2 to i32*, !insn.addr !8308
  %4 = call i32 @pthread_mutex_lock(i32* %3), !insn.addr !8308
  %5 = icmp eq i32 %arg2, 0, !insn.addr !8309
  br i1 %5, label %dec_label_pc_1f310, label %dec_label_pc_1f352, !insn.addr !8310

dec_label_pc_1f310:                               ; preds = %dec_label_pc_1f2f0
  %6 = load i32, i32* @global_var_235c58, align 4, !insn.addr !8311
  %7 = icmp eq i32 %6, 0, !insn.addr !8312
  br i1 %7, label %dec_label_pc_1f338, label %dec_label_pc_1f31e, !insn.addr !8313

dec_label_pc_1f31e:                               ; preds = %dec_label_pc_1f310
  %8 = load i32, i32* @global_var_35588, align 4, !insn.addr !8314
  %9 = call i32 @fpga_write(i32 %8, i32 %8), !insn.addr !8315
  store i32 %9, i32* %stack_var_-12.0.reg2mem, !insn.addr !8316
  br label %dec_label_pc_1f37a, !insn.addr !8316

dec_label_pc_1f338:                               ; preds = %dec_label_pc_1f310
  %10 = load i32, i32* @global_var_3581c, align 4, !insn.addr !8317
  %11 = call i32 @fpga_write(i32 %10, i32 %10), !insn.addr !8318
  store i32 %11, i32* %stack_var_-12.0.reg2mem, !insn.addr !8319
  br label %dec_label_pc_1f37a, !insn.addr !8319

dec_label_pc_1f352:                               ; preds = %dec_label_pc_1f2f0
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2c530, i32 0, i32 0), i32 736), !insn.addr !8320
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @global_var_2c3d4, i32 0, i32 0), i32 %arg2), !insn.addr !8321
  %14 = call i32 @__asm_nop(i32 %13, i32 %arg2, i32 736, i32 %arg2), !insn.addr !8322
  store i32 -5, i32* %stack_var_-12.0.reg2mem, !insn.addr !8322
  br label %dec_label_pc_1f37a, !insn.addr !8322

dec_label_pc_1f37a:                               ; preds = %dec_label_pc_1f352, %dec_label_pc_1f338, %dec_label_pc_1f31e
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  %15 = call i32 @pthread_mutex_unlock(i32* %3), !insn.addr !8323
  store i32 %stack_var_-12.0.reload, i32* %storemerge.reg2mem, !insn.addr !8324
  br label %dec_label_pc_1f396, !insn.addr !8324

dec_label_pc_1f396:                               ; preds = %dec_label_pc_1f2d0, %dec_label_pc_1f37a
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8325

; uselistorder directives
  uselistorder i32* %stack_var_-12.0.reg2mem, { 0, 1, 3, 2 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 736, { 1, 0 }
  uselistorder label %dec_label_pc_1f396, { 1, 0 }
}

define i32 @uart_get_config(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f3a0:
  %storemerge.reg2mem = alloca i32, !insn.addr !8326
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %0 = icmp ne i32 %arg3, 0, !insn.addr !8327
  %1 = icmp eq i32 %arg4, 0, !insn.addr !8328
  %or.cond = icmp eq i1 %0, %1
  store i32 -3, i32* %storemerge.reg2mem, !insn.addr !8329
  br i1 %or.cond, label %dec_label_pc_1f3c6, label %dec_label_pc_1f4b6, !insn.addr !8329

dec_label_pc_1f3c6:                               ; preds = %dec_label_pc_1f3a0
  %2 = mul i32 %arg1, 24, !insn.addr !8330
  %3 = add i32 %2, ptrtoint (i32* @global_var_235df4 to i32), !insn.addr !8331
  %4 = inttoptr i32 %3 to i32*, !insn.addr !8332
  %5 = call i32 @pthread_mutex_lock(i32* %4), !insn.addr !8332
  %6 = icmp eq i32 %arg2, 0, !insn.addr !8333
  br i1 %6, label %dec_label_pc_1f3e6, label %dec_label_pc_1f472, !insn.addr !8334

dec_label_pc_1f3e6:                               ; preds = %dec_label_pc_1f3c6
  %7 = load i32, i32* @global_var_235c58, align 4, !insn.addr !8335
  %8 = icmp eq i32 %7, 0, !insn.addr !8336
  br i1 %8, label %dec_label_pc_1f41e, label %dec_label_pc_1f3f4, !insn.addr !8337

dec_label_pc_1f3f4:                               ; preds = %dec_label_pc_1f3e6
  store i32 0, i32* %stack_var_-16, align 4, !insn.addr !8338
  %9 = load i32, i32* @global_var_35588, align 4, !insn.addr !8339
  %10 = call i32 @fpga_read(i32 %9, i32* nonnull %stack_var_-16), !insn.addr !8340
  %11 = load i32, i32* %stack_var_-16, align 4, !insn.addr !8341
  %12 = inttoptr i32 %arg3 to i32*, !insn.addr !8342
  store i32 %11, i32* %12, align 4, !insn.addr !8342
  call void @llvm.trap()
  unreachable

dec_label_pc_1f41e:                               ; preds = %dec_label_pc_1f3e6
  store i32 0, i32* %stack_var_-20, align 4, !insn.addr !8343
  %13 = load i32, i32* @global_var_3581c, align 4, !insn.addr !8344
  %14 = call i32 @fpga_read(i32 %13, i32* nonnull %stack_var_-20), !insn.addr !8345
  %15 = load i32, i32* %stack_var_-20, align 4, !insn.addr !8346
  %16 = inttoptr i32 %arg3 to i32*, !insn.addr !8347
  store i32 %15, i32* %16, align 4, !insn.addr !8347
  call void @llvm.trap()
  unreachable

dec_label_pc_1f472:                               ; preds = %dec_label_pc_1f3c6
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2c520, i32 0, i32 0), i32 767), !insn.addr !8348
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @global_var_2c3d4, i32 0, i32 0), i32 %arg2), !insn.addr !8349
  %19 = call i32 @__asm_nop(i32 %18, i32 %arg2, i32 767, i32 %arg2), !insn.addr !8350
  %20 = call i32 @pthread_mutex_unlock(i32* %4), !insn.addr !8351
  store i32 -5, i32* %storemerge.reg2mem, !insn.addr !8352
  br label %dec_label_pc_1f4b6, !insn.addr !8352

dec_label_pc_1f4b6:                               ; preds = %dec_label_pc_1f3a0, %dec_label_pc_1f472
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8353

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 767, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1f4b6, { 1, 0 }
}

define i32 @clear_uart_tx_fifo(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f4c0:
  %r0.0.reg2mem = alloca i32, !insn.addr !8354
  %stack_var_-12.01.reg2mem = alloca i32, !insn.addr !8354
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* %stack_var_-16, align 4, !insn.addr !8355
  store i32 0, i32* %stack_var_-20, align 4, !insn.addr !8356
  store i32 0, i32* %stack_var_-28, align 4, !insn.addr !8357
  store i32 0, i32* %stack_var_-32, align 4, !insn.addr !8358
  %0 = mul i32 %arg1, 24, !insn.addr !8359
  %1 = add i32 %0, ptrtoint (i32* @global_var_235df4 to i32), !insn.addr !8360
  %2 = inttoptr i32 %1 to i32*, !insn.addr !8361
  %3 = call i32 @pthread_mutex_lock(i32* %2), !insn.addr !8361
  %4 = call i32 @get_send_address_info(i32 %arg1, i32* nonnull %stack_var_-32, i32* nonnull %stack_var_-16, i32* nonnull %stack_var_-20), !insn.addr !8362
  %5 = icmp eq i32 %4, 0, !insn.addr !8363
  br i1 %5, label %dec_label_pc_1f562.preheader, label %dec_label_pc_1f518, !insn.addr !8364

dec_label_pc_1f562.preheader:                     ; preds = %dec_label_pc_1f4c0
  %6 = load i32, i32* %stack_var_-16, align 4, !insn.addr !8365
  %7 = call i32 @fpga_read(i32 %6, i32* nonnull %stack_var_-28), !insn.addr !8366
  %8 = load i32, i32* %stack_var_-28, align 4, !insn.addr !8367
  %9 = load i32, i32* %stack_var_-32, align 4, !insn.addr !8368
  %10 = lshr i32 %8, %9, !insn.addr !8369
  %11 = urem i32 %10, 256, !insn.addr !8370
  store i32 %11, i32* %stack_var_-28, align 4, !insn.addr !8371
  %12 = icmp eq i32 %11, 255, !insn.addr !8372
  store i32 0, i32* %stack_var_-12.01.reg2mem, !insn.addr !8373
  br i1 %12, label %dec_label_pc_1f582, label %dec_label_pc_1f59e, !insn.addr !8373

dec_label_pc_1f518:                               ; preds = %dec_label_pc_1f4c0
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c50c, i32 0, i32 0), i32 783), !insn.addr !8374
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_var_2c370, i32 0, i32 0), i32 %arg1), !insn.addr !8375
  %15 = call i32 @pthread_mutex_unlock(i32* %2), !insn.addr !8376
  store i32 %15, i32* %r0.0.reg2mem, !insn.addr !8377
  br label %dec_label_pc_1f610, !insn.addr !8377

dec_label_pc_1f560:                               ; preds = %dec_label_pc_1f59e
  %16 = call i32 @__asm_nop(i32 %26, i32 ptrtoint ([19 x i8]* @global_var_2c50c to i32), i32 %arg1, i32 %27), !insn.addr !8378
  %17 = load i32, i32* %stack_var_-16, align 4, !insn.addr !8365
  %18 = call i32 @fpga_read(i32 %17, i32* nonnull %stack_var_-28), !insn.addr !8366
  %19 = load i32, i32* %stack_var_-28, align 4, !insn.addr !8367
  %20 = load i32, i32* %stack_var_-32, align 4, !insn.addr !8368
  %21 = lshr i32 %19, %20, !insn.addr !8369
  %22 = urem i32 %21, 256, !insn.addr !8370
  store i32 %22, i32* %stack_var_-28, align 4, !insn.addr !8371
  %23 = icmp eq i32 %22, 255, !insn.addr !8372
  store i32 %27, i32* %stack_var_-12.01.reg2mem, !insn.addr !8373
  br i1 %23, label %dec_label_pc_1f582, label %dec_label_pc_1f59e, !insn.addr !8373

dec_label_pc_1f582:                               ; preds = %dec_label_pc_1f560, %dec_label_pc_1f562.preheader
  %24 = call i32 @pthread_mutex_unlock(i32* %2), !insn.addr !8379
  store i32 %24, i32* %r0.0.reg2mem, !insn.addr !8380
  br label %dec_label_pc_1f610, !insn.addr !8380

dec_label_pc_1f59e:                               ; preds = %dec_label_pc_1f562.preheader, %dec_label_pc_1f560
  %stack_var_-12.01.reload = load i32, i32* %stack_var_-12.01.reg2mem
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_2c410, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c50c, i32 0, i32 0), i32 %arg1), !insn.addr !8381
  %26 = call i32 @usleep(i32 3000), !insn.addr !8382
  %27 = add i32 %stack_var_-12.01.reload, 1, !insn.addr !8383
  %28 = icmp ult i32 %27, 20, !insn.addr !8384
  %29 = icmp ne i1 %28, true, !insn.addr !8384
  %30 = icmp eq i32 %27, 20, !insn.addr !8384
  %31 = icmp ne i1 %29, true, !insn.addr !8385
  %32 = or i1 %30, %31, !insn.addr !8385
  br i1 %32, label %dec_label_pc_1f560, label %dec_label_pc_1f5c8, !insn.addr !8385

dec_label_pc_1f5c8:                               ; preds = %dec_label_pc_1f59e
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c50c, i32 0, i32 0), i32 803), !insn.addr !8386
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_2c444, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c50c, i32 0, i32 0), i32 %arg1), !insn.addr !8387
  %35 = call i32 @pthread_mutex_unlock(i32* %2), !insn.addr !8388
  store i32 %35, i32* %r0.0.reg2mem, !insn.addr !8388
  br label %dec_label_pc_1f610, !insn.addr !8388

dec_label_pc_1f610:                               ; preds = %dec_label_pc_1f5c8, %dec_label_pc_1f582, %dec_label_pc_1f518
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !8389

; uselistorder directives
  uselistorder i32 %27, { 3, 2, 1, 0 }
  uselistorder i32 %22, { 1, 0 }
  uselistorder i32 %11, { 1, 0 }
  uselistorder i32* %2, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-16, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-28, { 4, 5, 3, 0, 1, 2, 6 }
  uselistorder i32* %stack_var_-32, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-12.01.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder [19 x i8]* @global_var_2c50c, { 1, 0 }
  uselistorder i32 (i32, i32*, i32*, i32*)* @get_send_address_info, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_1f59e, { 1, 0 }
}

define i32 @clear_uart_rx_fifo(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f618:
  %0 = alloca i32
  %r0.0.reg2mem = alloca i32, !insn.addr !8390
  %1 = load i32, i32* %0
  %2 = mul i32 %arg1, 24, !insn.addr !8391
  %3 = add i32 %2, ptrtoint (i32* @global_var_235f74 to i32), !insn.addr !8392
  %4 = inttoptr i32 %3 to i32*, !insn.addr !8393
  %5 = call i32 @pthread_mutex_lock(i32* %4), !insn.addr !8393
  %6 = urem i32 %arg1, 256, !insn.addr !8394
  %7 = call i32 @check_how_many_uart_data_in_fpga(i32 %6, i32 %1, i32 ptrtoint (i32* @global_var_235f74 to i32), i32 %6), !insn.addr !8395
  %8 = icmp eq i32 %7, 0, !insn.addr !8396
  br i1 %8, label %dec_label_pc_1f658, label %dec_label_pc_1f674, !insn.addr !8397

dec_label_pc_1f658:                               ; preds = %dec_label_pc_1f618
  %9 = call i32 @pthread_mutex_unlock(i32* %4), !insn.addr !8398
  store i32 %9, i32* %r0.0.reg2mem, !insn.addr !8399
  br label %dec_label_pc_1f782, !insn.addr !8399

dec_label_pc_1f674:                               ; preds = %dec_label_pc_1f618
  %10 = call i32* @malloc(i32 %7), !insn.addr !8400
  %11 = icmp eq i32* %10, null, !insn.addr !8401
  br i1 %11, label %dec_label_pc_1f684, label %dec_label_pc_1f6de, !insn.addr !8402

dec_label_pc_1f684:                               ; preds = %dec_label_pc_1f674
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c4f8, i32 0, i32 0), i32 831), !insn.addr !8403
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2c484, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c4f8, i32 0, i32 0), i32 %arg1), !insn.addr !8404
  %14 = call i32 @usleep(i32 ptrtoint (i32* @global_var_7a120 to i32)), !insn.addr !8405
  %15 = call i32 @pthread_mutex_unlock(i32* %4), !insn.addr !8406
  store i32 %15, i32* %r0.0.reg2mem, !insn.addr !8407
  br label %dec_label_pc_1f782, !insn.addr !8407

dec_label_pc_1f6de:                               ; preds = %dec_label_pc_1f674
  %16 = ptrtoint i32* %10 to i32, !insn.addr !8400
  %17 = call i32 @read_uart_data_in_fpga(i32 %arg1, i32 %16, i32 %7), !insn.addr !8408
  %18 = icmp eq i32 %17, %7, !insn.addr !8409
  br i1 %18, label %dec_label_pc_1f754, label %dec_label_pc_1f6f2, !insn.addr !8410

dec_label_pc_1f6f2:                               ; preds = %dec_label_pc_1f6de
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c4f8, i32 0, i32 0), i32 840), !insn.addr !8411
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_2c4a4, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c4f8, i32 0, i32 0), i32 %arg1, i32 %7, i32 %17), !insn.addr !8412
  call void @free(i32* nonnull %10), !insn.addr !8413
  %21 = call i32 @usleep(i32 10000), !insn.addr !8414
  %22 = call i32 @pthread_mutex_unlock(i32* %4), !insn.addr !8415
  store i32 %22, i32* %r0.0.reg2mem, !insn.addr !8416
  br label %dec_label_pc_1f782, !insn.addr !8416

dec_label_pc_1f754:                               ; preds = %dec_label_pc_1f6de
  call void @free(i32* nonnull %10), !insn.addr !8417
  %23 = call i32 @usleep(i32 10000), !insn.addr !8418
  %24 = call i32 @pthread_mutex_unlock(i32* %4), !insn.addr !8419
  %25 = call i32 @__asm_nop(i32 %24, i32 %16, i32 ptrtoint (i32* @global_var_235f74 to i32), i32 %3), !insn.addr !8420
  store i32 %25, i32* %r0.0.reg2mem, !insn.addr !8420
  br label %dec_label_pc_1f782, !insn.addr !8420

dec_label_pc_1f782:                               ; preds = %dec_label_pc_1f754, %dec_label_pc_1f6f2, %dec_label_pc_1f684, %dec_label_pc_1f658
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !8421

; uselistorder directives
  uselistorder i32* %10, { 0, 1, 3, 2 }
  uselistorder i32 %7, { 0, 2, 1, 3, 4 }
  uselistorder i32* %4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
}

define i32 @uart_flush(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f78c:
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c270, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2c4ec, i32 0, i32 0), i32 859), !insn.addr !8422
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2c4dc, i32 0, i32 0), i32 %arg1), !insn.addr !8423
  %2 = call i32 @clear_uart_rx_fifo(i32 %arg1), !insn.addr !8424
  %3 = call i32 @usleep(i32 10000), !insn.addr !8425
  %4 = call i32 @clear_uart_tx_fifo(i32 %arg1), !insn.addr !8426
  ret i32 0, !insn.addr !8427
}

define i32 @uart_flush_tx(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f7dc:
  %0 = call i32 @clear_uart_tx_fifo(i32 %arg1), !insn.addr !8428
  ret i32 0, !insn.addr !8429

; uselistorder directives
  uselistorder i32 (i32)* @clear_uart_tx_fifo, { 1, 0 }
}

define i32 @uart_flush_rx(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f7f8:
  %0 = call i32 @clear_uart_rx_fifo(i32 %arg1), !insn.addr !8430
  ret i32 0, !insn.addr !8431

; uselistorder directives
  uselistorder i32 (i32)* @clear_uart_rx_fifo, { 1, 0 }
}

define i32 @uart_get_readable_byte_num(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f814:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = mul i32 %arg1, 24, !insn.addr !8432
  %3 = add i32 %2, ptrtoint (i32* @global_var_235f74 to i32), !insn.addr !8433
  %4 = inttoptr i32 %3 to i32*, !insn.addr !8434
  %5 = call i32 @pthread_mutex_lock(i32* %4), !insn.addr !8434
  %6 = urem i32 %arg1, 256, !insn.addr !8435
  %7 = call i32 @check_how_many_uart_data_in_fpga(i32 %6, i32 %1, i32 ptrtoint (i32* @global_var_235f74 to i32), i32 %6), !insn.addr !8436
  %8 = call i32 @pthread_mutex_unlock(i32* %4), !insn.addr !8437
  ret i32 %7, !insn.addr !8438

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @check_how_many_uart_data_in_fpga, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_235f74 to i32), { 1, 0, 2, 4, 3, 6, 5 }
}

define i32 @ui_pull_function(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f86c:
  %0 = alloca i32
  %.reg2mem = alloca i32, !insn.addr !8439
  %r2.02.reg2mem = alloca i32, !insn.addr !8439
  %1 = load i32, i32* %0
  %2 = load i32, i32* @global_var_236114, align 4, !insn.addr !8440
  %3 = icmp eq i32 %2, 0, !insn.addr !8441
  br i1 %3, label %dec_label_pc_1f982, label %dec_label_pc_1f876, !insn.addr !8442

dec_label_pc_1f876:                               ; preds = %dec_label_pc_1f86c, %dec_label_pc_1f95a
  %4 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_2360f4), !insn.addr !8443
  %5 = icmp eq i32 %4, 0, !insn.addr !8444
  br i1 %5, label %dec_label_pc_1f888, label %dec_label_pc_1f958, !insn.addr !8445

dec_label_pc_1f888:                               ; preds = %dec_label_pc_1f876
  %6 = load i32, i32* @global_var_23610c, align 4, !insn.addr !8446
  %7 = call i32 @new_iterator_c_map(i32 %6), !insn.addr !8447
  %8 = icmp eq i32 %7, 0, !insn.addr !8448
  br i1 %8, label %dec_label_pc_1f944, label %dec_label_pc_1f8a6.lr.ph, !insn.addr !8449

dec_label_pc_1f8a6.lr.ph:                         ; preds = %dec_label_pc_1f888
  %9 = add i32 %7, 4, !insn.addr !8450
  %10 = inttoptr i32 %9 to i32*, !insn.addr !8450
  %11 = add i32 %7, 20
  %12 = inttoptr i32 %11 to i32*
  %13 = add i32 %7, 8
  %14 = inttoptr i32 %13 to i32*
  %15 = inttoptr i32 %7 to i32*
  br label %dec_label_pc_1f8a6

dec_label_pc_1f8a6:                               ; preds = %dec_label_pc_1f8f0, %dec_label_pc_1f8a6.lr.ph
  %16 = load i32, i32* %10, align 4, !insn.addr !8450
  %17 = icmp eq i32 %16, 0, !insn.addr !8451
  store i32 %16, i32* %.reg2mem, !insn.addr !8452
  br i1 %17, label %dec_label_pc_1f8be, label %dec_label_pc_1f8f0, !insn.addr !8452

dec_label_pc_1f8be:                               ; preds = %dec_label_pc_1f8a6
  %18 = load i32, i32* %12, align 4, !insn.addr !8453
  %19 = add i32 %18, 16, !insn.addr !8454
  %20 = inttoptr i32 %19 to i32*, !insn.addr !8454
  %21 = load i32, i32* %20, align 4, !insn.addr !8454
  %22 = inttoptr i32 %21 to i32*, !insn.addr !8455
  %23 = load i32, i32* %22, align 4, !insn.addr !8455
  %24 = inttoptr i32 %23 to i32*, !insn.addr !8456
  %25 = load i32, i32* %24, align 4, !insn.addr !8456
  %26 = load i32, i32* %14, align 4, !insn.addr !8457
  %27 = urem i32 %26, 256, !insn.addr !8458
  %28 = call i32 @gpio_write(i32 %25, i32 %27), !insn.addr !8459
  %29 = load i32, i32* %14, align 4, !insn.addr !8460
  %30 = icmp eq i32 %29, 1, !insn.addr !8461
  br i1 %30, label %31, label %33, !insn.addr !8462

; <label>:31:                                     ; preds = %dec_label_pc_1f8be
  %32 = call i32 @__asm_ite(), !insn.addr !8462
  br label %33, !insn.addr !8462

; <label>:33:                                     ; preds = %dec_label_pc_1f8be, %31
  %not. = icmp ne i1 %30, true
  %r3.1 = zext i1 %not. to i32
  store i32 %r3.1, i32* %14, align 4, !insn.addr !8463
  %34 = load i32, i32* %15, align 4, !insn.addr !8464
  store i32 %34, i32* %10, align 4, !insn.addr !8465
  store i32 %34, i32* %.reg2mem, !insn.addr !8465
  br label %dec_label_pc_1f8f0, !insn.addr !8465

dec_label_pc_1f8f0:                               ; preds = %dec_label_pc_1f8a6, %33
  %.reload = load i32, i32* %.reg2mem, !insn.addr !8466
  %35 = add i32 %.reload, -200, !insn.addr !8467
  store i32 %35, i32* %10, align 4, !insn.addr !8468
  call void @free(i32* %15), !insn.addr !8469
  br label %dec_label_pc_1f8a6

dec_label_pc_1f944:                               ; preds = %dec_label_pc_1f888
  %36 = call i32 @delete_iterator_c_map(i32 0), !insn.addr !8470
  %37 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_2360f4), !insn.addr !8471
  br label %dec_label_pc_1f95a, !insn.addr !8472

dec_label_pc_1f958:                               ; preds = %dec_label_pc_1f876
  %r2.02.reload = load i32, i32* %r2.02.reg2mem
  %38 = call i32 @__asm_nop(i32 %4, i32 %1, i32 %r2.02.reload, i32 %4), !insn.addr !8473
  br label %dec_label_pc_1f95a, !insn.addr !8473

dec_label_pc_1f95a:                               ; preds = %dec_label_pc_1f958, %dec_label_pc_1f944
  %39 = call i32 @usleep(i32 200000), !insn.addr !8474
  %40 = load i32, i32* @global_var_236114, align 4, !insn.addr !8440
  %41 = icmp eq i32 %40, 0, !insn.addr !8441
  store i32 1000, i32* %r2.02.reg2mem, !insn.addr !8442
  br i1 %41, label %dec_label_pc_1f982, label %dec_label_pc_1f876, !insn.addr !8442

dec_label_pc_1f982:                               ; preds = %dec_label_pc_1f95a, %dec_label_pc_1f86c
  ret i32 0, !insn.addr !8475

; uselistorder directives
  uselistorder i32 %7, { 2, 1, 3, 0, 4 }
  uselistorder i32 %4, { 1, 0, 2 }
  uselistorder i32* %r2.02.reg2mem, { 1, 0 }
  uselistorder label %dec_label_pc_1f8f0, { 1, 0 }
  uselistorder label %33, { 1, 0 }
  uselistorder label %dec_label_pc_1f876, { 1, 0 }
}

define i32 @gpio_compare_e.63(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f990:
  %0 = sub i32 %arg1, %arg2, !insn.addr !8476
  ret i32 %0, !insn.addr !8477
}

define i32 @convert_ui_type_to_port(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f9b0:
  %0 = alloca i32
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !8478
  %r2.0.reg2mem = alloca i32, !insn.addr !8478
  %1 = load i32, i32* %0
  %2 = icmp eq i32 %arg1, 2, !insn.addr !8479
  store i32 942, i32* %stack_var_-12.0.reg2mem, !insn.addr !8480
  br i1 %2, label %dec_label_pc_1f9fe, label %dec_label_pc_1f9c2, !insn.addr !8480

dec_label_pc_1f9c2:                               ; preds = %dec_label_pc_1f9b0
  %3 = icmp ult i32 %arg1, 2, !insn.addr !8481
  br i1 %3, label %dec_label_pc_1f9c6, label %dec_label_pc_1f9cc, !insn.addr !8482

dec_label_pc_1f9c6:                               ; preds = %dec_label_pc_1f9c2
  %4 = icmp eq i32 %arg1, 1, !insn.addr !8483
  store i32 941, i32* %stack_var_-12.0.reg2mem, !insn.addr !8484
  br i1 %4, label %dec_label_pc_1f9fe, label %dec_label_pc_1f9fc, !insn.addr !8484

dec_label_pc_1f9cc:                               ; preds = %dec_label_pc_1f9c2
  store i32 257, i32* %r2.0.reg2mem
  store i32 921, i32* %stack_var_-12.0.reg2mem
  switch i32 %arg1, label %dec_label_pc_1f9fc [
    i32 256, label %dec_label_pc_1f9fe
    i32 257, label %dec_label_pc_1f9f4
  ]

dec_label_pc_1f9f4:                               ; preds = %dec_label_pc_1f9cc
  store i32 943, i32* %stack_var_-12.0.reg2mem, !insn.addr !8485
  br label %dec_label_pc_1f9fe, !insn.addr !8485

dec_label_pc_1f9fc:                               ; preds = %dec_label_pc_1f9cc, %dec_label_pc_1f9c6
  %r2.0.reload = load i32, i32* %r2.0.reg2mem
  %5 = call i32 @__asm_nop(i32 %arg1, i32 %1, i32 %r2.0.reload, i32 %arg1), !insn.addr !8486
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !8486
  br label %dec_label_pc_1f9fe, !insn.addr !8486

dec_label_pc_1f9fe:                               ; preds = %dec_label_pc_1f9cc, %dec_label_pc_1f9c6, %dec_label_pc_1f9b0, %dec_label_pc_1f9fc, %dec_label_pc_1f9f4
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  ret i32 %stack_var_-12.0.reload, !insn.addr !8487

; uselistorder directives
  uselistorder i32* %stack_var_-12.0.reg2mem, { 0, 4, 5, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_1f9fe, { 3, 4, 0, 1, 2 }
}

define i32 @convert_port_to_ui_type(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa0c:
  %0 = alloca i32
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !8488
  %1 = load i32, i32* %0
  store i32 256, i32* %stack_var_-12.0.reg2mem
  switch i32 %arg1, label %dec_label_pc_1fa3e [
    i32 921, label %dec_label_pc_1fa40
    i32 943, label %dec_label_pc_1fa36
  ]

dec_label_pc_1fa36:                               ; preds = %dec_label_pc_1fa0c
  store i32 257, i32* %stack_var_-12.0.reg2mem, !insn.addr !8489
  br label %dec_label_pc_1fa40, !insn.addr !8489

dec_label_pc_1fa3e:                               ; preds = %dec_label_pc_1fa0c
  %2 = call i32 @__asm_nop(i32 %arg1, i32 %1, i32 943, i32 %arg1), !insn.addr !8490
  store i32 258, i32* %stack_var_-12.0.reg2mem, !insn.addr !8490
  br label %dec_label_pc_1fa40, !insn.addr !8490

dec_label_pc_1fa40:                               ; preds = %dec_label_pc_1fa0c, %dec_label_pc_1fa3e, %dec_label_pc_1fa36
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  ret i32 %stack_var_-12.0.reload, !insn.addr !8491

; uselistorder directives
  uselistorder i32* %stack_var_-12.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32 943, { 2, 1, 0 }
  uselistorder i32 921, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1fa40, { 1, 2, 0 }
}

define i32 @gpio_key_callback(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fa50:
  %r0.2.reg2mem = alloca i32, !insn.addr !8492
  %storemerge2.reg2mem = alloca i32, !insn.addr !8492
  %0 = call i32 @convert_port_to_ui_type(i32 %arg1), !insn.addr !8493
  %1 = icmp eq i32 %0, 258, !insn.addr !8494
  br i1 %1, label %dec_label_pc_1fa6c, label %dec_label_pc_1fad0.preheader, !insn.addr !8495

dec_label_pc_1fad0.preheader:                     ; preds = %dec_label_pc_1fa50
  %2 = urem i32 %arg2, 256
  %3 = icmp eq i32 %2, 0, !insn.addr !8496
  store i32 0, i32* %storemerge2.reg2mem
  br label %dec_label_pc_1fa98

dec_label_pc_1fa6c:                               ; preds = %dec_label_pc_1fa50
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2c874, i32 0, i32 0), i32 110), !insn.addr !8497
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_2c5e4, i32 0, i32 0), i32 %arg1), !insn.addr !8498
  store i32 %5, i32* %r0.2.reg2mem, !insn.addr !8499
  br label %dec_label_pc_1fad6, !insn.addr !8499

dec_label_pc_1fa98:                               ; preds = %dec_label_pc_1fad0.preheader, %dec_label_pc_1faca
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %6 = mul i32 %storemerge2.reload, 4, !insn.addr !8500
  %7 = add i32 %6, ptrtoint (i32* @global_var_23611c to i32), !insn.addr !8500
  %8 = inttoptr i32 %7 to i32*, !insn.addr !8500
  %9 = load i32, i32* %8, align 4, !insn.addr !8500
  %10 = icmp ne i32 %9, 0, !insn.addr !8501
  %or.cond = icmp eq i1 %3, %10
  br i1 %or.cond, label %11, label %dec_label_pc_1faca, !insn.addr !8502

; <label>:11:                                     ; preds = %dec_label_pc_1fa98
  %12 = call i32 @__asm_ite(), !insn.addr !8503
  br label %dec_label_pc_1faca, !insn.addr !8503

dec_label_pc_1faca:                               ; preds = %dec_label_pc_1fa98, %11
  %13 = add nuw nsw i32 %storemerge2.reload, 1, !insn.addr !8504
  %14 = icmp ult i32 %13, 5, !insn.addr !8505
  store i32 %13, i32* %storemerge2.reg2mem, !insn.addr !8505
  store i32 %0, i32* %r0.2.reg2mem, !insn.addr !8505
  br i1 %14, label %dec_label_pc_1fa98, label %dec_label_pc_1fad6, !insn.addr !8505

dec_label_pc_1fad6:                               ; preds = %dec_label_pc_1faca, %dec_label_pc_1fa6c
  %r0.2.reload = load i32, i32* %r0.2.reg2mem
  ret i32 %r0.2.reload, !insn.addr !8506

; uselistorder directives
  uselistorder i32* %storemerge2.reg2mem, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1faca, { 1, 0 }
  uselistorder label %dec_label_pc_1fa98, { 1, 0 }
}

define i32 @ui_init() local_unnamed_addr {
dec_label_pc_1fae0:
  %r3.0.reg2mem = alloca i32, !insn.addr !8507
  %storemerge1.reg2mem = alloca i32, !insn.addr !8507
  %0 = load i32, i32* @global_var_236110, align 4, !insn.addr !8508
  %1 = icmp eq i32 %0, 0, !insn.addr !8509
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !8510
  br i1 %1, label %dec_label_pc_1fafc, label %dec_label_pc_1fc18, !insn.addr !8510

dec_label_pc_1fafc:                               ; preds = %dec_label_pc_1fae0
  %2 = call i32 @gpio_init(), !insn.addr !8511
  %3 = icmp eq i32 %2, 0, !insn.addr !8512
  br i1 %3, label %dec_label_pc_1fb2e, label %dec_label_pc_1fb06, !insn.addr !8513

dec_label_pc_1fb06:                               ; preds = %dec_label_pc_1fafc
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2c86c, i32 0, i32 0), i32 124), !insn.addr !8514
  %5 = call i32 @puts(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2c60c, i32 0, i32 0)), !insn.addr !8515
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !8516
  br label %dec_label_pc_1fc18, !insn.addr !8516

dec_label_pc_1fb2e:                               ; preds = %dec_label_pc_1fafc
  %6 = call i32 @convert_ui_type_to_port(i32 1), !insn.addr !8517
  %7 = call i32 @gpio_export(i32 %6), !insn.addr !8518
  %8 = call i32 @convert_ui_type_to_port(i32 2), !insn.addr !8519
  %9 = call i32 @gpio_export(i32 %8), !insn.addr !8520
  %10 = call i32 @convert_ui_type_to_port(i32 256), !insn.addr !8521
  %11 = call i32 @gpio_export(i32 %10), !insn.addr !8522
  %12 = call i32 @convert_ui_type_to_port(i32 257), !insn.addr !8523
  %13 = call i32 @gpio_export(i32 %12), !insn.addr !8524
  %14 = call i32 @convert_ui_type_to_port(i32 256), !insn.addr !8525
  %15 = call i32 @gpio_reg_callback(i32 %14, i32 129617), !insn.addr !8526
  %16 = call i32 @convert_ui_type_to_port(i32 257), !insn.addr !8527
  %17 = call i32 @gpio_reg_callback(i32 %16, i32 129617), !insn.addr !8528
  %18 = call i32 @pthread_mutex_init(i32* nonnull @global_var_2360f4, i32* null), !insn.addr !8529
  store i32 0, i32* %storemerge1.reg2mem
  br label %dec_label_pc_1fbae

dec_label_pc_1fbae:                               ; preds = %dec_label_pc_1fb2e, %dec_label_pc_1fbae
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %19 = mul i32 %storemerge1.reload, 4, !insn.addr !8530
  %20 = add i32 %19, ptrtoint (i32* @global_var_23611c to i32), !insn.addr !8530
  %21 = inttoptr i32 %20 to i32*, !insn.addr !8530
  store i32 0, i32* %21, align 4, !insn.addr !8530
  %22 = add nuw nsw i32 %storemerge1.reload, 1, !insn.addr !8531
  %23 = icmp ult i32 %22, 5, !insn.addr !8532
  store i32 %22, i32* %storemerge1.reg2mem, !insn.addr !8532
  br i1 %23, label %dec_label_pc_1fbae, label %dec_label_pc_1fbca, !insn.addr !8532

dec_label_pc_1fbca:                               ; preds = %dec_label_pc_1fbae
  %24 = call i32 @new_c_map(i32 129425, i32 0, i32 0), !insn.addr !8533
  store i32 %24, i32* @global_var_23610c, align 4, !insn.addr !8534
  store i32 1, i32* @global_var_236114, align 4, !insn.addr !8535
  %25 = call i32 @pthread_create(i32* nonnull @global_var_236118, i32* null, i32* (i32*)* inttoptr (i32 129133 to i32* (i32*)*), i32* null), !insn.addr !8536
  store i32 1, i32* @global_var_236110, align 4, !insn.addr !8537
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !8538
  br label %dec_label_pc_1fc18, !insn.addr !8538

dec_label_pc_1fc18:                               ; preds = %dec_label_pc_1fae0, %dec_label_pc_1fbca, %dec_label_pc_1fb06
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !8539

; uselistorder directives
  uselistorder i32* %storemerge1.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32 (i32*, i32*, i32* (i32*)*, i32*)* @pthread_create, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @gpio_reg_callback, { 1, 0 }
  uselistorder i32 (i32)* @gpio_export, { 3, 2, 1, 0 }
  uselistorder i32 ()* @gpio_init, { 1, 0 }
  uselistorder label %dec_label_pc_1fc18, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1fbae, { 1, 0 }
}

define i32 @ui_uninit() local_unnamed_addr {
dec_label_pc_1fc24:
  %r0.0.reg2mem = alloca i32, !insn.addr !8540
  %0 = load i32, i32* @global_var_236110, align 4, !insn.addr !8541
  %1 = icmp eq i32 %0, 0, !insn.addr !8542
  br i1 %1, label %dec_label_pc_1fcec, label %dec_label_pc_1fc36, !insn.addr !8543

dec_label_pc_1fc36:                               ; preds = %dec_label_pc_1fc24
  store i32 0, i32* @global_var_236114, align 4, !insn.addr !8544
  %2 = load i32, i32* @global_var_236118, align 4, !insn.addr !8545
  %3 = call i32 @pthread_join(i32 %2, i32** null), !insn.addr !8546
  %4 = load i32, i32* @global_var_23610c, align 4, !insn.addr !8547
  %5 = call i32 @delete_c_map(i32 %4), !insn.addr !8548
  %6 = call i32 @pthread_mutex_destroy(i32* nonnull @global_var_2360f4), !insn.addr !8549
  %7 = call i32 @convert_ui_type_to_port(i32 256), !insn.addr !8550
  %8 = call i32 @gpio_unreg_callback(i32 %7, i32 129617), !insn.addr !8551
  %9 = call i32 @convert_ui_type_to_port(i32 257), !insn.addr !8552
  %10 = call i32 @gpio_unreg_callback(i32 %9, i32 129617), !insn.addr !8553
  %11 = call i32 @convert_ui_type_to_port(i32 1), !insn.addr !8554
  %12 = call i32 @gpio_unexport(i32 %11), !insn.addr !8555
  %13 = call i32 @convert_ui_type_to_port(i32 2), !insn.addr !8556
  %14 = call i32 @gpio_unexport(i32 %13), !insn.addr !8557
  %15 = call i32 @convert_ui_type_to_port(i32 256), !insn.addr !8558
  %16 = call i32 @gpio_unexport(i32 %15), !insn.addr !8559
  %17 = call i32 @convert_ui_type_to_port(i32 257), !insn.addr !8560
  %18 = call i32 @gpio_unexport(i32 %17), !insn.addr !8561
  %19 = call i32 @gpio_uninit(), !insn.addr !8562
  store i32 0, i32* @global_var_236110, align 4, !insn.addr !8563
  store i32 %19, i32* %r0.0.reg2mem, !insn.addr !8563
  br label %dec_label_pc_1fcec, !insn.addr !8563

dec_label_pc_1fcec:                               ; preds = %dec_label_pc_1fc36, %dec_label_pc_1fc24
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !8564

; uselistorder directives
  uselistorder i32 ()* @gpio_uninit, { 2, 1, 0 }
  uselistorder i32 (i32)* @gpio_unexport, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @gpio_unreg_callback, { 1, 0 }
  uselistorder i32 (i32*)* @pthread_mutex_destroy, { 2, 1, 0 }
  uselistorder i32 (i32, i32**)* @pthread_join, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_236118, { 1, 0 }
  uselistorder i32* @global_var_236114, { 1, 2, 3, 0 }
  uselistorder i32* @global_var_236110, { 0, 2, 1, 3 }
}

define i32 @remove_port_form_gpio_map(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fcf0:
  %0 = alloca i32
  %storemerge.reg2mem = alloca i32, !insn.addr !8565
  %r3.0.reg2mem = alloca i32, !insn.addr !8565
  %r2.0.reg2mem = alloca i32, !insn.addr !8565
  %r0.0.reg2mem = alloca i32, !insn.addr !8565
  %1 = load i32, i32* %0
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4, !insn.addr !8566
  %2 = icmp eq i32 %arg2, 0, !insn.addr !8567
  br i1 %2, label %dec_label_pc_1fd42, label %dec_label_pc_1fd00, !insn.addr !8568

dec_label_pc_1fd00:                               ; preds = %dec_label_pc_1fcf0
  %3 = ptrtoint i32* %stack_var_-12 to i32, !insn.addr !8569
  %4 = call i32 @exists_c_map(i32 %arg2, i32* nonnull %stack_var_-12), !insn.addr !8570
  %5 = icmp eq i32 %4, 1, !insn.addr !8571
  store i32 %4, i32* %r0.0.reg2mem, !insn.addr !8572
  store i32 %4, i32* %r3.0.reg2mem, !insn.addr !8572
  br i1 %5, label %dec_label_pc_1fd10, label %dec_label_pc_1fd46, !insn.addr !8572

dec_label_pc_1fd10:                               ; preds = %dec_label_pc_1fd00
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_2c850, i32 0, i32 0), i32 168), !insn.addr !8573
  %7 = load i32, i32* %stack_var_-12, align 4, !insn.addr !8574
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2c620, i32 0, i32 0), i32 %7), !insn.addr !8575
  %9 = call i32 @remove_c_map(i32 %arg2, i32* nonnull %stack_var_-12), !insn.addr !8576
  store i32 %9, i32* %r0.0.reg2mem, !insn.addr !8577
  store i32 168, i32* %r2.0.reg2mem, !insn.addr !8577
  store i32 %3, i32* %r3.0.reg2mem, !insn.addr !8577
  br label %dec_label_pc_1fd46, !insn.addr !8577

dec_label_pc_1fd42:                               ; preds = %dec_label_pc_1fcf0
  %10 = call i32 @__asm_nop(i32 %arg1, i32 0, i32 %1, i32 0), !insn.addr !8578
  store i32 %10, i32* %storemerge.reg2mem, !insn.addr !8579
  br label %dec_label_pc_1fd48, !insn.addr !8579

dec_label_pc_1fd46:                               ; preds = %dec_label_pc_1fd00, %dec_label_pc_1fd10
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  %r2.0.reload = load i32, i32* %r2.0.reg2mem
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %11 = call i32 @__asm_nop(i32 %r0.0.reload, i32 %3, i32 %r2.0.reload, i32 %r3.0.reload), !insn.addr !8580
  store i32 %11, i32* %storemerge.reg2mem, !insn.addr !8580
  br label %dec_label_pc_1fd48, !insn.addr !8580

dec_label_pc_1fd48:                               ; preds = %dec_label_pc_1fd46, %dec_label_pc_1fd42
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8581

; uselistorder directives
  uselistorder i32 %3, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1fd46, { 1, 0 }
}

define i32 @add_port_to_gpio_map(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fd50:
  %r0.0.reg2mem = alloca i32, !insn.addr !8582
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4, !insn.addr !8583
  %0 = icmp eq i32 %arg3, 0, !insn.addr !8584
  br i1 %0, label %dec_label_pc_1fde8, label %dec_label_pc_1fd62, !insn.addr !8585

dec_label_pc_1fd62:                               ; preds = %dec_label_pc_1fd50
  %1 = call i32 @exists_c_map(i32 %arg3, i32* nonnull %stack_var_-28), !insn.addr !8586
  %2 = icmp eq i32 %1, 0, !insn.addr !8587
  br i1 %2, label %dec_label_pc_1fd74, label %dec_label_pc_1fdc0, !insn.addr !8588

dec_label_pc_1fd74:                               ; preds = %dec_label_pc_1fd62
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2c838, i32 0, i32 0), i32 180), !insn.addr !8589
  %4 = load i32, i32* %stack_var_-28, align 4, !insn.addr !8590
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_2c640, i32 0, i32 0), i32 %4, i32 %arg2), !insn.addr !8591
  store i32 %arg2, i32* %stack_var_-20, align 4, !insn.addr !8592
  %6 = call i32 @insert_c_map(i32 %arg3, i32* nonnull %stack_var_-28, i32 4, i32* nonnull %stack_var_-20, i32 12), !insn.addr !8593
  store i32 %6, i32* %r0.0.reg2mem, !insn.addr !8594
  br label %dec_label_pc_1fdea, !insn.addr !8594

dec_label_pc_1fdc0:                               ; preds = %dec_label_pc_1fd62
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2c838, i32 0, i32 0), i32 184), !insn.addr !8595
  %8 = load i32, i32* %stack_var_-28, align 4, !insn.addr !8596
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @global_var_2c668, i32 0, i32 0), i32 %8), !insn.addr !8597
  store i32 %9, i32* %r0.0.reg2mem, !insn.addr !8598
  br label %dec_label_pc_1fdea, !insn.addr !8598

dec_label_pc_1fde8:                               ; preds = %dec_label_pc_1fd50
  %10 = call i32 @__asm_nop(i32 %arg1, i32 %arg2, i32 0, i32 0), !insn.addr !8599
  store i32 %10, i32* %r0.0.reg2mem, !insn.addr !8599
  br label %dec_label_pc_1fdea, !insn.addr !8599

dec_label_pc_1fdea:                               ; preds = %dec_label_pc_1fde8, %dec_label_pc_1fdc0, %dec_label_pc_1fd74
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !8600

; uselistorder directives
  uselistorder i32* %stack_var_-28, { 2, 0, 3, 1, 4 }
  uselistorder i32* %r0.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32 184, { 0, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 180, { 3, 10, 0, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @update_filcker_freq(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fdf4:
  %storemerge1.reg2mem = alloca i32, !insn.addr !8601
  %0 = icmp eq i32 %arg3, 0, !insn.addr !8602
  br i1 %0, label %dec_label_pc_1fea0, label %dec_label_pc_1fe06, !insn.addr !8603

dec_label_pc_1fe06:                               ; preds = %dec_label_pc_1fdf4
  %1 = call i32 @new_iterator_c_map(i32 %arg3), !insn.addr !8604
  %2 = icmp eq i32 %1, 0, !insn.addr !8605
  %3 = add i32 %1, 20
  %4 = inttoptr i32 %3 to i32*
  br label %dec_label_pc_1fe92, !insn.addr !8606

dec_label_pc_1fe1a:                               ; preds = %dec_label_pc_1fe92
  %5 = load i32, i32* %4, align 4, !insn.addr !8607
  %6 = add i32 %5, 16, !insn.addr !8608
  %7 = inttoptr i32 %6 to i32*, !insn.addr !8608
  %8 = load i32, i32* %7, align 4, !insn.addr !8608
  %9 = inttoptr i32 %8 to i32*, !insn.addr !8609
  %10 = load i32, i32* %9, align 4, !insn.addr !8609
  %11 = inttoptr i32 %10 to i32*, !insn.addr !8610
  %12 = load i32, i32* %11, align 4, !insn.addr !8610
  %13 = icmp eq i32 %12, %arg1, !insn.addr !8611
  br i1 %13, label %dec_label_pc_1fe2e, label %dec_label_pc_1fe92, !insn.addr !8612

dec_label_pc_1fe2e:                               ; preds = %dec_label_pc_1fe1a
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2c824, i32 0, i32 0), i32 201), !insn.addr !8613
  %15 = inttoptr i32 %1 to i32*, !insn.addr !8614
  %16 = load i32, i32* %15, align 4, !insn.addr !8614
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_2c688, i32 0, i32 0), i32 %arg1, i32 %16, i32 %arg2), !insn.addr !8615
  call void @free(i32* %15), !insn.addr !8616
  br label %dec_label_pc_1fe98, !insn.addr !8617

dec_label_pc_1fe92:                               ; preds = %dec_label_pc_1fe1a, %dec_label_pc_1fe06
  br i1 %2, label %dec_label_pc_1fe98, label %dec_label_pc_1fe1a, !insn.addr !8618

dec_label_pc_1fe98:                               ; preds = %dec_label_pc_1fe92, %dec_label_pc_1fe2e
  %18 = call i32 @delete_iterator_c_map(i32 %1), !insn.addr !8619
  store i32 %18, i32* %storemerge1.reg2mem, !insn.addr !8620
  br label %dec_label_pc_1fea2, !insn.addr !8620

dec_label_pc_1fea0:                               ; preds = %dec_label_pc_1fdf4
  %19 = call i32 @__asm_nop(i32 %arg1, i32 %arg2, i32 0, i32 0), !insn.addr !8621
  store i32 %19, i32* %storemerge1.reg2mem, !insn.addr !8621
  br label %dec_label_pc_1fea2, !insn.addr !8621

dec_label_pc_1fea2:                               ; preds = %dec_label_pc_1fea0, %dec_label_pc_1fe98
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  ret i32 %storemerge1.reload, !insn.addr !8622

; uselistorder directives
  uselistorder i32 %1, { 3, 1, 2, 0 }
  uselistorder i32* %storemerge1.reg2mem, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
}

define i32 @gpio_ctrl_ui(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1feac:
  %r3.0.reg2mem = alloca i32, !insn.addr !8623
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !8623
  %0 = call i32 @convert_ui_type_to_port(i32 %arg1), !insn.addr !8624
  %1 = icmp eq i32 %0, 0, !insn.addr !8625
  br i1 %1, label %dec_label_pc_1feca, label %dec_label_pc_1fef2, !insn.addr !8626

dec_label_pc_1feca:                               ; preds = %dec_label_pc_1feac
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2c814, i32 0, i32 0), i32 222), !insn.addr !8627
  %3 = call i32 @puts(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2c6bc, i32 0, i32 0)), !insn.addr !8628
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !8629
  br label %dec_label_pc_1fff8, !insn.addr !8629

dec_label_pc_1fef2:                               ; preds = %dec_label_pc_1feac
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2c814, i32 0, i32 0), i32 225), !insn.addr !8630
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_2c6d4, i32 0, i32 0), i32 %arg1, i32 %0, i32 %arg2), !insn.addr !8631
  %6 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_2360f4), !insn.addr !8632
  %7 = icmp eq i32 %6, 0, !insn.addr !8633
  br i1 %7, label %dec_label_pc_1ff54, label %dec_label_pc_1ff2c, !insn.addr !8634

dec_label_pc_1ff2c:                               ; preds = %dec_label_pc_1fef2
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2c814, i32 0, i32 0), i32 227), !insn.addr !8635
  %9 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c6fc, i32 0, i32 0)), !insn.addr !8636
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !8637
  br label %dec_label_pc_1fff8, !insn.addr !8637

dec_label_pc_1ff54:                               ; preds = %dec_label_pc_1fef2
  switch i32 %arg2, label %dec_label_pc_1ffc0 [
    i32 1, label %dec_label_pc_1ff82
    i32 0, label %dec_label_pc_1ff64
    i32 2, label %dec_label_pc_1ffa0
  ]

dec_label_pc_1ff64:                               ; preds = %dec_label_pc_1ff54
  %10 = load i32, i32* @global_var_23610c, align 4, !insn.addr !8638
  %11 = call i32 @remove_port_form_gpio_map(i32 %0, i32 %10), !insn.addr !8639
  %12 = call i32 @gpio_write(i32 %0, i32 1), !insn.addr !8640
  store i32 %12, i32* %stack_var_-12.0.reg2mem, !insn.addr !8641
  br label %dec_label_pc_1ffea, !insn.addr !8641

dec_label_pc_1ff82:                               ; preds = %dec_label_pc_1ff54
  %13 = load i32, i32* @global_var_23610c, align 4, !insn.addr !8642
  %14 = call i32 @remove_port_form_gpio_map(i32 %0, i32 %13), !insn.addr !8643
  %15 = call i32 @gpio_write(i32 %0, i32 0), !insn.addr !8644
  store i32 %15, i32* %stack_var_-12.0.reg2mem, !insn.addr !8645
  br label %dec_label_pc_1ffea, !insn.addr !8645

dec_label_pc_1ffa0:                               ; preds = %dec_label_pc_1ff54
  %16 = load i32, i32* @global_var_23610c, align 4, !insn.addr !8646
  %17 = call i32 @add_port_to_gpio_map(i32 %0, i32 200, i32 %16), !insn.addr !8647
  store i32 -1, i32* %stack_var_-12.0.reg2mem, !insn.addr !8648
  br label %dec_label_pc_1ffea, !insn.addr !8648

dec_label_pc_1ffc0:                               ; preds = %dec_label_pc_1ff54
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2c814, i32 0, i32 0), i32 243), !insn.addr !8649
  %19 = call i32 @puts(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c710, i32 0, i32 0)), !insn.addr !8650
  %20 = call i32 @__asm_nop(i32 %19, i32 ptrtoint ([13 x i8]* @global_var_2c814 to i32), i32 243, i32 -2), !insn.addr !8651
  store i32 -2, i32* %stack_var_-12.0.reg2mem, !insn.addr !8651
  br label %dec_label_pc_1ffea, !insn.addr !8651

dec_label_pc_1ffea:                               ; preds = %dec_label_pc_1ffc0, %dec_label_pc_1ffa0, %dec_label_pc_1ff82, %dec_label_pc_1ff64
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  %21 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_2360f4), !insn.addr !8652
  store i32 %stack_var_-12.0.reload, i32* %r3.0.reg2mem, !insn.addr !8653
  br label %dec_label_pc_1fff8, !insn.addr !8653

dec_label_pc_1fff8:                               ; preds = %dec_label_pc_1ffea, %dec_label_pc_1ff2c, %dec_label_pc_1feca
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !8654

; uselistorder directives
  uselistorder i32 %0, { 0, 4, 3, 2, 1, 5, 6 }
  uselistorder i32* %stack_var_-12.0.reg2mem, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3 }
  uselistorder i32 243, { 1, 0 }
  uselistorder i32 (i32, i32)* @gpio_write, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @remove_port_form_gpio_map, { 1, 0 }
  uselistorder [13 x i8]* @global_var_2c814, { 1, 0 }
}

define i32 @gpio_set_led_filker_freq(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20004:
  %r3.0.reg2mem = alloca i32, !insn.addr !8655
  %0 = call i32 @convert_ui_type_to_port(i32 %arg1), !insn.addr !8656
  %1 = icmp eq i32 %0, 0, !insn.addr !8657
  br i1 %1, label %dec_label_pc_2001c, label %dec_label_pc_20046, !insn.addr !8658

dec_label_pc_2001c:                               ; preds = %dec_label_pc_20004
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2c7f8, i32 0, i32 0), i32 262), !insn.addr !8659
  %3 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2c728, i32 0, i32 0)), !insn.addr !8660
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !8661
  br label %dec_label_pc_20094, !insn.addr !8661

dec_label_pc_20046:                               ; preds = %dec_label_pc_20004
  %4 = icmp eq i32 %arg2, 200, !insn.addr !8662
  br i1 %4, label %dec_label_pc_20056, label %dec_label_pc_2007e, !insn.addr !8663

dec_label_pc_20056:                               ; preds = %dec_label_pc_20046
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2c7f8, i32 0, i32 0), i32 266), !insn.addr !8664
  %6 = call i32 @puts(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @global_var_2c73c, i32 0, i32 0)), !insn.addr !8665
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !8666
  br label %dec_label_pc_20094, !insn.addr !8666

dec_label_pc_2007e:                               ; preds = %dec_label_pc_20046
  %7 = load i32, i32* @global_var_23610c, align 4, !insn.addr !8667
  %8 = call i32 @update_filcker_freq(i32 %0, i32 %arg2, i32 %7), !insn.addr !8668
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !8669
  br label %dec_label_pc_20094, !insn.addr !8669

dec_label_pc_20094:                               ; preds = %dec_label_pc_2007e, %dec_label_pc_20056, %dec_label_pc_2001c
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !8670

; uselistorder directives
  uselistorder i32* @global_var_23610c, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 (i32)* @convert_ui_type_to_port, { 13, 6, 12, 11, 10, 9, 8, 7, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @red_led_on() local_unnamed_addr {
dec_label_pc_200a0:
  %0 = call i32 @gpio_ctrl_ui(i32 1, i32 0), !insn.addr !8671
  ret i32 %0, !insn.addr !8672
}

define i32 @red_led_off() local_unnamed_addr {
dec_label_pc_200b4:
  %0 = call i32 @gpio_ctrl_ui(i32 1, i32 1), !insn.addr !8673
  ret i32 %0, !insn.addr !8674
}

define i32 @red_led_flicker() local_unnamed_addr {
dec_label_pc_200c8:
  %0 = call i32 @gpio_ctrl_ui(i32 1, i32 2), !insn.addr !8675
  ret i32 %0, !insn.addr !8676
}

define i32 @green_led_on() local_unnamed_addr {
dec_label_pc_200dc:
  %0 = call i32 @gpio_ctrl_ui(i32 2, i32 0), !insn.addr !8677
  ret i32 %0, !insn.addr !8678
}

define i32 @green_led_off(i32 %arg1) local_unnamed_addr {
dec_label_pc_200f0:
  %0 = call i32 @gpio_ctrl_ui(i32 2, i32 1), !insn.addr !8679
  ret i32 %0, !insn.addr !8680
}

define i32 @green_led_flicker() local_unnamed_addr {
dec_label_pc_20104:
  %0 = call i32 @gpio_ctrl_ui(i32 2, i32 2), !insn.addr !8681
  ret i32 %0, !insn.addr !8682
}

define i32 @beeper_on() local_unnamed_addr {
dec_label_pc_20118:
  %0 = call i32 @gpio_ctrl_ui(i32 16, i32 0), !insn.addr !8683
  ret i32 %0, !insn.addr !8684
}

define i32 @beeper_off() local_unnamed_addr {
dec_label_pc_2012c:
  %0 = call i32 @gpio_ctrl_ui(i32 16, i32 1), !insn.addr !8685
  ret i32 %0, !insn.addr !8686
}

define i32 @beeper_flicker() local_unnamed_addr {
dec_label_pc_20140:
  %0 = call i32 @gpio_ctrl_ui(i32 16, i32 2), !insn.addr !8687
  ret i32 %0, !insn.addr !8688

; uselistorder directives
  uselistorder i32 (i32, i32)* @gpio_ctrl_ui, { 8, 7, 6, 5, 1, 4, 3, 0, 2 }
}

define i32 @reg_key_callback(i32 %arg1) local_unnamed_addr {
dec_label_pc_20154:
  %storemerge.reg2mem = alloca i32, !insn.addr !8689
  %stack_var_-16.0.reg2mem = alloca i32, !insn.addr !8689
  %storemerge12.reg2mem = alloca i32, !insn.addr !8689
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_2360f4), !insn.addr !8690
  %1 = icmp eq i32 %0, 0, !insn.addr !8691
  store i32 0, i32* %storemerge12.reg2mem, !insn.addr !8692
  br i1 %1, label %dec_label_pc_201a6, label %dec_label_pc_20176, !insn.addr !8692

dec_label_pc_20176:                               ; preds = %dec_label_pc_20154
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2c7e4, i32 0, i32 0), i32 320), !insn.addr !8693
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c6fc, i32 0, i32 0)), !insn.addr !8694
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !8695
  br label %dec_label_pc_20214, !insn.addr !8695

dec_label_pc_201a6:                               ; preds = %dec_label_pc_20154, %dec_label_pc_201d0
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %4 = mul i32 %storemerge12.reload, 4, !insn.addr !8696
  %5 = add i32 %4, ptrtoint (i32* @global_var_23611c to i32), !insn.addr !8696
  %6 = inttoptr i32 %5 to i32*, !insn.addr !8696
  %7 = load i32, i32* %6, align 4, !insn.addr !8696
  %8 = icmp eq i32 %7, 0, !insn.addr !8697
  br i1 %8, label %dec_label_pc_201d6.thread, label %dec_label_pc_201d0, !insn.addr !8698

dec_label_pc_201d6.thread:                        ; preds = %dec_label_pc_201a6
  store i32 %arg1, i32* %6, align 4, !insn.addr !8699
  store i32 0, i32* %stack_var_-16.0.reg2mem
  br label %dec_label_pc_20206

dec_label_pc_201d0:                               ; preds = %dec_label_pc_201a6
  %9 = add nuw nsw i32 %storemerge12.reload, 1, !insn.addr !8700
  %10 = icmp ult i32 %9, 5, !insn.addr !8701
  store i32 %9, i32* %storemerge12.reg2mem, !insn.addr !8701
  br i1 %10, label %dec_label_pc_201a6, label %dec_label_pc_201dc, !insn.addr !8701

dec_label_pc_201dc:                               ; preds = %dec_label_pc_201d0
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2c7e4, i32 0, i32 0), i32 331), !insn.addr !8702
  %12 = call i32 @puts(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_2c75c, i32 0, i32 0)), !insn.addr !8703
  store i32 -2, i32* %stack_var_-16.0.reg2mem, !insn.addr !8703
  br label %dec_label_pc_20206, !insn.addr !8703

dec_label_pc_20206:                               ; preds = %dec_label_pc_201d6.thread, %dec_label_pc_201dc
  %stack_var_-16.0.reload = load i32, i32* %stack_var_-16.0.reg2mem
  %13 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_2360f4), !insn.addr !8704
  store i32 %stack_var_-16.0.reload, i32* %storemerge.reg2mem, !insn.addr !8705
  br label %dec_label_pc_20214, !insn.addr !8705

dec_label_pc_20214:                               ; preds = %dec_label_pc_20206, %dec_label_pc_20176
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8706

; uselistorder directives
  uselistorder i32* %storemerge12.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-16.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_20206, { 1, 0 }
  uselistorder label %dec_label_pc_201a6, { 1, 0 }
}

define i32 @unreg_key_callback(i32 %arg1) local_unnamed_addr {
dec_label_pc_20220:
  %storemerge.reg2mem = alloca i32, !insn.addr !8707
  %storemerge12.reg2mem = alloca i32, !insn.addr !8707
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_2360f4), !insn.addr !8708
  %1 = icmp eq i32 %0, 0, !insn.addr !8709
  store i32 0, i32* %storemerge12.reg2mem, !insn.addr !8710
  br i1 %1, label %dec_label_pc_2026e, label %dec_label_pc_2023e, !insn.addr !8710

dec_label_pc_2023e:                               ; preds = %dec_label_pc_20220
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c7d0, i32 0, i32 0), i32 347), !insn.addr !8711
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c6fc, i32 0, i32 0)), !insn.addr !8712
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !8713
  br label %dec_label_pc_202d8, !insn.addr !8713

dec_label_pc_2026e:                               ; preds = %dec_label_pc_20220, %dec_label_pc_2029a
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %4 = mul i32 %storemerge12.reload, 4, !insn.addr !8714
  %5 = add i32 %4, ptrtoint (i32* @global_var_23611c to i32), !insn.addr !8714
  %6 = inttoptr i32 %5 to i32*, !insn.addr !8714
  %7 = load i32, i32* %6, align 4, !insn.addr !8714
  %8 = icmp eq i32 %7, %arg1, !insn.addr !8715
  br i1 %8, label %dec_label_pc_202a0.thread, label %dec_label_pc_2029a, !insn.addr !8716

dec_label_pc_202a0.thread:                        ; preds = %dec_label_pc_2026e
  store i32 0, i32* %6, align 4, !insn.addr !8717
  br label %dec_label_pc_202ca

dec_label_pc_2029a:                               ; preds = %dec_label_pc_2026e
  %9 = add nuw nsw i32 %storemerge12.reload, 1, !insn.addr !8718
  %10 = icmp ult i32 %9, 5, !insn.addr !8719
  store i32 %9, i32* %storemerge12.reg2mem, !insn.addr !8719
  br i1 %10, label %dec_label_pc_2026e, label %dec_label_pc_202a6, !insn.addr !8719

dec_label_pc_202a6:                               ; preds = %dec_label_pc_2029a
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c7d0, i32 0, i32 0), i32 357), !insn.addr !8720
  %12 = call i32 @puts(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2c778, i32 0, i32 0)), !insn.addr !8721
  br label %dec_label_pc_202ca, !insn.addr !8721

dec_label_pc_202ca:                               ; preds = %dec_label_pc_202a0.thread, %dec_label_pc_202a6
  %13 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_2360f4), !insn.addr !8722
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8723
  br label %dec_label_pc_202d8, !insn.addr !8723

dec_label_pc_202d8:                               ; preds = %dec_label_pc_202ca, %dec_label_pc_2023e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8724

; uselistorder directives
  uselistorder i32* %storemerge12.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_202ca, { 1, 0 }
  uselistorder label %dec_label_pc_2026e, { 1, 0 }
}

define i32 @lcd_show_result(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_202e4:
  %storemerge.reg2mem = alloca i32, !insn.addr !8725
  %storemerge1.reg2mem = alloca i32, !insn.addr !8725
  %.reg2mem = alloca i32, !insn.addr !8725
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_2360f4), !insn.addr !8726
  %1 = icmp eq i32 %0, 0, !insn.addr !8727
  br i1 %1, label %dec_label_pc_20332, label %dec_label_pc_20308, !insn.addr !8728

dec_label_pc_20308:                               ; preds = %dec_label_pc_202e4
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2c7c0, i32 0, i32 0), i32 375), !insn.addr !8729
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c6fc, i32 0, i32 0)), !insn.addr !8730
  store i32 -4, i32* %storemerge.reg2mem, !insn.addr !8731
  br label %dec_label_pc_203d8, !insn.addr !8731

dec_label_pc_20332:                               ; preds = %dec_label_pc_202e4
  %4 = load i32, i32* @global_var_35a78, align 4
  %5 = icmp slt i32 %4, 0, !insn.addr !8732
  store i32 %4, i32* %.reg2mem, !insn.addr !8733
  br i1 %5, label %dec_label_pc_20340, label %dec_label_pc_2036c, !insn.addr !8733

dec_label_pc_20340:                               ; preds = %dec_label_pc_20332
  %6 = load [17 x i8]*, [17 x i8]** @global_var_35a7c, align 4, !insn.addr !8734
  %7 = ptrtoint [17 x i8]* %6 to i32, !insn.addr !8734
  %8 = call i32 @lcd_init(i32 %7), !insn.addr !8735
  store i32 %8, i32* @global_var_35a78, align 4, !insn.addr !8736
  %9 = call i32 @lcd_clear(i32 %8), !insn.addr !8737
  %.pr = load i32, i32* @global_var_35a78, align 4
  store i32 %.pr, i32* %.reg2mem, !insn.addr !8737
  br label %dec_label_pc_2036c, !insn.addr !8737

dec_label_pc_2036c:                               ; preds = %dec_label_pc_20332, %dec_label_pc_20340
  %.reload = load i32, i32* %.reg2mem, !insn.addr !8738
  %10 = icmp slt i32 %.reload, 1, !insn.addr !8739
  br i1 %10, label %dec_label_pc_20394, label %dec_label_pc_2037a, !insn.addr !8739

dec_label_pc_2037a:                               ; preds = %dec_label_pc_2036c
  %11 = call i32 @lcd_write(i32 %.reload, i32 %arg1, i32 %arg2, i32 %arg3), !insn.addr !8740
  store i32 %11, i32* %storemerge1.reg2mem, !insn.addr !8741
  br label %dec_label_pc_203ca, !insn.addr !8741

dec_label_pc_20394:                               ; preds = %dec_label_pc_2036c
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2c7c0, i32 0, i32 0), i32 385), !insn.addr !8742
  %13 = load [17 x i8]*, [17 x i8]** @global_var_35a7c, align 4, !insn.addr !8743
  %14 = getelementptr inbounds [17 x i8], [17 x i8]* %13, i32 0, i32 0, !insn.addr !8744
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c798, i32 0, i32 0), i8* %14), !insn.addr !8744
  store i32 -1, i32* %storemerge1.reg2mem, !insn.addr !8745
  br label %dec_label_pc_203ca, !insn.addr !8745

dec_label_pc_203ca:                               ; preds = %dec_label_pc_20394, %dec_label_pc_2037a
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %16 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_2360f4), !insn.addr !8746
  store i32 %storemerge1.reload, i32* %storemerge.reg2mem, !insn.addr !8747
  br label %dec_label_pc_203d8, !insn.addr !8747

dec_label_pc_203d8:                               ; preds = %dec_label_pc_203ca, %dec_label_pc_20308
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8748

; uselistorder directives
  uselistorder i32* %storemerge1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2036c, { 1, 0 }
}

define i32 @lcd_clear_result() local_unnamed_addr {
dec_label_pc_203e4:
  %0 = alloca i32
  %storemerge.reg2mem = alloca i32, !insn.addr !8749
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_2360f4), !insn.addr !8750
  %4 = icmp eq i32 %3, 0, !insn.addr !8751
  br i1 %4, label %dec_label_pc_20420, label %dec_label_pc_203fa, !insn.addr !8752

dec_label_pc_203fa:                               ; preds = %dec_label_pc_203e4
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c5dc, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2c7ac, i32 0, i32 0), i32 396), !insn.addr !8753
  %6 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c6fc, i32 0, i32 0)), !insn.addr !8754
  store i32 %6, i32* %storemerge.reg2mem, !insn.addr !8755
  br label %dec_label_pc_2044c, !insn.addr !8755

dec_label_pc_20420:                               ; preds = %dec_label_pc_203e4
  %7 = load i32, i32* @global_var_35a78, align 4, !insn.addr !8756
  %8 = icmp slt i32 %7, 1, !insn.addr !8757
  br i1 %8, label %dec_label_pc_2043e, label %dec_label_pc_2042e, !insn.addr !8757

dec_label_pc_2042e:                               ; preds = %dec_label_pc_20420
  %9 = call i32 @lcd_clear(i32 %7), !insn.addr !8758
  br label %dec_label_pc_2043e, !insn.addr !8758

dec_label_pc_2043e:                               ; preds = %dec_label_pc_2042e, %dec_label_pc_20420
  %10 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_2360f4), !insn.addr !8759
  %11 = call i32 @__asm_nop(i32 %10, i32 %2, i32 %1, i32 %7), !insn.addr !8760
  store i32 %11, i32* %storemerge.reg2mem, !insn.addr !8760
  br label %dec_label_pc_2044c, !insn.addr !8760

dec_label_pc_2044c:                               ; preds = %dec_label_pc_2043e, %dec_label_pc_203fa
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8761

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32* %0, { 1, 0 }
  uselistorder i32 (i32)* @lcd_clear, { 1, 0 }
  uselistorder i32* @global_var_35a78, { 2, 0, 1, 3 }
}

define i32 @lcd_init(i32 %arg1) local_unnamed_addr {
dec_label_pc_20450:
  %r3.0.reg2mem = alloca i32, !insn.addr !8762
  %0 = load i32, i32* @global_var_236134, align 4, !insn.addr !8763
  %1 = icmp eq i32 %0, 0, !insn.addr !8764
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !8765
  br i1 %1, label %dec_label_pc_2046a, label %dec_label_pc_204fa, !insn.addr !8765

dec_label_pc_2046a:                               ; preds = %dec_label_pc_20450
  %2 = icmp eq i32 %arg1, 0, !insn.addr !8766
  br i1 %2, label %dec_label_pc_20470, label %dec_label_pc_20498, !insn.addr !8767

dec_label_pc_20470:                               ; preds = %dec_label_pc_2046a
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c888, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2c8fc, i32 0, i32 0), i32 24), !insn.addr !8768
  %4 = call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c890, i32 0, i32 0)), !insn.addr !8769
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !8770
  br label %dec_label_pc_204fa, !insn.addr !8770

dec_label_pc_20498:                               ; preds = %dec_label_pc_2046a
  %5 = inttoptr i32 %arg1 to i8*, !insn.addr !8771
  %6 = call i32 (i8*, i32, ...) @open(i8* %5, i32 2050), !insn.addr !8771
  store i32 %6, i32* @global_var_236130, align 4, !insn.addr !8772
  %7 = icmp slt i32 %6, 0, !insn.addr !8773
  br i1 %7, label %dec_label_pc_204bc, label %dec_label_pc_204e4, !insn.addr !8774

dec_label_pc_204bc:                               ; preds = %dec_label_pc_20498
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c888, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2c8fc, i32 0, i32 0), i32 30), !insn.addr !8775
  %9 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c89c, i32 0, i32 0)), !insn.addr !8776
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !8777
  br label %dec_label_pc_204fa, !insn.addr !8777

dec_label_pc_204e4:                               ; preds = %dec_label_pc_20498
  store i32 1, i32* @global_var_236134, align 4, !insn.addr !8778
  store i32 %6, i32* %r3.0.reg2mem, !insn.addr !8779
  br label %dec_label_pc_204fa, !insn.addr !8779

dec_label_pc_204fa:                               ; preds = %dec_label_pc_20450, %dec_label_pc_204e4, %dec_label_pc_204bc, %dec_label_pc_20470
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !8780

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 4, 1 }
  uselistorder i32 (i8*, i32, ...)* @open, { 2, 3, 5, 6, 4, 1, 0 }
  uselistorder label %dec_label_pc_204fa, { 1, 2, 3, 0 }
}

define i32 @lcd_write(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20504:
  %r3.1.reg2mem = alloca i32, !insn.addr !8781
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !8781
  %stack_var_-21.0.reg2mem = alloca i32, !insn.addr !8781
  %stack_var_-32.0.reg2mem = alloca i32, !insn.addr !8781
  %0 = load i32, i32* @global_var_236134, align 4, !insn.addr !8782
  %1 = icmp eq i32 %0, 0, !insn.addr !8783
  store i32 -2, i32* %r3.1.reg2mem, !insn.addr !8784
  br i1 %1, label %dec_label_pc_2061e, label %dec_label_pc_2052c, !insn.addr !8784

dec_label_pc_2052c:                               ; preds = %dec_label_pc_20504
  %2 = load i32, i32* @global_var_236130, align 4, !insn.addr !8785
  %3 = icmp eq i32 %2, %arg1, !insn.addr !8786
  br i1 %3, label %dec_label_pc_2053c, label %dec_label_pc_20548, !insn.addr !8787

dec_label_pc_2053c:                               ; preds = %dec_label_pc_2052c
  %4 = mul i32 %arg2, 16777216
  %5 = ashr exact i32 %4, 24, !insn.addr !8788
  %6 = urem i32 %5, 256, !insn.addr !8789
  %7 = icmp ult i32 %6, 3, !insn.addr !8790
  %8 = icmp ne i1 %7, true, !insn.addr !8790
  %9 = icmp eq i32 %6, 3, !insn.addr !8790
  %10 = icmp ne i1 %9, true, !insn.addr !8791
  %11 = icmp eq i1 %8, %10, !insn.addr !8791
  br i1 %11, label %dec_label_pc_20548, label %dec_label_pc_20542, !insn.addr !8791

dec_label_pc_20542:                               ; preds = %dec_label_pc_2053c
  %12 = icmp ult i32 %arg4, 64, !insn.addr !8792
  %13 = icmp ne i1 %12, true, !insn.addr !8792
  %14 = icmp eq i32 %arg4, 64, !insn.addr !8792
  %15 = icmp ne i1 %13, true, !insn.addr !8793
  %16 = or i1 %14, %15, !insn.addr !8793
  br i1 %16, label %dec_label_pc_20570, label %dec_label_pc_20548, !insn.addr !8793

dec_label_pc_20548:                               ; preds = %dec_label_pc_2052c, %dec_label_pc_20542, %dec_label_pc_2053c
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c888, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c8f0, i32 0, i32 0), i32 54), !insn.addr !8794
  %18 = call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c890, i32 0, i32 0)), !insn.addr !8795
  store i32 -3, i32* %r3.1.reg2mem, !insn.addr !8796
  br label %dec_label_pc_2061e, !insn.addr !8796

dec_label_pc_20570:                               ; preds = %dec_label_pc_20542
  %19 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_236138), !insn.addr !8797
  %20 = icmp eq i32 %19, 0, !insn.addr !8798
  store i32 %arg4, i32* %stack_var_-32.0.reg2mem, !insn.addr !8799
  store i32 %5, i32* %stack_var_-21.0.reg2mem, !insn.addr !8799
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !8799
  br i1 %20, label %dec_label_pc_205aa, label %dec_label_pc_20582, !insn.addr !8799

dec_label_pc_20582:                               ; preds = %dec_label_pc_20570
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c888, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c8f0, i32 0, i32 0), i32 59), !insn.addr !8800
  %22 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c8b0, i32 0, i32 0)), !insn.addr !8801
  store i32 -4, i32* %r3.1.reg2mem, !insn.addr !8802
  br label %dec_label_pc_2061e, !insn.addr !8802

dec_label_pc_205aa:                               ; preds = %dec_label_pc_20570, %dec_label_pc_205f0
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  %stack_var_-21.0.reload = load i32, i32* %stack_var_-21.0.reg2mem
  %stack_var_-32.0.reload = load i32, i32* %stack_var_-32.0.reg2mem
  %23 = icmp ult i32 %stack_var_-32.0.reload, 16, !insn.addr !8803
  %24 = icmp ne i1 %23, true, !insn.addr !8803
  br i1 %24, label %25, label %27, !insn.addr !8804

; <label>:25:                                     ; preds = %dec_label_pc_205aa
  %26 = call i32 @__asm_it(), !insn.addr !8804
  br label %27, !insn.addr !8804

; <label>:27:                                     ; preds = %dec_label_pc_205aa, %25
  %spec.select = select i1 %24, i32 16, i32 %stack_var_-32.0.reload
  %28 = mul i32 %stack_var_-21.0.reload, 16, !insn.addr !8805
  %29 = and i32 %28, 4080, !insn.addr !8806
  %30 = add i32 %29, ptrtoint (i32* @global_var_236150 to i32), !insn.addr !8807
  %31 = add i32 %stack_var_-12.0.reload, %arg3, !insn.addr !8808
  %32 = inttoptr i32 %30 to i32*, !insn.addr !8809
  %33 = inttoptr i32 %31 to i32*, !insn.addr !8809
  %34 = call i32* @memcpy(i32* %32, i32* %33, i32 %spec.select), !insn.addr !8809
  %35 = sub i32 %stack_var_-32.0.reload, %spec.select, !insn.addr !8810
  %36 = icmp eq i32 %35, 0, !insn.addr !8811
  br i1 %36, label %dec_label_pc_205f6, label %dec_label_pc_205f0, !insn.addr !8812

dec_label_pc_205f0:                               ; preds = %27
  %37 = trunc i32 %stack_var_-21.0.reload to i8
  %38 = add i8 %37, 1, !insn.addr !8813
  %39 = sext i8 %38 to i32, !insn.addr !8813
  %40 = add i32 %spec.select, %stack_var_-12.0.reload, !insn.addr !8814
  %41 = urem i32 %39, 256, !insn.addr !8815
  %42 = icmp ult i32 %41, 3, !insn.addr !8816
  %43 = icmp ne i1 %42, true, !insn.addr !8816
  %44 = icmp eq i32 %41, 3, !insn.addr !8816
  %45 = icmp ne i1 %43, true, !insn.addr !8817
  %46 = or i1 %44, %45, !insn.addr !8817
  store i32 %35, i32* %stack_var_-32.0.reg2mem, !insn.addr !8817
  store i32 %39, i32* %stack_var_-21.0.reg2mem, !insn.addr !8817
  store i32 %40, i32* %stack_var_-12.0.reg2mem, !insn.addr !8817
  br i1 %46, label %dec_label_pc_205aa, label %dec_label_pc_205f6, !insn.addr !8817

dec_label_pc_205f6:                               ; preds = %dec_label_pc_205f0, %27
  %47 = load i32, i32* @global_var_236130, align 4, !insn.addr !8818
  %48 = call i32 @write(i32 %47, i32* nonnull @global_var_236150, i32 64), !insn.addr !8819
  %49 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236138), !insn.addr !8820
  store i32 0, i32* %r3.1.reg2mem, !insn.addr !8821
  br label %dec_label_pc_2061e, !insn.addr !8821

dec_label_pc_2061e:                               ; preds = %dec_label_pc_20504, %dec_label_pc_205f6, %dec_label_pc_20582, %dec_label_pc_20548
  %r3.1.reload = load i32, i32* %r3.1.reg2mem
  ret i32 %r3.1.reload, !insn.addr !8822

; uselistorder directives
  uselistorder i32 %41, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.reload, { 1, 2, 0 }
  uselistorder i32 %stack_var_-12.0.reload, { 1, 0 }
  uselistorder i32 %6, { 1, 0 }
  uselistorder i32* %stack_var_-32.0.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-21.0.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-12.0.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r3.1.reg2mem, { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_2061e, { 1, 2, 3, 0 }
  uselistorder label %27, { 1, 0 }
  uselistorder label %dec_label_pc_205aa, { 1, 0 }
  uselistorder label %dec_label_pc_20548, { 1, 2, 0 }
}

define i32 @lcd_flush(i32 %arg1) local_unnamed_addr {
dec_label_pc_20628:
  ret i32 0, !insn.addr !8823
}

define i32 @lcd_clear(i32 %arg1) local_unnamed_addr {
dec_label_pc_20640:
  %r3.0.reg2mem = alloca i32, !insn.addr !8824
  %0 = load i32, i32* @global_var_236134, align 4, !insn.addr !8825
  %1 = icmp eq i32 %0, 0, !insn.addr !8826
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !8827
  br i1 %1, label %dec_label_pc_2071a, label %dec_label_pc_2065c, !insn.addr !8827

dec_label_pc_2065c:                               ; preds = %dec_label_pc_20640
  %2 = load i32, i32* @global_var_236130, align 4, !insn.addr !8828
  %3 = icmp eq i32 %2, %arg1, !insn.addr !8829
  br i1 %3, label %dec_label_pc_20694, label %dec_label_pc_2066c, !insn.addr !8830

dec_label_pc_2066c:                               ; preds = %dec_label_pc_2065c
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c888, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c8e4, i32 0, i32 0), i32 93), !insn.addr !8831
  %5 = call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c890, i32 0, i32 0)), !insn.addr !8832
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !8833
  br label %dec_label_pc_2071a, !insn.addr !8833

dec_label_pc_20694:                               ; preds = %dec_label_pc_2065c
  %6 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_236138), !insn.addr !8834
  %7 = icmp eq i32 %6, 0, !insn.addr !8835
  br i1 %7, label %dec_label_pc_206ce, label %dec_label_pc_206a6, !insn.addr !8836

dec_label_pc_206a6:                               ; preds = %dec_label_pc_20694
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c888, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2c8e4, i32 0, i32 0), i32 97), !insn.addr !8837
  %9 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c8b0, i32 0, i32 0)), !insn.addr !8838
  store i32 -4, i32* %r3.0.reg2mem, !insn.addr !8839
  br label %dec_label_pc_2071a, !insn.addr !8839

dec_label_pc_206ce:                               ; preds = %dec_label_pc_20694
  %10 = call i32* @memset(i32* nonnull @global_var_236150, i32 32, i32 64), !insn.addr !8840
  %11 = load i32, i32* @global_var_236130, align 4, !insn.addr !8841
  %12 = call i32 @lseek(i32 %11, i32 0, i32 0), !insn.addr !8842
  %13 = load i32, i32* @global_var_236130, align 4, !insn.addr !8843
  %14 = call i32 @write(i32 %13, i32* nonnull @global_var_236150, i32 64), !insn.addr !8844
  %15 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236138), !insn.addr !8845
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !8846
  br label %dec_label_pc_2071a, !insn.addr !8846

dec_label_pc_2071a:                               ; preds = %dec_label_pc_20640, %dec_label_pc_206ce, %dec_label_pc_206a6, %dec_label_pc_2066c
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !8847

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32*, i32)* @write, { 2, 1, 3, 5, 4, 0 }
  uselistorder i32* @global_var_236130, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_2071a, { 1, 2, 3, 0 }
}

define i32 @lcd_uninit(i32 %arg1) local_unnamed_addr {
dec_label_pc_20724:
  %stack_var_-12.1.reg2mem = alloca i32, !insn.addr !8848
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !8848
  %0 = load i32, i32* @global_var_236134, align 4, !insn.addr !8849
  %1 = icmp eq i32 %0, 0, !insn.addr !8850
  store i32 0, i32* %stack_var_-12.1.reg2mem, !insn.addr !8851
  br i1 %1, label %dec_label_pc_2077e, label %dec_label_pc_2073e, !insn.addr !8851

dec_label_pc_2073e:                               ; preds = %dec_label_pc_20724
  %2 = call i32 @close(i32 %arg1), !insn.addr !8852
  %3 = icmp eq i32 %2, 0, !insn.addr !8853
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !8854
  br i1 %3, label %dec_label_pc_20772, label %dec_label_pc_2074a, !insn.addr !8854

dec_label_pc_2074a:                               ; preds = %dec_label_pc_2073e
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c888, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2c8d8, i32 0, i32 0), i32 117), !insn.addr !8855
  %5 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2c8c4, i32 0, i32 0)), !insn.addr !8856
  store i32 -1, i32* %stack_var_-12.0.reg2mem, !insn.addr !8857
  br label %dec_label_pc_20772, !insn.addr !8857

dec_label_pc_20772:                               ; preds = %dec_label_pc_2074a, %dec_label_pc_2073e
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  store i32 0, i32* @global_var_236134, align 4, !insn.addr !8858
  store i32 %stack_var_-12.0.reload, i32* %stack_var_-12.1.reg2mem, !insn.addr !8858
  br label %dec_label_pc_2077e, !insn.addr !8858

dec_label_pc_2077e:                               ; preds = %dec_label_pc_20772, %dec_label_pc_20724
  %stack_var_-12.1.reload = load i32, i32* %stack_var_-12.1.reg2mem
  ret i32 %stack_var_-12.1.reload, !insn.addr !8859

; uselistorder directives
  uselistorder i32 (i32)* @close, { 14, 5, 4, 11, 10, 13, 12, 7, 6, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @global_var_236134, { 0, 2, 3, 4, 1, 5 }
}

define i32 @i2c_compare_e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2078c:
  %0 = sub i32 %arg1, %arg2, !insn.addr !8860
  ret i32 %0, !insn.addr !8861
}

define i32 @i2c_init(i32 %arg1) local_unnamed_addr {
dec_label_pc_207ac:
  %storemerge.reg2mem = alloca i32, !insn.addr !8862
  %.reg2mem = alloca i32, !insn.addr !8862
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 -1, i32* %stack_var_-12, align 4, !insn.addr !8863
  %0 = load i32, i32* @global_var_235c54, align 4, !insn.addr !8864
  %1 = icmp eq i32 %0, 0, !insn.addr !8865
  br i1 %1, label %dec_label_pc_207c8, label %dec_label_pc_207f0, !insn.addr !8866

dec_label_pc_207c8:                               ; preds = %dec_label_pc_207ac
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2caec, i32 0, i32 0), i32 41), !insn.addr !8867
  %3 = call i32 @puts(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2c910, i32 0, i32 0)), !insn.addr !8868
  store i32 -2, i32* %storemerge.reg2mem, !insn.addr !8869
  br label %dec_label_pc_20874, !insn.addr !8869

dec_label_pc_207f0:                               ; preds = %dec_label_pc_207ac
  %4 = load i32, i32* @global_var_2361ac, align 4, !insn.addr !8870
  %5 = icmp eq i32 %4, 0, !insn.addr !8871
  store i32 %4, i32* %.reg2mem, !insn.addr !8872
  br i1 %5, label %dec_label_pc_207fe, label %dec_label_pc_20828, !insn.addr !8872

dec_label_pc_207fe:                               ; preds = %dec_label_pc_207f0
  %6 = call i32 @new_c_map(i32 133005, i32 0, i32 0), !insn.addr !8873
  store i32 %6, i32* @global_var_2361a8, align 4, !insn.addr !8874
  %7 = call i32 @pthread_mutex_init(i32* nonnull @global_var_236190, i32* null), !insn.addr !8875
  %.pre = load i32, i32* @global_var_2361ac, align 4
  store i32 %.pre, i32* %.reg2mem, !insn.addr !8875
  br label %dec_label_pc_20828, !insn.addr !8875

dec_label_pc_20828:                               ; preds = %dec_label_pc_207f0, %dec_label_pc_207fe
  %.reload = load i32, i32* %.reg2mem, !insn.addr !8876
  %8 = add i32 %.reload, 1, !insn.addr !8877
  store i32 %8, i32* @global_var_2361ac, align 4, !insn.addr !8878
  store i32 %8, i32* %stack_var_-12, align 4, !insn.addr !8879
  store i32 0, i32* %stack_var_-20, align 4, !insn.addr !8880
  %9 = load i32, i32* @global_var_2361a8, align 4, !insn.addr !8881
  %10 = call i32 @insert_c_map(i32 %9, i32* nonnull %stack_var_-12, i32 4, i32* nonnull %stack_var_-20, i32 8), !insn.addr !8882
  %11 = load i32, i32* %stack_var_-12, align 4, !insn.addr !8883
  store i32 %11, i32* %storemerge.reg2mem, !insn.addr !8883
  br label %dec_label_pc_20874, !insn.addr !8883

dec_label_pc_20874:                               ; preds = %dec_label_pc_20828, %dec_label_pc_207c8
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8884

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0, 2, 3 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32, i32*, i32, i32*, i32)* @insert_c_map, { 1, 2, 0 }
  uselistorder i32 (i32*, i32*)* @pthread_mutex_init, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @new_c_map, { 2, 1, 0 }
  uselistorder i32* @global_var_235c54, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12, 1, 13 }
  uselistorder label %dec_label_pc_20828, { 1, 0 }
}

define i32 @i2c_uninit(i32 %arg1) local_unnamed_addr {
dec_label_pc_20880:
  %storemerge.reg2mem = alloca i32, !insn.addr !8885
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4, !insn.addr !8886
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_236190), !insn.addr !8887
  %1 = icmp eq i32 %0, 0, !insn.addr !8888
  br i1 %1, label %dec_label_pc_208c2, label %dec_label_pc_2089e, !insn.addr !8889

dec_label_pc_2089e:                               ; preds = %dec_label_pc_20880
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2cae0, i32 0, i32 0), i32 62), !insn.addr !8890
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c930, i32 0, i32 0)), !insn.addr !8891
  store i32 %3, i32* %storemerge.reg2mem, !insn.addr !8892
  br label %dec_label_pc_209fc, !insn.addr !8892

dec_label_pc_208c2:                               ; preds = %dec_label_pc_20880
  %4 = load i32, i32* @global_var_2361a8, align 4, !insn.addr !8893
  %5 = call i32 @exists_c_map(i32 %4, i32* nonnull %stack_var_-28), !insn.addr !8894
  %6 = icmp eq i32 %5, 1, !insn.addr !8895
  br i1 %6, label %dec_label_pc_208dc, label %dec_label_pc_20918, !insn.addr !8896

dec_label_pc_208dc:                               ; preds = %dec_label_pc_208c2
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2cae0, i32 0, i32 0), i32 66), !insn.addr !8897
  %8 = load i32, i32* %stack_var_-28, align 4, !insn.addr !8898
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @global_var_2c944, i32 0, i32 0), i32 %8), !insn.addr !8899
  %10 = load i32, i32* @global_var_2361a8, align 4, !insn.addr !8900
  %11 = call i32 @remove_c_map(i32 %10, i32* nonnull %stack_var_-28), !insn.addr !8901
  br label %dec_label_pc_2093e, !insn.addr !8902

dec_label_pc_20918:                               ; preds = %dec_label_pc_208c2
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2cae0, i32 0, i32 0), i32 69), !insn.addr !8903
  %13 = load i32, i32* %stack_var_-28, align 4, !insn.addr !8904
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2c964, i32 0, i32 0), i32 %13), !insn.addr !8905
  br label %dec_label_pc_2093e, !insn.addr !8905

dec_label_pc_2093e:                               ; preds = %dec_label_pc_20918, %dec_label_pc_208dc
  %15 = load i32, i32* @global_var_2361a8, align 4, !insn.addr !8906
  %16 = call i32 @new_iterator_c_map(i32 %15), !insn.addr !8907
  %17 = icmp eq i32 %16, 0, !insn.addr !8908
  br label %dec_label_pc_2096c, !insn.addr !8909

dec_label_pc_2096c:                               ; preds = %dec_label_pc_2096c, %dec_label_pc_2093e
  br i1 %17, label %dec_label_pc_209fa, label %dec_label_pc_2096c, !insn.addr !8910

dec_label_pc_209fa:                               ; preds = %dec_label_pc_2096c
  %18 = call i32 @delete_iterator_c_map(i32 0), !insn.addr !8911
  %19 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !8912
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2cae0, i32 0, i32 0), i32 80), !insn.addr !8913
  %21 = call i32 @puts(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2c97c, i32 0, i32 0)), !insn.addr !8914
  store i32 0, i32* @global_var_2361ac, align 4, !insn.addr !8915
  %22 = load i32, i32* @global_var_2361a8, align 4, !insn.addr !8916
  %23 = call i32 @delete_c_map(i32 %22), !insn.addr !8917
  store i32 0, i32* @global_var_2361a8, align 4, !insn.addr !8918
  %24 = call i32 @__asm_nop(i32 %23, i32 ptrtoint ([11 x i8]* @global_var_2cae0 to i32), i32 0, i32 ptrtoint (i32* @global_var_2361a8 to i32)), !insn.addr !8919
  store i32 %24, i32* %storemerge.reg2mem, !insn.addr !8919
  br label %dec_label_pc_209fc, !insn.addr !8919

dec_label_pc_209fc:                               ; preds = %dec_label_pc_209fa, %dec_label_pc_2089e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8920

; uselistorder directives
  uselistorder i32* %stack_var_-28, { 2, 0, 3, 1, 4 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32)* @delete_c_map, { 1, 2, 0 }
  uselistorder i32* @global_var_2361ac, { 1, 2, 0, 3 }
  uselistorder i32 80, { 0, 3, 4, 1, 2 }
  uselistorder i32 (i32, i32*)* @exists_c_map, { 1, 3, 2, 4, 0 }
  uselistorder [11 x i8]* @global_var_2cae0, { 1, 0 }
  uselistorder i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2cae0, i32 0, i32 0), { 1, 0, 2, 3 }
}

define i32 @wait4i2c_ready() local_unnamed_addr {
dec_label_pc_20a04:
  %storemerge.reg2mem = alloca i32, !insn.addr !8921
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !8921
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* %stack_var_-16, align 4, !insn.addr !8922
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !8923
  br label %dec_label_pc_20a12, !insn.addr !8923

dec_label_pc_20a12:                               ; preds = %16, %dec_label_pc_20a04
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  %0 = load i32, i32* @global_var_235c58, align 4, !insn.addr !8924
  %1 = icmp eq i32 %0, 0, !insn.addr !8925
  br i1 %1, label %dec_label_pc_20a36, label %dec_label_pc_20a20, !insn.addr !8926

dec_label_pc_20a20:                               ; preds = %dec_label_pc_20a12
  %2 = load i32, i32* @global_var_3557c, align 4, !insn.addr !8927
  %3 = call i32 @fpga_read(i32 %2, i32* nonnull %stack_var_-16), !insn.addr !8928
  br label %dec_label_pc_20a4a, !insn.addr !8929

dec_label_pc_20a36:                               ; preds = %dec_label_pc_20a12
  %4 = load i32, i32* @global_var_35810, align 4, !insn.addr !8930
  %5 = call i32 @fpga_read(i32 %4, i32* nonnull %stack_var_-16), !insn.addr !8931
  br label %dec_label_pc_20a4a, !insn.addr !8931

dec_label_pc_20a4a:                               ; preds = %dec_label_pc_20a36, %dec_label_pc_20a20
  %6 = load i32, i32* %stack_var_-16, align 4, !insn.addr !8932
  %7 = icmp slt i32 %6, 0, !insn.addr !8933
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !8934
  br i1 %7, label %dec_label_pc_20a76, label %dec_label_pc_20a56, !insn.addr !8934

dec_label_pc_20a56:                               ; preds = %dec_label_pc_20a4a
  %8 = call i32 @usleep(i32 5000), !insn.addr !8935
  %9 = icmp ult i32 %stack_var_-12.0.reload, 19, !insn.addr !8936
  %10 = icmp ne i1 %9, true, !insn.addr !8936
  %11 = icmp eq i32 %stack_var_-12.0.reload, 19, !insn.addr !8936
  %12 = icmp ne i1 %11, true, !insn.addr !8937
  %13 = icmp eq i1 %10, %12, !insn.addr !8937
  br i1 %13, label %14, label %16, !insn.addr !8937

; <label>:14:                                     ; preds = %dec_label_pc_20a56
  %15 = call i32 @__asm_ite(), !insn.addr !8937
  br label %16, !insn.addr !8937

; <label>:16:                                     ; preds = %dec_label_pc_20a56, %14
  %17 = icmp ne i1 %10, true, !insn.addr !8938
  %18 = or i1 %11, %17, !insn.addr !8938
  %stack_var_-12.0.op = urem i32 %stack_var_-12.0.reload, 256
  %19 = add i32 %stack_var_-12.0.reload, 1, !insn.addr !8939
  %20 = icmp eq i32 %stack_var_-12.0.op, 0
  %21 = or i1 %20, %13
  %not. = icmp ne i1 %18, true
  %22 = icmp eq i1 %21, %not., !insn.addr !8940
  store i32 %19, i32* %stack_var_-12.0.reg2mem, !insn.addr !8941
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8941
  br i1 %22, label %dec_label_pc_20a76, label %dec_label_pc_20a12, !insn.addr !8941

dec_label_pc_20a76:                               ; preds = %16, %dec_label_pc_20a4a
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8942

; uselistorder directives
  uselistorder i32 %stack_var_-12.0.reload, { 2, 3, 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-12.0.reg2mem, { 1, 0, 2 }
  uselistorder label %16, { 1, 0 }
}

define i32 @wait4i2c_data(i32 %arg1) local_unnamed_addr {
dec_label_pc_20a80:
  %storemerge.reg2mem = alloca i32, !insn.addr !8943
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !8943
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* %stack_var_-16, align 4, !insn.addr !8944
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !8945
  br label %dec_label_pc_20a90, !insn.addr !8945

dec_label_pc_20a90:                               ; preds = %18, %dec_label_pc_20a80
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  %0 = load i32, i32* @global_var_235c58, align 4, !insn.addr !8946
  %1 = icmp eq i32 %0, 0, !insn.addr !8947
  br i1 %1, label %dec_label_pc_20ab6, label %dec_label_pc_20a9e, !insn.addr !8948

dec_label_pc_20a9e:                               ; preds = %dec_label_pc_20a90
  %2 = load i32, i32* @global_var_3557c, align 4, !insn.addr !8949
  %3 = call i32 @fpga_read(i32 %2, i32* nonnull %stack_var_-16), !insn.addr !8950
  br label %dec_label_pc_20acc, !insn.addr !8951

dec_label_pc_20ab6:                               ; preds = %dec_label_pc_20a90
  %4 = load i32, i32* @global_var_35810, align 4, !insn.addr !8952
  %5 = call i32 @fpga_read(i32 %4, i32* nonnull %stack_var_-16), !insn.addr !8953
  br label %dec_label_pc_20acc, !insn.addr !8953

dec_label_pc_20acc:                               ; preds = %dec_label_pc_20ab6, %dec_label_pc_20a9e
  %6 = load i32, i32* %stack_var_-16, align 4, !insn.addr !8954
  %7 = icmp slt i32 %6, 0, !insn.addr !8955
  br i1 %7, label %dec_label_pc_20ad4, label %dec_label_pc_20ae0, !insn.addr !8956

dec_label_pc_20ad4:                               ; preds = %dec_label_pc_20acc
  %8 = trunc i32 %6 to i8, !insn.addr !8957
  %9 = inttoptr i32 %arg1 to i8*, !insn.addr !8957
  store i8 %8, i8* %9, align 1, !insn.addr !8957
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !8958
  br label %dec_label_pc_20b00, !insn.addr !8958

dec_label_pc_20ae0:                               ; preds = %dec_label_pc_20acc
  %10 = call i32 @usleep(i32 5000), !insn.addr !8959
  %11 = icmp ult i32 %stack_var_-12.0.reload, 19, !insn.addr !8960
  %12 = icmp ne i1 %11, true, !insn.addr !8960
  %13 = icmp eq i32 %stack_var_-12.0.reload, 19, !insn.addr !8960
  %14 = icmp ne i1 %13, true, !insn.addr !8961
  %15 = icmp eq i1 %12, %14, !insn.addr !8961
  br i1 %15, label %16, label %18, !insn.addr !8961

; <label>:16:                                     ; preds = %dec_label_pc_20ae0
  %17 = call i32 @__asm_ite(), !insn.addr !8961
  br label %18, !insn.addr !8961

; <label>:18:                                     ; preds = %dec_label_pc_20ae0, %16
  %19 = icmp ne i1 %12, true, !insn.addr !8962
  %20 = or i1 %13, %19, !insn.addr !8962
  %stack_var_-12.0.op = urem i32 %stack_var_-12.0.reload, 256
  %21 = add i32 %stack_var_-12.0.reload, 1, !insn.addr !8963
  %22 = icmp eq i32 %stack_var_-12.0.op, 0
  %23 = or i1 %22, %15
  %not. = icmp ne i1 %20, true
  %24 = icmp eq i1 %23, %not., !insn.addr !8964
  store i32 %21, i32* %stack_var_-12.0.reg2mem, !insn.addr !8965
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !8965
  br i1 %24, label %dec_label_pc_20b00, label %dec_label_pc_20a90, !insn.addr !8965

dec_label_pc_20b00:                               ; preds = %18, %dec_label_pc_20ad4
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !8966

; uselistorder directives
  uselistorder i32 %stack_var_-12.0.reload, { 2, 3, 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-12.0.reg2mem, { 1, 0, 2 }
  uselistorder i32 19, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 (i32)* @usleep, { 37, 36, 75, 31, 35, 34, 33, 32, 74, 30, 73, 72, 29, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 28, 57, 56, 55, 54, 53, 27, 26, 25, 24, 52, 51, 50, 49, 48, 47, 46, 45, 44, 23, 22, 43, 42, 41, 39, 40, 21, 79, 38, 20, 19, 18, 17, 16, 10, 15, 14, 13, 78, 11, 12, 9, 8, 7, 6, 5, 0, 4, 3, 1, 2, 77, 76 }
  uselistorder i32 (i32, i32*)* @fpga_read, { 17, 16, 15, 14, 11, 0, 35, 34, 10, 9, 12, 13, 33, 32, 8, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %18, { 1, 0 }
}

define i32 @i2c_read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20b0c:
  %r3.0.reg2mem = alloca i32, !insn.addr !8967
  %.pre-phi.reg2mem = alloca i32*, !insn.addr !8967
  %storemerge1.reg2mem = alloca i32, !insn.addr !8967
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4, !insn.addr !8968
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_236190), !insn.addr !8969
  %1 = icmp eq i32 %0, 0, !insn.addr !8970
  br i1 %1, label %dec_label_pc_20b56, label %dec_label_pc_20b2e, !insn.addr !8971

dec_label_pc_20b2e:                               ; preds = %dec_label_pc_20b0c
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2cad4, i32 0, i32 0), i32 132), !insn.addr !8972
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c930, i32 0, i32 0)), !insn.addr !8973
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !8974
  br label %dec_label_pc_20cd6, !insn.addr !8974

dec_label_pc_20b56:                               ; preds = %dec_label_pc_20b0c
  store i32 0, i32* %stack_var_-24, align 4, !insn.addr !8975
  %4 = load i32, i32* @global_var_2361a8, align 4, !insn.addr !8976
  %5 = call i32 @find_c_map(i32 %4, i32* nonnull %stack_var_-28, i32* nonnull %stack_var_-24), !insn.addr !8977
  %6 = icmp eq i32 %5, 1, !insn.addr !8978
  br i1 %6, label %dec_label_pc_20b82, label %dec_label_pc_20ca0, !insn.addr !8979

dec_label_pc_20b82:                               ; preds = %dec_label_pc_20b56
  %7 = load i32, i32* %stack_var_-24, align 4, !insn.addr !8980
  %8 = inttoptr i32 %7 to i32*
  %9 = load i32, i32* %8, align 4, !insn.addr !8981
  %10 = mul i32 %9, 67108864, !insn.addr !8982
  %11 = add i32 %7, 4, !insn.addr !8983
  %12 = inttoptr i32 %11 to i32*, !insn.addr !8983
  %13 = load i32, i32* %12, align 4, !insn.addr !8983
  %14 = udiv i32 %13, 16, !insn.addr !8984
  %15 = mul i32 %14, 1048576, !insn.addr !8985
  %16 = mul i32 %13, 32768
  %17 = and i32 %16, 458752, !insn.addr !8986
  %18 = or i32 %10, %15, !insn.addr !8987
  %19 = or i32 %18, %17, !insn.addr !8988
  %20 = or i32 %19, 33554432, !insn.addr !8989
  %21 = icmp eq i32 %arg3, 0, !insn.addr !8990
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !8991
  store i32* %8, i32** %.pre-phi.reg2mem, !insn.addr !8991
  br i1 %21, label %dec_label_pc_20c88, label %dec_label_pc_20bb0, !insn.addr !8991

dec_label_pc_20bb0:                               ; preds = %dec_label_pc_20b82, %dec_label_pc_20c80
  %22 = call i32 @wait4i2c_ready(), !insn.addr !8992
  %23 = icmp eq i32 %22, 0, !insn.addr !8993
  br i1 %23, label %dec_label_pc_20bba, label %dec_label_pc_20bf6, !insn.addr !8994

dec_label_pc_20bba:                               ; preds = %dec_label_pc_20bb0
  %24 = load i32, i32* %stack_var_-24, align 4, !insn.addr !8995
  %25 = inttoptr i32 %24 to i32*, !insn.addr !8996
  call void @free(i32* %25), !insn.addr !8996
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2cad4, i32 0, i32 0), i32 146), !insn.addr !8997
  %27 = call i32 @puts(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c9a8, i32 0, i32 0)), !insn.addr !8998
  %28 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !8999
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9000
  br label %dec_label_pc_20cd6, !insn.addr !9000

dec_label_pc_20bf6:                               ; preds = %dec_label_pc_20bb0
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %29 = load i32, i32* @global_var_235c58, align 4, !insn.addr !9001
  %30 = icmp eq i32 %29, 0, !insn.addr !9002
  br i1 %30, label %dec_label_pc_20c18, label %dec_label_pc_20c04, !insn.addr !9003

dec_label_pc_20c04:                               ; preds = %dec_label_pc_20bf6
  %31 = load i32, i32* @global_var_3557c, align 4, !insn.addr !9004
  %32 = call i32 @fpga_write(i32 %31, i32 %20), !insn.addr !9005
  br label %dec_label_pc_20c2a, !insn.addr !9006

dec_label_pc_20c18:                               ; preds = %dec_label_pc_20bf6
  %33 = load i32, i32* @global_var_35810, align 4, !insn.addr !9007
  %34 = call i32 @fpga_write(i32 %33, i32 %20), !insn.addr !9008
  br label %dec_label_pc_20c2a, !insn.addr !9008

dec_label_pc_20c2a:                               ; preds = %dec_label_pc_20c18, %dec_label_pc_20c04
  %35 = add i32 %storemerge1.reload, %arg2, !insn.addr !9009
  %36 = call i32 @wait4i2c_data(i32 %35), !insn.addr !9010
  %37 = icmp eq i32 %36, 0, !insn.addr !9011
  br i1 %37, label %dec_label_pc_20c44, label %dec_label_pc_20c80, !insn.addr !9012

dec_label_pc_20c44:                               ; preds = %dec_label_pc_20c2a
  %38 = load i32, i32* %stack_var_-24, align 4, !insn.addr !9013
  %39 = inttoptr i32 %38 to i32*, !insn.addr !9014
  call void @free(i32* %39), !insn.addr !9014
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2cad4, i32 0, i32 0), i32 158), !insn.addr !9015
  %41 = call i32 @puts(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c9c0, i32 0, i32 0)), !insn.addr !9016
  %42 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9017
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !9018
  br label %dec_label_pc_20cd6, !insn.addr !9018

dec_label_pc_20c80:                               ; preds = %dec_label_pc_20c2a
  %43 = add nuw i32 %storemerge1.reload, 1, !insn.addr !9019
  %44 = icmp ult i32 %43, %arg3, !insn.addr !8990
  store i32 %43, i32* %storemerge1.reg2mem, !insn.addr !8991
  br i1 %44, label %dec_label_pc_20bb0, label %dec_label_pc_20c80.dec_label_pc_20c88_crit_edge, !insn.addr !8991

dec_label_pc_20c80.dec_label_pc_20c88_crit_edge:  ; preds = %dec_label_pc_20c80
  %.pre = load i32, i32* %stack_var_-24, align 4
  %.pre2 = inttoptr i32 %.pre to i32*, !insn.addr !9020
  store i32* %.pre2, i32** %.pre-phi.reg2mem
  br label %dec_label_pc_20c88

dec_label_pc_20c88:                               ; preds = %dec_label_pc_20b82, %dec_label_pc_20c80.dec_label_pc_20c88_crit_edge
  %.pre-phi.reload = load i32*, i32** %.pre-phi.reg2mem
  call void @free(i32* %.pre-phi.reload), !insn.addr !9020
  %45 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9021
  store i32 %arg3, i32* %r3.0.reg2mem, !insn.addr !9022
  br label %dec_label_pc_20cd6, !insn.addr !9022

dec_label_pc_20ca0:                               ; preds = %dec_label_pc_20b56
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2cad4, i32 0, i32 0), i32 165), !insn.addr !9023
  %47 = load i32, i32* %stack_var_-28, align 4, !insn.addr !9024
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c9d8, i32 0, i32 0), i32 %47), !insn.addr !9025
  %49 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9026
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9027
  br label %dec_label_pc_20cd6, !insn.addr !9027

dec_label_pc_20cd6:                               ; preds = %dec_label_pc_20ca0, %dec_label_pc_20c44, %dec_label_pc_20bba, %dec_label_pc_20c88, %dec_label_pc_20b2e
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9028

; uselistorder directives
  uselistorder i32 %20, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_20cd6, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_20c88, { 1, 0 }
  uselistorder label %dec_label_pc_20bb0, { 1, 0 }
}

define i32 @i2c_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20ce0:
  %r3.0.reg2mem = alloca i32, !insn.addr !9029
  %.reg2mem = alloca i32, !insn.addr !9029
  %storemerge1.reg2mem = alloca i32, !insn.addr !9029
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4, !insn.addr !9030
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_236190), !insn.addr !9031
  %1 = icmp eq i32 %0, 0, !insn.addr !9032
  br i1 %1, label %dec_label_pc_20d2a, label %dec_label_pc_20d02, !insn.addr !9033

dec_label_pc_20d02:                               ; preds = %dec_label_pc_20ce0
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2cac8, i32 0, i32 0), i32 186), !insn.addr !9034
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c930, i32 0, i32 0)), !insn.addr !9035
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !9036
  br label %dec_label_pc_20e5e, !insn.addr !9036

dec_label_pc_20d2a:                               ; preds = %dec_label_pc_20ce0
  store i32 0, i32* %stack_var_-24, align 4, !insn.addr !9037
  %4 = load i32, i32* @global_var_2361a8, align 4, !insn.addr !9038
  %5 = call i32 @find_c_map(i32 %4, i32* nonnull %stack_var_-28, i32* nonnull %stack_var_-24), !insn.addr !9039
  %6 = icmp eq i32 %5, 1, !insn.addr !9040
  br i1 %6, label %dec_label_pc_20d54, label %dec_label_pc_20e28, !insn.addr !9041

dec_label_pc_20d54:                               ; preds = %dec_label_pc_20d2a
  %7 = load i32, i32* %stack_var_-24, align 4, !insn.addr !9042
  %8 = icmp eq i32 %arg3, 0, !insn.addr !9043
  store i32 %7, i32* %.reg2mem, !insn.addr !9044
  br i1 %8, label %dec_label_pc_20e10, label %dec_label_pc_20d5e.lr.ph, !insn.addr !9044

dec_label_pc_20d5e.lr.ph:                         ; preds = %dec_label_pc_20d54
  %9 = inttoptr i32 %7 to i32*, !insn.addr !9045
  %10 = add i32 %7, 4, !insn.addr !9046
  %11 = inttoptr i32 %10 to i32*, !insn.addr !9046
  store i32 0, i32* %storemerge1.reg2mem
  br label %dec_label_pc_20d5e

dec_label_pc_20d5e:                               ; preds = %dec_label_pc_20d5e.lr.ph, %dec_label_pc_20e02
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %12 = load i32, i32* %9, align 4, !insn.addr !9045
  %13 = load i32, i32* %11, align 4, !insn.addr !9046
  %14 = add i32 %storemerge1.reload, %arg2, !insn.addr !9047
  %15 = inttoptr i32 %14 to i8*, !insn.addr !9048
  %16 = load i8, i8* %15, align 1, !insn.addr !9048
  %17 = call i32 @wait4i2c_ready(), !insn.addr !9049
  %18 = icmp eq i32 %17, 0, !insn.addr !9050
  br i1 %18, label %dec_label_pc_20d92, label %dec_label_pc_20dce, !insn.addr !9051

dec_label_pc_20d92:                               ; preds = %dec_label_pc_20d5e
  %19 = load i32, i32* %stack_var_-24, align 4, !insn.addr !9052
  %20 = inttoptr i32 %19 to i32*, !insn.addr !9053
  call void @free(i32* %20), !insn.addr !9053
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2cac8, i32 0, i32 0), i32 200), !insn.addr !9054
  %22 = call i32 @puts(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c9ec, i32 0, i32 0)), !insn.addr !9055
  %23 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9056
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9057
  br label %dec_label_pc_20e5e, !insn.addr !9057

dec_label_pc_20dce:                               ; preds = %dec_label_pc_20d5e
  %24 = mul i32 %12, 67108864, !insn.addr !9058
  %25 = udiv i32 %13, 16, !insn.addr !9059
  %26 = mul i32 %25, 1048576, !insn.addr !9060
  %27 = or i32 %26, %24, !insn.addr !9061
  %28 = mul i32 %13, 32768
  %29 = and i32 %28, 458752, !insn.addr !9062
  %30 = or i32 %27, %29, !insn.addr !9063
  %31 = zext i8 %16 to i32, !insn.addr !9048
  %32 = or i32 %30, %31, !insn.addr !9064
  %33 = load i32, i32* @global_var_235c58, align 4, !insn.addr !9065
  %34 = icmp eq i32 %33, 0, !insn.addr !9066
  br i1 %34, label %dec_label_pc_20df0, label %dec_label_pc_20ddc, !insn.addr !9067

dec_label_pc_20ddc:                               ; preds = %dec_label_pc_20dce
  %35 = load i32, i32* @global_var_3557c, align 4, !insn.addr !9068
  %36 = call i32 @fpga_write(i32 %35, i32 %32), !insn.addr !9069
  br label %dec_label_pc_20e02, !insn.addr !9070

dec_label_pc_20df0:                               ; preds = %dec_label_pc_20dce
  %37 = load i32, i32* @global_var_35810, align 4, !insn.addr !9071
  %38 = call i32 @fpga_write(i32 %37, i32 %32), !insn.addr !9072
  br label %dec_label_pc_20e02, !insn.addr !9072

dec_label_pc_20e02:                               ; preds = %dec_label_pc_20df0, %dec_label_pc_20ddc
  %39 = add nuw i32 %storemerge1.reload, 1, !insn.addr !9073
  %40 = icmp ult i32 %39, %arg3, !insn.addr !9043
  store i32 %39, i32* %storemerge1.reg2mem, !insn.addr !9044
  br i1 %40, label %dec_label_pc_20d5e, label %dec_label_pc_20e08.dec_label_pc_20e10_crit_edge, !insn.addr !9044

dec_label_pc_20e08.dec_label_pc_20e10_crit_edge:  ; preds = %dec_label_pc_20e02
  %.pre = load i32, i32* %stack_var_-24, align 4
  store i32 %.pre, i32* %.reg2mem
  br label %dec_label_pc_20e10

dec_label_pc_20e10:                               ; preds = %dec_label_pc_20d54, %dec_label_pc_20e08.dec_label_pc_20e10_crit_edge
  %.reload = load i32, i32* %.reg2mem, !insn.addr !9074
  %41 = inttoptr i32 %.reload to i32*, !insn.addr !9075
  call void @free(i32* %41), !insn.addr !9075
  %42 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9076
  store i32 %arg3, i32* %r3.0.reg2mem, !insn.addr !9077
  br label %dec_label_pc_20e5e, !insn.addr !9077

dec_label_pc_20e28:                               ; preds = %dec_label_pc_20d2a
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2cac8, i32 0, i32 0), i32 210), !insn.addr !9078
  %44 = load i32, i32* %stack_var_-28, align 4, !insn.addr !9079
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c9d8, i32 0, i32 0), i32 %44), !insn.addr !9080
  %46 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9081
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9082
  br label %dec_label_pc_20e5e, !insn.addr !9082

dec_label_pc_20e5e:                               ; preds = %dec_label_pc_20e28, %dec_label_pc_20d92, %dec_label_pc_20e10, %dec_label_pc_20d02
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9083

; uselistorder directives
  uselistorder i32 %32, { 1, 0 }
  uselistorder i32 %7, { 2, 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 0, 2, 3, 1, 4 }
  uselistorder i32* %storemerge1.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 4, 1 }
  uselistorder i32 200, { 3, 0, 1, 6, 7, 2, 4, 5 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_20e5e, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_20e10, { 1, 0 }
  uselistorder label %dec_label_pc_20d5e, { 1, 0 }
}

define i32 @i2c_read_reg(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_20e68:
  %0 = alloca i32
  %r3.0.reg2mem = alloca i32, !insn.addr !9084
  %.reg2mem = alloca i32, !insn.addr !9084
  %storemerge1.reg2mem = alloca i32, !insn.addr !9084
  %storemerge2.reg2mem = alloca i32, !insn.addr !9084
  %1 = load i32, i32* %0
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4, !insn.addr !9085
  %2 = icmp eq i32 %arg3, 1, !insn.addr !9086
  br i1 %2, label %dec_label_pc_20ea8, label %dec_label_pc_20e80, !insn.addr !9087

dec_label_pc_20e80:                               ; preds = %dec_label_pc_20e68
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2cab8, i32 0, i32 0), i32 232), !insn.addr !9088
  %4 = call i32 @puts(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_2ca04, i32 0, i32 0)), !insn.addr !9089
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !9090
  br label %dec_label_pc_210a4, !insn.addr !9090

dec_label_pc_20ea8:                               ; preds = %dec_label_pc_20e68
  %5 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_236190), !insn.addr !9091
  %6 = icmp eq i32 %5, 0, !insn.addr !9092
  br i1 %6, label %dec_label_pc_20ee2, label %dec_label_pc_20eba, !insn.addr !9093

dec_label_pc_20eba:                               ; preds = %dec_label_pc_20ea8
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2cab8, i32 0, i32 0), i32 236), !insn.addr !9094
  %8 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c930, i32 0, i32 0)), !insn.addr !9095
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !9096
  br label %dec_label_pc_210a4, !insn.addr !9096

dec_label_pc_20ee2:                               ; preds = %dec_label_pc_20ea8
  store i32 0, i32* %stack_var_-24, align 4, !insn.addr !9097
  %9 = load i32, i32* @global_var_2361a8, align 4, !insn.addr !9098
  %10 = call i32 @find_c_map(i32 %9, i32* nonnull %stack_var_-28, i32* nonnull %stack_var_-24), !insn.addr !9099
  %11 = icmp eq i32 %10, 1, !insn.addr !9100
  br i1 %11, label %dec_label_pc_20f0e, label %dec_label_pc_2106c, !insn.addr !9101

dec_label_pc_20f0e:                               ; preds = %dec_label_pc_20ee2
  %12 = load i32, i32* %stack_var_-24, align 4, !insn.addr !9102
  %13 = icmp eq i32 %arg5, 0, !insn.addr !9103
  store i32 %12, i32* %.reg2mem, !insn.addr !9104
  br i1 %13, label %dec_label_pc_21054, label %dec_label_pc_20f18.lr.ph, !insn.addr !9104

dec_label_pc_20f18.lr.ph:                         ; preds = %dec_label_pc_20f0e
  %14 = inttoptr i32 %12 to i32*, !insn.addr !9105
  %15 = add i32 %12, 4
  %16 = inttoptr i32 %15 to i32*
  %17 = urem i32 %1, 256
  store i32 0, i32* %storemerge2.reg2mem
  br label %dec_label_pc_20f18

dec_label_pc_20f18:                               ; preds = %dec_label_pc_20f18.lr.ph, %dec_label_pc_2104a
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %18 = load i32, i32* %14, align 4, !insn.addr !9105
  %19 = icmp eq i32 %18, 1, !insn.addr !9106
  %20 = mul i32 %18, 67108864
  %21 = load i32, i32* %16, align 4
  %22 = udiv i32 %21, 16
  %23 = mul i32 %22, 1048576
  %24 = or i32 %23, %20
  %25 = mul i32 %21, 32768
  %26 = and i32 %25, 458752
  %27 = or i32 %24, %26
  br i1 %19, label %dec_label_pc_20f20, label %dec_label_pc_20f46, !insn.addr !9107

dec_label_pc_20f20:                               ; preds = %dec_label_pc_20f18
  %28 = or i32 %27, 33554432, !insn.addr !9108
  store i32 %28, i32* %storemerge1.reg2mem, !insn.addr !9109
  br label %dec_label_pc_20f78, !insn.addr !9109

dec_label_pc_20f46:                               ; preds = %dec_label_pc_20f18
  %29 = add i32 %storemerge2.reload, %17, !insn.addr !9110
  %30 = mul i32 %29, 256, !insn.addr !9111
  %31 = or i32 %30, %27, !insn.addr !9112
  %32 = or i32 %31, 50331648, !insn.addr !9113
  store i32 %32, i32* %storemerge1.reg2mem, !insn.addr !9114
  br label %dec_label_pc_20f78, !insn.addr !9114

dec_label_pc_20f78:                               ; preds = %dec_label_pc_20f46, %dec_label_pc_20f20
  %33 = call i32 @wait4i2c_ready(), !insn.addr !9115
  %34 = icmp eq i32 %33, 0, !insn.addr !9116
  br i1 %34, label %dec_label_pc_20f82, label %dec_label_pc_20fbe, !insn.addr !9117

dec_label_pc_20f82:                               ; preds = %dec_label_pc_20f78
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2cab8, i32 0, i32 0), i32 254), !insn.addr !9118
  %36 = call i32 @puts(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c9a8, i32 0, i32 0)), !insn.addr !9119
  %37 = load i32, i32* %stack_var_-24, align 4, !insn.addr !9120
  %38 = inttoptr i32 %37 to i32*, !insn.addr !9121
  call void @free(i32* %38), !insn.addr !9121
  %39 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9122
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9123
  br label %dec_label_pc_210a4, !insn.addr !9123

dec_label_pc_20fbe:                               ; preds = %dec_label_pc_20f78
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %40 = load i32, i32* @global_var_235c58, align 4, !insn.addr !9124
  %41 = icmp eq i32 %40, 0, !insn.addr !9125
  br i1 %41, label %dec_label_pc_20fe0, label %dec_label_pc_20fcc, !insn.addr !9126

dec_label_pc_20fcc:                               ; preds = %dec_label_pc_20fbe
  %42 = load i32, i32* @global_var_3557c, align 4, !insn.addr !9127
  %43 = call i32 @fpga_write(i32 %42, i32 %storemerge1.reload), !insn.addr !9128
  br label %dec_label_pc_20ff2, !insn.addr !9129

dec_label_pc_20fe0:                               ; preds = %dec_label_pc_20fbe
  %44 = load i32, i32* @global_var_35810, align 4, !insn.addr !9130
  %45 = call i32 @fpga_write(i32 %44, i32 %storemerge1.reload), !insn.addr !9131
  br label %dec_label_pc_20ff2, !insn.addr !9131

dec_label_pc_20ff2:                               ; preds = %dec_label_pc_20fe0, %dec_label_pc_20fcc
  %46 = add i32 %storemerge2.reload, %arg4, !insn.addr !9132
  %47 = call i32 @wait4i2c_data(i32 %46), !insn.addr !9133
  %48 = icmp eq i32 %47, 0, !insn.addr !9134
  br i1 %48, label %dec_label_pc_2100c, label %dec_label_pc_2104a, !insn.addr !9135

dec_label_pc_2100c:                               ; preds = %dec_label_pc_20ff2
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2cab8, i32 0, i32 0), i32 266), !insn.addr !9136
  %50 = call i32 @puts(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2ca34, i32 0, i32 0)), !insn.addr !9137
  %51 = load i32, i32* %stack_var_-24, align 4, !insn.addr !9138
  %52 = inttoptr i32 %51 to i32*, !insn.addr !9139
  call void @free(i32* %52), !insn.addr !9139
  %53 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9140
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !9141
  br label %dec_label_pc_210a4, !insn.addr !9141

dec_label_pc_2104a:                               ; preds = %dec_label_pc_20ff2
  %54 = add nuw i32 %storemerge2.reload, 1, !insn.addr !9142
  %55 = icmp ult i32 %54, %arg5, !insn.addr !9103
  store i32 %54, i32* %storemerge2.reg2mem, !insn.addr !9104
  br i1 %55, label %dec_label_pc_20f18, label %dec_label_pc_2104a.dec_label_pc_21054_crit_edge, !insn.addr !9104

dec_label_pc_2104a.dec_label_pc_21054_crit_edge:  ; preds = %dec_label_pc_2104a
  %.pre = load i32, i32* %stack_var_-24, align 4
  store i32 %.pre, i32* %.reg2mem
  br label %dec_label_pc_21054

dec_label_pc_21054:                               ; preds = %dec_label_pc_20f0e, %dec_label_pc_2104a.dec_label_pc_21054_crit_edge
  %.reload = load i32, i32* %.reg2mem, !insn.addr !9143
  %56 = inttoptr i32 %.reload to i32*, !insn.addr !9144
  call void @free(i32* %56), !insn.addr !9144
  %57 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9145
  store i32 %arg5, i32* %r3.0.reg2mem, !insn.addr !9146
  br label %dec_label_pc_210a4, !insn.addr !9146

dec_label_pc_2106c:                               ; preds = %dec_label_pc_20ee2
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2cab8, i32 0, i32 0), i32 274), !insn.addr !9147
  %59 = load i32, i32* %stack_var_-28, align 4, !insn.addr !9148
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c9d8, i32 0, i32 0), i32 %59), !insn.addr !9149
  %61 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9150
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9151
  br label %dec_label_pc_210a4, !insn.addr !9151

dec_label_pc_210a4:                               ; preds = %dec_label_pc_2106c, %dec_label_pc_2100c, %dec_label_pc_20f82, %dec_label_pc_21054, %dec_label_pc_20eba, %dec_label_pc_20e80
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9152

; uselistorder directives
  uselistorder i32 %storemerge2.reload, { 0, 2, 1 }
  uselistorder i32 %12, { 2, 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %storemerge2.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 4, 5, 6, 2, 1 }
  uselistorder i32 (i32)* @wait4i2c_data, { 1, 0 }
  uselistorder i32 %arg5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_210a4, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_21054, { 1, 0 }
  uselistorder label %dec_label_pc_20f18, { 1, 0 }
}

define i32 @i2c_write_reg(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_210b0:
  %0 = alloca i32
  %r3.0.reg2mem = alloca i32, !insn.addr !9153
  %.reg2mem = alloca i32, !insn.addr !9153
  %storemerge1.reg2mem = alloca i32, !insn.addr !9153
  %1 = load i32, i32* %0
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4, !insn.addr !9154
  %2 = icmp eq i32 %arg3, 1, !insn.addr !9155
  br i1 %2, label %dec_label_pc_210f2, label %dec_label_pc_210c8, !insn.addr !9156

dec_label_pc_210c8:                               ; preds = %dec_label_pc_210b0
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2caa8, i32 0, i32 0), i32 296), !insn.addr !9157
  %4 = call i32 @puts(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_2ca04, i32 0, i32 0)), !insn.addr !9158
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !9159
  br label %dec_label_pc_21278, !insn.addr !9159

dec_label_pc_210f2:                               ; preds = %dec_label_pc_210b0
  %5 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_236190), !insn.addr !9160
  %6 = icmp eq i32 %5, 0, !insn.addr !9161
  br i1 %6, label %dec_label_pc_2112e, label %dec_label_pc_21104, !insn.addr !9162

dec_label_pc_21104:                               ; preds = %dec_label_pc_210f2
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2caa8, i32 0, i32 0), i32 300), !insn.addr !9163
  %8 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c930, i32 0, i32 0)), !insn.addr !9164
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !9165
  br label %dec_label_pc_21278, !insn.addr !9165

dec_label_pc_2112e:                               ; preds = %dec_label_pc_210f2
  store i32 0, i32* %stack_var_-24, align 4, !insn.addr !9166
  %9 = load i32, i32* @global_var_2361a8, align 4, !insn.addr !9167
  %10 = call i32 @find_c_map(i32 %9, i32* nonnull %stack_var_-28, i32* nonnull %stack_var_-24), !insn.addr !9168
  %11 = icmp eq i32 %10, 1, !insn.addr !9169
  br i1 %11, label %dec_label_pc_21158, label %dec_label_pc_21240, !insn.addr !9170

dec_label_pc_21158:                               ; preds = %dec_label_pc_2112e
  %12 = load i32, i32* %stack_var_-24, align 4, !insn.addr !9171
  %13 = icmp eq i32 %arg5, 0, !insn.addr !9172
  store i32 %12, i32* %.reg2mem, !insn.addr !9173
  br i1 %13, label %dec_label_pc_21228, label %dec_label_pc_21162.lr.ph, !insn.addr !9173

dec_label_pc_21162.lr.ph:                         ; preds = %dec_label_pc_21158
  %14 = inttoptr i32 %12 to i32*, !insn.addr !9174
  %15 = add i32 %12, 4, !insn.addr !9175
  %16 = inttoptr i32 %15 to i32*, !insn.addr !9175
  %17 = urem i32 %1, 256, !insn.addr !9176
  store i32 0, i32* %storemerge1.reg2mem
  br label %dec_label_pc_21162

dec_label_pc_21162:                               ; preds = %dec_label_pc_21162.lr.ph, %dec_label_pc_2121a
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %18 = load i32, i32* %14, align 4, !insn.addr !9174
  %19 = load i32, i32* %16, align 4, !insn.addr !9175
  %20 = add i32 %storemerge1.reload, %arg4, !insn.addr !9177
  %21 = inttoptr i32 %20 to i8*, !insn.addr !9178
  %22 = load i8, i8* %21, align 1, !insn.addr !9178
  %23 = call i32 @wait4i2c_ready(), !insn.addr !9179
  %24 = icmp eq i32 %23, 0, !insn.addr !9180
  br i1 %24, label %dec_label_pc_211a8, label %dec_label_pc_211e6, !insn.addr !9181

dec_label_pc_211a8:                               ; preds = %dec_label_pc_21162
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2caa8, i32 0, i32 0), i32 315), !insn.addr !9182
  %26 = call i32 @puts(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2c9ec, i32 0, i32 0)), !insn.addr !9183
  %27 = load i32, i32* %stack_var_-24, align 4, !insn.addr !9184
  %28 = inttoptr i32 %27 to i32*, !insn.addr !9185
  call void @free(i32* %28), !insn.addr !9185
  %29 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9186
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9187
  br label %dec_label_pc_21278, !insn.addr !9187

dec_label_pc_211e6:                               ; preds = %dec_label_pc_21162
  %30 = mul i32 %18, 67108864, !insn.addr !9188
  %31 = udiv i32 %19, 16, !insn.addr !9189
  %32 = mul i32 %31, 1048576, !insn.addr !9190
  %33 = mul i32 %19, 32768
  %34 = and i32 %33, 458752, !insn.addr !9191
  %35 = add i32 %storemerge1.reload, %17, !insn.addr !9192
  %36 = mul i32 %35, 256, !insn.addr !9193
  %37 = zext i8 %22 to i32, !insn.addr !9178
  %38 = or i32 %30, %36, !insn.addr !9194
  %39 = or i32 %38, %32, !insn.addr !9195
  %40 = or i32 %39, %34, !insn.addr !9196
  %41 = or i32 %40, %37, !insn.addr !9197
  %42 = or i32 %41, 16777216, !insn.addr !9198
  %43 = load i32, i32* @global_var_235c58, align 4, !insn.addr !9199
  %44 = icmp eq i32 %43, 0, !insn.addr !9200
  br i1 %44, label %dec_label_pc_21208, label %dec_label_pc_211f4, !insn.addr !9201

dec_label_pc_211f4:                               ; preds = %dec_label_pc_211e6
  %45 = load i32, i32* @global_var_3557c, align 4, !insn.addr !9202
  %46 = call i32 @fpga_write(i32 %45, i32 %42), !insn.addr !9203
  br label %dec_label_pc_2121a, !insn.addr !9204

dec_label_pc_21208:                               ; preds = %dec_label_pc_211e6
  %47 = load i32, i32* @global_var_35810, align 4, !insn.addr !9205
  %48 = call i32 @fpga_write(i32 %47, i32 %42), !insn.addr !9206
  br label %dec_label_pc_2121a, !insn.addr !9206

dec_label_pc_2121a:                               ; preds = %dec_label_pc_21208, %dec_label_pc_211f4
  %49 = add nuw i32 %storemerge1.reload, 1, !insn.addr !9207
  %50 = icmp ult i32 %49, %arg5, !insn.addr !9172
  store i32 %49, i32* %storemerge1.reg2mem, !insn.addr !9173
  br i1 %50, label %dec_label_pc_21162, label %dec_label_pc_21220.dec_label_pc_21228_crit_edge, !insn.addr !9173

dec_label_pc_21220.dec_label_pc_21228_crit_edge:  ; preds = %dec_label_pc_2121a
  %.pre = load i32, i32* %stack_var_-24, align 4
  store i32 %.pre, i32* %.reg2mem
  br label %dec_label_pc_21228

dec_label_pc_21228:                               ; preds = %dec_label_pc_21158, %dec_label_pc_21220.dec_label_pc_21228_crit_edge
  %.reload = load i32, i32* %.reg2mem, !insn.addr !9208
  %51 = inttoptr i32 %.reload to i32*, !insn.addr !9209
  call void @free(i32* %51), !insn.addr !9209
  %52 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9210
  store i32 %arg5, i32* %r3.0.reg2mem, !insn.addr !9211
  br label %dec_label_pc_21278, !insn.addr !9211

dec_label_pc_21240:                               ; preds = %dec_label_pc_2112e
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2caa8, i32 0, i32 0), i32 326), !insn.addr !9212
  %54 = load i32, i32* %stack_var_-28, align 4, !insn.addr !9213
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c9d8, i32 0, i32 0), i32 %54), !insn.addr !9214
  %56 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9215
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9216
  br label %dec_label_pc_21278, !insn.addr !9216

dec_label_pc_21278:                               ; preds = %dec_label_pc_21240, %dec_label_pc_211a8, %dec_label_pc_21228, %dec_label_pc_21104, %dec_label_pc_210c8
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9217

; uselistorder directives
  uselistorder i32 %42, { 1, 0 }
  uselistorder i32 %12, { 2, 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 0, 2, 3, 1, 4 }
  uselistorder i32* %storemerge1.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 (i32, i32)* @fpga_write, { 22, 21, 20, 19, 18, 17, 16, 15, 13, 12, 11, 10, 9, 14, 8, 7, 6, 28, 27, 26, 25, 24, 23, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_235c58, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 1 }
  uselistorder i32 ()* @wait4i2c_ready, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*, i32*)* @find_c_map, { 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_21278, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_21228, { 1, 0 }
  uselistorder label %dec_label_pc_21162, { 1, 0 }
}

define i32 @i2c_ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21284:
  %storemerge.reg2mem = alloca i32, !insn.addr !9218
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_236190), !insn.addr !9219
  %1 = icmp eq i32 %0, 0, !insn.addr !9220
  br i1 %1, label %dec_label_pc_212ce, label %dec_label_pc_212a4, !insn.addr !9221

dec_label_pc_212a4:                               ; preds = %dec_label_pc_21284
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2ca9c, i32 0, i32 0), i32 346), !insn.addr !9222
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c930, i32 0, i32 0)), !insn.addr !9223
  store i32 -4, i32* %storemerge.reg2mem, !insn.addr !9224
  br label %dec_label_pc_21384, !insn.addr !9224

dec_label_pc_212ce:                               ; preds = %dec_label_pc_21284
  %4 = urem i32 %arg2, 65536
  %5 = load i32, i32* @global_var_2361a8, align 4, !insn.addr !9225
  %6 = call i32 @new_iterator_c_map(i32 %5), !insn.addr !9226
  %7 = icmp eq i32 %6, 0, !insn.addr !9227
  %8 = add i32 %6, 20
  %9 = inttoptr i32 %8 to i32*
  br label %dec_label_pc_2136a, !insn.addr !9228

dec_label_pc_212ec:                               ; preds = %dec_label_pc_2136a
  %10 = load i32, i32* %9, align 4, !insn.addr !9229
  %11 = add i32 %10, 16, !insn.addr !9230
  %12 = inttoptr i32 %11 to i32*, !insn.addr !9230
  %13 = load i32, i32* %12, align 4, !insn.addr !9230
  %14 = inttoptr i32 %13 to i32*, !insn.addr !9231
  %15 = load i32, i32* %14, align 4, !insn.addr !9231
  %16 = inttoptr i32 %15 to i32*, !insn.addr !9232
  %17 = load i32, i32* %16, align 4, !insn.addr !9232
  %18 = icmp eq i32 %17, %arg1, !insn.addr !9233
  br i1 %18, label %dec_label_pc_21300, label %dec_label_pc_2136a, !insn.addr !9234

dec_label_pc_21300:                               ; preds = %dec_label_pc_212ec
  %19 = icmp eq i32 %4, 1795, !insn.addr !9235
  br i1 %19, label %dec_label_pc_21314, label %dec_label_pc_2135c, !insn.addr !9236

dec_label_pc_21314:                               ; preds = %dec_label_pc_21300
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2ca9c, i32 0, i32 0), i32 360), !insn.addr !9237
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2ca4c, i32 0, i32 0), i32 %arg3), !insn.addr !9238
  %22 = inttoptr i32 %6 to i32*, !insn.addr !9239
  call void @free(i32* %22), !insn.addr !9239
  br label %dec_label_pc_21370, !insn.addr !9240

dec_label_pc_2135c:                               ; preds = %dec_label_pc_21300
  %23 = call i32 @__asm_nop(i32 %6, i32 %arg2, i32 %4, i32 1795), !insn.addr !9241
  br label %dec_label_pc_21370, !insn.addr !9241

dec_label_pc_2136a:                               ; preds = %dec_label_pc_212ec, %dec_label_pc_212ce
  br i1 %7, label %dec_label_pc_21370, label %dec_label_pc_212ec, !insn.addr !9242

dec_label_pc_21370:                               ; preds = %dec_label_pc_2136a, %dec_label_pc_21314, %dec_label_pc_2135c
  %24 = call i32 @delete_iterator_c_map(i32 %6), !insn.addr !9243
  %25 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9244
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !9245
  br label %dec_label_pc_21384, !insn.addr !9245

dec_label_pc_21384:                               ; preds = %dec_label_pc_21370, %dec_label_pc_212a4
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !9246

; uselistorder directives
  uselistorder i32 %6, { 4, 2, 1, 3, 0 }
  uselistorder i32 %4, { 1, 0 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 65536, { 130, 0, 1, 2, 131, 132, 133, 134, 3, 4, 253, 135, 136, 5, 6, 7, 8, 9, 10, 11, 12, 13, 137, 14, 138, 15, 139, 16, 140, 17, 141, 18, 142, 19, 143, 20, 144, 21, 145, 22, 146, 23, 147, 24, 148, 25, 149, 26, 150, 27, 151, 28, 152, 29, 153, 30, 154, 31, 155, 32, 156, 33, 157, 34, 158, 35, 159, 36, 160, 37, 161, 38, 162, 39, 163, 40, 164, 41, 165, 42, 166, 43, 167, 44, 168, 45, 169, 46, 170, 47, 171, 48, 172, 49, 173, 50, 174, 51, 175, 52, 176, 53, 177, 54, 178, 55, 179, 56, 180, 57, 181, 58, 182, 59, 183, 60, 184, 61, 185, 62, 186, 63, 187, 64, 188, 65, 189, 66, 190, 67, 191, 68, 192, 69, 193, 70, 194, 71, 195, 72, 196, 73, 197, 74, 198, 75, 199, 76, 200, 77, 201, 78, 202, 79, 203, 80, 204, 81, 205, 82, 206, 83, 207, 84, 208, 85, 209, 86, 210, 87, 211, 88, 212, 89, 213, 90, 214, 91, 215, 92, 216, 93, 217, 94, 218, 95, 219, 96, 220, 97, 221, 98, 222, 99, 223, 100, 224, 101, 225, 102, 226, 103, 227, 104, 228, 105, 229, 106, 230, 107, 231, 108, 232, 109, 233, 110, 234, 111, 235, 112, 236, 113, 237, 114, 238, 115, 239, 116, 240, 117, 241, 118, 242, 119, 243, 120, 244, 121, 245, 122, 246, 123, 247, 124, 248, 249, 250, 251, 125, 126, 254, 252, 127, 128, 129 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_21370, { 0, 2, 1 }
}

define i32 @i2c_select(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21390:
  %storemerge.reg2mem = alloca i32, !insn.addr !9247
  %0 = call i32 @pthread_mutex_lock(i32* nonnull @global_var_236190), !insn.addr !9248
  %1 = icmp eq i32 %0, 0, !insn.addr !9249
  br i1 %1, label %dec_label_pc_213d6, label %dec_label_pc_213ac, !insn.addr !9250

dec_label_pc_213ac:                               ; preds = %dec_label_pc_21390
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2ca90, i32 0, i32 0), i32 379), !insn.addr !9251
  %3 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2c930, i32 0, i32 0)), !insn.addr !9252
  store i32 -4, i32* %storemerge.reg2mem, !insn.addr !9253
  br label %dec_label_pc_2147e, !insn.addr !9253

dec_label_pc_213d6:                               ; preds = %dec_label_pc_21390
  %4 = load i32, i32* @global_var_2361a8, align 4, !insn.addr !9254
  %5 = call i32 @new_iterator_c_map(i32 %4), !insn.addr !9255
  %6 = icmp eq i32 %5, 0, !insn.addr !9256
  %7 = add i32 %5, 20
  %8 = inttoptr i32 %7 to i32*
  br label %dec_label_pc_21464, !insn.addr !9257

dec_label_pc_213f4:                               ; preds = %dec_label_pc_21464
  %9 = load i32, i32* %8, align 4, !insn.addr !9258
  %10 = add i32 %9, 16, !insn.addr !9259
  %11 = inttoptr i32 %10 to i32*, !insn.addr !9259
  %12 = load i32, i32* %11, align 4, !insn.addr !9259
  %13 = inttoptr i32 %12 to i32*, !insn.addr !9260
  %14 = load i32, i32* %13, align 4, !insn.addr !9260
  %15 = inttoptr i32 %14 to i32*, !insn.addr !9261
  %16 = load i32, i32* %15, align 4, !insn.addr !9261
  %17 = icmp eq i32 %16, %arg1, !insn.addr !9262
  br i1 %17, label %dec_label_pc_21408, label %dec_label_pc_21464, !insn.addr !9263

dec_label_pc_21408:                               ; preds = %dec_label_pc_213f4
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2ca90, i32 0, i32 0), i32 390), !insn.addr !9264
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_2ca6c, i32 0, i32 0), i32 %arg2), !insn.addr !9265
  %20 = inttoptr i32 %5 to i32*, !insn.addr !9266
  call void @free(i32* %20), !insn.addr !9266
  br label %dec_label_pc_2146a, !insn.addr !9267

dec_label_pc_21464:                               ; preds = %dec_label_pc_213f4, %dec_label_pc_213d6
  br i1 %6, label %dec_label_pc_2146a, label %dec_label_pc_213f4, !insn.addr !9268

dec_label_pc_2146a:                               ; preds = %dec_label_pc_21464, %dec_label_pc_21408
  %21 = call i32 @delete_iterator_c_map(i32 %5), !insn.addr !9269
  %22 = call i32 @pthread_mutex_unlock(i32* nonnull @global_var_236190), !insn.addr !9270
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !9271
  br label %dec_label_pc_2147e, !insn.addr !9271

dec_label_pc_2147e:                               ; preds = %dec_label_pc_2146a, %dec_label_pc_213ac
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !9272

; uselistorder directives
  uselistorder i32 %5, { 3, 1, 2, 0 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32*)* @pthread_mutex_unlock, { 65, 64, 63, 61, 62, 60, 57, 59, 58, 56, 54, 55, 53, 50, 52, 51, 49, 48, 47, 46, 45, 44, 43, 70, 107, 106, 37, 36, 35, 34, 33, 32, 31, 105, 30, 68, 67, 29, 28, 27, 26, 25, 24, 23, 22, 21, 73, 72, 71, 101, 100, 99, 104, 103, 102, 97, 96, 95, 94, 42, 41, 40, 39, 93, 38, 98, 92, 91, 90, 20, 89, 88, 87, 86, 85, 84, 83, 19, 82, 81, 80, 18, 17, 79, 78, 77, 76, 75, 74, 69, 66, 1, 0, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32)* @delete_iterator_c_map, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 (i32)* @new_iterator_c_map, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32* @global_var_2361a8, { 2, 3, 4, 5, 6, 7, 13, 0, 8, 9, 10, 11, 12, 1 }
  uselistorder i32 (i8*)* @puts, { 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 139, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 138, 137, 113, 112, 111, 75, 74, 136, 73, 135, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 116, 115, 114, 133, 132, 134, 125, 124, 79, 78, 123, 122, 121, 77, 76, 60, 59, 58, 57, 131, 130, 129, 128, 127, 126, 54, 53, 52, 51, 56, 55, 120, 119, 118, 49, 48, 50, 47, 46, 45, 117, 44, 41, 43, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 110, 109, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2c908, i32 0, i32 0), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24 }
  uselistorder i32 (i32*)* @pthread_mutex_lock, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 43, 71, 70, 24, 23, 69, 22, 41, 21, 20, 19, 18, 17, 16, 15, 44, 67, 68, 65, 26, 64, 25, 66, 63, 62, 61, 14, 60, 59, 58, 57, 56, 55, 54, 13, 53, 52, 51, 12, 11, 50, 49, 48, 47, 46, 45, 42, 40, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_236190, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 11, 9, 10, 12, 13, 15, 14, 16, 17, 20, 18, 19, 21, 22, 23, 24 }
}

define i32 @json_decref(i32 %arg1) local_unnamed_addr {
dec_label_pc_21488:
  %r0.0.reg2mem = alloca i32, !insn.addr !9273
  %0 = icmp eq i32 %arg1, 0, !insn.addr !9274
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !9275
  br i1 %0, label %dec_label_pc_214b8, label %dec_label_pc_21496, !insn.addr !9275

dec_label_pc_21496:                               ; preds = %dec_label_pc_21488
  %1 = add i32 %arg1, 4, !insn.addr !9276
  %2 = inttoptr i32 %1 to i32*, !insn.addr !9276
  %3 = load i32, i32* %2, align 4, !insn.addr !9276
  %4 = icmp eq i32 %3, -1, !insn.addr !9277
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !9278
  br i1 %4, label %dec_label_pc_214b8, label %dec_label_pc_214a0, !insn.addr !9278

dec_label_pc_214a0:                               ; preds = %dec_label_pc_21496
  %5 = add i32 %3, -1, !insn.addr !9279
  store i32 %5, i32* %2, align 4, !insn.addr !9280
  %6 = icmp eq i32 %5, 0, !insn.addr !9281
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !9282
  br i1 %6, label %dec_label_pc_214b2, label %dec_label_pc_214b8, !insn.addr !9282

dec_label_pc_214b2:                               ; preds = %dec_label_pc_214a0
  %7 = call i32 @json_delete(i32 %arg1), !insn.addr !9283
  store i32 %7, i32* %r0.0.reg2mem, !insn.addr !9283
  br label %dec_label_pc_214b8, !insn.addr !9283

dec_label_pc_214b8:                               ; preds = %dec_label_pc_214a0, %dec_label_pc_214b2, %dec_label_pc_21496, %dec_label_pc_21488
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !9284

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_214b8, { 1, 0, 2, 3 }
}

define i32 @hal_load_conf(i32* %arg1) local_unnamed_addr {
dec_label_pc_214c0:
  %r3.0.reg2mem = alloca i32, !insn.addr !9285
  %storemerge5.reg2mem = alloca i32, !insn.addr !9285
  %storemerge16.reg2mem = alloca i32, !insn.addr !9285
  %0 = ptrtoint i32* %arg1 to i32
  %stack_var_-320 = alloca i32, align 4
  %1 = call i32* @memset(i32* nonnull @global_var_2361b4, i32 255, i32 256), !insn.addr !9286
  %2 = call i32* @memset(i32* nonnull @global_var_2362b4, i32 255, i32 72), !insn.addr !9287
  %3 = call i32 @json_load_file(i32 %0, i32 0, i32* nonnull %stack_var_-320), !insn.addr !9288
  %4 = icmp eq i32 %3, 0, !insn.addr !9289
  br i1 %4, label %dec_label_pc_2152a, label %dec_label_pc_21520, !insn.addr !9290

dec_label_pc_21520:                               ; preds = %dec_label_pc_214c0
  %5 = inttoptr i32 %3 to i32*, !insn.addr !9291
  %6 = load i32, i32* %5, align 4, !insn.addr !9291
  %7 = icmp eq i32 %6, 0, !insn.addr !9292
  br i1 %7, label %dec_label_pc_2155c, label %dec_label_pc_2152a, !insn.addr !9293

dec_label_pc_2152a:                               ; preds = %dec_label_pc_21520, %dec_label_pc_214c0
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2caf8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cc44, i32 0, i32 0), i32 42), !insn.addr !9294
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2cb00, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2cb18, i32 0, i32 0), i32 42), !insn.addr !9295
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !9296
  br label %dec_label_pc_21ade, !insn.addr !9296

dec_label_pc_2155c:                               ; preds = %dec_label_pc_21520
  %10 = call i32 @json_dumps(i32 %3, i32 0), !insn.addr !9297
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2caf8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cc44, i32 0, i32 0), i32 46), !insn.addr !9298
  %12 = inttoptr i32 %10 to i8*, !insn.addr !9299
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2cb38, i32 0, i32 0), i8* %12), !insn.addr !9299
  %14 = inttoptr i32 %10 to i32*, !insn.addr !9300
  call void @free(i32* %14), !insn.addr !9300
  %15 = call i32 @json_object_get(i32 %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2cb44, i32 0, i32 0)), !insn.addr !9301
  %16 = icmp eq i32 %15, 0, !insn.addr !9302
  br i1 %16, label %dec_label_pc_215be, label %dec_label_pc_215b4, !insn.addr !9303

dec_label_pc_215b4:                               ; preds = %dec_label_pc_2155c
  %17 = inttoptr i32 %15 to i32*, !insn.addr !9304
  %18 = load i32, i32* %17, align 4, !insn.addr !9304
  %19 = icmp eq i32 %18, 1, !insn.addr !9305
  br i1 %19, label %dec_label_pc_21736.preheader, label %dec_label_pc_215be, !insn.addr !9306

dec_label_pc_21736.preheader:                     ; preds = %dec_label_pc_215b4
  %20 = call i32 @json_array_size(i32 %15), !insn.addr !9307
  %21 = icmp eq i32 %20, 0, !insn.addr !9308
  store i32 0, i32* %storemerge16.reg2mem, !insn.addr !9309
  br i1 %21, label %dec_label_pc_21752, label %dec_label_pc_21600, !insn.addr !9309

dec_label_pc_215be:                               ; preds = %dec_label_pc_215b4, %dec_label_pc_2155c
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2caf8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cc44, i32 0, i32 0), i32 52), !insn.addr !9310
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2cb4c, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2cb18, i32 0, i32 0), i32 52), !insn.addr !9311
  %24 = call i32 @json_decref(i32 %3), !insn.addr !9312
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9313
  br label %dec_label_pc_21ade, !insn.addr !9313

dec_label_pc_21600:                               ; preds = %dec_label_pc_21736.preheader, %dec_label_pc_2165e
  %storemerge16.reload = load i32, i32* %storemerge16.reg2mem
  %25 = call i32 @json_array_get(i32 %15, i32 %storemerge16.reload), !insn.addr !9314
  %26 = icmp eq i32 %25, 0, !insn.addr !9315
  br i1 %26, label %dec_label_pc_21624, label %dec_label_pc_2161a, !insn.addr !9316

dec_label_pc_2161a:                               ; preds = %dec_label_pc_21600
  %27 = inttoptr i32 %25 to i32*, !insn.addr !9317
  %28 = load i32, i32* %27, align 4, !insn.addr !9317
  %29 = icmp eq i32 %28, 0, !insn.addr !9318
  br i1 %29, label %dec_label_pc_2165e, label %dec_label_pc_21624, !insn.addr !9319

dec_label_pc_21624:                               ; preds = %dec_label_pc_2161a, %dec_label_pc_21600
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2caf8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cc44, i32 0, i32 0), i32 62), !insn.addr !9320
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_2cb64, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2cb18, i32 0, i32 0), i32 62), !insn.addr !9321
  %32 = call i32 @json_decref(i32 %3), !insn.addr !9322
  store i32 -3, i32* %r3.0.reg2mem, !insn.addr !9323
  br label %dec_label_pc_21ade, !insn.addr !9323

dec_label_pc_2165e:                               ; preds = %dec_label_pc_2161a
  %33 = call i32 @json_object_get(i32 %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2cb80, i32 0, i32 0)), !insn.addr !9324
  %34 = call i32 @json_integer_value(i32 %33), !insn.addr !9325
  %35 = mul i32 %storemerge16.reload, 16, !insn.addr !9326
  %36 = add i32 %35, ptrtoint (i32* @global_var_2361b4 to i32), !insn.addr !9327
  %37 = inttoptr i32 %36 to i32*, !insn.addr !9328
  store i32 %34, i32* %37, align 4, !insn.addr !9328
  %38 = call i32 @json_object_get(i32 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2cb84, i32 0, i32 0)), !insn.addr !9329
  %39 = call i32 @json_integer_value(i32 %38), !insn.addr !9330
  %40 = add i32 %35, add (i32 ptrtoint (i32* @global_var_2361b4 to i32), i32 4), !insn.addr !9331
  %41 = inttoptr i32 %40 to i32*, !insn.addr !9332
  store i32 %39, i32* %41, align 4, !insn.addr !9332
  %42 = call i32 @json_object_get(i32 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2cb8c, i32 0, i32 0)), !insn.addr !9333
  %43 = call i32 @json_integer_value(i32 %42), !insn.addr !9334
  %44 = add i32 %35, add (i32 ptrtoint (i32* @global_var_2361b4 to i32), i32 8), !insn.addr !9335
  %45 = inttoptr i32 %44 to i32*, !insn.addr !9336
  store i32 %43, i32* %45, align 4, !insn.addr !9336
  %46 = call i32 @json_object_get(i32 %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2cb94, i32 0, i32 0)), !insn.addr !9337
  %47 = call i32 @json_integer_value(i32 %46), !insn.addr !9338
  %48 = add i32 %35, add (i32 ptrtoint (i32* @global_var_2361b4 to i32), i32 12), !insn.addr !9339
  %49 = inttoptr i32 %48 to i32*, !insn.addr !9340
  store i32 %47, i32* %49, align 4, !insn.addr !9340
  %50 = add nuw nsw i32 %storemerge16.reload, 1, !insn.addr !9341
  %51 = call i32 @json_array_size(i32 %15), !insn.addr !9307
  %52 = icmp ult i32 %50, %51, !insn.addr !9308
  %53 = icmp ult i32 %50, 16, !insn.addr !9342
  %or.cond = icmp eq i1 %53, %52
  store i32 %50, i32* %storemerge16.reg2mem, !insn.addr !9309
  br i1 %or.cond, label %dec_label_pc_21600, label %dec_label_pc_21752, !insn.addr !9309

dec_label_pc_21752:                               ; preds = %dec_label_pc_2165e, %dec_label_pc_21736.preheader
  %54 = call i32 @json_object_get(i32 %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2cb9c, i32 0, i32 0)), !insn.addr !9343
  %55 = icmp eq i32 %54, 0, !insn.addr !9344
  br i1 %55, label %dec_label_pc_21778, label %dec_label_pc_2176e, !insn.addr !9345

dec_label_pc_2176e:                               ; preds = %dec_label_pc_21752
  %56 = inttoptr i32 %54 to i32*, !insn.addr !9346
  %57 = load i32, i32* %56, align 4, !insn.addr !9346
  %58 = icmp eq i32 %57, 1, !insn.addr !9347
  br i1 %58, label %dec_label_pc_218d4.preheader, label %dec_label_pc_21778, !insn.addr !9348

dec_label_pc_218d4.preheader:                     ; preds = %dec_label_pc_2176e
  %59 = call i32 @json_array_size(i32 %54), !insn.addr !9349
  %60 = icmp eq i32 %59, 0, !insn.addr !9350
  store i32 0, i32* %storemerge5.reg2mem, !insn.addr !9351
  br i1 %60, label %dec_label_pc_218f0, label %dec_label_pc_217ba, !insn.addr !9351

dec_label_pc_21778:                               ; preds = %dec_label_pc_2176e, %dec_label_pc_21752
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2caf8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cc44, i32 0, i32 0), i32 79), !insn.addr !9352
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2cba0, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2cb18, i32 0, i32 0), i32 79), !insn.addr !9353
  %63 = call i32 @json_decref(i32 %3), !insn.addr !9354
  store i32 -4, i32* %r3.0.reg2mem, !insn.addr !9355
  br label %dec_label_pc_21ade, !insn.addr !9355

dec_label_pc_217ba:                               ; preds = %dec_label_pc_218d4.preheader, %dec_label_pc_21818
  %storemerge5.reload = load i32, i32* %storemerge5.reg2mem
  %64 = call i32 @json_array_get(i32 %54, i32 %storemerge5.reload), !insn.addr !9356
  %65 = icmp eq i32 %64, 0, !insn.addr !9357
  br i1 %65, label %dec_label_pc_217de, label %dec_label_pc_217d4, !insn.addr !9358

dec_label_pc_217d4:                               ; preds = %dec_label_pc_217ba
  %66 = inttoptr i32 %64 to i32*, !insn.addr !9359
  %67 = load i32, i32* %66, align 4, !insn.addr !9359
  %68 = icmp eq i32 %67, 0, !insn.addr !9360
  br i1 %68, label %dec_label_pc_21818, label %dec_label_pc_217de, !insn.addr !9361

dec_label_pc_217de:                               ; preds = %dec_label_pc_217d4, %dec_label_pc_217ba
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2caf8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cc44, i32 0, i32 0), i32 88), !insn.addr !9362
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2cbb8, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2cb18, i32 0, i32 0), i32 88), !insn.addr !9363
  %71 = call i32 @json_decref(i32 %3), !insn.addr !9364
  store i32 -5, i32* %r3.0.reg2mem, !insn.addr !9365
  br label %dec_label_pc_21ade, !insn.addr !9365

dec_label_pc_21818:                               ; preds = %dec_label_pc_217d4
  %72 = call i32 @json_object_get(i32 %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2cb80, i32 0, i32 0)), !insn.addr !9366
  %73 = call i32 @json_integer_value(i32 %72), !insn.addr !9367
  %74 = mul nuw nsw i32 %storemerge5.reload, 12, !insn.addr !9368
  %75 = add i32 %74, ptrtoint (i32* @global_var_2362b4 to i32), !insn.addr !9369
  %76 = inttoptr i32 %75 to i32*, !insn.addr !9370
  store i32 %73, i32* %76, align 4, !insn.addr !9370
  %77 = call i32 @json_object_get(i32 %64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2cbd4, i32 0, i32 0)), !insn.addr !9371
  %78 = call i32 @json_integer_value(i32 %77), !insn.addr !9372
  %79 = add i32 %74, add (i32 ptrtoint (i32* @global_var_2362b4 to i32), i32 4), !insn.addr !9373
  %80 = inttoptr i32 %79 to i32*, !insn.addr !9374
  store i32 %78, i32* %80, align 4, !insn.addr !9374
  %81 = call i32 @json_object_get(i32 %64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2cbdc, i32 0, i32 0)), !insn.addr !9375
  %82 = call i32 @json_integer_value(i32 %81), !insn.addr !9376
  %83 = add i32 %74, add (i32 ptrtoint (i32* @global_var_2362b4 to i32), i32 8), !insn.addr !9377
  %84 = inttoptr i32 %83 to i32*, !insn.addr !9378
  store i32 %82, i32* %84, align 4, !insn.addr !9378
  %85 = add nuw nsw i32 %storemerge5.reload, 1, !insn.addr !9379
  %86 = call i32 @json_array_size(i32 %54), !insn.addr !9349
  %87 = icmp ult i32 %85, %86, !insn.addr !9350
  %88 = icmp ult i32 %85, 6, !insn.addr !9380
  %or.cond4 = icmp eq i1 %88, %87
  store i32 %85, i32* %storemerge5.reg2mem, !insn.addr !9351
  br i1 %or.cond4, label %dec_label_pc_217ba, label %dec_label_pc_218f0, !insn.addr !9351

dec_label_pc_218f0:                               ; preds = %dec_label_pc_21818, %dec_label_pc_218d4.preheader
  %89 = call i32 @json_object_get(i32 %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2cbe0, i32 0, i32 0)), !insn.addr !9381
  %90 = icmp eq i32 %89, 0, !insn.addr !9382
  br i1 %90, label %dec_label_pc_21916, label %dec_label_pc_2190c, !insn.addr !9383

dec_label_pc_2190c:                               ; preds = %dec_label_pc_218f0
  %91 = inttoptr i32 %89 to i32*, !insn.addr !9384
  %92 = load i32, i32* %91, align 4, !insn.addr !9384
  %93 = icmp eq i32 %92, 3, !insn.addr !9385
  br i1 %93, label %dec_label_pc_21950, label %dec_label_pc_21916, !insn.addr !9386

dec_label_pc_21916:                               ; preds = %dec_label_pc_2190c, %dec_label_pc_218f0
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2caf8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cc44, i32 0, i32 0), i32 103), !insn.addr !9387
  %95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2cbe4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2cb18, i32 0, i32 0), i32 103), !insn.addr !9388
  %96 = call i32 @json_decref(i32 %3), !insn.addr !9389
  store i32 -6, i32* %r3.0.reg2mem, !insn.addr !9390
  br label %dec_label_pc_21ade, !insn.addr !9390

dec_label_pc_21950:                               ; preds = %dec_label_pc_2190c
  %97 = call i32 @json_integer_value(i32 %89), !insn.addr !9391
  store i32 %97, i32* @global_var_2362fc, align 4, !insn.addr !9392
  %98 = call i32 @json_object_get(i32 %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2cbf4, i32 0, i32 0)), !insn.addr !9393
  %99 = icmp eq i32 %98, 0, !insn.addr !9394
  br i1 %99, label %dec_label_pc_2198c, label %dec_label_pc_21982, !insn.addr !9395

dec_label_pc_21982:                               ; preds = %dec_label_pc_21950
  %100 = inttoptr i32 %98 to i32*, !insn.addr !9396
  %101 = load i32, i32* %100, align 4, !insn.addr !9396
  %102 = icmp eq i32 %101, 3, !insn.addr !9397
  br i1 %102, label %dec_label_pc_219c6, label %dec_label_pc_2198c, !insn.addr !9398

dec_label_pc_2198c:                               ; preds = %dec_label_pc_21982, %dec_label_pc_21950
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2caf8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cc44, i32 0, i32 0), i32 111), !insn.addr !9399
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2cbfc, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2cb18, i32 0, i32 0), i32 111), !insn.addr !9400
  %105 = call i32 @json_decref(i32 %3), !insn.addr !9401
  store i32 -7, i32* %r3.0.reg2mem, !insn.addr !9402
  br label %dec_label_pc_21ade, !insn.addr !9402

dec_label_pc_219c6:                               ; preds = %dec_label_pc_21982
  %106 = call i32 @json_integer_value(i32 %98), !insn.addr !9403
  store i32 %106, i32* @global_var_236300, align 4, !insn.addr !9404
  %107 = call i32 @json_object_get(i32 %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2cb94, i32 0, i32 0)), !insn.addr !9405
  %108 = icmp eq i32 %107, 0, !insn.addr !9406
  br i1 %108, label %dec_label_pc_21a02, label %dec_label_pc_219f8, !insn.addr !9407

dec_label_pc_219f8:                               ; preds = %dec_label_pc_219c6
  %109 = inttoptr i32 %107 to i32*, !insn.addr !9408
  %110 = load i32, i32* %109, align 4, !insn.addr !9408
  %111 = icmp eq i32 %110, 3, !insn.addr !9409
  br i1 %111, label %dec_label_pc_21a3c, label %dec_label_pc_21a02, !insn.addr !9410

dec_label_pc_21a02:                               ; preds = %dec_label_pc_219f8, %dec_label_pc_219c6
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2caf8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cc44, i32 0, i32 0), i32 119), !insn.addr !9411
  %113 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2cc10, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2cb18, i32 0, i32 0), i32 119), !insn.addr !9412
  %114 = call i32 @json_decref(i32 %3), !insn.addr !9413
  store i32 -8, i32* %r3.0.reg2mem, !insn.addr !9414
  br label %dec_label_pc_21ade, !insn.addr !9414

dec_label_pc_21a3c:                               ; preds = %dec_label_pc_219f8
  %115 = call i32 @json_integer_value(i32 %107), !insn.addr !9415
  store i32 %115, i32* @global_var_236304, align 4, !insn.addr !9416
  %116 = call i32 @json_object_get(i32 %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2cc24, i32 0, i32 0)), !insn.addr !9417
  %117 = icmp eq i32 %116, 0, !insn.addr !9418
  br i1 %117, label %dec_label_pc_21a78, label %dec_label_pc_21a6e, !insn.addr !9419

dec_label_pc_21a6e:                               ; preds = %dec_label_pc_21a3c
  %118 = inttoptr i32 %116 to i32*, !insn.addr !9420
  %119 = load i32, i32* %118, align 4, !insn.addr !9420
  %120 = icmp eq i32 %119, 3, !insn.addr !9421
  br i1 %120, label %dec_label_pc_21ab2, label %dec_label_pc_21a78, !insn.addr !9422

dec_label_pc_21a78:                               ; preds = %dec_label_pc_21a6e, %dec_label_pc_21a3c
  %121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2caf8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cc44, i32 0, i32 0), i32 127), !insn.addr !9423
  %122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2cc30, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2cb18, i32 0, i32 0), i32 127), !insn.addr !9424
  %123 = call i32 @json_decref(i32 %3), !insn.addr !9425
  store i32 -9, i32* %r3.0.reg2mem, !insn.addr !9426
  br label %dec_label_pc_21ade, !insn.addr !9426

dec_label_pc_21ab2:                               ; preds = %dec_label_pc_21a6e
  %124 = call i32 @json_integer_value(i32 %116), !insn.addr !9427
  store i32 %124, i32* @global_var_236308, align 4, !insn.addr !9428
  %125 = call i32 @json_decref(i32 %3), !insn.addr !9429
  store i32 1, i32* @global_var_2361b0, align 4, !insn.addr !9430
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !9431
  br label %dec_label_pc_21ade, !insn.addr !9431

dec_label_pc_21ade:                               ; preds = %dec_label_pc_21ab2, %dec_label_pc_21a78, %dec_label_pc_21a02, %dec_label_pc_2198c, %dec_label_pc_217de, %dec_label_pc_21916, %dec_label_pc_21624, %dec_label_pc_21778, %dec_label_pc_215be, %dec_label_pc_2152a
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9432

; uselistorder directives
  uselistorder i32 %85, { 0, 2, 1 }
  uselistorder i32 %54, { 2, 1, 0, 3, 4 }
  uselistorder i32 %50, { 0, 2, 1 }
  uselistorder i32 %35, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge16.reload, { 0, 2, 1 }
  uselistorder i32 %15, { 2, 1, 0, 3, 4 }
  uselistorder i32* %storemerge16.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge5.reg2mem, { 2, 0, 1 }
  uselistorder i32 111, { 0, 1, 4, 2, 3 }
  uselistorder i32 88, { 0, 1, 3, 4, 2 }
  uselistorder i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2cb94, i32 0, i32 0), { 1, 0 }
  uselistorder i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2cb80, i32 0, i32 0), { 1, 0 }
  uselistorder i32 (i32)* @json_decref, { 8, 7, 6, 5, 3, 4, 1, 2, 0 }
  uselistorder i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_2cb18, i32 0, i32 0), { 2, 3, 4, 5, 1, 6, 0, 7, 8 }
  uselistorder i32 (i8*, ...)* @printf, { 269, 268, 267, 266, 265, 264, 261, 260, 263, 262, 257, 256, 259, 258, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 432, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 431, 430, 308, 307, 306, 305, 304, 429, 428, 317, 316, 315, 314, 313, 312, 188, 427, 426, 166, 165, 175, 174, 173, 172, 171, 170, 169, 168, 167, 425, 424, 164, 163, 158, 157, 423, 422, 421, 156, 183, 182, 181, 180, 179, 178, 177, 176, 187, 186, 185, 184, 162, 161, 160, 159, 420, 419, 418, 155, 154, 153, 417, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 311, 310, 309, 409, 408, 407, 406, 416, 415, 414, 413, 412, 411, 410, 389, 388, 387, 386, 385, 384, 383, 382, 202, 201, 200, 199, 198, 197, 196, 195, 381, 380, 379, 378, 377, 194, 193, 192, 191, 190, 189, 138, 405, 404, 403, 402, 137, 135, 134, 133, 132, 131, 130, 136, 401, 400, 129, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 124, 128, 127, 126, 125, 123, 122, 121, 376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 365, 366, 364, 363, 362, 106, 105, 104, 103, 102, 361, 360, 359, 358, 357, 354, 356, 355, 353, 352, 351, 350, 349, 348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 101, 100, 338, 337, 336, 335, 334, 99, 98, 333, 332, 331, 330, 329, 328, 327, 95, 94, 93, 92, 323, 325, 326, 324, 319, 321, 322, 320, 318, 96, 97, 303, 302, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 298, 297, 296, 295, 294, 293, 292, 291, 81, 80, 79, 78, 77, 76, 75, 74, 301, 300, 299, 73, 72, 71, 70, 69, 68, 67, 66, 62, 65, 64, 63, 61, 60, 59, 58, 56, 55, 54, 53, 57, 52, 51, 50, 49, 48, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 46, 433, 45, 43, 42, 273, 274, 272, 271, 41, 47, 44, 40, 36, 35, 34, 33, 32, 270, 38, 37, 39, 31, 30, 29, 28, 27, 26, 18, 17, 16, 25, 24, 23, 22, 21, 19, 20, 15, 14, 13, 12, 11, 4, 3, 2, 10, 9, 8, 7, 5, 6, 1, 0 }
  uselistorder i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cc44, i32 0, i32 0), { 2, 3, 4, 5, 1, 6, 0, 7, 8, 9 }
  uselistorder i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2caf8, i32 0, i32 0), { 2, 3, 4, 5, 1, 6, 0, 7, 8, 9 }
  uselistorder i32 72, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder label %dec_label_pc_21ade, { 0, 1, 2, 3, 5, 4, 7, 6, 8, 9 }
  uselistorder label %dec_label_pc_217ba, { 1, 0 }
  uselistorder label %dec_label_pc_21600, { 1, 0 }
}

define i32 @hal_led_red_addr() local_unnamed_addr {
dec_label_pc_21ae8:
  %0 = load i32, i32* @global_var_2361b0, align 4, !insn.addr !9433
  %1 = icmp eq i32 %0, 0, !insn.addr !9434
  %2 = load i32, i32* @global_var_2362fc, align 4
  %storemerge = select i1 %1, i32 -1, i32 %2
  ret i32 %storemerge, !insn.addr !9435

; uselistorder directives
  uselistorder i32* @global_var_2362fc, { 1, 0 }
}

define i32 @hal_led_green_addr() local_unnamed_addr {
dec_label_pc_21b14:
  %0 = load i32, i32* @global_var_2361b0, align 4, !insn.addr !9436
  %1 = icmp eq i32 %0, 0, !insn.addr !9437
  %2 = load i32, i32* @global_var_236300, align 4
  %storemerge = select i1 %1, i32 -1, i32 %2
  ret i32 %storemerge, !insn.addr !9438

; uselistorder directives
  uselistorder i32* @global_var_236300, { 1, 0 }
}

define i32 @hal_key_reset_addr() local_unnamed_addr {
dec_label_pc_21b40:
  %0 = load i32, i32* @global_var_2361b0, align 4, !insn.addr !9439
  %1 = icmp eq i32 %0, 0, !insn.addr !9440
  %2 = load i32, i32* @global_var_236304, align 4
  %storemerge = select i1 %1, i32 -1, i32 %2
  ret i32 %storemerge, !insn.addr !9441

; uselistorder directives
  uselistorder i32* @global_var_236304, { 1, 0 }
}

define i32 @hal_key_ipreport_addr() local_unnamed_addr {
dec_label_pc_21b6c:
  %0 = load i32, i32* @global_var_2361b0, align 4, !insn.addr !9442
  %1 = icmp eq i32 %0, 0, !insn.addr !9443
  %2 = load i32, i32* @global_var_236308, align 4
  %storemerge = select i1 %1, i32 -1, i32 %2
  ret i32 %storemerge, !insn.addr !9444

; uselistorder directives
  uselistorder i32* @global_var_236308, { 1, 0 }
}

define i32 @hal_chain_uart_addr(i32 %arg1) local_unnamed_addr {
dec_label_pc_21b98:
  %r3.0.reg2mem = alloca i32, !insn.addr !9445
  %storemerge1.reg2mem = alloca i32, !insn.addr !9445
  %0 = load i32, i32* @global_var_2361b0, align 4, !insn.addr !9446
  %1 = icmp eq i32 %0, 0, !insn.addr !9447
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !9448
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !9448
  br i1 %1, label %dec_label_pc_21bf4, label %dec_label_pc_21bba, !insn.addr !9448

dec_label_pc_21bba:                               ; preds = %dec_label_pc_21b98, %dec_label_pc_21bea
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %2 = mul i32 %storemerge1.reload, 16, !insn.addr !9449
  %3 = add i32 %2, ptrtoint (i32* @global_var_2361b4 to i32), !insn.addr !9450
  %4 = inttoptr i32 %3 to i32*, !insn.addr !9451
  %5 = load i32, i32* %4, align 4, !insn.addr !9451
  %6 = icmp eq i32 %5, %arg1, !insn.addr !9452
  br i1 %6, label %dec_label_pc_21bd0, label %dec_label_pc_21bea, !insn.addr !9453

dec_label_pc_21bd0:                               ; preds = %dec_label_pc_21bba
  %7 = add i32 %2, add (i32 ptrtoint (i32* @global_var_2361b4 to i32), i32 4), !insn.addr !9454
  %8 = inttoptr i32 %7 to i32*, !insn.addr !9455
  %9 = load i32, i32* %8, align 4, !insn.addr !9455
  store i32 %9, i32* %r3.0.reg2mem, !insn.addr !9456
  br label %dec_label_pc_21bf4, !insn.addr !9456

dec_label_pc_21bea:                               ; preds = %dec_label_pc_21bba
  %10 = add nuw nsw i32 %storemerge1.reload, 1, !insn.addr !9457
  %11 = icmp ult i32 %10, 16, !insn.addr !9458
  store i32 %10, i32* %storemerge1.reg2mem, !insn.addr !9458
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9458
  br i1 %11, label %dec_label_pc_21bba, label %dec_label_pc_21bf4, !insn.addr !9458

dec_label_pc_21bf4:                               ; preds = %dec_label_pc_21bea, %dec_label_pc_21b98, %dec_label_pc_21bd0
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9459

; uselistorder directives
  uselistorder i32 %2, { 1, 0 }
  uselistorder i32* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_21bf4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_21bba, { 1, 0 }
}

define i32 @hal_chain_plug_addr(i32 %arg1) local_unnamed_addr {
dec_label_pc_21c00:
  %r3.0.reg2mem = alloca i32, !insn.addr !9460
  %storemerge1.reg2mem = alloca i32, !insn.addr !9460
  %0 = load i32, i32* @global_var_2361b0, align 4, !insn.addr !9461
  %1 = icmp eq i32 %0, 0, !insn.addr !9462
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !9463
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !9463
  br i1 %1, label %dec_label_pc_21c5c, label %dec_label_pc_21c22, !insn.addr !9463

dec_label_pc_21c22:                               ; preds = %dec_label_pc_21c00, %dec_label_pc_21c52
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %2 = mul i32 %storemerge1.reload, 16, !insn.addr !9464
  %3 = add i32 %2, ptrtoint (i32* @global_var_2361b4 to i32), !insn.addr !9465
  %4 = inttoptr i32 %3 to i32*, !insn.addr !9466
  %5 = load i32, i32* %4, align 4, !insn.addr !9466
  %6 = icmp eq i32 %5, %arg1, !insn.addr !9467
  br i1 %6, label %dec_label_pc_21c38, label %dec_label_pc_21c52, !insn.addr !9468

dec_label_pc_21c38:                               ; preds = %dec_label_pc_21c22
  %7 = add i32 %2, add (i32 ptrtoint (i32* @global_var_2361b4 to i32), i32 8), !insn.addr !9469
  %8 = inttoptr i32 %7 to i32*, !insn.addr !9470
  %9 = load i32, i32* %8, align 4, !insn.addr !9470
  store i32 %9, i32* %r3.0.reg2mem, !insn.addr !9471
  br label %dec_label_pc_21c5c, !insn.addr !9471

dec_label_pc_21c52:                               ; preds = %dec_label_pc_21c22
  %10 = add nuw nsw i32 %storemerge1.reload, 1, !insn.addr !9472
  %11 = icmp ult i32 %10, 16, !insn.addr !9473
  store i32 %10, i32* %storemerge1.reg2mem, !insn.addr !9473
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9473
  br i1 %11, label %dec_label_pc_21c22, label %dec_label_pc_21c5c, !insn.addr !9473

dec_label_pc_21c5c:                               ; preds = %dec_label_pc_21c52, %dec_label_pc_21c00, %dec_label_pc_21c38
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9474

; uselistorder directives
  uselistorder i32 %2, { 1, 0 }
  uselistorder i32* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_21c5c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_21c22, { 1, 0 }
}

define i32 @hal_chain_reset_addr(i32 %arg1) local_unnamed_addr {
dec_label_pc_21c68:
  %r3.0.reg2mem = alloca i32, !insn.addr !9475
  %storemerge1.reg2mem = alloca i32, !insn.addr !9475
  %0 = load i32, i32* @global_var_2361b0, align 4, !insn.addr !9476
  %1 = icmp eq i32 %0, 0, !insn.addr !9477
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !9478
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !9478
  br i1 %1, label %dec_label_pc_21cc4, label %dec_label_pc_21c8a, !insn.addr !9478

dec_label_pc_21c8a:                               ; preds = %dec_label_pc_21c68, %dec_label_pc_21cba
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %2 = mul i32 %storemerge1.reload, 16, !insn.addr !9479
  %3 = add i32 %2, ptrtoint (i32* @global_var_2361b4 to i32), !insn.addr !9480
  %4 = inttoptr i32 %3 to i32*, !insn.addr !9481
  %5 = load i32, i32* %4, align 4, !insn.addr !9481
  %6 = icmp eq i32 %5, %arg1, !insn.addr !9482
  br i1 %6, label %dec_label_pc_21ca0, label %dec_label_pc_21cba, !insn.addr !9483

dec_label_pc_21ca0:                               ; preds = %dec_label_pc_21c8a
  %7 = add i32 %2, add (i32 ptrtoint (i32* @global_var_2361b4 to i32), i32 12), !insn.addr !9484
  %8 = inttoptr i32 %7 to i32*, !insn.addr !9485
  %9 = load i32, i32* %8, align 4, !insn.addr !9485
  store i32 %9, i32* %r3.0.reg2mem, !insn.addr !9486
  br label %dec_label_pc_21cc4, !insn.addr !9486

dec_label_pc_21cba:                               ; preds = %dec_label_pc_21c8a
  %10 = add nuw nsw i32 %storemerge1.reload, 1, !insn.addr !9487
  %11 = icmp ult i32 %10, 16, !insn.addr !9488
  store i32 %10, i32* %storemerge1.reg2mem, !insn.addr !9488
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9488
  br i1 %11, label %dec_label_pc_21c8a, label %dec_label_pc_21cc4, !insn.addr !9488

dec_label_pc_21cc4:                               ; preds = %dec_label_pc_21cba, %dec_label_pc_21c68, %dec_label_pc_21ca0
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9489

; uselistorder directives
  uselistorder i32 %2, { 1, 0 }
  uselistorder i32* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_21cc4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_21c8a, { 1, 0 }
}

define i32 @hal_chain_max_num() local_unnamed_addr {
dec_label_pc_21cd0:
  %0 = alloca i32
  %storemerge.reg2mem = alloca i32, !insn.addr !9490
  %storemerge14.reg2mem = alloca i32, !insn.addr !9490
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = load i32, i32* @global_var_2361b0, align 4, !insn.addr !9491
  %4 = icmp eq i32 %3, 0, !insn.addr !9492
  store i32 0, i32* %storemerge14.reg2mem, !insn.addr !9493
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !9493
  br i1 %4, label %dec_label_pc_21d5e, label %dec_label_pc_21cf6, !insn.addr !9493

dec_label_pc_21cf6:                               ; preds = %dec_label_pc_21cd0, %dec_label_pc_21d4c
  %storemerge14.reload = load i32, i32* %storemerge14.reg2mem
  %5 = mul i32 %storemerge14.reload, 16, !insn.addr !9494
  %6 = add i32 %5, ptrtoint (i32* @global_var_2361b4 to i32), !insn.addr !9495
  %7 = inttoptr i32 %6 to i32*, !insn.addr !9496
  %8 = load i32, i32* %7, align 4, !insn.addr !9496
  %9 = icmp eq i32 %8, 255, !insn.addr !9497
  br i1 %9, label %dec_label_pc_21d0a, label %dec_label_pc_21d4c, !insn.addr !9498

dec_label_pc_21d0a:                               ; preds = %dec_label_pc_21cf6
  %10 = add i32 %5, add (i32 ptrtoint (i32* @global_var_2361b4 to i32), i32 4), !insn.addr !9499
  %11 = inttoptr i32 %10 to i32*, !insn.addr !9500
  %12 = load i32, i32* %11, align 4, !insn.addr !9500
  %13 = icmp eq i32 %12, 255, !insn.addr !9501
  br i1 %13, label %dec_label_pc_21d20, label %dec_label_pc_21d4c, !insn.addr !9502

dec_label_pc_21d20:                               ; preds = %dec_label_pc_21d0a
  %14 = add i32 %5, add (i32 ptrtoint (i32* @global_var_2361b4 to i32), i32 8), !insn.addr !9503
  %15 = inttoptr i32 %14 to i32*, !insn.addr !9504
  %16 = load i32, i32* %15, align 4, !insn.addr !9504
  %17 = icmp eq i32 %16, 255, !insn.addr !9505
  br i1 %17, label %dec_label_pc_21d36, label %dec_label_pc_21d4c, !insn.addr !9506

dec_label_pc_21d36:                               ; preds = %dec_label_pc_21d20
  %18 = add i32 %5, add (i32 ptrtoint (i32* @global_var_2361b4 to i32), i32 12), !insn.addr !9507
  %19 = inttoptr i32 %18 to i32*, !insn.addr !9508
  %20 = load i32, i32* %19, align 4, !insn.addr !9508
  %21 = icmp eq i32 %20, 255, !insn.addr !9509
  br i1 %21, label %dec_label_pc_21d5a, label %dec_label_pc_21d4c, !insn.addr !9510

dec_label_pc_21d4c:                               ; preds = %dec_label_pc_21d20, %dec_label_pc_21d0a, %dec_label_pc_21cf6, %dec_label_pc_21d36
  %22 = add nuw nsw i32 %storemerge14.reload, 1, !insn.addr !9511
  %23 = icmp ult i32 %22, 16, !insn.addr !9512
  store i32 %22, i32* %storemerge14.reg2mem, !insn.addr !9512
  store i32 16, i32* %storemerge.reg2mem, !insn.addr !9512
  br i1 %23, label %dec_label_pc_21cf6, label %dec_label_pc_21d5e, !insn.addr !9512

dec_label_pc_21d5a:                               ; preds = %dec_label_pc_21d36
  %24 = call i32 @__asm_nop(i32 %2, i32 %1, i32 %5, i32 255), !insn.addr !9513
  store i32 %storemerge14.reload, i32* %storemerge.reg2mem, !insn.addr !9513
  br label %dec_label_pc_21d5e, !insn.addr !9513

dec_label_pc_21d5e:                               ; preds = %dec_label_pc_21d4c, %dec_label_pc_21d5a, %dec_label_pc_21cd0
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !9514

; uselistorder directives
  uselistorder i32 %5, { 4, 3, 2, 1, 0 }
  uselistorder i32* %storemerge14.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1, 3 }
  uselistorder i32* %0, { 1, 0 }
  uselistorder i32 255, { 1, 28, 29, 30, 31, 25, 26, 32, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 27, 24 }
  uselistorder i32* @global_var_2361b4, { 1, 0 }
  uselistorder label %dec_label_pc_21d5e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_21d4c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_21cf6, { 1, 0 }
}

define i32 @hal_fan_addr(i32 %arg1) local_unnamed_addr {
dec_label_pc_21d6c:
  %r3.0.reg2mem = alloca i32, !insn.addr !9515
  %storemerge1.reg2mem = alloca i32, !insn.addr !9515
  %0 = load i32, i32* @global_var_2361b0, align 4, !insn.addr !9516
  %1 = icmp eq i32 %0, 0, !insn.addr !9517
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !9518
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !9518
  br i1 %1, label %dec_label_pc_21dd4, label %dec_label_pc_21d8e, !insn.addr !9518

dec_label_pc_21d8e:                               ; preds = %dec_label_pc_21d6c, %dec_label_pc_21dca
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %2 = mul nuw nsw i32 %storemerge1.reload, 12, !insn.addr !9519
  %3 = add i32 %2, ptrtoint (i32* @global_var_2362b4 to i32), !insn.addr !9520
  %4 = inttoptr i32 %3 to i32*, !insn.addr !9521
  %5 = load i32, i32* %4, align 4, !insn.addr !9521
  %6 = icmp eq i32 %5, %arg1, !insn.addr !9522
  br i1 %6, label %dec_label_pc_21daa, label %dec_label_pc_21dca, !insn.addr !9523

dec_label_pc_21daa:                               ; preds = %dec_label_pc_21d8e
  %7 = add i32 %2, add (i32 ptrtoint (i32* @global_var_2362b4 to i32), i32 4), !insn.addr !9524
  %8 = inttoptr i32 %7 to i32*, !insn.addr !9525
  %9 = load i32, i32* %8, align 4, !insn.addr !9525
  store i32 %9, i32* %r3.0.reg2mem, !insn.addr !9526
  br label %dec_label_pc_21dd4, !insn.addr !9526

dec_label_pc_21dca:                               ; preds = %dec_label_pc_21d8e
  %10 = add nuw nsw i32 %storemerge1.reload, 1, !insn.addr !9527
  %11 = icmp ult i32 %10, 6, !insn.addr !9528
  store i32 %10, i32* %storemerge1.reg2mem, !insn.addr !9528
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !9528
  br i1 %11, label %dec_label_pc_21d8e, label %dec_label_pc_21dd4, !insn.addr !9528

dec_label_pc_21dd4:                               ; preds = %dec_label_pc_21dca, %dec_label_pc_21d6c, %dec_label_pc_21daa
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9529

; uselistorder directives
  uselistorder i32* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_21dd4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_21d8e, { 1, 0 }
}

define i32 @hal_fan_max_speed(i32 %arg1) local_unnamed_addr {
dec_label_pc_21de0:
  %r3.0.reg2mem = alloca i32, !insn.addr !9530
  %storemerge1.reg2mem = alloca i32, !insn.addr !9530
  %0 = load i32, i32* @global_var_2361b0, align 4, !insn.addr !9531
  %1 = icmp eq i32 %0, 0, !insn.addr !9532
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !9533
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !9533
  br i1 %1, label %dec_label_pc_21e48, label %dec_label_pc_21e02, !insn.addr !9533

dec_label_pc_21e02:                               ; preds = %dec_label_pc_21de0, %dec_label_pc_21e3e
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %2 = mul nuw nsw i32 %storemerge1.reload, 12, !insn.addr !9534
  %3 = add i32 %2, ptrtoint (i32* @global_var_2362b4 to i32), !insn.addr !9535
  %4 = inttoptr i32 %3 to i32*, !insn.addr !9536
  %5 = load i32, i32* %4, align 4, !insn.addr !9536
  %6 = icmp eq i32 %5, %arg1, !insn.addr !9537
  br i1 %6, label %dec_label_pc_21e1e, label %dec_label_pc_21e3e, !insn.addr !9538

dec_label_pc_21e1e:                               ; preds = %dec_label_pc_21e02
  %7 = add i32 %2, add (i32 ptrtoint (i32* @global_var_2362b4 to i32), i32 8), !insn.addr !9539
  %8 = inttoptr i32 %7 to i32*, !insn.addr !9540
  %9 = load i32, i32* %8, align 4, !insn.addr !9540
  store i32 %9, i32* %r3.0.reg2mem, !insn.addr !9541
  br label %dec_label_pc_21e48, !insn.addr !9541

dec_label_pc_21e3e:                               ; preds = %dec_label_pc_21e02
  %10 = add nuw nsw i32 %storemerge1.reload, 1, !insn.addr !9542
  %11 = icmp ult i32 %10, 6, !insn.addr !9543
  store i32 %10, i32* %storemerge1.reg2mem, !insn.addr !9543
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !9543
  br i1 %11, label %dec_label_pc_21e02, label %dec_label_pc_21e48, !insn.addr !9543

dec_label_pc_21e48:                               ; preds = %dec_label_pc_21e3e, %dec_label_pc_21de0, %dec_label_pc_21e1e
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9544

; uselistorder directives
  uselistorder i32* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_21e48, { 0, 2, 1 }
  uselistorder label %dec_label_pc_21e02, { 1, 0 }
}

define i32 @hal_fan_number() local_unnamed_addr {
dec_label_pc_21e54:
  %storemerge.reg2mem = alloca i32, !insn.addr !9545
  %stack_var_-12.12.reg2mem = alloca i32, !insn.addr !9545
  %storemerge13.reg2mem = alloca i32, !insn.addr !9545
  %0 = load i32, i32* @global_var_2361b0, align 4, !insn.addr !9546
  %1 = icmp eq i32 %0, 0, !insn.addr !9547
  store i32 0, i32* %storemerge13.reg2mem, !insn.addr !9548
  store i32 0, i32* %stack_var_-12.12.reg2mem, !insn.addr !9548
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !9548
  br i1 %1, label %dec_label_pc_21ea8, label %dec_label_pc_21e78, !insn.addr !9548

dec_label_pc_21e78:                               ; preds = %dec_label_pc_21e54, %dec_label_pc_21e78
  %stack_var_-12.12.reload = load i32, i32* %stack_var_-12.12.reg2mem
  %storemerge13.reload = load i32, i32* %storemerge13.reg2mem
  %2 = mul nuw nsw i32 %storemerge13.reload, 12, !insn.addr !9549
  %3 = add i32 %2, ptrtoint (i32* @global_var_2362b4 to i32), !insn.addr !9550
  %4 = inttoptr i32 %3 to i32*, !insn.addr !9551
  %5 = load i32, i32* %4, align 4, !insn.addr !9551
  %6 = icmp ne i32 %5, -1, !insn.addr !9552
  %7 = zext i1 %6 to i32
  %spec.select = add i32 %stack_var_-12.12.reload, %7
  %8 = add nuw nsw i32 %storemerge13.reload, 1, !insn.addr !9553
  %9 = icmp ult i32 %8, 6, !insn.addr !9554
  store i32 %8, i32* %storemerge13.reg2mem, !insn.addr !9554
  store i32 %spec.select, i32* %stack_var_-12.12.reg2mem, !insn.addr !9554
  store i32 %spec.select, i32* %storemerge.reg2mem, !insn.addr !9554
  br i1 %9, label %dec_label_pc_21e78, label %dec_label_pc_21ea8, !insn.addr !9554

dec_label_pc_21ea8:                               ; preds = %dec_label_pc_21e78, %dec_label_pc_21e54
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !9555

; uselistorder directives
  uselistorder i32* %storemerge13.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-12.12.reg2mem, { 2, 0, 1 }
  uselistorder i32* @global_var_2362b4, { 1, 0 }
  uselistorder i32* @global_var_2361b0, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder label %dec_label_pc_21e78, { 1, 0 }
}

define i32 @new_c_map(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21eb4:
  %r3.0.reg2mem = alloca i32, !insn.addr !9556
  %0 = call i32* @malloc(i32 4), !insn.addr !9557
  %1 = icmp eq i32* %0, null, !insn.addr !9558
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !9559
  br i1 %1, label %dec_label_pc_21ef2, label %dec_label_pc_21ed4, !insn.addr !9559

dec_label_pc_21ed4:                               ; preds = %dec_label_pc_21eb4
  %2 = ptrtoint i32* %0 to i32, !insn.addr !9557
  %3 = call i32 @new_c_rb(i32 %arg1, i32 %arg2, i32 %arg3), !insn.addr !9560
  store i32 %3, i32* %0, align 4, !insn.addr !9561
  %4 = icmp eq i32 %3, 0, !insn.addr !9562
  %. = select i1 %4, i32 0, i32 %2
  store i32 %., i32* %r3.0.reg2mem, !insn.addr !9563
  br label %dec_label_pc_21ef2, !insn.addr !9563

dec_label_pc_21ef2:                               ; preds = %dec_label_pc_21ed4, %dec_label_pc_21eb4
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9564

; uselistorder directives
  uselistorder i32* %0, { 0, 2, 1 }
}

define i32 @insert_c_map(i32 %arg1, i32* %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_21efc:
  %storemerge.reg2mem = alloca i32, !insn.addr !9565
  %0 = icmp eq i32 %arg1, 0, !insn.addr !9566
  store i32 501, i32* %storemerge.reg2mem, !insn.addr !9567
  br i1 %0, label %dec_label_pc_21f2c, label %dec_label_pc_21f16, !insn.addr !9567

dec_label_pc_21f16:                               ; preds = %dec_label_pc_21efc
  %1 = ptrtoint i32* %arg2 to i32
  %2 = ptrtoint i32* %arg4 to i32
  %3 = call i32 @insert_c_rb(i32 %arg1, i32 %1, i32 %arg3, i32 %2, i32 %arg5), !insn.addr !9568
  store i32 %3, i32* %storemerge.reg2mem, !insn.addr !9569
  br label %dec_label_pc_21f2c, !insn.addr !9569

dec_label_pc_21f2c:                               ; preds = %dec_label_pc_21efc, %dec_label_pc_21f16
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !9570

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_21f2c, { 1, 0 }
}

define i32 @exists_c_map(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_21f38:
  %r3.0.reg2mem = alloca i32, !insn.addr !9571
  %0 = icmp eq i32 %arg1, 0, !insn.addr !9572
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !9573
  br i1 %0, label %dec_label_pc_21f6a, label %dec_label_pc_21f50, !insn.addr !9573

dec_label_pc_21f50:                               ; preds = %dec_label_pc_21f38
  %1 = ptrtoint i32* %arg2 to i32
  %2 = call i32 @find_c_rb(i32 %arg1, i32 %1), !insn.addr !9574
  %3 = icmp ne i32 %2, 0, !insn.addr !9575
  %. = zext i1 %3 to i32
  store i32 %., i32* %r3.0.reg2mem, !insn.addr !9576
  br label %dec_label_pc_21f6a, !insn.addr !9576

dec_label_pc_21f6a:                               ; preds = %dec_label_pc_21f50, %dec_label_pc_21f38
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9577
}

define i32 @remove_c_map(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_21f74:
  %storemerge.reg2mem = alloca i32, !insn.addr !9578
  %stack_var_-20 = alloca i32, align 4
  %0 = icmp eq i32 %arg1, 0, !insn.addr !9579
  store i32 501, i32* %storemerge.reg2mem, !insn.addr !9580
  br i1 %0, label %dec_label_pc_21fee, label %dec_label_pc_21f8e, !insn.addr !9580

dec_label_pc_21f8e:                               ; preds = %dec_label_pc_21f74
  %1 = ptrtoint i32* %arg2 to i32
  %2 = call i32 @remove_c_rb(i32 %arg1, i32 %1), !insn.addr !9581
  %3 = icmp eq i32 %2, 0, !insn.addr !9582
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !9583
  br i1 %3, label %dec_label_pc_21fee, label %dec_label_pc_21fa2, !insn.addr !9583

dec_label_pc_21fa2:                               ; preds = %dec_label_pc_21f8e
  %4 = add i32 %2, 16, !insn.addr !9584
  %5 = inttoptr i32 %4 to i32*, !insn.addr !9584
  %6 = load i32, i32* %5, align 4, !insn.addr !9584
  %7 = call i32 @get_raw_clib_object(i32 %6, i32* nonnull %stack_var_-20), !insn.addr !9585
  %8 = load i32, i32* %stack_var_-20, align 4, !insn.addr !9586
  %9 = inttoptr i32 %8 to i32*, !insn.addr !9587
  call void @free(i32* %9), !insn.addr !9587
  %10 = load i32, i32* %5, align 4, !insn.addr !9588
  %11 = call i32 @delete_clib_object(i32 %10), !insn.addr !9589
  %12 = add i32 %2, 20, !insn.addr !9590
  %13 = inttoptr i32 %12 to i32*, !insn.addr !9590
  %14 = load i32, i32* %13, align 4, !insn.addr !9590
  %15 = call i32 @get_raw_clib_object(i32 %14, i32* nonnull %stack_var_-20), !insn.addr !9591
  %16 = load i32, i32* %stack_var_-20, align 4, !insn.addr !9592
  %17 = inttoptr i32 %16 to i32*, !insn.addr !9593
  call void @free(i32* %17), !insn.addr !9593
  %18 = load i32, i32* %13, align 4, !insn.addr !9594
  %19 = call i32 @delete_clib_object(i32 %18), !insn.addr !9595
  %20 = inttoptr i32 %2 to i32*, !insn.addr !9596
  call void @free(i32* %20), !insn.addr !9596
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !9596
  br label %dec_label_pc_21fee, !insn.addr !9596

dec_label_pc_21fee:                               ; preds = %dec_label_pc_21f8e, %dec_label_pc_21fa2, %dec_label_pc_21f74
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !9597

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 2, 0, 3, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_21fee, { 1, 0, 2 }
}

define i32 @find_c_map(i32 %arg1, i32* %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_21ff8:
  %r3.0.reg2mem = alloca i32, !insn.addr !9598
  %0 = icmp eq i32 %arg1, 0, !insn.addr !9599
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !9600
  br i1 %0, label %dec_label_pc_22034, label %dec_label_pc_2200e, !insn.addr !9600

dec_label_pc_2200e:                               ; preds = %dec_label_pc_21ff8
  %1 = ptrtoint i32* %arg2 to i32
  %2 = call i32 @find_c_rb(i32 %arg1, i32 %1), !insn.addr !9601
  %3 = icmp eq i32 %2, 0, !insn.addr !9602
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !9603
  br i1 %3, label %dec_label_pc_22034, label %dec_label_pc_22026, !insn.addr !9603

dec_label_pc_22026:                               ; preds = %dec_label_pc_2200e
  %4 = add i32 %2, 20, !insn.addr !9604
  %5 = inttoptr i32 %4 to i32*, !insn.addr !9604
  %6 = load i32, i32* %5, align 4, !insn.addr !9604
  %7 = call i32 @get_raw_clib_object(i32 %6, i32* %arg3), !insn.addr !9605
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !9606
  br label %dec_label_pc_22034, !insn.addr !9606

dec_label_pc_22034:                               ; preds = %dec_label_pc_2200e, %dec_label_pc_21ff8, %dec_label_pc_22026
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9607

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32)* @find_c_rb, { 1, 0 }
  uselistorder label %dec_label_pc_22034, { 2, 0, 1 }
}

define i32 @delete_c_map(i32 %arg1) local_unnamed_addr {
dec_label_pc_22040:
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !9608
  %0 = icmp eq i32 %arg1, 0, !insn.addr !9609
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !9610
  br i1 %0, label %dec_label_pc_22064, label %dec_label_pc_22052, !insn.addr !9610

dec_label_pc_22052:                               ; preds = %dec_label_pc_22040
  %1 = call i32 @delete_c_rb(i32 %arg1), !insn.addr !9611
  %2 = inttoptr i32 %arg1 to i32*, !insn.addr !9612
  call void @free(i32* %2), !insn.addr !9612
  store i32 %1, i32* %stack_var_-12.0.reg2mem, !insn.addr !9612
  br label %dec_label_pc_22064, !insn.addr !9612

dec_label_pc_22064:                               ; preds = %dec_label_pc_22052, %dec_label_pc_22040
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  ret i32 %stack_var_-12.0.reload, !insn.addr !9613
}

define i32 @minimum_c_map(i32 %arg1) local_unnamed_addr {
dec_label_pc_22070:
  %0 = call i32 @minimum_c_rb(i32 %arg1, i32 %arg1), !insn.addr !9614
  ret i32 %0, !insn.addr !9615
}

define i32 @get_next_c_map(i32 %arg1) local_unnamed_addr {
dec_label_pc_22098:
  %storemerge.reg2mem = alloca i32, !insn.addr !9616
  %storemerge1.reg2mem = alloca i32, !insn.addr !9616
  %0 = add i32 %arg1, 20, !insn.addr !9617
  %1 = inttoptr i32 %0 to i32*, !insn.addr !9617
  %2 = load i32, i32* %1, align 4, !insn.addr !9617
  %3 = icmp eq i32 %2, 0, !insn.addr !9618
  %4 = add i32 %arg1, 12
  %5 = inttoptr i32 %4 to i32*
  %6 = load i32, i32* %5, align 4
  br i1 %3, label %dec_label_pc_220a8, label %dec_label_pc_220ba, !insn.addr !9619

dec_label_pc_220a8:                               ; preds = %dec_label_pc_22098
  %7 = call i32 @minimum_c_map(i32 %6), !insn.addr !9620
  store i32 %7, i32* %storemerge1.reg2mem, !insn.addr !9621
  br label %dec_label_pc_220d6, !insn.addr !9621

dec_label_pc_220ba:                               ; preds = %dec_label_pc_22098
  %8 = inttoptr i32 %6 to i32*, !insn.addr !9622
  %9 = load i32, i32* %8, align 4, !insn.addr !9622
  %10 = call i32 @tree_successor(i32 %9, i32 %2), !insn.addr !9623
  store i32 %10, i32* %storemerge1.reg2mem, !insn.addr !9624
  br label %dec_label_pc_220d6, !insn.addr !9624

dec_label_pc_220d6:                               ; preds = %dec_label_pc_220ba, %dec_label_pc_220a8
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  store i32 %storemerge1.reload, i32* %1, align 4
  %11 = icmp eq i32 %storemerge1.reload, 0, !insn.addr !9625
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !9626
  br i1 %11, label %dec_label_pc_220e8, label %dec_label_pc_220e2, !insn.addr !9626

dec_label_pc_220e2:                               ; preds = %dec_label_pc_220d6
  %12 = add i32 %storemerge1.reload, 20, !insn.addr !9627
  %13 = inttoptr i32 %12 to i32*, !insn.addr !9627
  %14 = load i32, i32* %13, align 4, !insn.addr !9627
  store i32 %14, i32* %storemerge.reg2mem, !insn.addr !9627
  br label %dec_label_pc_220e8, !insn.addr !9627

dec_label_pc_220e8:                               ; preds = %dec_label_pc_220d6, %dec_label_pc_220e2
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !9628

; uselistorder directives
  uselistorder i32 %storemerge1.reload, { 2, 1, 0 }
  uselistorder i32* %storemerge1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_220e8, { 1, 0 }
}

define i32 @get_value_c_map(i32 %arg1) local_unnamed_addr {
dec_label_pc_220f4:
  %stack_var_-12 = alloca i32, align 4
  %0 = call i32 @get_raw_clib_object(i32 %arg1, i32* nonnull %stack_var_-12), !insn.addr !9629
  %1 = load i32, i32* %stack_var_-12, align 4, !insn.addr !9630
  ret i32 %1, !insn.addr !9631

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @replace_value_c_map(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22114:
  %stack_var_-16 = alloca i32, align 4
  %0 = add i32 %arg1, 12, !insn.addr !9632
  %1 = inttoptr i32 %0 to i32*, !insn.addr !9632
  %2 = load i32, i32* %1, align 4, !insn.addr !9632
  %3 = inttoptr i32 %2 to i32*, !insn.addr !9633
  %4 = load i32, i32* %3, align 4, !insn.addr !9633
  %5 = add i32 %4, 32, !insn.addr !9634
  %6 = inttoptr i32 %5 to i32*, !insn.addr !9634
  %7 = load i32, i32* %6, align 4, !insn.addr !9634
  %8 = icmp eq i32 %7, 0, !insn.addr !9635
  %.pre = add i32 %arg1, 20
  %.pre1 = inttoptr i32 %.pre to i32*
  br i1 %8, label %dec_label_pc_2214c, label %dec_label_pc_22130, !insn.addr !9636

dec_label_pc_22130:                               ; preds = %dec_label_pc_22114
  %9 = load i32, i32* %.pre1, align 4, !insn.addr !9637
  %10 = call i32 @get_raw_clib_object(i32 %9, i32* nonnull %stack_var_-16), !insn.addr !9638
  br label %dec_label_pc_2214c, !insn.addr !9639

dec_label_pc_2214c:                               ; preds = %dec_label_pc_22114, %dec_label_pc_22130
  %11 = load i32, i32* %.pre1, align 4, !insn.addr !9640
  %12 = add i32 %11, 20, !insn.addr !9641
  %13 = inttoptr i32 %12 to i32*, !insn.addr !9641
  %14 = load i32, i32* %13, align 4, !insn.addr !9641
  %15 = call i32 @replace_raw_clib_object(i32 %14, i32 %arg2, i32 %arg3), !insn.addr !9642
  ret i32 %15, !insn.addr !9643

; uselistorder directives
  uselistorder label %dec_label_pc_2214c, { 1, 0 }
}

define i32 @new_iterator_c_map(i32 %arg1) local_unnamed_addr {
dec_label_pc_22164:
  %0 = call i32* @malloc(i32 24), !insn.addr !9644
  %1 = ptrtoint i32* %0 to i32, !insn.addr !9644
  store i32 139417, i32* %0, align 4, !insn.addr !9645
  %2 = add i32 %1, 8, !insn.addr !9646
  %3 = inttoptr i32 %2 to i32*, !insn.addr !9646
  store i32 139509, i32* %3, align 4, !insn.addr !9646
  %4 = add i32 %1, 4, !insn.addr !9647
  %5 = inttoptr i32 %4 to i32*, !insn.addr !9647
  store i32 139541, i32* %5, align 4, !insn.addr !9647
  %6 = add i32 %1, 12, !insn.addr !9648
  %7 = inttoptr i32 %6 to i32*, !insn.addr !9648
  store i32 %arg1, i32* %7, align 4, !insn.addr !9648
  %8 = add i32 %1, 16, !insn.addr !9649
  %9 = inttoptr i32 %8 to i32*, !insn.addr !9649
  store i32 0, i32* %9, align 4, !insn.addr !9649
  %10 = add i32 %1, 20, !insn.addr !9650
  %11 = inttoptr i32 %10 to i32*, !insn.addr !9650
  store i32 0, i32* %11, align 4, !insn.addr !9650
  ret i32 %1, !insn.addr !9651
}

define i32 @delete_iterator_c_map(i32 %arg1) local_unnamed_addr {
dec_label_pc_221b8:
  %0 = inttoptr i32 %arg1 to i32*, !insn.addr !9652
  call void @free(i32* %0), !insn.addr !9652
  ret i32 ptrtoint (i32* @1 to i32), !insn.addr !9653
}

define i32 @__left_rotate(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_221d0:
  %0 = add i32 %arg2, 4, !insn.addr !9654
  %1 = inttoptr i32 %0 to i32*, !insn.addr !9654
  %2 = load i32, i32* %1, align 4, !insn.addr !9654
  %3 = inttoptr i32 %2 to i32*, !insn.addr !9655
  %4 = load i32, i32* %3, align 4, !insn.addr !9655
  store i32 %4, i32* %1, align 4, !insn.addr !9656
  %5 = load i32, i32* %3, align 4, !insn.addr !9657
  %6 = add i32 %arg1, 4, !insn.addr !9658
  %7 = icmp eq i32 %5, %6, !insn.addr !9659
  br i1 %7, label %dec_label_pc_221fc, label %dec_label_pc_221f4, !insn.addr !9660

dec_label_pc_221f4:                               ; preds = %dec_label_pc_221d0
  %8 = add i32 %5, 8, !insn.addr !9661
  %9 = inttoptr i32 %8 to i32*, !insn.addr !9661
  store i32 %arg2, i32* %9, align 4, !insn.addr !9661
  br label %dec_label_pc_221fc, !insn.addr !9661

dec_label_pc_221fc:                               ; preds = %dec_label_pc_221f4, %dec_label_pc_221d0
  %10 = icmp eq i32 %6, %2, !insn.addr !9662
  %.pre = add i32 %arg2, 8
  %.pre1 = inttoptr i32 %.pre to i32*
  br i1 %10, label %dec_label_pc_2220e, label %dec_label_pc_22206, !insn.addr !9663

dec_label_pc_22206:                               ; preds = %dec_label_pc_221fc
  %11 = load i32, i32* %.pre1, align 4, !insn.addr !9664
  %12 = add i32 %2, 8, !insn.addr !9665
  %13 = inttoptr i32 %12 to i32*, !insn.addr !9665
  store i32 %11, i32* %13, align 4, !insn.addr !9665
  br label %dec_label_pc_2220e, !insn.addr !9665

dec_label_pc_2220e:                               ; preds = %dec_label_pc_221fc, %dec_label_pc_22206
  %14 = load i32, i32* %.pre1, align 4, !insn.addr !9666
  %15 = icmp eq i32 %14, 0, !insn.addr !9667
  br i1 %15, label %dec_label_pc_22236, label %dec_label_pc_22216, !insn.addr !9668

dec_label_pc_22216:                               ; preds = %dec_label_pc_2220e
  %16 = inttoptr i32 %14 to i32*, !insn.addr !9669
  %17 = load i32, i32* %16, align 4, !insn.addr !9669
  %18 = icmp eq i32 %17, %arg2, !insn.addr !9670
  br i1 %18, label %dec_label_pc_22222, label %dec_label_pc_2222c, !insn.addr !9671

dec_label_pc_22222:                               ; preds = %dec_label_pc_22216
  store i32 %2, i32* %16, align 4, !insn.addr !9672
  br label %dec_label_pc_2223c, !insn.addr !9673

dec_label_pc_2222c:                               ; preds = %dec_label_pc_22216
  %19 = add i32 %14, 4, !insn.addr !9674
  %20 = inttoptr i32 %19 to i32*, !insn.addr !9674
  store i32 %2, i32* %20, align 4, !insn.addr !9674
  br label %dec_label_pc_2223c, !insn.addr !9675

dec_label_pc_22236:                               ; preds = %dec_label_pc_2220e
  %21 = inttoptr i32 %arg1 to i32*, !insn.addr !9676
  store i32 %2, i32* %21, align 4, !insn.addr !9676
  br label %dec_label_pc_2223c, !insn.addr !9676

dec_label_pc_2223c:                               ; preds = %dec_label_pc_22236, %dec_label_pc_2222c, %dec_label_pc_22222
  store i32 %arg2, i32* %3, align 4, !insn.addr !9677
  %22 = icmp eq i32 %6, %arg2, !insn.addr !9678
  br i1 %22, label %dec_label_pc_22252, label %dec_label_pc_2224c, !insn.addr !9679

dec_label_pc_2224c:                               ; preds = %dec_label_pc_2223c
  store i32 %2, i32* %.pre1, align 4, !insn.addr !9680
  br label %dec_label_pc_22252, !insn.addr !9680

dec_label_pc_22252:                               ; preds = %dec_label_pc_2224c, %dec_label_pc_2223c
  ret i32 %arg1, !insn.addr !9681

; uselistorder directives
  uselistorder i32 %2, { 2, 3, 1, 0, 5, 4, 6 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2220e, { 1, 0 }
}

define i32 @__right_rotate(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2225c:
  %0 = add i32 %arg2, 4, !insn.addr !9682
  %1 = inttoptr i32 %0 to i32*, !insn.addr !9682
  %2 = load i32, i32* %1, align 4, !insn.addr !9682
  %3 = inttoptr i32 %arg2 to i32*, !insn.addr !9683
  store i32 %2, i32* %3, align 4, !insn.addr !9683
  %4 = load i32, i32* %1, align 4, !insn.addr !9684
  %5 = add i32 %arg1, 4, !insn.addr !9685
  %6 = icmp eq i32 %4, %5, !insn.addr !9686
  br i1 %6, label %dec_label_pc_22288, label %dec_label_pc_22280, !insn.addr !9687

dec_label_pc_22280:                               ; preds = %dec_label_pc_2225c
  %7 = add i32 %4, 8, !insn.addr !9688
  %8 = inttoptr i32 %7 to i32*, !insn.addr !9688
  store i32 %arg2, i32* %8, align 4, !insn.addr !9688
  br label %dec_label_pc_22288, !insn.addr !9688

dec_label_pc_22288:                               ; preds = %dec_label_pc_22280, %dec_label_pc_2225c
  %9 = add i32 %arg2, 8, !insn.addr !9689
  %10 = inttoptr i32 %9 to i32*, !insn.addr !9689
  %11 = load i32, i32* %10, align 4, !insn.addr !9689
  %12 = icmp eq i32 %11, 0, !insn.addr !9690
  br i1 %12, label %dec_label_pc_222c2, label %dec_label_pc_222a2, !insn.addr !9691

dec_label_pc_222a2:                               ; preds = %dec_label_pc_22288
  %13 = add i32 %11, 4, !insn.addr !9692
  %14 = inttoptr i32 %13 to i32*, !insn.addr !9692
  %15 = load i32, i32* %14, align 4, !insn.addr !9692
  %16 = icmp eq i32 %15, %arg2, !insn.addr !9693
  br i1 %16, label %dec_label_pc_222ae, label %dec_label_pc_222b8, !insn.addr !9694

dec_label_pc_222ae:                               ; preds = %dec_label_pc_222a2
  store i32 %arg2, i32* %14, align 4, !insn.addr !9695
  br label %dec_label_pc_222c8, !insn.addr !9696

dec_label_pc_222b8:                               ; preds = %dec_label_pc_222a2
  %17 = inttoptr i32 %11 to i32*, !insn.addr !9697
  store i32 %arg2, i32* %17, align 4, !insn.addr !9697
  br label %dec_label_pc_222c8, !insn.addr !9698

dec_label_pc_222c2:                               ; preds = %dec_label_pc_22288
  %18 = inttoptr i32 %arg1 to i32*, !insn.addr !9699
  store i32 %arg2, i32* %18, align 4, !insn.addr !9699
  br label %dec_label_pc_222c8, !insn.addr !9699

dec_label_pc_222c8:                               ; preds = %dec_label_pc_222c2, %dec_label_pc_222b8, %dec_label_pc_222ae
  %19 = icmp eq i32 %5, %arg2, !insn.addr !9700
  store i32 %arg2, i32* %1, align 4, !insn.addr !9701
  br i1 %19, label %dec_label_pc_222de, label %dec_label_pc_222d8, !insn.addr !9702

dec_label_pc_222d8:                               ; preds = %dec_label_pc_222c8
  store i32 %arg2, i32* %10, align 4, !insn.addr !9703
  br label %dec_label_pc_222de, !insn.addr !9703

dec_label_pc_222de:                               ; preds = %dec_label_pc_222d8, %dec_label_pc_222c8
  ret i32 %arg1, !insn.addr !9704

; uselistorder directives
  uselistorder i32 %arg2, { 3, 4, 8, 5, 2, 1, 7, 6, 0, 9, 10 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @new_c_rb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_222e8:
  %storemerge.reg2mem = alloca i32, !insn.addr !9705
  %0 = call i32* @malloc(i32 40), !insn.addr !9706
  %1 = icmp eq i32* %0, null, !insn.addr !9707
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !9708
  br i1 %1, label %dec_label_pc_2234a, label %dec_label_pc_22308, !insn.addr !9708

dec_label_pc_22308:                               ; preds = %dec_label_pc_222e8
  %2 = ptrtoint i32* %0 to i32, !insn.addr !9706
  %3 = call i32* @memset(i32* nonnull %0, i32 0, i32 40), !insn.addr !9709
  %4 = add i32 %2, 36, !insn.addr !9710
  %5 = inttoptr i32 %4 to i32*, !insn.addr !9710
  store i32 %arg1, i32* %5, align 4, !insn.addr !9710
  %6 = add i32 %2, 28, !insn.addr !9711
  %7 = inttoptr i32 %6 to i32*, !insn.addr !9711
  store i32 %arg2, i32* %7, align 4, !insn.addr !9711
  %8 = add i32 %2, 32, !insn.addr !9712
  %9 = inttoptr i32 %8 to i32*, !insn.addr !9712
  store i32 %arg3, i32* %9, align 4, !insn.addr !9712
  %10 = add i32 %2, 4, !insn.addr !9713
  store i32 %10, i32* %0, align 4, !insn.addr !9714
  %11 = inttoptr i32 %10 to i32*, !insn.addr !9715
  store i32 %10, i32* %11, align 4, !insn.addr !9715
  %12 = add i32 %2, 8, !insn.addr !9716
  %13 = inttoptr i32 %12 to i32*, !insn.addr !9716
  store i32 %10, i32* %13, align 4, !insn.addr !9716
  %14 = add i32 %2, 12, !insn.addr !9717
  %15 = inttoptr i32 %14 to i32*, !insn.addr !9717
  store i32 0, i32* %15, align 4, !insn.addr !9717
  %16 = add i32 %2, 16, !insn.addr !9718
  %17 = inttoptr i32 %16 to i32*, !insn.addr !9718
  store i32 0, i32* %17, align 4, !insn.addr !9718
  store i32 %2, i32* %storemerge.reg2mem, !insn.addr !9719
  br label %dec_label_pc_2234a, !insn.addr !9719

dec_label_pc_2234a:                               ; preds = %dec_label_pc_222e8, %dec_label_pc_22308
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !9720

; uselistorder directives
  uselistorder i32* %0, { 0, 1, 3, 2 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2234a, { 1, 0 }
}

define i32 @__rb_insert_fixup(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22354:
  %r0.0.ph.lcssa.reg2mem = alloca i32, !insn.addr !9721
  %stack_var_-24.24.reg2mem = alloca i32, !insn.addr !9721
  %stack_var_-24.2.ph7.reg2mem = alloca i32, !insn.addr !9721
  %r0.0.ph8.reg2mem = alloca i32, !insn.addr !9721
  %stack_var_-24.1.reg2mem = alloca i32, !insn.addr !9721
  %.pre-phi25.reg2mem = alloca i32*, !insn.addr !9721
  %.pre-phi29.reg2mem = alloca i32*, !insn.addr !9721
  %r0.0.ph.be.reg2mem = alloca i32, !insn.addr !9721
  %stack_var_-24.2.ph.be.reg2mem = alloca i32, !insn.addr !9721
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !9721
  %.pre-phi19.reg2mem = alloca i32*, !insn.addr !9721
  %.pre-phi23.reg2mem = alloca i32*, !insn.addr !9721
  %0 = icmp eq i32 %arg1, %arg2, !insn.addr !9722
  store i32 %arg1, i32* %r0.0.ph8.reg2mem, !insn.addr !9723
  store i32 %arg2, i32* %stack_var_-24.2.ph7.reg2mem, !insn.addr !9723
  store i32 %arg1, i32* %r0.0.ph.lcssa.reg2mem, !insn.addr !9723
  br i1 %0, label %dec_label_pc_22464, label %dec_label_pc_22458.lr.ph, !insn.addr !9723

dec_label_pc_22360:                               ; preds = %dec_label_pc_22458
  %1 = add i32 %65, 8
  %2 = inttoptr i32 %1 to i32*
  %3 = load i32, i32* %2, align 4, !insn.addr !9724
  %4 = inttoptr i32 %3 to i32*, !insn.addr !9725
  %5 = load i32, i32* %4, align 4, !insn.addr !9725
  %6 = icmp eq i32 %65, %5, !insn.addr !9726
  br i1 %6, label %dec_label_pc_22370, label %dec_label_pc_223e0, !insn.addr !9727

dec_label_pc_22370:                               ; preds = %dec_label_pc_22360
  %7 = add i32 %3, 4, !insn.addr !9728
  %8 = inttoptr i32 %7 to i32*, !insn.addr !9728
  %9 = load i32, i32* %8, align 4, !insn.addr !9728
  %10 = add i32 %9, 12, !insn.addr !9729
  %11 = inttoptr i32 %10 to i32*, !insn.addr !9729
  %12 = load i32, i32* %11, align 4, !insn.addr !9729
  %13 = icmp eq i32 %12, 1, !insn.addr !9730
  br i1 %13, label %dec_label_pc_22382, label %dec_label_pc_223a4, !insn.addr !9731

dec_label_pc_22382:                               ; preds = %dec_label_pc_22370
  store i32 0, i32* %67, align 4, !insn.addr !9732
  store i32 0, i32* %11, align 4, !insn.addr !9733
  %14 = load i32, i32* %64, align 4, !insn.addr !9734
  %15 = add i32 %14, 8, !insn.addr !9735
  %16 = inttoptr i32 %15 to i32*, !insn.addr !9735
  %17 = load i32, i32* %16, align 4, !insn.addr !9735
  %18 = add i32 %17, 12, !insn.addr !9736
  %19 = inttoptr i32 %18 to i32*, !insn.addr !9736
  store i32 1, i32* %19, align 4, !insn.addr !9736
  br label %dec_label_pc_2244e.backedge, !insn.addr !9737

dec_label_pc_2244e.backedge:                      ; preds = %dec_label_pc_22382, %dec_label_pc_223f2
  %stack_var_-24.2.be.in.in.in = load i32, i32* %64, align 4
  %stack_var_-24.2.be.in.in = add i32 %stack_var_-24.2.be.in.in.in, 8
  %stack_var_-24.2.be.in = inttoptr i32 %stack_var_-24.2.be.in.in to i32*
  %stack_var_-24.2.be = load i32, i32* %stack_var_-24.2.be.in, align 4
  %20 = icmp eq i32 %r0.0.ph8.reload, %stack_var_-24.2.be, !insn.addr !9722
  store i32 %stack_var_-24.2.be, i32* %stack_var_-24.24.reg2mem, !insn.addr !9723
  store i32 %r0.0.ph8.reload, i32* %r0.0.ph.lcssa.reg2mem, !insn.addr !9723
  br i1 %20, label %dec_label_pc_22464, label %dec_label_pc_22458, !insn.addr !9723

dec_label_pc_223a4:                               ; preds = %dec_label_pc_22370
  %21 = add i32 %65, 4, !insn.addr !9738
  %22 = inttoptr i32 %21 to i32*, !insn.addr !9738
  %23 = load i32, i32* %22, align 4, !insn.addr !9738
  %24 = icmp eq i32 %23, %stack_var_-24.24.reload, !insn.addr !9739
  store i32* %67, i32** %.pre-phi23.reg2mem, !insn.addr !9740
  store i32* %64, i32** %.pre-phi19.reg2mem, !insn.addr !9740
  store i32 %stack_var_-24.24.reload, i32* %stack_var_-24.0.reg2mem, !insn.addr !9740
  br i1 %24, label %dec_label_pc_223b0, label %dec_label_pc_223be, !insn.addr !9740

dec_label_pc_223b0:                               ; preds = %dec_label_pc_223a4
  %25 = call i32 @__left_rotate(i32 %arg1, i32 %65), !insn.addr !9741
  %.pre18 = load i32, i32* %2, align 4
  %.pre20 = add i32 %.pre18, 12, !insn.addr !9742
  %.pre22 = inttoptr i32 %.pre20 to i32*, !insn.addr !9742
  store i32* %.pre22, i32** %.pre-phi23.reg2mem, !insn.addr !9741
  store i32* %2, i32** %.pre-phi19.reg2mem, !insn.addr !9741
  store i32 %65, i32* %stack_var_-24.0.reg2mem, !insn.addr !9741
  br label %dec_label_pc_223be, !insn.addr !9741

dec_label_pc_223be:                               ; preds = %dec_label_pc_223a4, %dec_label_pc_223b0
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %.pre-phi19.reload = load i32*, i32** %.pre-phi19.reg2mem
  %.pre-phi23.reload = load i32*, i32** %.pre-phi23.reg2mem
  store i32 0, i32* %.pre-phi23.reload, align 4, !insn.addr !9742
  %26 = load i32, i32* %.pre-phi19.reload, align 4, !insn.addr !9743
  %27 = add i32 %26, 8, !insn.addr !9744
  %28 = inttoptr i32 %27 to i32*, !insn.addr !9744
  %29 = load i32, i32* %28, align 4, !insn.addr !9744
  %30 = add i32 %29, 12, !insn.addr !9745
  %31 = inttoptr i32 %30 to i32*, !insn.addr !9745
  store i32 1, i32* %31, align 4, !insn.addr !9745
  %32 = load i32, i32* %.pre-phi19.reload, align 4, !insn.addr !9746
  %33 = add i32 %32, 8, !insn.addr !9747
  %34 = inttoptr i32 %33 to i32*, !insn.addr !9747
  %35 = load i32, i32* %34, align 4, !insn.addr !9747
  %36 = call i32 @__right_rotate(i32 %arg1, i32 %35), !insn.addr !9748
  store i32 %stack_var_-24.0.reload, i32* %stack_var_-24.2.ph.be.reg2mem, !insn.addr !9749
  store i32 %36, i32* %r0.0.ph.be.reg2mem, !insn.addr !9749
  br label %dec_label_pc_2244e.outer.backedge, !insn.addr !9749

dec_label_pc_2244e.outer.backedge:                ; preds = %dec_label_pc_223be, %dec_label_pc_2242e
  %r0.0.ph.be.reload = load i32, i32* %r0.0.ph.be.reg2mem
  %stack_var_-24.2.ph.be.reload = load i32, i32* %stack_var_-24.2.ph.be.reg2mem
  %37 = icmp eq i32 %r0.0.ph.be.reload, %stack_var_-24.2.ph.be.reload, !insn.addr !9722
  store i32 %r0.0.ph.be.reload, i32* %r0.0.ph8.reg2mem, !insn.addr !9723
  store i32 %stack_var_-24.2.ph.be.reload, i32* %stack_var_-24.2.ph7.reg2mem, !insn.addr !9723
  store i32 %stack_var_-24.2.ph.be.reload, i32* %r0.0.ph.lcssa.reg2mem, !insn.addr !9723
  br i1 %37, label %dec_label_pc_22464, label %dec_label_pc_22458.lr.ph, !insn.addr !9723

dec_label_pc_223e0:                               ; preds = %dec_label_pc_22360
  %38 = add i32 %5, 12, !insn.addr !9750
  %39 = inttoptr i32 %38 to i32*, !insn.addr !9750
  %40 = load i32, i32* %39, align 4, !insn.addr !9750
  %41 = icmp eq i32 %40, 1, !insn.addr !9751
  br i1 %41, label %dec_label_pc_223f2, label %dec_label_pc_22414, !insn.addr !9752

dec_label_pc_223f2:                               ; preds = %dec_label_pc_223e0
  store i32 0, i32* %67, align 4, !insn.addr !9753
  store i32 0, i32* %39, align 4, !insn.addr !9754
  %42 = load i32, i32* %64, align 4, !insn.addr !9755
  %43 = add i32 %42, 8, !insn.addr !9756
  %44 = inttoptr i32 %43 to i32*, !insn.addr !9756
  %45 = load i32, i32* %44, align 4, !insn.addr !9756
  %46 = add i32 %45, 12, !insn.addr !9757
  %47 = inttoptr i32 %46 to i32*, !insn.addr !9757
  store i32 1, i32* %47, align 4, !insn.addr !9757
  br label %dec_label_pc_2244e.backedge, !insn.addr !9758

dec_label_pc_22414:                               ; preds = %dec_label_pc_223e0
  %48 = inttoptr i32 %65 to i32*, !insn.addr !9759
  %49 = load i32, i32* %48, align 4, !insn.addr !9759
  %50 = icmp eq i32 %49, %stack_var_-24.24.reload, !insn.addr !9760
  store i32* %67, i32** %.pre-phi29.reg2mem, !insn.addr !9761
  store i32* %64, i32** %.pre-phi25.reg2mem, !insn.addr !9761
  store i32 %stack_var_-24.24.reload, i32* %stack_var_-24.1.reg2mem, !insn.addr !9761
  br i1 %50, label %dec_label_pc_22420, label %dec_label_pc_2242e, !insn.addr !9761

dec_label_pc_22420:                               ; preds = %dec_label_pc_22414
  %51 = call i32 @__right_rotate(i32 %arg1, i32 %65), !insn.addr !9762
  %.pre = load i32, i32* %2, align 4
  %.pre26 = add i32 %.pre, 12, !insn.addr !9763
  %.pre28 = inttoptr i32 %.pre26 to i32*, !insn.addr !9763
  store i32* %.pre28, i32** %.pre-phi29.reg2mem, !insn.addr !9762
  store i32* %2, i32** %.pre-phi25.reg2mem, !insn.addr !9762
  store i32 %65, i32* %stack_var_-24.1.reg2mem, !insn.addr !9762
  br label %dec_label_pc_2242e, !insn.addr !9762

dec_label_pc_2242e:                               ; preds = %dec_label_pc_22414, %dec_label_pc_22420
  %stack_var_-24.1.reload = load i32, i32* %stack_var_-24.1.reg2mem
  %.pre-phi25.reload = load i32*, i32** %.pre-phi25.reg2mem
  %.pre-phi29.reload = load i32*, i32** %.pre-phi29.reg2mem
  store i32 0, i32* %.pre-phi29.reload, align 4, !insn.addr !9763
  %52 = load i32, i32* %.pre-phi25.reload, align 4, !insn.addr !9764
  %53 = add i32 %52, 8, !insn.addr !9765
  %54 = inttoptr i32 %53 to i32*, !insn.addr !9765
  %55 = load i32, i32* %54, align 4, !insn.addr !9765
  %56 = add i32 %55, 12, !insn.addr !9766
  %57 = inttoptr i32 %56 to i32*, !insn.addr !9766
  store i32 1, i32* %57, align 4, !insn.addr !9766
  %58 = load i32, i32* %.pre-phi25.reload, align 4, !insn.addr !9767
  %59 = add i32 %58, 8, !insn.addr !9768
  %60 = inttoptr i32 %59 to i32*, !insn.addr !9768
  %61 = load i32, i32* %60, align 4, !insn.addr !9768
  %62 = call i32 @__left_rotate(i32 %arg1, i32 %61), !insn.addr !9769
  store i32 %stack_var_-24.1.reload, i32* %stack_var_-24.2.ph.be.reg2mem, !insn.addr !9769
  store i32 %62, i32* %r0.0.ph.be.reg2mem, !insn.addr !9769
  br label %dec_label_pc_2244e.outer.backedge, !insn.addr !9769

dec_label_pc_22458.lr.ph:                         ; preds = %dec_label_pc_22354, %dec_label_pc_2244e.outer.backedge
  %stack_var_-24.2.ph7.reload = load i32, i32* %stack_var_-24.2.ph7.reg2mem
  %r0.0.ph8.reload = load i32, i32* %r0.0.ph8.reg2mem
  store i32 %stack_var_-24.2.ph7.reload, i32* %stack_var_-24.24.reg2mem
  br label %dec_label_pc_22458

dec_label_pc_22458:                               ; preds = %dec_label_pc_22458.lr.ph, %dec_label_pc_2244e.backedge
  %stack_var_-24.24.reload = load i32, i32* %stack_var_-24.24.reg2mem
  %63 = add i32 %stack_var_-24.24.reload, 8
  %64 = inttoptr i32 %63 to i32*
  %65 = load i32, i32* %64, align 4, !insn.addr !9770
  %66 = add i32 %65, 12
  %67 = inttoptr i32 %66 to i32*
  %68 = load i32, i32* %67, align 4, !insn.addr !9771
  %69 = icmp eq i32 %68, 1, !insn.addr !9772
  store i32 %r0.0.ph8.reload, i32* %r0.0.ph.lcssa.reg2mem, !insn.addr !9773
  br i1 %69, label %dec_label_pc_22360, label %dec_label_pc_22464, !insn.addr !9773

dec_label_pc_22464:                               ; preds = %dec_label_pc_2244e.outer.backedge, %dec_label_pc_2244e.backedge, %dec_label_pc_22458, %dec_label_pc_22354
  %r0.0.ph.lcssa.reload = load i32, i32* %r0.0.ph.lcssa.reg2mem
  %70 = add i32 %r0.0.ph.lcssa.reload, 12, !insn.addr !9774
  %71 = inttoptr i32 %70 to i32*, !insn.addr !9774
  store i32 0, i32* %71, align 4, !insn.addr !9774
  ret i32 %r0.0.ph.lcssa.reload, !insn.addr !9775

; uselistorder directives
  uselistorder i32 %r0.0.ph.lcssa.reload, { 1, 0 }
  uselistorder i32* %67, { 4, 3, 1, 2, 0 }
  uselistorder i32 %65, { 8, 6, 7, 2, 3, 1, 4, 5, 0 }
  uselistorder i32* %64, { 5, 4, 2, 1, 3, 0 }
  uselistorder i32 %stack_var_-24.24.reload, { 0, 2, 3, 1, 4 }
  uselistorder i32 %r0.0.ph8.reload, { 1, 2, 0 }
  uselistorder i32* %2, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-24.2.ph.be.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r0.0.ph.be.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r0.0.ph8.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.2.ph7.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.24.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.0.ph.lcssa.reg2mem, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg1, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_22464, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_22458.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_2242e, { 1, 0 }
  uselistorder label %dec_label_pc_2244e.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_223be, { 1, 0 }
  uselistorder label %dec_label_pc_2244e.backedge, { 1, 0 }
}

define i32 @find_c_rb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22474:
  %.lcssa.reg2mem = alloca i32, !insn.addr !9776
  %storemerge13.reg2mem = alloca i32, !insn.addr !9776
  %stack_var_-20 = alloca i32, align 4
  %0 = add i32 %arg1, 4, !insn.addr !9777
  %1 = icmp slt i32 %arg2, 0
  %2 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* %storemerge13.reg2mem
  br label %dec_label_pc_22486

dec_label_pc_22486:                               ; preds = %dec_label_pc_22474, %dec_label_pc_224b6
  %storemerge13.reload = load i32, i32* %storemerge13.reg2mem
  %3 = add i32 %storemerge13.reload, 16, !insn.addr !9778
  %4 = inttoptr i32 %3 to i32*, !insn.addr !9778
  %5 = load i32, i32* %4, align 4, !insn.addr !9778
  %6 = call i32 @get_raw_clib_object(i32 %5, i32* nonnull %stack_var_-20), !insn.addr !9779
  %7 = load i32, i32* %stack_var_-20, align 4, !insn.addr !9780
  %8 = inttoptr i32 %7 to i32*, !insn.addr !9781
  call void @free(i32* %8), !insn.addr !9781
  store i32 %arg1, i32* %.lcssa.reg2mem, !insn.addr !9782
  br i1 %2, label %dec_label_pc_224d2, label %dec_label_pc_224b6, !insn.addr !9782

dec_label_pc_224b6:                               ; preds = %dec_label_pc_22486
  %9 = add i32 %storemerge13.reload, 4
  %storemerge2.in.in = select i1 %1, i32 %storemerge13.reload, i32 %9
  %storemerge2.in = inttoptr i32 %storemerge2.in.in to i32*
  %storemerge2 = load i32, i32* %storemerge2.in, align 4
  %10 = icmp eq i32 %0, %storemerge2, !insn.addr !9783
  store i32 %storemerge2, i32* %storemerge13.reg2mem, !insn.addr !9784
  store i32 0, i32* %.lcssa.reg2mem, !insn.addr !9784
  br i1 %10, label %dec_label_pc_224d2, label %dec_label_pc_22486, !insn.addr !9784

dec_label_pc_224d2:                               ; preds = %dec_label_pc_224b6, %dec_label_pc_22486
  %.lcssa.reload = load i32, i32* %.lcssa.reg2mem
  ret i32 %.lcssa.reload, !insn.addr !9785

; uselistorder directives
  uselistorder i32 %storemerge13.reload, { 1, 0, 2 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %storemerge13.reg2mem, { 1, 0, 2 }
  uselistorder i32* %.lcssa.reg2mem, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_22486, { 1, 0 }
}

define i32 @insert_c_rb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_224ec:
  %r3.0.reg2mem = alloca i32, !insn.addr !9786
  %stack_var_-12.02.reg2mem = alloca i32, !insn.addr !9786
  %r0.0.reg2mem = alloca i32, !insn.addr !9786
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %0 = call i32* @malloc(i32 24), !insn.addr !9787
  %1 = icmp eq i32* %0, null, !insn.addr !9788
  store i32 2, i32* %r3.0.reg2mem, !insn.addr !9789
  br i1 %1, label %dec_label_pc_2264c, label %dec_label_pc_22512, !insn.addr !9789

dec_label_pc_22512:                               ; preds = %dec_label_pc_224ec
  %2 = ptrtoint i32* %0 to i32, !insn.addr !9787
  %3 = add i32 %arg1, 4, !insn.addr !9790
  store i32 %3, i32* %0, align 4, !insn.addr !9791
  %4 = add i32 %2, 4, !insn.addr !9792
  %5 = inttoptr i32 %4 to i32*, !insn.addr !9792
  store i32 %3, i32* %5, align 4, !insn.addr !9792
  %6 = add i32 %2, 12, !insn.addr !9793
  %7 = inttoptr i32 %6 to i32*, !insn.addr !9793
  store i32 1, i32* %7, align 4, !insn.addr !9793
  %8 = call i32 @new_clib_object(i32 %arg2, i32 %arg3), !insn.addr !9794
  %9 = add i32 %2, 16, !insn.addr !9795
  %10 = inttoptr i32 %9 to i32*, !insn.addr !9795
  store i32 %8, i32* %10, align 4, !insn.addr !9795
  %11 = icmp eq i32 %arg4, 0, !insn.addr !9796
  br i1 %11, label %dec_label_pc_2254c, label %dec_label_pc_2253c, !insn.addr !9797

dec_label_pc_2253c:                               ; preds = %dec_label_pc_22512
  %12 = call i32 @new_clib_object(i32 %arg4, i32 %arg5), !insn.addr !9798
  %13 = add i32 %2, 20, !insn.addr !9799
  %14 = inttoptr i32 %13 to i32*, !insn.addr !9799
  store i32 %12, i32* %14, align 4, !insn.addr !9799
  store i32 %12, i32* %r0.0.reg2mem, !insn.addr !9800
  br label %dec_label_pc_22552, !insn.addr !9800

dec_label_pc_2254c:                               ; preds = %dec_label_pc_22512
  %15 = add i32 %2, 20, !insn.addr !9801
  %16 = inttoptr i32 %15 to i32*, !insn.addr !9801
  store i32 0, i32* %16, align 4, !insn.addr !9801
  store i32 %8, i32* %r0.0.reg2mem, !insn.addr !9801
  br label %dec_label_pc_22552, !insn.addr !9801

dec_label_pc_22552:                               ; preds = %dec_label_pc_2254c, %dec_label_pc_2253c
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %17 = icmp eq i32 %3, %r0.0.reload, !insn.addr !9802
  store i32 %r0.0.reload, i32* %stack_var_-12.02.reg2mem, !insn.addr !9803
  br i1 %17, label %dec_label_pc_225d0.thread, label %dec_label_pc_2255e, !insn.addr !9803

dec_label_pc_225d0.thread:                        ; preds = %dec_label_pc_22552
  %18 = add i32 %2, 8, !insn.addr !9804
  %19 = inttoptr i32 %18 to i32*, !insn.addr !9804
  store i32 0, i32* %19, align 4, !insn.addr !9804
  br label %dec_label_pc_22636

dec_label_pc_2255e:                               ; preds = %dec_label_pc_22552, %dec_label_pc_225ae
  %stack_var_-12.02.reload = load i32, i32* %stack_var_-12.02.reg2mem
  %20 = add i32 %stack_var_-12.02.reload, 16, !insn.addr !9805
  %21 = inttoptr i32 %20 to i32*, !insn.addr !9805
  %22 = load i32, i32* %21, align 4, !insn.addr !9805
  %23 = call i32 @get_raw_clib_object(i32 %22, i32* nonnull %stack_var_-36), !insn.addr !9806
  %24 = load i32, i32* %10, align 4, !insn.addr !9807
  %25 = call i32 @get_raw_clib_object(i32 %24, i32* nonnull %stack_var_-40), !insn.addr !9808
  %26 = load i32, i32* %stack_var_-40, align 4, !insn.addr !9809
  %27 = load i32, i32* %stack_var_-36, align 4, !insn.addr !9810
  %28 = inttoptr i32 %27 to i32*, !insn.addr !9811
  call void @free(i32* %28), !insn.addr !9811
  %29 = load i32, i32* %stack_var_-40, align 4, !insn.addr !9812
  %30 = inttoptr i32 %29 to i32*, !insn.addr !9813
  call void @free(i32* %30), !insn.addr !9813
  %31 = icmp eq i32 %26, 0, !insn.addr !9814
  store i32 401, i32* %r3.0.reg2mem, !insn.addr !9815
  br i1 %31, label %dec_label_pc_2264c, label %dec_label_pc_225ae, !insn.addr !9815

dec_label_pc_225ae:                               ; preds = %dec_label_pc_2255e
  %32 = icmp slt i32 %26, 0, !insn.addr !9816
  %33 = add i32 %stack_var_-12.02.reload, 4
  %spec.select = select i1 %32, i32 %stack_var_-12.02.reload, i32 %33
  %stack_var_-12.0.be.in = inttoptr i32 %spec.select to i32*
  %stack_var_-12.0.be = load i32, i32* %stack_var_-12.0.be.in, align 4
  %34 = icmp eq i32 %3, %stack_var_-12.0.be, !insn.addr !9802
  store i32 %stack_var_-12.0.be, i32* %stack_var_-12.02.reg2mem, !insn.addr !9803
  br i1 %34, label %dec_label_pc_225d0, label %dec_label_pc_2255e, !insn.addr !9803

dec_label_pc_225d0:                               ; preds = %dec_label_pc_225ae
  %35 = add i32 %2, 8, !insn.addr !9804
  %36 = inttoptr i32 %35 to i32*, !insn.addr !9804
  store i32 %stack_var_-12.02.reload, i32* %36, align 4, !insn.addr !9804
  %37 = icmp eq i32 %stack_var_-12.02.reload, 0, !insn.addr !9817
  br i1 %37, label %dec_label_pc_22636, label %dec_label_pc_225dc, !insn.addr !9818

dec_label_pc_225dc:                               ; preds = %dec_label_pc_225d0
  %38 = load i32, i32* %21, align 4, !insn.addr !9819
  %39 = call i32 @get_raw_clib_object(i32 %38, i32* nonnull %stack_var_-44), !insn.addr !9820
  %40 = load i32, i32* %10, align 4, !insn.addr !9821
  %41 = call i32 @get_raw_clib_object(i32 %40, i32* nonnull %stack_var_-48), !insn.addr !9822
  %42 = load i32, i32* %stack_var_-48, align 4, !insn.addr !9823
  %43 = load i32, i32* %stack_var_-44, align 4, !insn.addr !9824
  %44 = inttoptr i32 %43 to i32*, !insn.addr !9825
  call void @free(i32* %44), !insn.addr !9825
  %45 = load i32, i32* %stack_var_-48, align 4, !insn.addr !9826
  %46 = inttoptr i32 %45 to i32*, !insn.addr !9827
  call void @free(i32* %46), !insn.addr !9827
  %47 = icmp slt i32 %42, 0, !insn.addr !9828
  br i1 %47, label %dec_label_pc_22626, label %dec_label_pc_2262e, !insn.addr !9829

dec_label_pc_22626:                               ; preds = %dec_label_pc_225dc
  %48 = inttoptr i32 %stack_var_-12.02.reload to i32*, !insn.addr !9830
  store i32 %2, i32* %48, align 4, !insn.addr !9830
  br label %dec_label_pc_2263c, !insn.addr !9831

dec_label_pc_2262e:                               ; preds = %dec_label_pc_225dc
  %49 = inttoptr i32 %33 to i32*, !insn.addr !9832
  store i32 %2, i32* %49, align 4, !insn.addr !9832
  br label %dec_label_pc_2263c, !insn.addr !9833

dec_label_pc_22636:                               ; preds = %dec_label_pc_225d0.thread, %dec_label_pc_225d0
  %50 = inttoptr i32 %arg1 to i32*, !insn.addr !9834
  store i32 %2, i32* %50, align 4, !insn.addr !9834
  br label %dec_label_pc_2263c, !insn.addr !9834

dec_label_pc_2263c:                               ; preds = %dec_label_pc_22636, %dec_label_pc_2262e, %dec_label_pc_22626
  %51 = call i32 @__rb_insert_fixup(i32 %arg1, i32 %2), !insn.addr !9835
  %52 = call i32 @debug_verify_properties(i32 %arg1), !insn.addr !9836
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !9837
  br label %dec_label_pc_2264c, !insn.addr !9837

dec_label_pc_2264c:                               ; preds = %dec_label_pc_2255e, %dec_label_pc_224ec, %dec_label_pc_2263c
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !9838

; uselistorder directives
  uselistorder i32 %stack_var_-12.02.reload, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %10, { 1, 0, 2 }
  uselistorder i32 %3, { 1, 0, 2, 3 }
  uselistorder i32 %2, { 4, 5, 3, 2, 6, 0, 7, 1, 8, 9, 10 }
  uselistorder i32* %0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 0 }
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-12.02.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32)* @new_clib_object, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_2264c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22636, { 1, 0 }
  uselistorder label %dec_label_pc_2255e, { 1, 0 }
}

define i32 @__rb_remove_fixup(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22658:
  %r0.2.lcssa.reg2mem = alloca i32, !insn.addr !9839
  %stack_var_-24.0.lcssa.reg2mem = alloca i32, !insn.addr !9839
  %stack_var_-24.01.reg2mem = alloca i32, !insn.addr !9839
  %r0.22.reg2mem = alloca i32, !insn.addr !9839
  %stack_var_-16.1.reg2mem = alloca i32, !insn.addr !9839
  %.reg2mem47 = alloca i32, !insn.addr !9839
  %.pre-phi11.reg2mem = alloca i32*, !insn.addr !9839
  %r0.1.reg2mem = alloca i32, !insn.addr !9839
  %stack_var_-16.0.reg2mem = alloca i32, !insn.addr !9839
  %.reg2mem45 = alloca i32, !insn.addr !9839
  %stack_var_-12.1.reg2mem = alloca i32, !insn.addr !9839
  %.reg2mem43 = alloca i32, !insn.addr !9839
  %.pre-phi9.reg2mem = alloca i32*, !insn.addr !9839
  %r0.2.be.reg2mem = alloca i32, !insn.addr !9839
  %r0.0.reg2mem = alloca i32, !insn.addr !9839
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !9839
  %.reg2mem = alloca i32, !insn.addr !9839
  %0 = icmp eq i32 %arg1, %arg2, !insn.addr !9840
  store i32 %arg1, i32* %r0.22.reg2mem, !insn.addr !9841
  store i32 %arg2, i32* %stack_var_-24.01.reg2mem, !insn.addr !9841
  store i32 %arg1, i32* %stack_var_-24.0.lcssa.reg2mem, !insn.addr !9841
  store i32 %arg1, i32* %r0.2.lcssa.reg2mem, !insn.addr !9841
  br i1 %0, label %dec_label_pc_227d6, label %dec_label_pc_227cc, !insn.addr !9841

dec_label_pc_22664:                               ; preds = %dec_label_pc_227cc
  %1 = add i32 %stack_var_-24.01.reload, 8, !insn.addr !9842
  %2 = inttoptr i32 %1 to i32*, !insn.addr !9842
  %3 = load i32, i32* %2, align 4, !insn.addr !9842
  %4 = inttoptr i32 %3 to i32*, !insn.addr !9843
  %5 = load i32, i32* %4, align 4, !insn.addr !9843
  %6 = icmp eq i32 %5, %stack_var_-24.01.reload, !insn.addr !9844
  br i1 %6, label %dec_label_pc_22670, label %dec_label_pc_2271a, !insn.addr !9845

dec_label_pc_22670:                               ; preds = %dec_label_pc_22664
  %7 = add i32 %3, 4, !insn.addr !9846
  %8 = inttoptr i32 %7 to i32*, !insn.addr !9846
  %9 = load i32, i32* %8, align 4, !insn.addr !9846
  %10 = add i32 %9, 12, !insn.addr !9847
  %11 = inttoptr i32 %10 to i32*, !insn.addr !9847
  %12 = load i32, i32* %11, align 4, !insn.addr !9847
  %13 = icmp eq i32 %12, 1, !insn.addr !9848
  store i32 %3, i32* %.reg2mem, !insn.addr !9849
  store i32 %9, i32* %stack_var_-12.0.reg2mem, !insn.addr !9849
  store i32 %r0.22.reload, i32* %r0.0.reg2mem, !insn.addr !9849
  br i1 %13, label %dec_label_pc_22680, label %dec_label_pc_226a2, !insn.addr !9849

dec_label_pc_22680:                               ; preds = %dec_label_pc_22670
  store i32 0, i32* %11, align 4, !insn.addr !9850
  %14 = load i32, i32* %2, align 4, !insn.addr !9851
  %15 = add i32 %14, 12, !insn.addr !9852
  %16 = inttoptr i32 %15 to i32*, !insn.addr !9852
  store i32 1, i32* %16, align 4, !insn.addr !9852
  %17 = load i32, i32* %2, align 4, !insn.addr !9853
  %18 = call i32 @__left_rotate(i32 %arg1, i32 %17), !insn.addr !9854
  %19 = load i32, i32* %2, align 4, !insn.addr !9855
  %20 = add i32 %19, 4, !insn.addr !9856
  %21 = inttoptr i32 %20 to i32*, !insn.addr !9856
  %22 = load i32, i32* %21, align 4, !insn.addr !9856
  store i32 %19, i32* %.reg2mem, !insn.addr !9857
  store i32 %22, i32* %stack_var_-12.0.reg2mem, !insn.addr !9857
  store i32 %18, i32* %r0.0.reg2mem, !insn.addr !9857
  br label %dec_label_pc_226a2, !insn.addr !9857

dec_label_pc_226a2:                               ; preds = %dec_label_pc_22670, %dec_label_pc_22680
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %23 = inttoptr i32 %stack_var_-12.0.reload to i32*, !insn.addr !9858
  %24 = load i32, i32* %23, align 4, !insn.addr !9858
  %25 = add i32 %24, 12
  %26 = inttoptr i32 %25 to i32*
  %27 = load i32, i32* %26, align 4, !insn.addr !9859
  %28 = icmp eq i32 %27, 0, !insn.addr !9860
  %29 = add i32 %stack_var_-12.0.reload, 4
  %30 = inttoptr i32 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, 12
  %33 = inttoptr i32 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %28, label %dec_label_pc_226ac, label %dec_label_pc_226c4, !insn.addr !9861

dec_label_pc_226ac:                               ; preds = %dec_label_pc_226a2
  store i32* %30, i32** %.pre-phi9.reg2mem, !insn.addr !9862
  store i32 %.reload, i32* %.reg2mem43, !insn.addr !9862
  store i32 %stack_var_-12.0.reload, i32* %stack_var_-12.1.reg2mem, !insn.addr !9862
  br i1 %35, label %dec_label_pc_226b6, label %dec_label_pc_226ec, !insn.addr !9862

dec_label_pc_226b6:                               ; preds = %dec_label_pc_226ac
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %36 = add i32 %stack_var_-12.0.reload, 12, !insn.addr !9863
  %37 = inttoptr i32 %36 to i32*, !insn.addr !9863
  store i32 1, i32* %37, align 4, !insn.addr !9863
  store i32 %r0.0.reload, i32* %r0.2.be.reg2mem, !insn.addr !9864
  br label %dec_label_pc_227c2.backedge, !insn.addr !9864

dec_label_pc_227c2.backedge:                      ; preds = %dec_label_pc_226b6, %dec_label_pc_22760
  %r0.2.be.reload = load i32, i32* %r0.2.be.reg2mem
  %stack_var_-24.0.be = load i32, i32* %2, align 4
  %38 = icmp eq i32 %r0.2.be.reload, %stack_var_-24.0.be, !insn.addr !9840
  store i32 %r0.2.be.reload, i32* %r0.22.reg2mem, !insn.addr !9841
  store i32 %stack_var_-24.0.be, i32* %stack_var_-24.01.reg2mem, !insn.addr !9841
  store i32 %r0.2.be.reload, i32* %stack_var_-24.0.lcssa.reg2mem, !insn.addr !9841
  store i32 %r0.2.be.reload, i32* %r0.2.lcssa.reg2mem, !insn.addr !9841
  br i1 %38, label %dec_label_pc_227d6, label %dec_label_pc_227cc, !insn.addr !9841

dec_label_pc_226c4:                               ; preds = %dec_label_pc_226a2
  store i32* %30, i32** %.pre-phi9.reg2mem, !insn.addr !9865
  store i32 %.reload, i32* %.reg2mem43, !insn.addr !9865
  store i32 %stack_var_-12.0.reload, i32* %stack_var_-12.1.reg2mem, !insn.addr !9865
  br i1 %35, label %dec_label_pc_226ce, label %dec_label_pc_226ec, !insn.addr !9865

dec_label_pc_226ce:                               ; preds = %dec_label_pc_226c4
  store i32 0, i32* %26, align 4, !insn.addr !9866
  %39 = add i32 %stack_var_-12.0.reload, 12, !insn.addr !9867
  %40 = inttoptr i32 %39 to i32*, !insn.addr !9867
  store i32 1, i32* %40, align 4, !insn.addr !9867
  %41 = call i32 @__right_rotate(i32 %arg1, i32 %stack_var_-12.0.reload), !insn.addr !9868
  %42 = load i32, i32* %2, align 4, !insn.addr !9869
  %43 = add i32 %42, 4, !insn.addr !9870
  %44 = inttoptr i32 %43 to i32*, !insn.addr !9870
  %45 = load i32, i32* %44, align 4, !insn.addr !9870
  %.pre = add i32 %45, 4, !insn.addr !9871
  %.pre8 = inttoptr i32 %.pre to i32*, !insn.addr !9871
  store i32* %.pre8, i32** %.pre-phi9.reg2mem, !insn.addr !9872
  store i32 %42, i32* %.reg2mem43, !insn.addr !9872
  store i32 %45, i32* %stack_var_-12.1.reg2mem, !insn.addr !9872
  br label %dec_label_pc_226ec, !insn.addr !9872

dec_label_pc_226ec:                               ; preds = %dec_label_pc_226ac, %dec_label_pc_226c4, %dec_label_pc_226ce
  %stack_var_-12.1.reload = load i32, i32* %stack_var_-12.1.reg2mem
  %.reload44 = load i32, i32* %.reg2mem43, !insn.addr !9873
  %.pre-phi9.reload = load i32*, i32** %.pre-phi9.reg2mem
  %46 = add i32 %.reload44, 12, !insn.addr !9874
  %47 = inttoptr i32 %46 to i32*, !insn.addr !9874
  %48 = load i32, i32* %47, align 4, !insn.addr !9874
  %49 = add i32 %stack_var_-12.1.reload, 12, !insn.addr !9875
  %50 = inttoptr i32 %49 to i32*, !insn.addr !9875
  store i32 %48, i32* %50, align 4, !insn.addr !9875
  %51 = load i32, i32* %2, align 4, !insn.addr !9876
  %52 = add i32 %51, 12, !insn.addr !9877
  %53 = inttoptr i32 %52 to i32*, !insn.addr !9877
  store i32 0, i32* %53, align 4, !insn.addr !9877
  %54 = load i32, i32* %.pre-phi9.reload, align 4, !insn.addr !9871
  %55 = add i32 %54, 12, !insn.addr !9878
  %56 = inttoptr i32 %55 to i32*, !insn.addr !9878
  store i32 0, i32* %56, align 4, !insn.addr !9878
  %57 = load i32, i32* %2, align 4, !insn.addr !9879
  %58 = call i32 @__left_rotate(i32 %arg1, i32 %57), !insn.addr !9880
  store i32 %58, i32* %stack_var_-24.0.lcssa.reg2mem, !insn.addr !9881
  store i32 %58, i32* %r0.2.lcssa.reg2mem, !insn.addr !9881
  br label %dec_label_pc_227d6, !insn.addr !9881

dec_label_pc_2271a:                               ; preds = %dec_label_pc_22664
  %59 = add i32 %5, 12, !insn.addr !9882
  %60 = inttoptr i32 %59 to i32*, !insn.addr !9882
  %61 = load i32, i32* %60, align 4, !insn.addr !9882
  %62 = icmp eq i32 %61, 1, !insn.addr !9883
  store i32 %3, i32* %.reg2mem45, !insn.addr !9884
  store i32 %5, i32* %stack_var_-16.0.reg2mem, !insn.addr !9884
  store i32 %r0.22.reload, i32* %r0.1.reg2mem, !insn.addr !9884
  br i1 %62, label %dec_label_pc_2272a, label %dec_label_pc_2274c, !insn.addr !9884

dec_label_pc_2272a:                               ; preds = %dec_label_pc_2271a
  store i32 0, i32* %60, align 4, !insn.addr !9885
  %63 = load i32, i32* %2, align 4, !insn.addr !9886
  %64 = add i32 %63, 12, !insn.addr !9887
  %65 = inttoptr i32 %64 to i32*, !insn.addr !9887
  store i32 1, i32* %65, align 4, !insn.addr !9887
  %66 = load i32, i32* %2, align 4, !insn.addr !9888
  %67 = call i32 @__right_rotate(i32 %arg1, i32 %66), !insn.addr !9889
  %68 = load i32, i32* %2, align 4, !insn.addr !9890
  %69 = inttoptr i32 %68 to i32*, !insn.addr !9891
  %70 = load i32, i32* %69, align 4, !insn.addr !9891
  store i32 %68, i32* %.reg2mem45, !insn.addr !9892
  store i32 %70, i32* %stack_var_-16.0.reg2mem, !insn.addr !9892
  store i32 %67, i32* %r0.1.reg2mem, !insn.addr !9892
  br label %dec_label_pc_2274c, !insn.addr !9892

dec_label_pc_2274c:                               ; preds = %dec_label_pc_2271a, %dec_label_pc_2272a
  %stack_var_-16.0.reload = load i32, i32* %stack_var_-16.0.reg2mem
  %.reload46 = load i32, i32* %.reg2mem45
  %71 = add i32 %stack_var_-16.0.reload, 4, !insn.addr !9893
  %72 = inttoptr i32 %71 to i32*, !insn.addr !9893
  %73 = load i32, i32* %72, align 4, !insn.addr !9893
  %74 = add i32 %73, 12
  %75 = inttoptr i32 %74 to i32*
  %76 = load i32, i32* %75, align 4, !insn.addr !9894
  %77 = icmp eq i32 %76, 0, !insn.addr !9895
  %78 = inttoptr i32 %stack_var_-16.0.reload to i32*
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 12
  %81 = inttoptr i32 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %77, label %dec_label_pc_22756, label %dec_label_pc_2276e, !insn.addr !9896

dec_label_pc_22756:                               ; preds = %dec_label_pc_2274c
  store i32* %78, i32** %.pre-phi11.reg2mem, !insn.addr !9897
  store i32 %.reload46, i32* %.reg2mem47, !insn.addr !9897
  store i32 %stack_var_-16.0.reload, i32* %stack_var_-16.1.reg2mem, !insn.addr !9897
  br i1 %83, label %dec_label_pc_22760, label %dec_label_pc_22796, !insn.addr !9897

dec_label_pc_22760:                               ; preds = %dec_label_pc_22756
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %84 = add i32 %stack_var_-16.0.reload, 12, !insn.addr !9898
  %85 = inttoptr i32 %84 to i32*, !insn.addr !9898
  store i32 1, i32* %85, align 4, !insn.addr !9898
  store i32 %r0.1.reload, i32* %r0.2.be.reg2mem, !insn.addr !9899
  br label %dec_label_pc_227c2.backedge, !insn.addr !9899

dec_label_pc_2276e:                               ; preds = %dec_label_pc_2274c
  store i32* %78, i32** %.pre-phi11.reg2mem, !insn.addr !9900
  store i32 %.reload46, i32* %.reg2mem47, !insn.addr !9900
  store i32 %stack_var_-16.0.reload, i32* %stack_var_-16.1.reg2mem, !insn.addr !9900
  br i1 %83, label %dec_label_pc_22778, label %dec_label_pc_22796, !insn.addr !9900

dec_label_pc_22778:                               ; preds = %dec_label_pc_2276e
  store i32 0, i32* %75, align 4, !insn.addr !9901
  %86 = add i32 %stack_var_-16.0.reload, 12, !insn.addr !9902
  %87 = inttoptr i32 %86 to i32*, !insn.addr !9902
  store i32 1, i32* %87, align 4, !insn.addr !9902
  %88 = call i32 @__left_rotate(i32 %arg1, i32 %stack_var_-16.0.reload), !insn.addr !9903
  %89 = load i32, i32* %2, align 4, !insn.addr !9904
  %90 = inttoptr i32 %89 to i32*, !insn.addr !9905
  %91 = load i32, i32* %90, align 4, !insn.addr !9905
  %.pre10 = inttoptr i32 %91 to i32*, !insn.addr !9906
  store i32* %.pre10, i32** %.pre-phi11.reg2mem, !insn.addr !9907
  store i32 %89, i32* %.reg2mem47, !insn.addr !9907
  store i32 %91, i32* %stack_var_-16.1.reg2mem, !insn.addr !9907
  br label %dec_label_pc_22796, !insn.addr !9907

dec_label_pc_22796:                               ; preds = %dec_label_pc_22756, %dec_label_pc_2276e, %dec_label_pc_22778
  %stack_var_-16.1.reload = load i32, i32* %stack_var_-16.1.reg2mem
  %.reload48 = load i32, i32* %.reg2mem47, !insn.addr !9908
  %.pre-phi11.reload = load i32*, i32** %.pre-phi11.reg2mem
  %92 = add i32 %.reload48, 12, !insn.addr !9909
  %93 = inttoptr i32 %92 to i32*, !insn.addr !9909
  %94 = load i32, i32* %93, align 4, !insn.addr !9909
  %95 = add i32 %stack_var_-16.1.reload, 12, !insn.addr !9910
  %96 = inttoptr i32 %95 to i32*, !insn.addr !9910
  store i32 %94, i32* %96, align 4, !insn.addr !9910
  %97 = load i32, i32* %2, align 4, !insn.addr !9911
  %98 = add i32 %97, 12, !insn.addr !9912
  %99 = inttoptr i32 %98 to i32*, !insn.addr !9912
  store i32 0, i32* %99, align 4, !insn.addr !9912
  %100 = load i32, i32* %.pre-phi11.reload, align 4, !insn.addr !9906
  %101 = add i32 %100, 12, !insn.addr !9913
  %102 = inttoptr i32 %101 to i32*, !insn.addr !9913
  store i32 0, i32* %102, align 4, !insn.addr !9913
  %103 = load i32, i32* %2, align 4, !insn.addr !9914
  %104 = call i32 @__right_rotate(i32 %arg1, i32 %103), !insn.addr !9915
  store i32 %104, i32* %stack_var_-24.0.lcssa.reg2mem, !insn.addr !9916
  store i32 %104, i32* %r0.2.lcssa.reg2mem, !insn.addr !9916
  br label %dec_label_pc_227d6, !insn.addr !9916

dec_label_pc_227cc:                               ; preds = %dec_label_pc_22658, %dec_label_pc_227c2.backedge
  %stack_var_-24.01.reload = load i32, i32* %stack_var_-24.01.reg2mem
  %r0.22.reload = load i32, i32* %r0.22.reg2mem
  %105 = add i32 %stack_var_-24.01.reload, 12, !insn.addr !9917
  %106 = inttoptr i32 %105 to i32*, !insn.addr !9917
  %107 = load i32, i32* %106, align 4, !insn.addr !9917
  %108 = icmp eq i32 %107, 0, !insn.addr !9918
  store i32 %stack_var_-24.01.reload, i32* %stack_var_-24.0.lcssa.reg2mem, !insn.addr !9919
  store i32 %r0.22.reload, i32* %r0.2.lcssa.reg2mem, !insn.addr !9919
  br i1 %108, label %dec_label_pc_22664, label %dec_label_pc_227d6, !insn.addr !9919

dec_label_pc_227d6:                               ; preds = %dec_label_pc_227c2.backedge, %dec_label_pc_227cc, %dec_label_pc_22796, %dec_label_pc_226ec, %dec_label_pc_22658
  %r0.2.lcssa.reload = load i32, i32* %r0.2.lcssa.reg2mem
  %stack_var_-24.0.lcssa.reload = load i32, i32* %stack_var_-24.0.lcssa.reg2mem
  %109 = add i32 %stack_var_-24.0.lcssa.reload, 12, !insn.addr !9920
  %110 = inttoptr i32 %109 to i32*, !insn.addr !9920
  store i32 0, i32* %110, align 4, !insn.addr !9920
  ret i32 %r0.2.lcssa.reload, !insn.addr !9921

; uselistorder directives
  uselistorder i32 %stack_var_-24.01.reload, { 0, 1, 3, 2 }
  uselistorder i32* %78, { 1, 0, 2 }
  uselistorder i32 %.reload46, { 1, 0 }
  uselistorder i32 %stack_var_-16.0.reload, { 6, 5, 1, 2, 0, 3, 4 }
  uselistorder i32* %30, { 1, 0, 2 }
  uselistorder i32 %.reload, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.reload, { 6, 5, 1, 2, 0, 3, 4 }
  uselistorder i32* %2, { 3, 4, 5, 7, 8, 9, 0, 1, 2, 6, 10, 11, 12, 13 }
  uselistorder i32* %.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-12.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.2.be.reg2mem, { 1, 0, 2 }
  uselistorder i32** %.pre-phi9.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %.reg2mem43, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-12.1.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %.reg2mem45, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 1 }
  uselistorder i32** %.pre-phi11.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %.reg2mem47, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-16.1.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %r0.22.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.01.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-24.0.lcssa.reg2mem, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r0.2.lcssa.reg2mem, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 (i32, i32)* @__right_rotate, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__left_rotate, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 7, 8, 9, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_227d6, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_227cc, { 1, 0 }
  uselistorder label %dec_label_pc_22796, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2274c, { 1, 0 }
  uselistorder label %dec_label_pc_226ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_227c2.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_226a2, { 1, 0 }
}

define i32 @__remove_c_rb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_227e4:
  %stack_var_-16.0.reg2mem = alloca i32, !insn.addr !9922
  %storemerge1.reg2mem = alloca i32, !insn.addr !9922
  %0 = add i32 %arg1, 4, !insn.addr !9923
  %1 = icmp eq i32 %0, %arg2, !insn.addr !9924
  store i32 %arg2, i32* %stack_var_-16.0.reg2mem, !insn.addr !9925
  br i1 %1, label %dec_label_pc_2282e, label %dec_label_pc_22802, !insn.addr !9925

dec_label_pc_22802:                               ; preds = %dec_label_pc_227e4
  %2 = add i32 %arg2, 4, !insn.addr !9926
  %3 = inttoptr i32 %2 to i32*, !insn.addr !9926
  %4 = load i32, i32* %3, align 4, !insn.addr !9926
  %5 = icmp eq i32 %4, %0, !insn.addr !9927
  store i32 %4, i32* %storemerge1.reg2mem, !insn.addr !9928
  store i32 %arg2, i32* %stack_var_-16.0.reg2mem, !insn.addr !9928
  br i1 %5, label %dec_label_pc_2282e, label %dec_label_pc_22822, !insn.addr !9928

dec_label_pc_22822:                               ; preds = %dec_label_pc_22802, %dec_label_pc_22822
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %6 = inttoptr i32 %storemerge1.reload to i32*, !insn.addr !9929
  %7 = load i32, i32* %6, align 4, !insn.addr !9929
  %8 = icmp eq i32 %7, %0, !insn.addr !9930
  store i32 %7, i32* %storemerge1.reg2mem, !insn.addr !9931
  store i32 %storemerge1.reload, i32* %stack_var_-16.0.reg2mem, !insn.addr !9931
  br i1 %8, label %dec_label_pc_2282e, label %dec_label_pc_22822, !insn.addr !9931

dec_label_pc_2282e:                               ; preds = %dec_label_pc_22822, %dec_label_pc_227e4, %dec_label_pc_22802
  %stack_var_-16.0.reload = load i32, i32* %stack_var_-16.0.reg2mem
  %9 = inttoptr i32 %stack_var_-16.0.reload to i32*, !insn.addr !9932
  %10 = load i32, i32* %9, align 4, !insn.addr !9932
  %11 = icmp eq i32 %10, %0, !insn.addr !9933
  %12 = add i32 %stack_var_-16.0.reload, 4
  %storemerge.in.in = select i1 %11, i32 %12, i32 %stack_var_-16.0.reload
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %13 = add i32 %stack_var_-16.0.reload, 8, !insn.addr !9934
  %14 = inttoptr i32 %13 to i32*, !insn.addr !9934
  %15 = load i32, i32* %14, align 4, !insn.addr !9934
  %16 = add i32 %storemerge, 8, !insn.addr !9935
  %17 = inttoptr i32 %16 to i32*, !insn.addr !9935
  store i32 %15, i32* %17, align 4, !insn.addr !9935
  %18 = load i32, i32* %14, align 4, !insn.addr !9936
  %19 = icmp eq i32 %18, 0, !insn.addr !9937
  br i1 %19, label %dec_label_pc_22878, label %dec_label_pc_22858, !insn.addr !9938

dec_label_pc_22858:                               ; preds = %dec_label_pc_2282e
  %20 = inttoptr i32 %18 to i32*, !insn.addr !9939
  %21 = load i32, i32* %20, align 4, !insn.addr !9939
  %22 = icmp eq i32 %21, %stack_var_-16.0.reload, !insn.addr !9940
  br i1 %22, label %dec_label_pc_22864, label %dec_label_pc_2286e, !insn.addr !9941

dec_label_pc_22864:                               ; preds = %dec_label_pc_22858
  store i32 %storemerge, i32* %20, align 4, !insn.addr !9942
  br label %dec_label_pc_2287e, !insn.addr !9943

dec_label_pc_2286e:                               ; preds = %dec_label_pc_22858
  %23 = add i32 %18, 4, !insn.addr !9944
  %24 = inttoptr i32 %23 to i32*, !insn.addr !9944
  store i32 %storemerge, i32* %24, align 4, !insn.addr !9944
  br label %dec_label_pc_2287e, !insn.addr !9945

dec_label_pc_22878:                               ; preds = %dec_label_pc_2282e
  %25 = inttoptr i32 %arg1 to i32*, !insn.addr !9946
  store i32 %storemerge, i32* %25, align 4, !insn.addr !9946
  br label %dec_label_pc_2287e, !insn.addr !9946

dec_label_pc_2287e:                               ; preds = %dec_label_pc_22878, %dec_label_pc_2286e, %dec_label_pc_22864
  %26 = icmp eq i32 %stack_var_-16.0.reload, %arg2, !insn.addr !9947
  br i1 %26, label %dec_label_pc_228ae, label %dec_label_pc_22886, !insn.addr !9948

dec_label_pc_22886:                               ; preds = %dec_label_pc_2287e
  %27 = add i32 %arg2, 16, !insn.addr !9949
  %28 = inttoptr i32 %27 to i32*, !insn.addr !9949
  %29 = load i32, i32* %28, align 4, !insn.addr !9949
  %30 = add i32 %stack_var_-16.0.reload, 16, !insn.addr !9950
  %31 = inttoptr i32 %30 to i32*, !insn.addr !9950
  %32 = load i32, i32* %31, align 4, !insn.addr !9950
  store i32 %32, i32* %28, align 4, !insn.addr !9951
  store i32 %29, i32* %31, align 4, !insn.addr !9952
  %33 = add i32 %arg2, 20, !insn.addr !9953
  %34 = inttoptr i32 %33 to i32*, !insn.addr !9953
  %35 = load i32, i32* %34, align 4, !insn.addr !9953
  %36 = add i32 %stack_var_-16.0.reload, 20, !insn.addr !9954
  %37 = inttoptr i32 %36 to i32*, !insn.addr !9954
  %38 = load i32, i32* %37, align 4, !insn.addr !9954
  store i32 %38, i32* %34, align 4, !insn.addr !9955
  store i32 %35, i32* %37, align 4, !insn.addr !9956
  br label %dec_label_pc_228ae, !insn.addr !9956

dec_label_pc_228ae:                               ; preds = %dec_label_pc_22886, %dec_label_pc_2287e
  %39 = add i32 %stack_var_-16.0.reload, 12, !insn.addr !9957
  %40 = inttoptr i32 %39 to i32*, !insn.addr !9957
  %41 = load i32, i32* %40, align 4, !insn.addr !9957
  %42 = icmp eq i32 %41, 0, !insn.addr !9958
  br i1 %42, label %dec_label_pc_228b6, label %dec_label_pc_228be, !insn.addr !9959

dec_label_pc_228b6:                               ; preds = %dec_label_pc_228ae
  %43 = call i32 @__rb_remove_fixup(i32 %arg1, i32 %storemerge), !insn.addr !9960
  br label %dec_label_pc_228be, !insn.addr !9960

dec_label_pc_228be:                               ; preds = %dec_label_pc_228ae, %dec_label_pc_228b6
  %44 = call i32 @debug_verify_properties(i32 %arg1), !insn.addr !9961
  ret i32 %stack_var_-16.0.reload, !insn.addr !9962

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 1, 0, 4 }
  uselistorder i32 %stack_var_-16.0.reload, { 8, 7, 9, 5, 6, 4, 3, 1, 0, 2 }
  uselistorder i32 %0, { 2, 0, 1, 3 }
  uselistorder i32* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-16.0.reg2mem, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @debug_verify_properties, { 1, 0 }
  uselistorder i32 %arg2, { 2, 4, 3, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_228be, { 1, 0 }
  uselistorder label %dec_label_pc_2282e, { 0, 2, 1 }
  uselistorder label %dec_label_pc_22822, { 1, 0 }
}

define i32 @remove_c_rb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_228d0:
  %storemerge.reg2mem = alloca i32, !insn.addr !9963
  %storemerge14.reg2mem = alloca i32, !insn.addr !9963
  %stack_var_-20 = alloca i32, align 4
  %0 = add i32 %arg1, 4, !insn.addr !9964
  %1 = icmp eq i32 %arg2, 0
  %2 = icmp slt i32 %arg2, 0
  store i32 %arg1, i32* %storemerge14.reg2mem
  br label %dec_label_pc_228e6

dec_label_pc_228e6:                               ; preds = %dec_label_pc_228d0, %dec_label_pc_22916
  %storemerge14.reload = load i32, i32* %storemerge14.reg2mem
  %3 = add i32 %storemerge14.reload, 16, !insn.addr !9965
  %4 = inttoptr i32 %3 to i32*, !insn.addr !9965
  %5 = load i32, i32* %4, align 4, !insn.addr !9965
  %6 = call i32 @get_raw_clib_object(i32 %5, i32* nonnull %stack_var_-20), !insn.addr !9966
  %7 = load i32, i32* %stack_var_-20, align 4, !insn.addr !9967
  %8 = inttoptr i32 %7 to i32*, !insn.addr !9968
  call void @free(i32* %8), !insn.addr !9968
  br i1 %1, label %dec_label_pc_22940, label %dec_label_pc_22916, !insn.addr !9969

dec_label_pc_22916:                               ; preds = %dec_label_pc_228e6
  %9 = add i32 %storemerge14.reload, 4
  %storemerge2.in.in = select i1 %2, i32 %storemerge14.reload, i32 %9
  %storemerge2.in = inttoptr i32 %storemerge2.in.in to i32*
  %storemerge2 = load i32, i32* %storemerge2.in, align 4
  %10 = icmp eq i32 %0, %storemerge2, !insn.addr !9970
  store i32 %storemerge2, i32* %storemerge14.reg2mem, !insn.addr !9971
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !9971
  br i1 %10, label %dec_label_pc_2294a, label %dec_label_pc_228e6, !insn.addr !9971

dec_label_pc_22940:                               ; preds = %dec_label_pc_228e6
  %11 = call i32 @__remove_c_rb(i32 %arg1, i32 %arg1), !insn.addr !9972
  store i32 %11, i32* %storemerge.reg2mem, !insn.addr !9973
  br label %dec_label_pc_2294a, !insn.addr !9973

dec_label_pc_2294a:                               ; preds = %dec_label_pc_22916, %dec_label_pc_22940
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !9974

; uselistorder directives
  uselistorder i32 %storemerge14.reload, { 1, 0, 2 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %storemerge14.reg2mem, { 1, 0, 2 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_2294a, { 1, 0 }
  uselistorder label %dec_label_pc_228e6, { 1, 0 }
}

define i32 @__delete_c_rb_node(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22954:
  %r0.0.reg2mem = alloca i32, !insn.addr !9975
  %.reg2mem = alloca i32, !insn.addr !9975
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %0 = add i32 %arg1, 28, !insn.addr !9976
  %1 = inttoptr i32 %0 to i32*, !insn.addr !9976
  %2 = load i32, i32* %1, align 4, !insn.addr !9976
  %3 = icmp eq i32 %2, 0, !insn.addr !9977
  %.pre1 = add i32 %arg2, 16
  %.pre2 = inttoptr i32 %.pre1 to i32*
  br i1 %3, label %dec_label_pc_22980, label %dec_label_pc_22966, !insn.addr !9978

dec_label_pc_22966:                               ; preds = %dec_label_pc_22954
  %4 = load i32, i32* %.pre2, align 4, !insn.addr !9979
  %5 = call i32 @get_raw_clib_object(i32 %4, i32* nonnull %stack_var_-12), !insn.addr !9980
  br label %dec_label_pc_22980, !insn.addr !9981

dec_label_pc_22980:                               ; preds = %dec_label_pc_22954, %dec_label_pc_22966
  %6 = load i32, i32* %.pre2, align 4, !insn.addr !9982
  %7 = call i32 @delete_clib_object(i32 %6), !insn.addr !9983
  %8 = add i32 %arg2, 20, !insn.addr !9984
  %9 = inttoptr i32 %8 to i32*, !insn.addr !9984
  %10 = load i32, i32* %9, align 4, !insn.addr !9984
  %11 = icmp eq i32 %10, 0, !insn.addr !9985
  store i32 %7, i32* %r0.0.reg2mem, !insn.addr !9986
  br i1 %11, label %dec_label_pc_229be, label %dec_label_pc_22992, !insn.addr !9986

dec_label_pc_22992:                               ; preds = %dec_label_pc_22980
  %12 = add i32 %arg1, 32, !insn.addr !9987
  %13 = inttoptr i32 %12 to i32*, !insn.addr !9987
  %14 = load i32, i32* %13, align 4, !insn.addr !9987
  %15 = icmp eq i32 %14, 0, !insn.addr !9988
  store i32 %10, i32* %.reg2mem, !insn.addr !9989
  br i1 %15, label %dec_label_pc_229b4, label %dec_label_pc_2299a, !insn.addr !9989

dec_label_pc_2299a:                               ; preds = %dec_label_pc_22992
  %16 = call i32 @get_raw_clib_object(i32 %10, i32* nonnull %stack_var_-16), !insn.addr !9990
  %.pre = load i32, i32* %9, align 4
  store i32 %.pre, i32* %.reg2mem, !insn.addr !9991
  br label %dec_label_pc_229b4, !insn.addr !9991

dec_label_pc_229b4:                               ; preds = %dec_label_pc_2299a, %dec_label_pc_22992
  %.reload = load i32, i32* %.reg2mem, !insn.addr !9992
  %17 = call i32 @delete_clib_object(i32 %.reload), !insn.addr !9993
  store i32 %17, i32* %r0.0.reg2mem, !insn.addr !9993
  br label %dec_label_pc_229be, !insn.addr !9993

dec_label_pc_229be:                               ; preds = %dec_label_pc_229b4, %dec_label_pc_22980
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !9994

; uselistorder directives
  uselistorder i32 %10, { 1, 0, 2 }
  uselistorder i32* %.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32)* @delete_clib_object, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @get_raw_clib_object, { 10, 9, 8, 5, 4, 7, 6, 3, 12, 11, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_22980, { 1, 0 }
}

define i32 @delete_c_rb(i32 %arg1) local_unnamed_addr {
dec_label_pc_229c8:
  %stack_var_-12.0.be.reg2mem = alloca i32, !insn.addr !9995
  %stack_var_-12.01.reg2mem = alloca i32, !insn.addr !9995
  %0 = add i32 %arg1, 4, !insn.addr !9996
  store i32 %arg1, i32* %stack_var_-12.01.reg2mem
  br label %dec_label_pc_229dc

dec_label_pc_229dc:                               ; preds = %dec_label_pc_229c8, %dec_label_pc_22a66.backedge
  %stack_var_-12.01.reload = load i32, i32* %stack_var_-12.01.reg2mem
  %1 = inttoptr i32 %stack_var_-12.01.reload to i32*, !insn.addr !9997
  %2 = load i32, i32* %1, align 4, !insn.addr !9997
  %3 = icmp eq i32 %2, %0, !insn.addr !9998
  store i32 %2, i32* %stack_var_-12.0.be.reg2mem, !insn.addr !9999
  br i1 %3, label %dec_label_pc_229f0, label %dec_label_pc_22a66.backedge, !insn.addr !9999

dec_label_pc_229f0:                               ; preds = %dec_label_pc_229dc
  %4 = add i32 %stack_var_-12.01.reload, 4, !insn.addr !10000
  %5 = inttoptr i32 %4 to i32*, !insn.addr !10000
  %6 = load i32, i32* %5, align 4, !insn.addr !10000
  %7 = icmp eq i32 %6, %0, !insn.addr !10001
  store i32 %6, i32* %stack_var_-12.0.be.reg2mem, !insn.addr !10002
  br i1 %7, label %dec_label_pc_22a04, label %dec_label_pc_22a66.backedge, !insn.addr !10002

dec_label_pc_22a04:                               ; preds = %dec_label_pc_229f0
  %8 = call i32 @__delete_c_rb_node(i32 %arg1, i32 %stack_var_-12.01.reload), !insn.addr !10003
  %9 = add i32 %stack_var_-12.01.reload, 8, !insn.addr !10004
  %10 = inttoptr i32 %9 to i32*, !insn.addr !10004
  %11 = load i32, i32* %10, align 4, !insn.addr !10004
  %12 = icmp eq i32 %11, 0, !insn.addr !10005
  br i1 %12, label %dec_label_pc_22a66.backedge.thread, label %dec_label_pc_22a14, !insn.addr !10006

dec_label_pc_22a14:                               ; preds = %dec_label_pc_22a04
  %13 = inttoptr i32 %11 to i32*, !insn.addr !10007
  %14 = load i32, i32* %13, align 4, !insn.addr !10007
  %15 = icmp eq i32 %14, %0, !insn.addr !10008
  br i1 %15, label %dec_label_pc_22a3a, label %dec_label_pc_22a26, !insn.addr !10009

dec_label_pc_22a26:                               ; preds = %dec_label_pc_22a14
  %16 = inttoptr i32 %14 to i32*, !insn.addr !10010
  call void @free(i32* %16), !insn.addr !10010
  store i32 %0, i32* %13, align 4, !insn.addr !10011
  store i32 %11, i32* %stack_var_-12.0.be.reg2mem, !insn.addr !10012
  br label %dec_label_pc_22a66.backedge, !insn.addr !10012

dec_label_pc_22a66.backedge:                      ; preds = %dec_label_pc_22a26, %dec_label_pc_22a3a, %dec_label_pc_22a46, %dec_label_pc_229dc, %dec_label_pc_229f0
  %stack_var_-12.0.be.reload = load i32, i32* %stack_var_-12.0.be.reg2mem
  %17 = icmp eq i32 %0, %stack_var_-12.0.be.reload, !insn.addr !10013
  store i32 %stack_var_-12.0.be.reload, i32* %stack_var_-12.01.reg2mem, !insn.addr !10014
  br i1 %17, label %dec_label_pc_22a70, label %dec_label_pc_229dc, !insn.addr !10014

dec_label_pc_22a3a:                               ; preds = %dec_label_pc_22a14
  %18 = add i32 %11, 4, !insn.addr !10015
  %19 = inttoptr i32 %18 to i32*, !insn.addr !10015
  %20 = load i32, i32* %19, align 4, !insn.addr !10015
  %21 = icmp eq i32 %20, %0, !insn.addr !10016
  store i32 %11, i32* %stack_var_-12.0.be.reg2mem, !insn.addr !10017
  br i1 %21, label %dec_label_pc_22a66.backedge, label %dec_label_pc_22a46, !insn.addr !10017

dec_label_pc_22a46:                               ; preds = %dec_label_pc_22a3a
  %22 = inttoptr i32 %20 to i32*, !insn.addr !10018
  call void @free(i32* %22), !insn.addr !10018
  store i32 %0, i32* %19, align 4, !insn.addr !10019
  store i32 %11, i32* %stack_var_-12.0.be.reg2mem, !insn.addr !10020
  br label %dec_label_pc_22a66.backedge, !insn.addr !10020

dec_label_pc_22a66.backedge.thread:               ; preds = %dec_label_pc_22a04
  call void @free(i32* %1), !insn.addr !10021
  br label %dec_label_pc_22a70

dec_label_pc_22a70:                               ; preds = %dec_label_pc_22a66.backedge, %dec_label_pc_22a66.backedge.thread
  %23 = inttoptr i32 %arg1 to i32*, !insn.addr !10022
  call void @free(i32* %23), !insn.addr !10022
  ret i32 0, !insn.addr !10023

; uselistorder directives
  uselistorder i32 %stack_var_-12.0.be.reload, { 1, 0 }
  uselistorder i32 %11, { 1, 2, 4, 0, 3, 5 }
  uselistorder i32 %stack_var_-12.01.reload, { 2, 3, 1, 0 }
  uselistorder i32 %0, { 1, 3, 6, 0, 2, 4, 5 }
  uselistorder i32* %stack_var_-12.01.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12.0.be.reg2mem, { 4, 5, 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_22a70, { 1, 0 }
  uselistorder label %dec_label_pc_22a66.backedge, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_229dc, { 1, 0 }
}

define i32 @minimum_c_rb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22a84:
  %storemerge.reg2mem = alloca i32, !insn.addr !10024
  %0 = add i32 %arg1, 4, !insn.addr !10025
  store i32 %arg2, i32* %storemerge.reg2mem, !insn.addr !10026
  br label %dec_label_pc_22a96, !insn.addr !10026

dec_label_pc_22a96:                               ; preds = %dec_label_pc_22a96, %dec_label_pc_22a84
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %1 = inttoptr i32 %storemerge.reload to i32*, !insn.addr !10027
  %2 = load i32, i32* %1, align 4, !insn.addr !10027
  %3 = icmp eq i32 %2, %0, !insn.addr !10028
  store i32 %2, i32* %storemerge.reg2mem, !insn.addr !10029
  br i1 %3, label %dec_label_pc_22aa2, label %dec_label_pc_22a96, !insn.addr !10029

dec_label_pc_22aa2:                               ; preds = %dec_label_pc_22a96
  ret i32 %storemerge.reload, !insn.addr !10030

; uselistorder directives
  uselistorder i32 %storemerge.reload, { 1, 0 }
  uselistorder i32* %storemerge.reg2mem, { 1, 0, 2 }
}

define i32 @maximum_c_rb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22ab0:
  %storemerge.reg2mem = alloca i32, !insn.addr !10031
  %0 = add i32 %arg1, 4, !insn.addr !10032
  store i32 %arg2, i32* %storemerge.reg2mem, !insn.addr !10033
  br label %dec_label_pc_22ac2, !insn.addr !10033

dec_label_pc_22ac2:                               ; preds = %dec_label_pc_22ac2, %dec_label_pc_22ab0
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %1 = add i32 %storemerge.reload, 4, !insn.addr !10034
  %2 = inttoptr i32 %1 to i32*, !insn.addr !10034
  %3 = load i32, i32* %2, align 4, !insn.addr !10034
  %4 = icmp eq i32 %3, %0, !insn.addr !10035
  store i32 %3, i32* %storemerge.reg2mem, !insn.addr !10036
  br i1 %4, label %dec_label_pc_22ace, label %dec_label_pc_22ac2, !insn.addr !10036

dec_label_pc_22ace:                               ; preds = %dec_label_pc_22ac2
  ret i32 %storemerge.reload, !insn.addr !10037

; uselistorder directives
  uselistorder i32 %storemerge.reload, { 1, 0 }
  uselistorder i32* %storemerge.reg2mem, { 1, 0, 2 }
}

define i32 @empty_c_rb(i32 %arg1) local_unnamed_addr {
dec_label_pc_22adc:
  ret i32 1, !insn.addr !10038
}

define i32 @tree_successor(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22b04:
  %r3.0.reg2mem = alloca i32, !insn.addr !10039
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !10039
  %0 = add i32 %arg2, 4, !insn.addr !10040
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10040
  %2 = load i32, i32* %1, align 4, !insn.addr !10040
  %3 = add i32 %arg1, 4, !insn.addr !10041
  %4 = icmp eq i32 %2, %3, !insn.addr !10042
  br i1 %4, label %dec_label_pc_22b2e, label %dec_label_pc_22b1e, !insn.addr !10043

dec_label_pc_22b1e:                               ; preds = %dec_label_pc_22b04
  %5 = call i32 @minimum_c_rb(i32 %arg1, i32 %2), !insn.addr !10044
  store i32 %5, i32* %r3.0.reg2mem, !insn.addr !10045
  br label %dec_label_pc_22b6e, !insn.addr !10045

dec_label_pc_22b2e:                               ; preds = %dec_label_pc_22b04
  %6 = call i32 @maximum_c_rb(i32 %arg1, i32 %arg1), !insn.addr !10046
  %7 = icmp eq i32 %6, %arg2, !insn.addr !10047
  store i32 %arg2, i32* %stack_var_-24.0.reg2mem, !insn.addr !10048
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !10048
  br i1 %7, label %dec_label_pc_22b6e, label %dec_label_pc_22b58, !insn.addr !10048

dec_label_pc_22b58:                               ; preds = %dec_label_pc_22b2e, %dec_label_pc_22b62
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %storemerge.in.in = add i32 %stack_var_-24.0.reload, 8
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %8 = icmp eq i32 %2, %storemerge, !insn.addr !10049
  store i32 %2, i32* %r3.0.reg2mem, !insn.addr !10050
  br i1 %8, label %dec_label_pc_22b6e, label %dec_label_pc_22b62, !insn.addr !10050

dec_label_pc_22b62:                               ; preds = %dec_label_pc_22b58
  %9 = add i32 %storemerge, 4, !insn.addr !10051
  %10 = inttoptr i32 %9 to i32*, !insn.addr !10051
  %11 = load i32, i32* %10, align 4, !insn.addr !10051
  %12 = icmp eq i32 %11, %stack_var_-24.0.reload, !insn.addr !10052
  store i32 %storemerge, i32* %stack_var_-24.0.reg2mem, !insn.addr !10053
  store i32 %storemerge, i32* %r3.0.reg2mem, !insn.addr !10053
  br i1 %12, label %dec_label_pc_22b58, label %dec_label_pc_22b6e, !insn.addr !10053

dec_label_pc_22b6e:                               ; preds = %dec_label_pc_22b58, %dec_label_pc_22b62, %dec_label_pc_22b2e, %dec_label_pc_22b1e
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !10054

; uselistorder directives
  uselistorder i32* %stack_var_-24.0.reg2mem, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @minimum_c_rb, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_22b6e, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_22b58, { 1, 0 }
}

define i32 @debug_verify_properties(i32 %arg1) local_unnamed_addr {
dec_label_pc_22b78:
  %0 = call i32 @debug_verify_property_1(i32 %arg1, i32 %arg1), !insn.addr !10055
  %1 = call i32 @debug_verify_property_2(i32 %arg1, i32 %0), !insn.addr !10056
  %2 = call i32 @debug_verify_property_4(i32 %arg1, i32 %1), !insn.addr !10057
  %3 = call i32 @debug_verify_property_5(i32 %arg1, i32 %2), !insn.addr !10058
  ret i32 %3, !insn.addr !10059
}

define i32 @debug_verify_property_1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22bb8:
  %storemerge.reg2mem = alloca i32, !insn.addr !10060
  %r1.0.reg2mem = alloca i32, !insn.addr !10060
  %r0.0.reg2mem = alloca i32, !insn.addr !10060
  %0 = call i32 @debug_node_color(i32 %arg1, i32 %arg2), !insn.addr !10061
  %1 = icmp eq i32 %0, 1, !insn.addr !10062
  store i32 1, i32* %r0.0.reg2mem, !insn.addr !10063
  store i32 %arg2, i32* %r1.0.reg2mem, !insn.addr !10063
  br i1 %1, label %dec_label_pc_22bfe, label %dec_label_pc_22bd0, !insn.addr !10063

dec_label_pc_22bd0:                               ; preds = %dec_label_pc_22bb8
  %2 = call i32 @debug_node_color(i32 %arg1, i32 %arg2), !insn.addr !10064
  %3 = icmp eq i32 %2, 0, !insn.addr !10065
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !10066
  store i32 %arg2, i32* %r1.0.reg2mem, !insn.addr !10066
  br i1 %3, label %dec_label_pc_22bfe, label %dec_label_pc_22bde, !insn.addr !10066

dec_label_pc_22bde:                               ; preds = %dec_label_pc_22bd0
  call void @__assert_fail(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_2cc54, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2cc98, i32 0, i32 0), i32 479, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2cdc4, i32 0, i32 0)), !insn.addr !10067
  store i32 ptrtoint (i32* @1 to i32), i32* %r0.0.reg2mem, !insn.addr !10067
  store i32 ptrtoint ([25 x i8]* @global_var_2cc98 to i32), i32* %r1.0.reg2mem, !insn.addr !10067
  br label %dec_label_pc_22bfe, !insn.addr !10067

dec_label_pc_22bfe:                               ; preds = %dec_label_pc_22bde, %dec_label_pc_22bd0, %dec_label_pc_22bb8
  %r1.0.reload = load i32, i32* %r1.0.reg2mem
  %4 = add i32 %arg1, 4, !insn.addr !10068
  %5 = icmp eq i32 %4, %arg2, !insn.addr !10069
  br i1 %5, label %dec_label_pc_22c22, label %dec_label_pc_22c08, !insn.addr !10070

dec_label_pc_22c08:                               ; preds = %dec_label_pc_22bfe
  %6 = call i32 @debug_verify_property_1(i32 %arg1, i32 %r1.0.reload), !insn.addr !10071
  %7 = add i32 %arg2, 4, !insn.addr !10072
  %8 = inttoptr i32 %7 to i32*, !insn.addr !10072
  %9 = load i32, i32* %8, align 4, !insn.addr !10072
  %10 = call i32 @debug_verify_property_1(i32 %arg1, i32 %9), !insn.addr !10073
  store i32 %10, i32* %storemerge.reg2mem, !insn.addr !10074
  br label %dec_label_pc_22c24, !insn.addr !10074

dec_label_pc_22c22:                               ; preds = %dec_label_pc_22bfe
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %11 = call i32 @__asm_nop(i32 %r0.0.reload, i32 %r1.0.reload, i32 %arg2, i32 %arg2), !insn.addr !10075
  store i32 %11, i32* %storemerge.reg2mem, !insn.addr !10075
  br label %dec_label_pc_22c24, !insn.addr !10075

dec_label_pc_22c24:                               ; preds = %dec_label_pc_22c22, %dec_label_pc_22c08
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10076

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @debug_verify_property_1, { 2, 1, 0 }
  uselistorder i32 %arg2, { 6, 2, 4, 5, 0, 3, 1, 7 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
}

define i32 @debug_verify_property_2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22c2c:
  %r0.0.reg2mem = alloca i32, !insn.addr !10077
  %0 = call i32 @debug_node_color(i32 %arg1, i32 %arg2), !insn.addr !10078
  %1 = icmp eq i32 %0, 0, !insn.addr !10079
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !10080
  br i1 %1, label %dec_label_pc_22c64, label %dec_label_pc_22c44, !insn.addr !10080

dec_label_pc_22c44:                               ; preds = %dec_label_pc_22c2c
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_2ccb4, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2cc98, i32 0, i32 0), i32 486, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2cdac, i32 0, i32 0)), !insn.addr !10081
  store i32 ptrtoint (i32* @1 to i32), i32* %r0.0.reg2mem, !insn.addr !10081
  br label %dec_label_pc_22c64, !insn.addr !10081

dec_label_pc_22c64:                               ; preds = %dec_label_pc_22c44, %dec_label_pc_22c2c
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !10082
}

define i32 @debug_node_color(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22c6c:
  %storemerge.reg2mem = alloca i32, !insn.addr !10083
  %0 = add i32 %arg1, 4, !insn.addr !10084
  %1 = icmp eq i32 %0, %arg2, !insn.addr !10085
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !10086
  br i1 %1, label %dec_label_pc_22c88, label %dec_label_pc_22c80, !insn.addr !10086

dec_label_pc_22c80:                               ; preds = %dec_label_pc_22c6c
  %2 = add i32 %arg2, 12, !insn.addr !10087
  %3 = inttoptr i32 %2 to i32*, !insn.addr !10087
  %4 = load i32, i32* %3, align 4, !insn.addr !10087
  store i32 %4, i32* %storemerge.reg2mem, !insn.addr !10088
  br label %dec_label_pc_22c88, !insn.addr !10088

dec_label_pc_22c88:                               ; preds = %dec_label_pc_22c6c, %dec_label_pc_22c80
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10089

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_22c88, { 1, 0 }
}

define i32 @debug_verify_property_4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22c94:
  %storemerge.reg2mem = alloca i32, !insn.addr !10090
  %r1.0.reg2mem = alloca i32, !insn.addr !10090
  %r0.0.reg2mem = alloca i32, !insn.addr !10090
  %0 = call i32 @debug_node_color(i32 %arg1, i32 %arg2), !insn.addr !10091
  %1 = icmp eq i32 %0, 1, !insn.addr !10092
  store i32 %0, i32* %r0.0.reg2mem, !insn.addr !10093
  store i32 %arg2, i32* %r1.0.reg2mem, !insn.addr !10093
  br i1 %1, label %dec_label_pc_22cac, label %dec_label_pc_22d42, !insn.addr !10093

dec_label_pc_22cac:                               ; preds = %dec_label_pc_22c94
  %2 = call i32 @debug_node_color(i32 %arg1, i32 %arg2), !insn.addr !10094
  %3 = icmp eq i32 %2, 0, !insn.addr !10095
  br i1 %3, label %dec_label_pc_22cde, label %dec_label_pc_22cbe, !insn.addr !10096

dec_label_pc_22cbe:                               ; preds = %dec_label_pc_22cac
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_2ccd8, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2cc98, i32 0, i32 0), i32 495, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2cd94, i32 0, i32 0)), !insn.addr !10097
  br label %dec_label_pc_22cde, !insn.addr !10097

dec_label_pc_22cde:                               ; preds = %dec_label_pc_22cbe, %dec_label_pc_22cac
  %4 = add i32 %arg2, 4, !insn.addr !10098
  %5 = inttoptr i32 %4 to i32*, !insn.addr !10098
  %6 = load i32, i32* %5, align 4, !insn.addr !10098
  %7 = call i32 @debug_node_color(i32 %arg1, i32 %6), !insn.addr !10099
  %8 = icmp eq i32 %7, 0, !insn.addr !10100
  br i1 %8, label %dec_label_pc_22d10, label %dec_label_pc_22cf0, !insn.addr !10101

dec_label_pc_22cf0:                               ; preds = %dec_label_pc_22cde
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_2cd00, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2cc98, i32 0, i32 0), i32 496, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2cd94, i32 0, i32 0)), !insn.addr !10102
  br label %dec_label_pc_22d10, !insn.addr !10102

dec_label_pc_22d10:                               ; preds = %dec_label_pc_22cf0, %dec_label_pc_22cde
  %9 = add i32 %arg2, 8, !insn.addr !10103
  %10 = inttoptr i32 %9 to i32*, !insn.addr !10103
  %11 = load i32, i32* %10, align 4, !insn.addr !10103
  %12 = call i32 @debug_node_color(i32 %arg1, i32 %11), !insn.addr !10104
  %13 = icmp eq i32 %12, 0, !insn.addr !10105
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !10106
  store i32 %11, i32* %r1.0.reg2mem, !insn.addr !10106
  br i1 %13, label %dec_label_pc_22d42, label %dec_label_pc_22d22, !insn.addr !10106

dec_label_pc_22d22:                               ; preds = %dec_label_pc_22d10
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_2cd28, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2cc98, i32 0, i32 0), i32 497, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2cd94, i32 0, i32 0)), !insn.addr !10107
  store i32 ptrtoint (i32* @1 to i32), i32* %r0.0.reg2mem, !insn.addr !10107
  store i32 ptrtoint ([25 x i8]* @global_var_2cc98 to i32), i32* %r1.0.reg2mem, !insn.addr !10107
  br label %dec_label_pc_22d42, !insn.addr !10107

dec_label_pc_22d42:                               ; preds = %dec_label_pc_22c94, %dec_label_pc_22d22, %dec_label_pc_22d10
  %r1.0.reload = load i32, i32* %r1.0.reg2mem
  %14 = add i32 %arg1, 4, !insn.addr !10108
  %15 = icmp eq i32 %14, %arg2, !insn.addr !10109
  br i1 %15, label %dec_label_pc_22d66, label %dec_label_pc_22d4c, !insn.addr !10110

dec_label_pc_22d4c:                               ; preds = %dec_label_pc_22d42
  %16 = call i32 @debug_verify_property_4(i32 %arg1, i32 %r1.0.reload), !insn.addr !10111
  %17 = add i32 %arg2, 4, !insn.addr !10112
  %18 = inttoptr i32 %17 to i32*, !insn.addr !10112
  %19 = load i32, i32* %18, align 4, !insn.addr !10112
  %20 = call i32 @debug_verify_property_4(i32 %arg1, i32 %19), !insn.addr !10113
  store i32 %20, i32* %storemerge.reg2mem, !insn.addr !10114
  br label %dec_label_pc_22d68, !insn.addr !10114

dec_label_pc_22d66:                               ; preds = %dec_label_pc_22d42
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %21 = call i32 @__asm_nop(i32 %r0.0.reload, i32 %r1.0.reload, i32 %arg2, i32 %arg2), !insn.addr !10115
  store i32 %21, i32* %storemerge.reg2mem, !insn.addr !10115
  br label %dec_label_pc_22d68, !insn.addr !10115

dec_label_pc_22d68:                               ; preds = %dec_label_pc_22d66, %dec_label_pc_22d4c
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10116

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %r1.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @debug_verify_property_4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 1, 2, 3, 5, 6, 7, 0, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_22d42, { 1, 2, 0 }
}

define i32 @debug_verify_property_5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22d70:
  %stack_var_-12 = alloca i32, align 4
  store i32 -1, i32* %stack_var_-12, align 4, !insn.addr !10117
  %0 = call i32 @debug_verify_property_5_helper(i32 %arg1, i32 %arg2, i32 0, i32* nonnull %stack_var_-12), !insn.addr !10118
  ret i32 %0, !insn.addr !10119
}

define i32 @debug_verify_property_5_helper(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_22d98:
  %storemerge.reg2mem = alloca i32, !insn.addr !10120
  %r2.0.reg2mem = alloca i32, !insn.addr !10120
  %r1.0.reg2mem = alloca i32, !insn.addr !10120
  %0 = call i32 @debug_node_color(i32 %arg1, i32 %arg2), !insn.addr !10121
  %1 = icmp eq i32 %0, 0, !insn.addr !10122
  %2 = zext i1 %1 to i32
  %spec.select = add i32 %2, %arg3
  %3 = add i32 %arg1, 4, !insn.addr !10123
  %4 = icmp eq i32 %3, %arg2, !insn.addr !10124
  store i32 %arg2, i32* %r1.0.reg2mem, !insn.addr !10125
  br i1 %4, label %dec_label_pc_22dc4, label %dec_label_pc_22e00, !insn.addr !10125

dec_label_pc_22dc4:                               ; preds = %dec_label_pc_22d98
  %5 = ptrtoint i32* %arg4 to i32
  %6 = icmp eq i32* %arg4, inttoptr (i32 -1 to i32*), !insn.addr !10126
  br i1 %6, label %dec_label_pc_22dce, label %dec_label_pc_22dd6, !insn.addr !10127

dec_label_pc_22dce:                               ; preds = %dec_label_pc_22dc4
  store i32 %spec.select, i32* inttoptr (i32 -1 to i32*), align 4, !insn.addr !10128
  store i32 %spec.select, i32* %r2.0.reg2mem, !insn.addr !10129
  br label %dec_label_pc_22e22, !insn.addr !10129

dec_label_pc_22dd6:                               ; preds = %dec_label_pc_22dc4
  %7 = icmp eq i32 %spec.select, %5, !insn.addr !10130
  store i32 %5, i32* %r2.0.reg2mem, !insn.addr !10131
  br i1 %7, label %dec_label_pc_22e22, label %dec_label_pc_22de0, !insn.addr !10131

dec_label_pc_22de0:                               ; preds = %dec_label_pc_22dd6
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_2cd50, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2cc98, i32 0, i32 0), i32 517, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2cd74, i32 0, i32 0)), !insn.addr !10132
  store i32 ptrtoint ([25 x i8]* @global_var_2cc98 to i32), i32* %r1.0.reg2mem, !insn.addr !10132
  br label %dec_label_pc_22e00, !insn.addr !10132

dec_label_pc_22e00:                               ; preds = %dec_label_pc_22d98, %dec_label_pc_22de0
  %r1.0.reload = load i32, i32* %r1.0.reg2mem
  %8 = call i32 @debug_verify_property_5_helper(i32 %arg1, i32 %r1.0.reload, i32 %spec.select, i32* %arg4), !insn.addr !10133
  %9 = add i32 %arg2, 4, !insn.addr !10134
  %10 = inttoptr i32 %9 to i32*, !insn.addr !10134
  %11 = load i32, i32* %10, align 4, !insn.addr !10134
  %12 = call i32 @debug_verify_property_5_helper(i32 %arg1, i32 %11, i32 %spec.select, i32* %arg4), !insn.addr !10135
  store i32 %12, i32* %storemerge.reg2mem, !insn.addr !10136
  br label %dec_label_pc_22e24, !insn.addr !10136

dec_label_pc_22e22:                               ; preds = %dec_label_pc_22dd6, %dec_label_pc_22dce
  %r2.0.reload = load i32, i32* %r2.0.reg2mem
  %13 = call i32 @__asm_nop(i32 %0, i32 %arg2, i32 %r2.0.reload, i32 %5), !insn.addr !10137
  store i32 %13, i32* %storemerge.reg2mem, !insn.addr !10137
  br label %dec_label_pc_22e24, !insn.addr !10137

dec_label_pc_22e24:                               ; preds = %dec_label_pc_22e22, %dec_label_pc_22e00
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10138

; uselistorder directives
  uselistorder i32 %5, { 1, 0, 2 }
  uselistorder i32 %spec.select, { 2, 3, 1, 0, 4 }
  uselistorder i32* %r1.0.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32*)* @debug_verify_property_5_helper, { 2, 1, 0 }
  uselistorder [25 x i8]* @global_var_2cc98, { 1, 0 }
  uselistorder i32 (i32, i32)* @debug_node_color, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %arg4, { 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_22e00, { 1, 0 }
}

define i32 @clib_copy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22e2c:
  %0 = inttoptr i32 %arg1 to i32*, !insn.addr !10139
  %1 = inttoptr i32 %arg2 to i32*, !insn.addr !10139
  %2 = call i32* @memcpy(i32* %0, i32* %1, i32 %arg3), !insn.addr !10139
  %3 = ptrtoint i32* %2 to i32, !insn.addr !10139
  ret i32 %3, !insn.addr !10140
}

define i32 @clib_get(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22e4c:
  %0 = inttoptr i32 %arg1 to i32*, !insn.addr !10141
  %1 = inttoptr i32 %arg2 to i32*, !insn.addr !10141
  %2 = call i32* @memcpy(i32* %0, i32* %1, i32 %arg3), !insn.addr !10141
  %3 = ptrtoint i32* %2 to i32, !insn.addr !10141
  ret i32 %3, !insn.addr !10142
}

define i32 @new_clib_object(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22e6c:
  %r3.0.reg2mem = alloca i32, !insn.addr !10143
  %0 = call i32* @malloc(i32 8), !insn.addr !10144
  %1 = icmp eq i32* %0, null, !insn.addr !10145
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !10146
  br i1 %1, label %dec_label_pc_22ec0, label %dec_label_pc_22e8a, !insn.addr !10146

dec_label_pc_22e8a:                               ; preds = %dec_label_pc_22e6c
  %2 = ptrtoint i32* %0 to i32, !insn.addr !10144
  %3 = add i32 %2, 4, !insn.addr !10147
  %4 = inttoptr i32 %3 to i32*, !insn.addr !10147
  store i32 %arg2, i32* %4, align 4, !insn.addr !10147
  %5 = call i32* @malloc(i32 %arg2), !insn.addr !10148
  %6 = ptrtoint i32* %5 to i32, !insn.addr !10148
  store i32 %6, i32* %0, align 4, !insn.addr !10149
  %7 = icmp eq i32* %5, null, !insn.addr !10150
  br i1 %7, label %dec_label_pc_22ea6, label %dec_label_pc_22eb0, !insn.addr !10151

dec_label_pc_22ea6:                               ; preds = %dec_label_pc_22e8a
  call void @free(i32* nonnull %0), !insn.addr !10152
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !10153
  br label %dec_label_pc_22ec0, !insn.addr !10153

dec_label_pc_22eb0:                               ; preds = %dec_label_pc_22e8a
  %8 = inttoptr i32 %arg1 to i32*, !insn.addr !10154
  %9 = call i32* @memcpy(i32* nonnull %5, i32* %8, i32 %arg2), !insn.addr !10154
  store i32 %2, i32* %r3.0.reg2mem, !insn.addr !10155
  br label %dec_label_pc_22ec0, !insn.addr !10155

dec_label_pc_22ec0:                               ; preds = %dec_label_pc_22e6c, %dec_label_pc_22eb0, %dec_label_pc_22ea6
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !10156

; uselistorder directives
  uselistorder i32* %0, { 0, 1, 3, 2 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_22ec0, { 1, 2, 0 }
}

define i32 @get_raw_clib_object(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_22ecc:
  %storemerge.reg2mem = alloca i32, !insn.addr !10157
  %0 = add i32 %arg1, 4, !insn.addr !10158
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10158
  %2 = load i32, i32* %1, align 4, !insn.addr !10158
  %3 = call i32* @malloc(i32 %2), !insn.addr !10159
  %4 = ptrtoint i32* %3 to i32, !insn.addr !10159
  store i32 %4, i32* %arg2, align 4, !insn.addr !10160
  %5 = icmp eq i32* %arg2, null, !insn.addr !10161
  store i32 3, i32* %storemerge.reg2mem, !insn.addr !10162
  br i1 %5, label %dec_label_pc_22f0c, label %dec_label_pc_22ef4, !insn.addr !10162

dec_label_pc_22ef4:                               ; preds = %dec_label_pc_22ecc
  %6 = load i32, i32* %1, align 4, !insn.addr !10163
  %7 = call i32* @memcpy(i32* nonnull %arg2, i32* %3, i32 %6), !insn.addr !10164
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !10165
  br label %dec_label_pc_22f0c, !insn.addr !10165

dec_label_pc_22f0c:                               ; preds = %dec_label_pc_22ecc, %dec_label_pc_22ef4
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10166

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32* %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_22f0c, { 1, 0 }
}

define i32 @replace_raw_clib_object(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22f18:
  %0 = inttoptr i32 %arg1 to i32*, !insn.addr !10167
  call void @free(i32* %0), !insn.addr !10167
  %1 = call i32* @malloc(i32 %arg3), !insn.addr !10168
  %2 = ptrtoint i32* %1 to i32, !insn.addr !10168
  store i32 %2, i32* %0, align 4, !insn.addr !10169
  %3 = inttoptr i32 %arg2 to i32*, !insn.addr !10170
  %4 = call i32* @memcpy(i32* %1, i32* %3, i32 %arg3), !insn.addr !10170
  %5 = ptrtoint i32* %4 to i32, !insn.addr !10170
  ret i32 %5, !insn.addr !10171
}

define i32 @delete_clib_object(i32 %arg1) local_unnamed_addr {
dec_label_pc_22f54:
  %r0.0.reg2mem = alloca i32, !insn.addr !10172
  %0 = icmp eq i32 %arg1, 0, !insn.addr !10173
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !10174
  br i1 %0, label %dec_label_pc_22f72, label %dec_label_pc_22f62, !insn.addr !10174

dec_label_pc_22f62:                               ; preds = %dec_label_pc_22f54
  %1 = inttoptr i32 %arg1 to i32*, !insn.addr !10175
  call void @free(i32* %1), !insn.addr !10175
  call void @free(i32* %1), !insn.addr !10176
  store i32 ptrtoint (i32* @1 to i32), i32* %r0.0.reg2mem, !insn.addr !10176
  br label %dec_label_pc_22f72, !insn.addr !10176

dec_label_pc_22f72:                               ; preds = %dec_label_pc_22f62, %dec_label_pc_22f54
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !10177
}

define i32 @clib_strdup(i32 %arg1) local_unnamed_addr {
dec_label_pc_22f7c:
  %0 = inttoptr i32 %arg1 to i8*, !insn.addr !10178
  %1 = call i8* @strdup(i8* %0), !insn.addr !10178
  %2 = ptrtoint i8* %1 to i32, !insn.addr !10178
  ret i32 %2, !insn.addr !10179
}

define i32 @dump_to_strbuffer(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22f98:
  %0 = call i32 @strbuffer_append_bytes(i32 %arg3, i32 %arg1, i32 %arg2), !insn.addr !10180
  ret i32 %0, !insn.addr !10181
}

define i32 @dump_to_file(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22fbc:
  %0 = inttoptr i32 %arg1 to i32*, !insn.addr !10182
  %1 = inttoptr i32 %arg3 to %_IO_FILE*, !insn.addr !10182
  %2 = call i32 @fwrite(i32* %0, i32 %arg2, i32 1, %_IO_FILE* %1), !insn.addr !10182
  %3 = icmp ne i32 %2, 1, !insn.addr !10183
  %. = sext i1 %3 to i32
  ret i32 %., !insn.addr !10184
}

define i32 @dump_indent(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_22ff0:
  %0 = urem i32 %arg1, 32, !insn.addr !10185
  %1 = icmp eq i32 %0, 0, !insn.addr !10186
  br i1 %1, label %dec_label_pc_23060, label %dec_label_pc_23086, !insn.addr !10187

dec_label_pc_23060:                               ; preds = %dec_label_pc_22ff0
  %2 = icmp ne i32 %arg3, 0, !insn.addr !10188
  %3 = and i32 %arg1, 32, !insn.addr !10189
  %4 = icmp eq i32 %3, 0, !insn.addr !10190
  %or.cond = icmp eq i1 %4, %2
  %spec.select = select i1 %or.cond, i32 ptrtoint (i32* @global_var_2ce04 to i32), i32 0
  ret i32 %spec.select

dec_label_pc_23086:                               ; preds = %dec_label_pc_22ff0
  ret i32 -1, !insn.addr !10191

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @dump_string(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23090:
  ret i32 -1, !insn.addr !10192
}

define i32 @object_key_compare_keys(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23298:
  %0 = add i32 %arg1, 4, !insn.addr !10193
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10193
  %2 = load i32, i32* %1, align 4, !insn.addr !10193
  %3 = add i32 %arg2, 4, !insn.addr !10194
  %4 = inttoptr i32 %3 to i32*, !insn.addr !10194
  %5 = load i32, i32* %4, align 4, !insn.addr !10194
  %6 = inttoptr i32 %2 to i8*, !insn.addr !10195
  %7 = inttoptr i32 %5 to i8*, !insn.addr !10195
  %8 = call i32 @strcmp(i8* %6, i8* %7), !insn.addr !10195
  ret i32 %8, !insn.addr !10196
}

define i32 @object_key_compare_serials(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_232c0:
  %storemerge.reg2mem = alloca i32, !insn.addr !10197
  %0 = icmp ult i32 %arg1, %arg2, !insn.addr !10198
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !10199
  br i1 %0, label %dec_label_pc_232f2, label %dec_label_pc_232de, !insn.addr !10199

dec_label_pc_232de:                               ; preds = %dec_label_pc_232c0
  %1 = icmp eq i32 %arg1, %arg2, !insn.addr !10200
  br i1 %1, label %2, label %4, !insn.addr !10201

; <label>:2:                                      ; preds = %dec_label_pc_232de
  %3 = call i32 @__asm_ite(), !insn.addr !10201
  br label %4, !insn.addr !10201

; <label>:4:                                      ; preds = %dec_label_pc_232de, %2
  %not. = icmp ne i1 %1, true
  %r3.1 = zext i1 %not. to i32
  store i32 %r3.1, i32* %storemerge.reg2mem, !insn.addr !10202
  br label %dec_label_pc_232f2, !insn.addr !10202

dec_label_pc_232f2:                               ; preds = %dec_label_pc_232c0, %4
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10203

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_232f2, { 1, 0 }
  uselistorder label %4, { 1, 0 }
}

define i32 @do_dump(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23300:
  %0 = icmp eq i32 %arg1, 0, !insn.addr !10204
  br i1 %0, label %dec_label_pc_23966, label %dec_label_pc_2331a, !insn.addr !10205

dec_label_pc_2331a:                               ; preds = %dec_label_pc_23300
  %1 = icmp ult i32 %arg1, 7, !insn.addr !10206
  %2 = icmp ne i1 %1, true, !insn.addr !10206
  %3 = icmp eq i32 %arg1, 7, !insn.addr !10206
  %4 = icmp ne i1 %3, true, !insn.addr !10207
  %5 = icmp eq i1 %2, %4, !insn.addr !10207
  br i1 %5, label %dec_label_pc_23966, label %dec_label_pc_23324, !insn.addr !10207

dec_label_pc_23324:                               ; preds = %dec_label_pc_2331a
  %6 = call i32 @__asm_adr(i32 4), !insn.addr !10208
  ret i32 %arg1, !insn.addr !10209

dec_label_pc_23966:                               ; preds = %dec_label_pc_2331a, %dec_label_pc_23300
  ret i32 -1, !insn.addr !10210
}

define i32 @json_dumps(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23970:
  %storemerge.reg2mem = alloca i32, !insn.addr !10211
  %storemerge1.reg2mem = alloca i32, !insn.addr !10211
  %stack_var_-24 = alloca i32, align 4
  %0 = call i32 @strbuffer_init(i32* nonnull %stack_var_-24), !insn.addr !10212
  %1 = icmp eq i32 %0, 0, !insn.addr !10213
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !10214
  br i1 %1, label %dec_label_pc_2398e, label %dec_label_pc_239d0, !insn.addr !10214

dec_label_pc_2398e:                               ; preds = %dec_label_pc_23970
  %2 = call i32 @json_dump_callback(i32 %arg1, i32 143257, i32* nonnull %stack_var_-24, i32 %arg2), !insn.addr !10215
  %3 = icmp eq i32 %2, 0, !insn.addr !10216
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !10217
  br i1 %3, label %dec_label_pc_239b0, label %dec_label_pc_239c4, !insn.addr !10217

dec_label_pc_239b0:                               ; preds = %dec_label_pc_2398e
  %4 = call i32 @strbuffer_value(i32* nonnull %stack_var_-24), !insn.addr !10218
  %5 = call i32 @jsonp_strdup(i32 %4), !insn.addr !10219
  store i32 %5, i32* %storemerge1.reg2mem, !insn.addr !10220
  br label %dec_label_pc_239c4, !insn.addr !10220

dec_label_pc_239c4:                               ; preds = %dec_label_pc_2398e, %dec_label_pc_239b0
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %6 = call i32 @strbuffer_close(i32* nonnull %stack_var_-24), !insn.addr !10221
  store i32 %storemerge1.reload, i32* %storemerge.reg2mem, !insn.addr !10222
  br label %dec_label_pc_239d0, !insn.addr !10222

dec_label_pc_239d0:                               ; preds = %dec_label_pc_23970, %dec_label_pc_239c4
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10223

; uselistorder directives
  uselistorder i32* %storemerge1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_239d0, { 1, 0 }
  uselistorder label %dec_label_pc_239c4, { 1, 0 }
}

define i32 @json_dumpf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_239dc:
  %0 = inttoptr i32 %arg2 to i32*, !insn.addr !10224
  %1 = call i32 @json_dump_callback(i32 %arg1, i32 143293, i32* %0, i32 %arg3), !insn.addr !10224
  ret i32 %1, !insn.addr !10225

; uselistorder directives
  uselistorder i32 (i32, i32, i32*, i32)* @json_dump_callback, { 1, 0 }
}

define i32 @json_dump_file(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23a08:
  %storemerge.reg2mem = alloca i32, !insn.addr !10226
  %0 = inttoptr i32 %arg2 to i8*, !insn.addr !10227
  %1 = call %_IO_FILE* @fopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_2ceb4, i32 0, i32 0)), !insn.addr !10227
  %2 = icmp eq %_IO_FILE* %1, null, !insn.addr !10228
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !10229
  br i1 %2, label %dec_label_pc_23a44, label %dec_label_pc_23a30, !insn.addr !10229

dec_label_pc_23a30:                               ; preds = %dec_label_pc_23a08
  %3 = ptrtoint %_IO_FILE* %1 to i32, !insn.addr !10230
  %4 = call i32 @json_dumpf(i32 %arg1, i32 %3, i32 %arg3), !insn.addr !10231
  %5 = call i32 @fclose(%_IO_FILE* nonnull %1), !insn.addr !10232
  store i32 %4, i32* %storemerge.reg2mem, !insn.addr !10233
  br label %dec_label_pc_23a44, !insn.addr !10233

dec_label_pc_23a44:                               ; preds = %dec_label_pc_23a08, %dec_label_pc_23a30
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10234

; uselistorder directives
  uselistorder %_IO_FILE* %1, { 1, 0, 2 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_23a44, { 1, 0 }
}

define i32 @json_dump_callback(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23a50:
  %storemerge.reg2mem = alloca i32, !insn.addr !10235
  %0 = and i32 %arg4, 512, !insn.addr !10236
  %1 = icmp ne i32 %0, 0, !insn.addr !10237
  %2 = icmp eq i32 %arg1, 1, !insn.addr !10238
  %or.cond = or i1 %2, %1
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !10239
  br i1 %or.cond, label %dec_label_pc_23a8a, label %dec_label_pc_23a9c, !insn.addr !10239

dec_label_pc_23a8a:                               ; preds = %dec_label_pc_23a50
  %3 = call i32 @do_dump(i32 %arg1, i32 %arg4, i32 0, i32 %arg2), !insn.addr !10240
  store i32 %3, i32* %storemerge.reg2mem, !insn.addr !10241
  br label %dec_label_pc_23a9c, !insn.addr !10241

dec_label_pc_23a9c:                               ; preds = %dec_label_pc_23a50, %dec_label_pc_23a8a
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10242

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 512, { 11, 5, 6, 10, 7, 1, 8, 9, 2, 3, 4, 0, 12, 13 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_23a9c, { 1, 0 }
}

define i32 @json_decref.64(i32 %arg1) local_unnamed_addr {
dec_label_pc_23aa8:
  %r0.0.reg2mem = alloca i32, !insn.addr !10243
  %0 = icmp eq i32 %arg1, 0, !insn.addr !10244
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !10245
  br i1 %0, label %dec_label_pc_23ad8, label %dec_label_pc_23ab6, !insn.addr !10245

dec_label_pc_23ab6:                               ; preds = %dec_label_pc_23aa8
  %1 = add i32 %arg1, 4, !insn.addr !10246
  %2 = inttoptr i32 %1 to i32*, !insn.addr !10246
  %3 = load i32, i32* %2, align 4, !insn.addr !10246
  %4 = icmp eq i32 %3, -1, !insn.addr !10247
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !10248
  br i1 %4, label %dec_label_pc_23ad8, label %dec_label_pc_23ac0, !insn.addr !10248

dec_label_pc_23ac0:                               ; preds = %dec_label_pc_23ab6
  %5 = add i32 %3, -1, !insn.addr !10249
  store i32 %5, i32* %2, align 4, !insn.addr !10250
  %6 = icmp eq i32 %5, 0, !insn.addr !10251
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !10252
  br i1 %6, label %dec_label_pc_23ad2, label %dec_label_pc_23ad8, !insn.addr !10252

dec_label_pc_23ad2:                               ; preds = %dec_label_pc_23ac0
  %7 = call i32 @json_delete(i32 %arg1), !insn.addr !10253
  store i32 %7, i32* %r0.0.reg2mem, !insn.addr !10253
  br label %dec_label_pc_23ad8, !insn.addr !10253

dec_label_pc_23ad8:                               ; preds = %dec_label_pc_23ac0, %dec_label_pc_23ad2, %dec_label_pc_23ab6, %dec_label_pc_23aa8
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !10254

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_23ad8, { 1, 0, 2, 3 }
}

define i32 @hash_str(i32 %arg1) local_unnamed_addr {
dec_label_pc_23ae0:
  %stack_var_-16.0.lcssa.reg2mem = alloca i32, !insn.addr !10255
  %stack_var_-12.01.reg2mem = alloca i32, !insn.addr !10255
  %stack_var_-16.02.reg2mem = alloca i32, !insn.addr !10255
  %.reg2mem = alloca i8, !insn.addr !10255
  %0 = inttoptr i32 %arg1 to i8*, !insn.addr !10256
  %1 = load i8, i8* %0, align 1, !insn.addr !10256
  %2 = icmp eq i8 %1, 0, !insn.addr !10257
  store i8 %1, i8* %.reg2mem, !insn.addr !10258
  store i32 5381, i32* %stack_var_-16.02.reg2mem, !insn.addr !10258
  store i32 %arg1, i32* %stack_var_-12.01.reg2mem, !insn.addr !10258
  store i32 5381, i32* %stack_var_-16.0.lcssa.reg2mem, !insn.addr !10258
  br i1 %2, label %dec_label_pc_23b14, label %dec_label_pc_23af4, !insn.addr !10258

dec_label_pc_23af4:                               ; preds = %dec_label_pc_23ae0, %dec_label_pc_23af4
  %stack_var_-12.01.reload = load i32, i32* %stack_var_-12.01.reg2mem
  %stack_var_-16.02.reload = load i32, i32* %stack_var_-16.02.reg2mem
  %.reload = load i8, i8* %.reg2mem
  %3 = zext i8 %.reload to i32, !insn.addr !10256
  %4 = mul i32 %stack_var_-16.02.reload, 33, !insn.addr !10259
  %5 = add i32 %4, %3, !insn.addr !10260
  %6 = add i32 %stack_var_-12.01.reload, 1, !insn.addr !10261
  %7 = inttoptr i32 %6 to i8*, !insn.addr !10256
  %8 = load i8, i8* %7, align 1, !insn.addr !10256
  %9 = icmp eq i8 %8, 0, !insn.addr !10257
  store i8 %8, i8* %.reg2mem, !insn.addr !10258
  store i32 %5, i32* %stack_var_-16.02.reg2mem, !insn.addr !10258
  store i32 %6, i32* %stack_var_-12.01.reg2mem, !insn.addr !10258
  store i32 %5, i32* %stack_var_-16.0.lcssa.reg2mem, !insn.addr !10258
  br i1 %9, label %dec_label_pc_23b14, label %dec_label_pc_23af4, !insn.addr !10258

dec_label_pc_23b14:                               ; preds = %dec_label_pc_23af4, %dec_label_pc_23ae0
  %stack_var_-16.0.lcssa.reload = load i32, i32* %stack_var_-16.0.lcssa.reg2mem
  ret i32 %stack_var_-16.0.lcssa.reload, !insn.addr !10262

; uselistorder directives
  uselistorder i8* %.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-16.02.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-12.01.reg2mem, { 2, 0, 1 }
  uselistorder label %dec_label_pc_23af4, { 1, 0 }
}

define i32 @list_init(i32 %arg1) local_unnamed_addr {
dec_label_pc_23b24:
  %0 = add i32 %arg1, 4, !insn.addr !10263
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10263
  store i32 %arg1, i32* %1, align 4, !insn.addr !10263
  %2 = inttoptr i32 %arg1 to i32*, !insn.addr !10264
  store i32 %arg1, i32* %2, align 4, !insn.addr !10264
  ret i32 %arg1, !insn.addr !10265

; uselistorder directives
  uselistorder i32 %arg1, { 4, 0, 1, 2, 3 }
}

define i32 @list_insert(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23b44:
  %0 = add i32 %arg2, 4, !insn.addr !10266
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10266
  store i32 %arg1, i32* %1, align 4, !insn.addr !10266
  %2 = inttoptr i32 %arg2 to i32*, !insn.addr !10267
  store i32 %arg1, i32* %2, align 4, !insn.addr !10267
  %3 = add i32 %arg1, 4, !insn.addr !10268
  %4 = inttoptr i32 %3 to i32*, !insn.addr !10268
  store i32 %arg2, i32* %4, align 4, !insn.addr !10268
  %5 = inttoptr i32 %arg1 to i32*, !insn.addr !10269
  store i32 %arg2, i32* %5, align 4, !insn.addr !10269
  ret i32 %arg1, !insn.addr !10270

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 4, 0, 1, 2, 3 }
}

define i32 @list_remove(i32 %arg1) local_unnamed_addr {
dec_label_pc_23b74:
  %0 = add i32 %arg1, 4, !insn.addr !10271
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10271
  %2 = load i32, i32* %1, align 4, !insn.addr !10271
  %3 = inttoptr i32 %2 to i32*, !insn.addr !10272
  store i32 %arg1, i32* %3, align 4, !insn.addr !10272
  ret i32 %arg1, !insn.addr !10273

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
}

define i32 @bucket_is_empty(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23b9c:
  %storemerge.reg2mem = alloca i32, !insn.addr !10274
  %0 = add i32 %arg1, 12, !insn.addr !10275
  %1 = icmp eq i32 %0, %arg2, !insn.addr !10276
  br i1 %1, label %dec_label_pc_23bb2, label %dec_label_pc_23bc2, !insn.addr !10277

dec_label_pc_23bb2:                               ; preds = %dec_label_pc_23b9c
  %2 = add i32 %arg2, 4, !insn.addr !10278
  %3 = inttoptr i32 %2 to i32*, !insn.addr !10278
  %4 = load i32, i32* %3, align 4, !insn.addr !10278
  %5 = icmp eq i32 %4, %arg2, !insn.addr !10279
  store i32 1, i32* %storemerge.reg2mem, !insn.addr !10280
  br i1 %5, label %dec_label_pc_23bc4, label %dec_label_pc_23bc2, !insn.addr !10280

dec_label_pc_23bc2:                               ; preds = %dec_label_pc_23bb2, %dec_label_pc_23b9c
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !10281
  br label %dec_label_pc_23bc4, !insn.addr !10281

dec_label_pc_23bc4:                               ; preds = %dec_label_pc_23bb2, %dec_label_pc_23bc2
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10282

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_23bc4, { 1, 0 }
}

define i32 @insert_to_bucket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23bd0:
  %r0.0.reg2mem = alloca i32, !insn.addr !10283
  %0 = call i32 @bucket_is_empty(i32 %arg1, i32 %arg2), !insn.addr !10284
  %1 = icmp eq i32 %0, 0, !insn.addr !10285
  br i1 %1, label %dec_label_pc_23c06, label %dec_label_pc_23bea, !insn.addr !10286

dec_label_pc_23bea:                               ; preds = %dec_label_pc_23bd0
  %2 = add i32 %arg1, 12, !insn.addr !10287
  %3 = call i32 @list_insert(i32 %2, i32 %arg3), !insn.addr !10288
  %4 = add i32 %arg2, 4, !insn.addr !10289
  %5 = inttoptr i32 %4 to i32*, !insn.addr !10289
  store i32 %arg3, i32* %5, align 4, !insn.addr !10289
  %6 = inttoptr i32 %arg2 to i32*, !insn.addr !10290
  store i32 %arg3, i32* %6, align 4, !insn.addr !10290
  store i32 %3, i32* %r0.0.reg2mem, !insn.addr !10291
  br label %dec_label_pc_23c18, !insn.addr !10291

dec_label_pc_23c06:                               ; preds = %dec_label_pc_23bd0
  %7 = call i32 @list_insert(i32 %arg2, i32 %arg3), !insn.addr !10292
  %8 = inttoptr i32 %arg2 to i32*, !insn.addr !10293
  store i32 %arg3, i32* %8, align 4, !insn.addr !10293
  store i32 %7, i32* %r0.0.reg2mem, !insn.addr !10293
  br label %dec_label_pc_23c18, !insn.addr !10293

dec_label_pc_23c18:                               ; preds = %dec_label_pc_23c06, %dec_label_pc_23bea
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !10294

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @list_insert, { 1, 0 }
  uselistorder i32 %arg3, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 3, 0, 1, 4 }
}

define i32 @num_buckets(i32 %arg1) local_unnamed_addr {
dec_label_pc_23c20:
  %0 = add i32 %arg1, 8, !insn.addr !10295
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10295
  %2 = load i32, i32* %1, align 4, !insn.addr !10295
  %3 = mul i32 %2, 4, !insn.addr !10296
  %4 = add i32 %3, ptrtoint (i32* @global_var_2cec0 to i32), !insn.addr !10296
  %5 = inttoptr i32 %4 to i32*, !insn.addr !10296
  %6 = load i32, i32* %5, align 4, !insn.addr !10296
  ret i32 %6, !insn.addr !10297
}

define i32 @hashtable_find_pair(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23c44:
  %r3.0.reg2mem = alloca i32, !insn.addr !10298
  %r1.1.reg2mem = alloca i32, !insn.addr !10298
  %r0.1.reg2mem = alloca i32, !insn.addr !10298
  %storemerge.reg2mem = alloca i32, !insn.addr !10298
  %r1.0.reg2mem = alloca i32, !insn.addr !10298
  %r0.0.reg2mem = alloca i32, !insn.addr !10298
  %0 = call i32 @bucket_is_empty(i32 %arg1, i32 %arg2), !insn.addr !10299
  %1 = icmp eq i32 %0, 0, !insn.addr !10300
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !10301
  br i1 %1, label %dec_label_pc_23c6a.preheader, label %dec_label_pc_23ca6, !insn.addr !10301

dec_label_pc_23c6a.preheader:                     ; preds = %dec_label_pc_23c44
  %2 = inttoptr i32 %arg3 to i8*
  %3 = add i32 %arg2, 4
  %4 = inttoptr i32 %3 to i32*
  store i32 0, i32* %r0.0.reg2mem
  store i32 %arg2, i32* %r1.0.reg2mem
  store i32 %arg2, i32* %storemerge.reg2mem
  br label %dec_label_pc_23c6a

dec_label_pc_23c6a:                               ; preds = %dec_label_pc_23c6a.preheader, %dec_label_pc_23c9a
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %r1.0.reload = load i32, i32* %r1.0.reg2mem
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %5 = add i32 %storemerge.reload, -4, !insn.addr !10302
  %6 = inttoptr i32 %5 to i32*, !insn.addr !10303
  %7 = load i32, i32* %6, align 4, !insn.addr !10303
  %8 = icmp eq i32 %7, %arg4, !insn.addr !10304
  store i32 %r0.0.reload, i32* %r0.1.reg2mem, !insn.addr !10305
  store i32 %r1.0.reload, i32* %r1.1.reg2mem, !insn.addr !10305
  br i1 %8, label %dec_label_pc_23c7a, label %dec_label_pc_23c90, !insn.addr !10305

dec_label_pc_23c7a:                               ; preds = %dec_label_pc_23c6a
  %9 = add i32 %storemerge.reload, 16, !insn.addr !10306
  %10 = inttoptr i32 %9 to i8*, !insn.addr !10307
  %11 = call i32 @strcmp(i8* %10, i8* %2), !insn.addr !10307
  %12 = icmp eq i32 %11, 0, !insn.addr !10308
  store i32 %11, i32* %r0.1.reg2mem, !insn.addr !10309
  store i32 %arg3, i32* %r1.1.reg2mem, !insn.addr !10309
  store i32 %5, i32* %r3.0.reg2mem, !insn.addr !10309
  br i1 %12, label %dec_label_pc_23ca6, label %dec_label_pc_23c90, !insn.addr !10309

dec_label_pc_23c90:                               ; preds = %dec_label_pc_23c7a, %dec_label_pc_23c6a
  %r1.1.reload = load i32, i32* %r1.1.reg2mem
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %13 = load i32, i32* %4, align 4, !insn.addr !10310
  %14 = icmp eq i32 %13, %storemerge.reload, !insn.addr !10311
  br i1 %14, label %dec_label_pc_23ca2, label %dec_label_pc_23c9a, !insn.addr !10312

dec_label_pc_23c9a:                               ; preds = %dec_label_pc_23c90
  %15 = add i32 %storemerge.reload, 4, !insn.addr !10313
  %16 = inttoptr i32 %15 to i32*, !insn.addr !10313
  %17 = load i32, i32* %16, align 4, !insn.addr !10313
  store i32 %r0.1.reload, i32* %r0.0.reg2mem, !insn.addr !10314
  store i32 %r1.1.reload, i32* %r1.0.reg2mem, !insn.addr !10314
  store i32 %17, i32* %storemerge.reg2mem, !insn.addr !10314
  br label %dec_label_pc_23c6a, !insn.addr !10314

dec_label_pc_23ca2:                               ; preds = %dec_label_pc_23c90
  %18 = call i32 @__asm_nop(i32 %r0.1.reload, i32 %r1.1.reload, i32 %storemerge.reload, i32 %storemerge.reload), !insn.addr !10315
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !10316
  br label %dec_label_pc_23ca6, !insn.addr !10316

dec_label_pc_23ca6:                               ; preds = %dec_label_pc_23c7a, %dec_label_pc_23c44, %dec_label_pc_23ca2
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !10317

; uselistorder directives
  uselistorder i32 %storemerge.reload, { 5, 4, 2, 1, 3, 0 }
  uselistorder i32* %r0.0.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r1.0.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r1.1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_23ca6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_23c6a, { 1, 0 }
}

define i32 @hashtable_do_del(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23cb0:
  %storemerge.reg2mem = alloca i32, !insn.addr !10318
  %0 = call i32 @num_buckets(i32 %arg1), !insn.addr !10319
  %1 = urem i32 %arg3, %0, !insn.addr !10320
  %2 = add i32 %arg1, 4, !insn.addr !10321
  %3 = inttoptr i32 %2 to i32*, !insn.addr !10321
  %4 = load i32, i32* %3, align 4, !insn.addr !10321
  %5 = mul i32 %1, 8, !insn.addr !10322
  %6 = add i32 %4, %5, !insn.addr !10323
  %7 = call i32 @hashtable_find_pair(i32 %arg1, i32 %6, i32 %arg2, i32 %arg3), !insn.addr !10324
  %8 = icmp eq i32 %7, 0, !insn.addr !10325
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !10326
  br i1 %8, label %dec_label_pc_23d74, label %dec_label_pc_23cf8, !insn.addr !10326

dec_label_pc_23cf8:                               ; preds = %dec_label_pc_23cb0
  %9 = add i32 %7, 4, !insn.addr !10327
  %10 = inttoptr i32 %6 to i32*, !insn.addr !10328
  %11 = load i32, i32* %10, align 4, !insn.addr !10328
  %12 = icmp eq i32 %9, %11
  %13 = add i32 %6, 4
  %14 = inttoptr i32 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %9, %15
  br i1 %12, label %dec_label_pc_23d04, label %dec_label_pc_23d3a, !insn.addr !10329

dec_label_pc_23d04:                               ; preds = %dec_label_pc_23cf8
  br i1 %16, label %dec_label_pc_23d10, label %dec_label_pc_23d30, !insn.addr !10330

dec_label_pc_23d10:                               ; preds = %dec_label_pc_23d04
  %17 = add i32 %arg1, 12, !insn.addr !10331
  store i32 %17, i32* %14, align 4, !insn.addr !10332
  store i32 %17, i32* %10, align 4, !insn.addr !10333
  br label %dec_label_pc_23d4e, !insn.addr !10334

dec_label_pc_23d30:                               ; preds = %dec_label_pc_23d04
  %18 = add i32 %7, 8, !insn.addr !10335
  %19 = inttoptr i32 %18 to i32*, !insn.addr !10335
  %20 = load i32, i32* %19, align 4, !insn.addr !10335
  store i32 %20, i32* %10, align 4, !insn.addr !10336
  br label %dec_label_pc_23d4e, !insn.addr !10337

dec_label_pc_23d3a:                               ; preds = %dec_label_pc_23cf8
  br i1 %16, label %dec_label_pc_23d46, label %dec_label_pc_23d4e, !insn.addr !10338

dec_label_pc_23d46:                               ; preds = %dec_label_pc_23d3a
  %21 = inttoptr i32 %9 to i32*, !insn.addr !10339
  %22 = load i32, i32* %21, align 4, !insn.addr !10339
  store i32 %22, i32* %14, align 4, !insn.addr !10340
  br label %dec_label_pc_23d4e, !insn.addr !10340

dec_label_pc_23d4e:                               ; preds = %dec_label_pc_23d3a, %dec_label_pc_23d46, %dec_label_pc_23d30, %dec_label_pc_23d10
  %23 = call i32 @list_remove(i32 %9), !insn.addr !10341
  %24 = add i32 %7, 12, !insn.addr !10342
  %25 = inttoptr i32 %24 to i32*, !insn.addr !10342
  %26 = load i32, i32* %25, align 4, !insn.addr !10342
  %27 = call i32 @json_decref.64(i32 %26), !insn.addr !10343
  %28 = call i32 @jsonp_free(i32 %7), !insn.addr !10344
  %29 = add i32 %28, -1, !insn.addr !10345
  %30 = inttoptr i32 %arg1 to i32*, !insn.addr !10346
  store i32 %29, i32* %30, align 4, !insn.addr !10346
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !10347
  br label %dec_label_pc_23d74, !insn.addr !10347

dec_label_pc_23d74:                               ; preds = %dec_label_pc_23cb0, %dec_label_pc_23d4e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10348

; uselistorder directives
  uselistorder i32 %9, { 1, 0, 2, 3 }
  uselistorder i32 %7, { 1, 2, 0, 3, 4 }
  uselistorder i32 %6, { 1, 0, 2 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_23d74, { 1, 0 }
  uselistorder label %dec_label_pc_23d4e, { 1, 0, 2, 3 }
}

define i32 @hashtable_do_clear(i32 %arg1) local_unnamed_addr {
dec_label_pc_23d80:
  %r0.0.lcssa.reg2mem = alloca i32, !insn.addr !10349
  %storemerge1.reg2mem = alloca i32, !insn.addr !10349
  %0 = add i32 %arg1, 16, !insn.addr !10350
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10350
  %2 = load i32, i32* %1, align 4, !insn.addr !10350
  %3 = add i32 %arg1, 12, !insn.addr !10351
  %4 = icmp eq i32 %3, %2, !insn.addr !10352
  store i32 %2, i32* %storemerge1.reg2mem, !insn.addr !10353
  store i32 %arg1, i32* %r0.0.lcssa.reg2mem, !insn.addr !10353
  br i1 %4, label %dec_label_pc_23dbc, label %dec_label_pc_23d90, !insn.addr !10353

dec_label_pc_23d90:                               ; preds = %dec_label_pc_23d80, %dec_label_pc_23d90
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %5 = add i32 %storemerge1.reload, 4, !insn.addr !10354
  %6 = inttoptr i32 %5 to i32*, !insn.addr !10354
  %7 = load i32, i32* %6, align 4, !insn.addr !10354
  %8 = add i32 %storemerge1.reload, -4, !insn.addr !10355
  %9 = add i32 %storemerge1.reload, 8, !insn.addr !10356
  %10 = inttoptr i32 %9 to i32*, !insn.addr !10356
  %11 = load i32, i32* %10, align 4, !insn.addr !10356
  %12 = call i32 @json_decref.64(i32 %11), !insn.addr !10357
  %13 = call i32 @jsonp_free(i32 %8), !insn.addr !10358
  %14 = icmp eq i32 %3, %7, !insn.addr !10352
  store i32 %7, i32* %storemerge1.reg2mem, !insn.addr !10353
  store i32 %13, i32* %r0.0.lcssa.reg2mem, !insn.addr !10353
  br i1 %14, label %dec_label_pc_23dbc, label %dec_label_pc_23d90, !insn.addr !10353

dec_label_pc_23dbc:                               ; preds = %dec_label_pc_23d90, %dec_label_pc_23d80
  %r0.0.lcssa.reload = load i32, i32* %r0.0.lcssa.reg2mem
  ret i32 %r0.0.lcssa.reload, !insn.addr !10359

; uselistorder directives
  uselistorder i32 %storemerge1.reload, { 2, 1, 0 }
  uselistorder i32 %3, { 1, 0 }
  uselistorder i32* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder label %dec_label_pc_23d90, { 1, 0 }
}

define i32 @hashtable_do_rehash(i32 %arg1) local_unnamed_addr {
dec_label_pc_23dc4:
  %storemerge.reg2mem = alloca i32, !insn.addr !10360
  %stack_var_-12.02.reg2mem = alloca i32, !insn.addr !10360
  %storemerge13.reg2mem = alloca i32, !insn.addr !10360
  %0 = add i32 %arg1, 4, !insn.addr !10361
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10361
  %2 = load i32, i32* %1, align 4, !insn.addr !10361
  %3 = call i32 @jsonp_free(i32 %2), !insn.addr !10362
  %4 = add i32 %arg1, 8, !insn.addr !10363
  %5 = inttoptr i32 %4 to i32*, !insn.addr !10363
  %6 = load i32, i32* %5, align 4, !insn.addr !10363
  %7 = add i32 %6, 1, !insn.addr !10364
  store i32 %7, i32* %5, align 4, !insn.addr !10365
  %8 = call i32 @num_buckets(i32 %arg1), !insn.addr !10366
  %9 = mul i32 %8, 8, !insn.addr !10367
  %10 = call i32 @jsonp_malloc(i32 %9), !insn.addr !10368
  store i32 %10, i32* %1, align 4, !insn.addr !10369
  %11 = icmp eq i32 %10, 0, !insn.addr !10370
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !10371
  br i1 %11, label %dec_label_pc_23e96, label %dec_label_pc_23e30.preheader, !insn.addr !10371

dec_label_pc_23e30.preheader:                     ; preds = %dec_label_pc_23dc4
  %12 = call i32 @num_buckets(i32 %arg1), !insn.addr !10372
  %13 = icmp eq i32 %12, 0, !insn.addr !10373
  %.pre = add i32 %arg1, 12
  store i32 0, i32* %storemerge13.reg2mem, !insn.addr !10374
  br i1 %13, label %dec_label_pc_23e3e, label %dec_label_pc_23e0c, !insn.addr !10374

dec_label_pc_23e0c:                               ; preds = %dec_label_pc_23e30.preheader, %dec_label_pc_23e0c
  %storemerge13.reload = load i32, i32* %storemerge13.reg2mem
  %14 = load i32, i32* %1, align 4, !insn.addr !10375
  %15 = mul i32 %storemerge13.reload, 8, !insn.addr !10376
  %16 = add i32 %14, %15, !insn.addr !10377
  %17 = add i32 %16, 4, !insn.addr !10378
  %18 = inttoptr i32 %17 to i32*, !insn.addr !10378
  store i32 %.pre, i32* %18, align 4, !insn.addr !10378
  %19 = inttoptr i32 %16 to i32*, !insn.addr !10379
  store i32 %.pre, i32* %19, align 4, !insn.addr !10379
  %20 = add i32 %storemerge13.reload, 1, !insn.addr !10380
  %21 = call i32 @num_buckets(i32 %arg1), !insn.addr !10372
  %22 = icmp ult i32 %21, %20, !insn.addr !10373
  %23 = icmp ne i1 %22, true, !insn.addr !10373
  %24 = icmp eq i32 %21, %20, !insn.addr !10373
  %25 = icmp ne i1 %24, true, !insn.addr !10374
  %26 = icmp eq i1 %23, %25, !insn.addr !10374
  store i32 %20, i32* %storemerge13.reg2mem, !insn.addr !10374
  br i1 %26, label %dec_label_pc_23e0c, label %dec_label_pc_23e3e, !insn.addr !10374

dec_label_pc_23e3e:                               ; preds = %dec_label_pc_23e0c, %dec_label_pc_23e30.preheader
  %27 = add i32 %arg1, 16, !insn.addr !10381
  %28 = inttoptr i32 %27 to i32*, !insn.addr !10381
  %29 = load i32, i32* %28, align 4, !insn.addr !10381
  %30 = call i32 @list_init(i32 %.pre), !insn.addr !10382
  %31 = icmp eq i32 %.pre, %29, !insn.addr !10383
  store i32 %29, i32* %stack_var_-12.02.reg2mem, !insn.addr !10384
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !10384
  br i1 %31, label %dec_label_pc_23e96, label %dec_label_pc_23e50, !insn.addr !10384

dec_label_pc_23e50:                               ; preds = %dec_label_pc_23e3e, %dec_label_pc_23e50
  %stack_var_-12.02.reload = load i32, i32* %stack_var_-12.02.reg2mem
  %32 = add i32 %stack_var_-12.02.reload, 4, !insn.addr !10385
  %33 = inttoptr i32 %32 to i32*, !insn.addr !10385
  %34 = load i32, i32* %33, align 4, !insn.addr !10385
  %35 = add i32 %stack_var_-12.02.reload, -4, !insn.addr !10386
  %36 = inttoptr i32 %35 to i32*, !insn.addr !10387
  %37 = load i32, i32* %36, align 4, !insn.addr !10387
  %38 = urem i32 %37, %8, !insn.addr !10388
  %39 = load i32, i32* %1, align 4, !insn.addr !10389
  %40 = mul i32 %38, 8, !insn.addr !10390
  %41 = add i32 %39, %40, !insn.addr !10391
  %42 = call i32 @insert_to_bucket(i32 %arg1, i32 %41, i32 %stack_var_-12.02.reload), !insn.addr !10392
  %43 = icmp eq i32 %.pre, %34, !insn.addr !10383
  store i32 %34, i32* %stack_var_-12.02.reg2mem, !insn.addr !10384
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !10384
  br i1 %43, label %dec_label_pc_23e96, label %dec_label_pc_23e50, !insn.addr !10384

dec_label_pc_23e96:                               ; preds = %dec_label_pc_23e50, %dec_label_pc_23e3e, %dec_label_pc_23dc4
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10393

; uselistorder directives
  uselistorder i32 %21, { 1, 0 }
  uselistorder i32 %20, { 0, 2, 1 }
  uselistorder i32 %16, { 1, 0 }
  uselistorder i32 %.pre, { 1, 0, 2, 4, 3 }
  uselistorder i32 %8, { 1, 0 }
  uselistorder i32* %storemerge13.reg2mem, { 2, 0, 1 }
  uselistorder i32* %stack_var_-12.02.reg2mem, { 2, 0, 1 }
  uselistorder i32 -4, { 12, 13, 14, 0, 1, 2, 3, 4, 5, 11, 15, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder label %dec_label_pc_23e50, { 1, 0 }
  uselistorder label %dec_label_pc_23e0c, { 1, 0 }
}

define i32 @hashtable_init(i32 %arg1) local_unnamed_addr {
dec_label_pc_23ea0:
  %storemerge.reg2mem = alloca i32, !insn.addr !10394
  %storemerge12.reg2mem = alloca i32, !insn.addr !10394
  %0 = inttoptr i32 %arg1 to i32*, !insn.addr !10395
  store i32 0, i32* %0, align 4, !insn.addr !10395
  %1 = add i32 %arg1, 8, !insn.addr !10396
  %2 = inttoptr i32 %1 to i32*, !insn.addr !10396
  store i32 0, i32* %2, align 4, !insn.addr !10396
  %3 = call i32 @num_buckets(i32 %arg1), !insn.addr !10397
  %4 = mul i32 %3, 8, !insn.addr !10398
  %5 = call i32 @jsonp_malloc(i32 %4), !insn.addr !10399
  %6 = add i32 %arg1, 4, !insn.addr !10400
  %7 = inttoptr i32 %6 to i32*, !insn.addr !10400
  store i32 %5, i32* %7, align 4, !insn.addr !10400
  %8 = icmp eq i32 %5, 0, !insn.addr !10401
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !10402
  br i1 %8, label %dec_label_pc_23f1c, label %dec_label_pc_23ed8, !insn.addr !10402

dec_label_pc_23ed8:                               ; preds = %dec_label_pc_23ea0
  %9 = add i32 %arg1, 12, !insn.addr !10403
  %10 = call i32 @list_init(i32 %9), !insn.addr !10404
  %11 = call i32 @num_buckets(i32 %arg1), !insn.addr !10405
  %12 = icmp eq i32 %11, 0, !insn.addr !10406
  store i32 0, i32* %storemerge12.reg2mem, !insn.addr !10407
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !10407
  br i1 %12, label %dec_label_pc_23f1c, label %dec_label_pc_23ee8, !insn.addr !10407

dec_label_pc_23ee8:                               ; preds = %dec_label_pc_23ed8, %dec_label_pc_23ee8
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %13 = load i32, i32* %7, align 4, !insn.addr !10408
  %14 = mul i32 %storemerge12.reload, 8, !insn.addr !10409
  %15 = add i32 %13, %14, !insn.addr !10410
  %16 = add i32 %15, 4, !insn.addr !10411
  %17 = inttoptr i32 %16 to i32*, !insn.addr !10411
  store i32 %9, i32* %17, align 4, !insn.addr !10411
  %18 = inttoptr i32 %15 to i32*, !insn.addr !10412
  store i32 %9, i32* %18, align 4, !insn.addr !10412
  %19 = add i32 %storemerge12.reload, 1, !insn.addr !10413
  %20 = call i32 @num_buckets(i32 %arg1), !insn.addr !10405
  %21 = icmp ult i32 %20, %19, !insn.addr !10406
  %22 = icmp ne i1 %21, true, !insn.addr !10406
  %23 = icmp eq i32 %20, %19, !insn.addr !10406
  %24 = icmp ne i1 %23, true, !insn.addr !10407
  %25 = icmp eq i1 %22, %24, !insn.addr !10407
  store i32 %19, i32* %storemerge12.reg2mem, !insn.addr !10407
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !10407
  br i1 %25, label %dec_label_pc_23ee8, label %dec_label_pc_23f1c, !insn.addr !10407

dec_label_pc_23f1c:                               ; preds = %dec_label_pc_23ee8, %dec_label_pc_23ed8, %dec_label_pc_23ea0
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10414

; uselistorder directives
  uselistorder i32 %20, { 1, 0 }
  uselistorder i32 %19, { 0, 2, 1 }
  uselistorder i32 %15, { 1, 0 }
  uselistorder i32 %9, { 1, 0, 2 }
  uselistorder i32* %storemerge12.reg2mem, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_23ee8, { 1, 0 }
}

define i32 @hashtable_close(i32 %arg1) local_unnamed_addr {
dec_label_pc_23f28:
  %0 = call i32 @hashtable_do_clear(i32 %arg1), !insn.addr !10415
  %1 = add i32 %arg1, 4, !insn.addr !10416
  %2 = inttoptr i32 %1 to i32*, !insn.addr !10416
  %3 = load i32, i32* %2, align 4, !insn.addr !10416
  %4 = call i32 @jsonp_free(i32 %3), !insn.addr !10417
  ret i32 %4, !insn.addr !10418
}

define i32 @hashtable_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23f48:
  %r3.0.reg2mem = alloca i32, !insn.addr !10419
  %0 = call i32 @num_buckets(i32 %arg1), !insn.addr !10420
  %1 = icmp ugt i32 %0, %arg1, !insn.addr !10421
  br i1 %1, label %dec_label_pc_23f78, label %dec_label_pc_23f66, !insn.addr !10422

dec_label_pc_23f66:                               ; preds = %dec_label_pc_23f48
  %2 = call i32 @hashtable_do_rehash(i32 %arg1), !insn.addr !10423
  %3 = icmp eq i32 %2, 0, !insn.addr !10424
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !10425
  br i1 %3, label %dec_label_pc_23f78, label %dec_label_pc_24028, !insn.addr !10425

dec_label_pc_23f78:                               ; preds = %dec_label_pc_23f48, %dec_label_pc_23f66
  %4 = call i32 @hash_str(i32 %arg2), !insn.addr !10426
  %5 = call i32 @num_buckets(i32 %arg1), !insn.addr !10427
  %6 = urem i32 %4, %5, !insn.addr !10428
  %7 = add i32 %arg1, 4, !insn.addr !10429
  %8 = inttoptr i32 %7 to i32*, !insn.addr !10429
  %9 = load i32, i32* %8, align 4, !insn.addr !10429
  %10 = mul i32 %6, 8, !insn.addr !10430
  %11 = add i32 %9, %10, !insn.addr !10431
  %12 = call i32 @hashtable_find_pair(i32 %arg1, i32 %11, i32 %arg2, i32 %4), !insn.addr !10432
  %13 = icmp eq i32 %12, 0, !insn.addr !10433
  br i1 %13, label %dec_label_pc_23fc8, label %dec_label_pc_23fb6, !insn.addr !10434

dec_label_pc_23fb6:                               ; preds = %dec_label_pc_23f78
  %14 = add i32 %12, 12, !insn.addr !10435
  %15 = inttoptr i32 %14 to i32*, !insn.addr !10435
  %16 = load i32, i32* %15, align 4, !insn.addr !10435
  %17 = call i32 @json_decref.64(i32 %16), !insn.addr !10436
  store i32 %arg4, i32* %15, align 4, !insn.addr !10437
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !10438
  br label %dec_label_pc_24028, !insn.addr !10438

dec_label_pc_23fc8:                               ; preds = %dec_label_pc_23f78
  %18 = inttoptr i32 %arg2 to i8*, !insn.addr !10439
  %19 = call i32 @strlen(i8* %18), !insn.addr !10439
  %20 = add i32 %19, 21, !insn.addr !10440
  %21 = call i32 @jsonp_malloc(i32 %20), !insn.addr !10441
  %22 = icmp eq i32 %21, 0, !insn.addr !10442
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !10443
  br i1 %22, label %dec_label_pc_24028, label %dec_label_pc_23fe6, !insn.addr !10443

dec_label_pc_23fe6:                               ; preds = %dec_label_pc_23fc8
  %23 = inttoptr i32 %21 to i32*, !insn.addr !10444
  store i32 %4, i32* %23, align 4, !insn.addr !10444
  %24 = add i32 %21, 16, !insn.addr !10445
  %25 = inttoptr i32 %24 to i32*, !insn.addr !10445
  store i32 %arg3, i32* %25, align 4, !insn.addr !10445
  %26 = add i32 %21, 20, !insn.addr !10446
  %27 = inttoptr i32 %26 to i8*, !insn.addr !10447
  %28 = call i8* @strcpy(i8* %27, i8* %18), !insn.addr !10447
  %29 = add i32 %21, 12, !insn.addr !10448
  %30 = inttoptr i32 %29 to i32*, !insn.addr !10448
  store i32 %arg4, i32* %30, align 4, !insn.addr !10448
  %31 = add i32 %21, 4, !insn.addr !10449
  %32 = call i32 @list_init(i32 %31), !insn.addr !10450
  %33 = call i32 @insert_to_bucket(i32 %arg1, i32 %11, i32 %31), !insn.addr !10451
  %34 = add i32 %33, 1, !insn.addr !10452
  %35 = inttoptr i32 %arg1 to i32*, !insn.addr !10453
  store i32 %34, i32* %35, align 4, !insn.addr !10453
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !10453
  br label %dec_label_pc_24028, !insn.addr !10453

dec_label_pc_24028:                               ; preds = %dec_label_pc_23fb6, %dec_label_pc_23fe6, %dec_label_pc_23fc8, %dec_label_pc_23f66
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !10454

; uselistorder directives
  uselistorder i32 %21, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 3, 5, 4, 0, 6, 7 }
  uselistorder label %dec_label_pc_24028, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_23f78, { 1, 0 }
}

define i32 @hashtable_get(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24034:
  %storemerge.reg2mem = alloca i32, !insn.addr !10455
  %0 = call i32 @hash_str(i32 %arg2), !insn.addr !10456
  %1 = add i32 %arg1, 4, !insn.addr !10457
  %2 = inttoptr i32 %1 to i32*, !insn.addr !10457
  %3 = load i32, i32* %2, align 4, !insn.addr !10457
  %4 = call i32 @num_buckets(i32 %arg1), !insn.addr !10458
  %5 = urem i32 %0, %4, !insn.addr !10459
  %6 = mul i32 %5, 8, !insn.addr !10460
  %7 = add i32 %6, %3, !insn.addr !10461
  %8 = call i32 @hashtable_find_pair(i32 %arg1, i32 %7, i32 %arg2, i32 %0), !insn.addr !10462
  %9 = icmp eq i32 %8, 0, !insn.addr !10463
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !10464
  br i1 %9, label %dec_label_pc_24080, label %dec_label_pc_2407c, !insn.addr !10464

dec_label_pc_2407c:                               ; preds = %dec_label_pc_24034
  %10 = add i32 %8, 12, !insn.addr !10465
  %11 = inttoptr i32 %10 to i32*, !insn.addr !10465
  %12 = load i32, i32* %11, align 4, !insn.addr !10465
  store i32 %12, i32* %storemerge.reg2mem, !insn.addr !10465
  br label %dec_label_pc_24080, !insn.addr !10465

dec_label_pc_24080:                               ; preds = %dec_label_pc_24034, %dec_label_pc_2407c
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !10466

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_24080, { 1, 0 }
}

define i32 @hashtable_del(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2408c:
  %0 = call i32 @hash_str(i32 %arg2), !insn.addr !10467
  %1 = call i32 @hashtable_do_del(i32 %arg1, i32 %arg2, i32 %0), !insn.addr !10468
  ret i32 %1, !insn.addr !10469
}

define i32 @hashtable_clear(i32 %arg1) local_unnamed_addr {
dec_label_pc_240b4:
  %.pre-phi.reg2mem = alloca i32, !insn.addr !10470
  %storemerge1.reg2mem = alloca i32, !insn.addr !10470
  %0 = call i32 @hashtable_do_clear(i32 %arg1), !insn.addr !10471
  %1 = call i32 @num_buckets(i32 %arg1), !insn.addr !10472
  %2 = icmp eq i32 %1, 0, !insn.addr !10473
  br i1 %2, label %dec_label_pc_240b4.dec_label_pc_240fa_crit_edge, label %dec_label_pc_240c8.lr.ph, !insn.addr !10474

dec_label_pc_240b4.dec_label_pc_240fa_crit_edge:  ; preds = %dec_label_pc_240b4
  %.pre = add i32 %arg1, 12, !insn.addr !10475
  store i32 %.pre, i32* %.pre-phi.reg2mem
  br label %dec_label_pc_240fa

dec_label_pc_240c8.lr.ph:                         ; preds = %dec_label_pc_240b4
  %3 = add i32 %arg1, 4, !insn.addr !10476
  %4 = inttoptr i32 %3 to i32*, !insn.addr !10476
  %5 = add i32 %arg1, 12
  store i32 0, i32* %storemerge1.reg2mem
  br label %dec_label_pc_240c8

dec_label_pc_240c8:                               ; preds = %dec_label_pc_240c8.lr.ph, %dec_label_pc_240c8
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %6 = load i32, i32* %4, align 4, !insn.addr !10476
  %7 = mul i32 %storemerge1.reload, 8, !insn.addr !10477
  %8 = add i32 %6, %7, !insn.addr !10478
  %9 = add i32 %8, 4, !insn.addr !10479
  %10 = inttoptr i32 %9 to i32*, !insn.addr !10479
  store i32 %5, i32* %10, align 4, !insn.addr !10479
  %11 = inttoptr i32 %8 to i32*, !insn.addr !10480
  store i32 %5, i32* %11, align 4, !insn.addr !10480
  %12 = add i32 %storemerge1.reload, 1, !insn.addr !10481
  %13 = call i32 @num_buckets(i32 %arg1), !insn.addr !10472
  %14 = icmp ult i32 %13, %12, !insn.addr !10473
  %15 = icmp ne i1 %14, true, !insn.addr !10473
  %16 = icmp eq i32 %13, %12, !insn.addr !10473
  %17 = icmp ne i1 %16, true, !insn.addr !10474
  %18 = icmp eq i1 %15, %17, !insn.addr !10474
  store i32 %12, i32* %storemerge1.reg2mem, !insn.addr !10474
  store i32 %5, i32* %.pre-phi.reg2mem, !insn.addr !10474
  br i1 %18, label %dec_label_pc_240c8, label %dec_label_pc_240fa, !insn.addr !10474

dec_label_pc_240fa:                               ; preds = %dec_label_pc_240c8, %dec_label_pc_240b4.dec_label_pc_240fa_crit_edge
  %.pre-phi.reload = load i32, i32* %.pre-phi.reg2mem
  %19 = call i32 @list_init(i32 %.pre-phi.reload), !insn.addr !10482
  %20 = inttoptr i32 %arg1 to i32*, !insn.addr !10483
  store i32 0, i32* %20, align 4, !insn.addr !10483
  ret i32 %19, !insn.addr !10484

; uselistorder directives
  uselistorder i32 %13, { 1, 0 }
  uselistorder i32 %12, { 0, 2, 1 }
  uselistorder i32 %8, { 1, 0 }
  uselistorder i32* %storemerge1.reg2mem, { 1, 0, 2 }
  uselistorder i32 (i32)* @list_init, { 3, 1, 0, 2 }
  uselistorder i32 (i32)* @hashtable_do_clear, { 1, 0 }
  uselistorder i32 %arg1, { 3, 5, 4, 2, 0, 1, 6 }
  uselistorder label %dec_label_pc_240c8, { 1, 0 }
}

define i32 @hashtable_iter(i32 %arg1) local_unnamed_addr {
dec_label_pc_24114:
  %0 = add i32 %arg1, 12, !insn.addr !10485
  %1 = call i32 @hashtable_iter_next(i32 %arg1, i32 %0), !insn.addr !10486
  ret i32 %1, !insn.addr !10487
}

define i32 @hashtable_iter_at(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24134:
  %0 = call i32 @hash_str(i32 %arg2), !insn.addr !10488
  %1 = add i32 %arg1, 4, !insn.addr !10489
  %2 = inttoptr i32 %1 to i32*, !insn.addr !10489
  %3 = load i32, i32* %2, align 4, !insn.addr !10489
  %4 = call i32 @num_buckets(i32 %arg1), !insn.addr !10490
  %5 = urem i32 %0, %4, !insn.addr !10491
  %6 = mul i32 %5, 8, !insn.addr !10492
  %7 = add i32 %6, %3, !insn.addr !10493
  %8 = call i32 @hashtable_find_pair(i32 %arg1, i32 %7, i32 %arg2, i32 %0), !insn.addr !10494
  %9 = icmp eq i32 %8, 0, !insn.addr !10495
  %10 = add i32 %8, 4
  %storemerge = select i1 %9, i32 0, i32 %10
  ret i32 %storemerge, !insn.addr !10496

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @hashtable_find_pair, { 3, 0, 1, 2 }
  uselistorder i32 (i32)* @num_buckets, { 12, 11, 0, 5, 7, 6, 4, 1, 3, 9, 2, 8, 10 }
  uselistorder i32 (i32)* @hash_str, { 3, 2, 0, 1 }
}

define i32 @hashtable_iter_next(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2418c:
  %0 = add i32 %arg2, 4, !insn.addr !10497
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10497
  %2 = load i32, i32* %1, align 4, !insn.addr !10497
  %3 = add i32 %arg1, 12, !insn.addr !10498
  %4 = icmp eq i32 %2, %3, !insn.addr !10499
  %spec.select = select i1 %4, i32 0, i32 %2
  ret i32 %spec.select, !insn.addr !10500
}

define i32 @hashtable_iter_key(i32 %arg1) local_unnamed_addr {
dec_label_pc_241bc:
  %0 = add i32 %arg1, 16, !insn.addr !10501
  ret i32 %0, !insn.addr !10502
}

define i32 @hashtable_iter_serial(i32 %arg1) local_unnamed_addr {
dec_label_pc_241dc:
  %0 = add i32 %arg1, 12, !insn.addr !10503
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10503
  %2 = load i32, i32* %1, align 4, !insn.addr !10503
  ret i32 %2, !insn.addr !10504
}

define i32 @hashtable_iter_value(i32 %arg1) local_unnamed_addr {
dec_label_pc_241fc:
  %0 = add i32 %arg1, 8, !insn.addr !10505
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10505
  %2 = load i32, i32* %1, align 4, !insn.addr !10505
  ret i32 %2, !insn.addr !10506
}

define i32 @hashtable_iter_set(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2421c:
  %0 = add i32 %arg1, 8, !insn.addr !10507
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10507
  %2 = load i32, i32* %1, align 4, !insn.addr !10507
  %3 = call i32 @json_decref.64(i32 %2), !insn.addr !10508
  store i32 %arg2, i32* %1, align 4, !insn.addr !10509
  ret i32 %3, !insn.addr !10510

; uselistorder directives
  uselistorder i32 (i32)* @json_decref.64, { 3, 0, 1, 2 }
}

define i32 @json_incref(i32 %arg1) local_unnamed_addr {
dec_label_pc_24244:
  %0 = icmp eq i32 %arg1, 0, !insn.addr !10511
  br i1 %0, label %dec_label_pc_24266, label %dec_label_pc_24252, !insn.addr !10512

dec_label_pc_24252:                               ; preds = %dec_label_pc_24244
  %1 = add i32 %arg1, 4, !insn.addr !10513
  %2 = inttoptr i32 %1 to i32*, !insn.addr !10513
  %3 = load i32, i32* %2, align 4, !insn.addr !10513
  %4 = icmp eq i32 %3, -1, !insn.addr !10514
  br i1 %4, label %dec_label_pc_24266, label %dec_label_pc_2425c, !insn.addr !10515

dec_label_pc_2425c:                               ; preds = %dec_label_pc_24252
  %5 = add i32 %3, 1, !insn.addr !10516
  store i32 %5, i32* %2, align 4, !insn.addr !10517
  br label %dec_label_pc_24266, !insn.addr !10517

dec_label_pc_24266:                               ; preds = %dec_label_pc_2425c, %dec_label_pc_24252, %dec_label_pc_24244
  ret i32 %arg1, !insn.addr !10518
}

define i32 @json_decref.65(i32 %arg1) local_unnamed_addr {
dec_label_pc_24274:
  %r0.0.reg2mem = alloca i32, !insn.addr !10519
  %0 = icmp eq i32 %arg1, 0, !insn.addr !10520
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !10521
  br i1 %0, label %dec_label_pc_242a4, label %dec_label_pc_24282, !insn.addr !10521

dec_label_pc_24282:                               ; preds = %dec_label_pc_24274
  %1 = add i32 %arg1, 4, !insn.addr !10522
  %2 = inttoptr i32 %1 to i32*, !insn.addr !10522
  %3 = load i32, i32* %2, align 4, !insn.addr !10522
  %4 = icmp eq i32 %3, -1, !insn.addr !10523
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !10524
  br i1 %4, label %dec_label_pc_242a4, label %dec_label_pc_2428c, !insn.addr !10524

dec_label_pc_2428c:                               ; preds = %dec_label_pc_24282
  %5 = add i32 %3, -1, !insn.addr !10525
  store i32 %5, i32* %2, align 4, !insn.addr !10526
  %6 = icmp eq i32 %5, 0, !insn.addr !10527
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !10528
  br i1 %6, label %dec_label_pc_2429e, label %dec_label_pc_242a4, !insn.addr !10528

dec_label_pc_2429e:                               ; preds = %dec_label_pc_2428c
  %7 = call i32 @json_delete(i32 %arg1), !insn.addr !10529
  store i32 %7, i32* %r0.0.reg2mem, !insn.addr !10529
  br label %dec_label_pc_242a4, !insn.addr !10529

dec_label_pc_242a4:                               ; preds = %dec_label_pc_2428c, %dec_label_pc_2429e, %dec_label_pc_24282, %dec_label_pc_24274
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !10530

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_242a4, { 1, 0, 2, 3 }
}

define i32 @json_object_set_nocheck(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_242ac:
  %0 = call i32 @json_incref(i32 %arg3), !insn.addr !10531
  %1 = call i32 @json_object_set_new_nocheck(i32 %arg1, i32 %arg2, i32 %0), !insn.addr !10532
  ret i32 %1, !insn.addr !10533
}

define i32 @json_array_append(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_242d8:
  %0 = call i32 @json_incref(i32 %arg2), !insn.addr !10534
  %1 = call i32 @json_array_append_new(i32 %arg1, i32 %0), !insn.addr !10535
  ret i32 %1, !insn.addr !10536

; uselistorder directives
  uselistorder i32 (i32)* @json_incref, { 1, 0 }
}

define i32 @error_set(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24300:
  %r0.0.reg2mem = alloca i32, !insn.addr !10537
  %stack_var_-32.0.reg2mem = alloca i32, !insn.addr !10537
  %stack_var_-28.0.reg2mem = alloca i32, !insn.addr !10537
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !10537
  %stack_var_-20.0.reg2mem = alloca i32, !insn.addr !10537
  %stack_var_-360 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-4, align 4, !insn.addr !10537
  %0 = icmp eq i32 %arg1, 0, !insn.addr !10538
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !10539
  br i1 %0, label %dec_label_pc_24442, label %dec_label_pc_24338, !insn.addr !10539

dec_label_pc_24338:                               ; preds = %dec_label_pc_24300
  %1 = ptrtoint i32* %stack_var_-200 to i32, !insn.addr !10540
  %2 = ptrtoint i32* %stack_var_-4 to i32, !insn.addr !10541
  %3 = bitcast i32* %stack_var_-200 to i8*, !insn.addr !10542
  %4 = call i32 @vsnprintf(i8* nonnull %3, i32 160, i8* %arg3, i32 %2), !insn.addr !10542
  %5 = icmp eq i32 %arg2, 0, !insn.addr !10543
  store i32 -1, i32* %stack_var_-20.0.reg2mem, !insn.addr !10544
  store i32 -1, i32* %stack_var_-24.0.reg2mem, !insn.addr !10544
  store i32 0, i32* %stack_var_-28.0.reg2mem, !insn.addr !10544
  store i32 %1, i32* %stack_var_-32.0.reg2mem, !insn.addr !10544
  br i1 %5, label %dec_label_pc_2441e, label %dec_label_pc_24362, !insn.addr !10544

dec_label_pc_24362:                               ; preds = %dec_label_pc_24338
  %6 = add i32 %arg2, 40, !insn.addr !10545
  %7 = inttoptr i32 %6 to i32*, !insn.addr !10546
  %8 = call i32 @strbuffer_value(i32* %7), !insn.addr !10546
  %9 = add i32 %arg2, 24, !insn.addr !10547
  %10 = inttoptr i32 %9 to i32*, !insn.addr !10547
  %11 = load i32, i32* %10, align 4, !insn.addr !10547
  %12 = add i32 %arg2, 28, !insn.addr !10548
  %13 = inttoptr i32 %12 to i32*, !insn.addr !10548
  %14 = load i32, i32* %13, align 4, !insn.addr !10548
  %15 = add i32 %arg2, 36, !insn.addr !10549
  %16 = inttoptr i32 %15 to i32*, !insn.addr !10549
  %17 = load i32, i32* %16, align 4, !insn.addr !10549
  %18 = icmp eq i32 %8, 0, !insn.addr !10550
  br i1 %18, label %dec_label_pc_243de, label %dec_label_pc_24398, !insn.addr !10551

dec_label_pc_24398:                               ; preds = %dec_label_pc_24362
  %19 = inttoptr i32 %8 to i8*, !insn.addr !10552
  %20 = load i8, i8* %19, align 1, !insn.addr !10553
  %21 = icmp eq i8 %20, 0, !insn.addr !10554
  br i1 %21, label %dec_label_pc_243de, label %dec_label_pc_243a2, !insn.addr !10555

dec_label_pc_243a2:                               ; preds = %dec_label_pc_24398
  %22 = add i32 %arg2, 44, !insn.addr !10556
  %23 = inttoptr i32 %22 to i32*, !insn.addr !10556
  %24 = load i32, i32* %23, align 4, !insn.addr !10556
  %25 = icmp ult i32 %24, 20, !insn.addr !10557
  %26 = icmp ne i1 %25, true, !insn.addr !10557
  %27 = icmp eq i32 %24, 20, !insn.addr !10557
  %28 = icmp ne i1 %27, true, !insn.addr !10558
  %29 = icmp eq i1 %26, %28, !insn.addr !10558
  store i32 %11, i32* %stack_var_-20.0.reg2mem, !insn.addr !10558
  store i32 %14, i32* %stack_var_-24.0.reg2mem, !insn.addr !10558
  store i32 %17, i32* %stack_var_-28.0.reg2mem, !insn.addr !10558
  store i32 %1, i32* %stack_var_-32.0.reg2mem, !insn.addr !10558
  br i1 %29, label %dec_label_pc_2441e, label %dec_label_pc_243ac, !insn.addr !10558

dec_label_pc_243ac:                               ; preds = %dec_label_pc_243a2
  %30 = bitcast i32* %stack_var_-360 to i8*, !insn.addr !10559
  %31 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* nonnull %30, i32 160, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2cf34, i32 0, i32 0), i32* nonnull %stack_var_-200, i8* nonnull %19), !insn.addr !10559
  %32 = ptrtoint i32* %stack_var_-360 to i32, !insn.addr !10560
  store i32 %11, i32* %stack_var_-20.0.reg2mem, !insn.addr !10561
  store i32 %14, i32* %stack_var_-24.0.reg2mem, !insn.addr !10561
  store i32 %17, i32* %stack_var_-28.0.reg2mem, !insn.addr !10561
  store i32 %32, i32* %stack_var_-32.0.reg2mem, !insn.addr !10561
  br label %dec_label_pc_2441e, !insn.addr !10561

dec_label_pc_243de:                               ; preds = %dec_label_pc_24398, %dec_label_pc_24362
  %33 = add i32 %arg2, 20, !insn.addr !10562
  %34 = inttoptr i32 %33 to i32*, !insn.addr !10562
  %35 = load i32, i32* %34, align 4, !insn.addr !10562
  %36 = icmp eq i32 %35, -2, !insn.addr !10563
  store i32 %11, i32* %stack_var_-20.0.reg2mem, !insn.addr !10564
  store i32 %14, i32* %stack_var_-24.0.reg2mem, !insn.addr !10564
  store i32 %17, i32* %stack_var_-28.0.reg2mem, !insn.addr !10564
  store i32 %1, i32* %stack_var_-32.0.reg2mem, !insn.addr !10564
  br i1 %36, label %dec_label_pc_2441e, label %dec_label_pc_243f4, !insn.addr !10564

dec_label_pc_243f4:                               ; preds = %dec_label_pc_243de
  %37 = bitcast i32* %stack_var_-360 to i8*, !insn.addr !10565
  %38 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* nonnull %37, i32 160, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2cf44, i32 0, i32 0), i32* nonnull %stack_var_-200), !insn.addr !10565
  %39 = ptrtoint i32* %stack_var_-360 to i32, !insn.addr !10566
  store i32 %11, i32* %stack_var_-20.0.reg2mem, !insn.addr !10566
  store i32 %14, i32* %stack_var_-24.0.reg2mem, !insn.addr !10566
  store i32 %17, i32* %stack_var_-28.0.reg2mem, !insn.addr !10566
  store i32 %39, i32* %stack_var_-32.0.reg2mem, !insn.addr !10566
  br label %dec_label_pc_2441e, !insn.addr !10566

dec_label_pc_2441e:                               ; preds = %dec_label_pc_243de, %dec_label_pc_243f4, %dec_label_pc_243ac, %dec_label_pc_243a2, %dec_label_pc_24338
  %stack_var_-32.0.reload = load i32, i32* %stack_var_-32.0.reg2mem
  %stack_var_-28.0.reload = load i32, i32* %stack_var_-28.0.reg2mem
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %stack_var_-20.0.reload = load i32, i32* %stack_var_-20.0.reg2mem
  %40 = call i32 @jsonp_error_set(i32 %arg1, i32 %stack_var_-20.0.reload, i32 %stack_var_-24.0.reload, i32 %stack_var_-28.0.reload, i32 ptrtoint ([3 x i8]* @global_var_2cf58 to i32), i32 %stack_var_-32.0.reload), !insn.addr !10567
  store i32 %40, i32* %r0.0.reg2mem, !insn.addr !10567
  br label %dec_label_pc_24442, !insn.addr !10567

dec_label_pc_24442:                               ; preds = %dec_label_pc_2441e, %dec_label_pc_24300
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !10568

; uselistorder directives
  uselistorder i32 %24, { 1, 0 }
  uselistorder i8* %19, { 1, 0 }
  uselistorder i32 %17, { 3, 0, 1, 2 }
  uselistorder i32 %14, { 3, 0, 1, 2 }
  uselistorder i32 %11, { 3, 0, 1, 2 }
  uselistorder i32* %stack_var_-360, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-20.0.reg2mem, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32* %stack_var_-24.0.reg2mem, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32* %stack_var_-28.0.reg2mem, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32* %stack_var_-32.0.reg2mem, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 %arg2, { 1, 0, 3, 2, 5, 6, 4 }
  uselistorder label %dec_label_pc_2441e, { 1, 0, 2, 3, 4 }
}

define i32 @stream_init(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24450:
  %0 = inttoptr i32 %arg1 to i32*, !insn.addr !10569
  store i32 %arg2, i32* %0, align 4, !insn.addr !10569
  %1 = add i32 %arg1, 4, !insn.addr !10570
  %2 = inttoptr i32 %1 to i32*, !insn.addr !10570
  store i32 %arg3, i32* %2, align 4, !insn.addr !10570
  %3 = add i32 %arg1, 8, !insn.addr !10571
  %4 = inttoptr i32 %3 to i8*, !insn.addr !10571
  store i8 0, i8* %4, align 1, !insn.addr !10571
  %5 = add i32 %arg1, 16, !insn.addr !10572
  %6 = inttoptr i32 %5 to i32*, !insn.addr !10572
  store i32 0, i32* %6, align 4, !insn.addr !10572
  %7 = add i32 %arg1, 20, !insn.addr !10573
  %8 = inttoptr i32 %7 to i32*, !insn.addr !10573
  store i32 0, i32* %8, align 4, !insn.addr !10573
  %9 = add i32 %arg1, 24, !insn.addr !10574
  %10 = inttoptr i32 %9 to i32*, !insn.addr !10574
  store i32 1, i32* %10, align 4, !insn.addr !10574
  %11 = add i32 %arg1, 28, !insn.addr !10575
  %12 = inttoptr i32 %11 to i32*, !insn.addr !10575
  store i32 0, i32* %12, align 4, !insn.addr !10575
  %13 = add i32 %arg1, 36, !insn.addr !10576
  %14 = inttoptr i32 %13 to i32*, !insn.addr !10576
  store i32 0, i32* %14, align 4, !insn.addr !10576
  ret i32 %arg1, !insn.addr !10577

; uselistorder directives
  uselistorder i32 %arg1, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
}

define i32 @stream_get(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24498:
  %r3.0.reg2mem = alloca i32, !insn.addr !10578
  %storemerge2.reg2mem = alloca i32, !insn.addr !10578
  %0 = add i32 %arg1, 20, !insn.addr !10579
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10579
  %2 = load i32, i32* %1, align 4, !insn.addr !10579
  %3 = icmp eq i32 %2, 0, !insn.addr !10580
  store i32 %2, i32* %r3.0.reg2mem, !insn.addr !10581
  br i1 %3, label %dec_label_pc_244b0, label %dec_label_pc_24606, !insn.addr !10581

dec_label_pc_244b0:                               ; preds = %dec_label_pc_24498
  %4 = add i32 %arg1, 16, !insn.addr !10582
  %5 = inttoptr i32 %4 to i32*, !insn.addr !10582
  %6 = load i32, i32* %5, align 4, !insn.addr !10582
  %7 = add i32 %arg1, 8
  %8 = add i32 %6, %7, !insn.addr !10583
  %9 = inttoptr i32 %8 to i8*, !insn.addr !10583
  %10 = load i8, i8* %9, align 1, !insn.addr !10583
  %11 = icmp eq i8 %10, 0, !insn.addr !10584
  br i1 %11, label %dec_label_pc_244be, label %dec_label_pc_24588, !insn.addr !10585

dec_label_pc_244be:                               ; preds = %dec_label_pc_244b0
  %12 = add i32 %arg1, 4, !insn.addr !10586
  %13 = inttoptr i32 %12 to i32*, !insn.addr !10586
  %14 = load i32, i32* %13, align 4, !insn.addr !10586
  %15 = icmp eq i32 %14, -1, !insn.addr !10587
  br i1 %15, label %dec_label_pc_244d4, label %dec_label_pc_244e2, !insn.addr !10588

dec_label_pc_244d4:                               ; preds = %dec_label_pc_244be
  store i32 -1, i32* %1, align 4, !insn.addr !10589
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !10590
  br label %dec_label_pc_24606, !insn.addr !10590

dec_label_pc_244e2:                               ; preds = %dec_label_pc_244be
  %16 = trunc i32 %14 to i8, !insn.addr !10591
  %17 = inttoptr i32 %7 to i8*, !insn.addr !10591
  store i8 %16, i8* %17, align 1, !insn.addr !10591
  store i32 0, i32* %5, align 4, !insn.addr !10592
  %18 = and i32 %14, -128
  %19 = icmp eq i32 %18, 128
  br i1 %19, label %dec_label_pc_244fc, label %dec_label_pc_24582, !insn.addr !10593

dec_label_pc_244fc:                               ; preds = %dec_label_pc_244e2
  %20 = urem i32 %14, 256, !insn.addr !10594
  %21 = call i32 @utf8_check_first(i32 %20), !insn.addr !10595
  %22 = icmp eq i32 %21, 0, !insn.addr !10596
  br i1 %22, label %dec_label_pc_245e2, label %dec_label_pc_2450e, !insn.addr !10597

dec_label_pc_2450e:                               ; preds = %dec_label_pc_244fc
  %23 = icmp sgt i32 %21, 1
  store i32 1, i32* %storemerge2.reg2mem, !insn.addr !10598
  br i1 %23, label %dec_label_pc_24538, label %dec_label_pc_24532, !insn.addr !10598

dec_label_pc_24532:                               ; preds = %dec_label_pc_2450e
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2cf5c, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2cf68, i32 0, i32 0), i32 175, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2d2a0, i32 0, i32 0)), !insn.addr !10599
  br label %dec_label_pc_24560

dec_label_pc_24538:                               ; preds = %dec_label_pc_2450e, %dec_label_pc_24538
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %24 = load i32, i32* %13, align 4, !insn.addr !10600
  %25 = add i32 %storemerge2.reload, %7, !insn.addr !10601
  %26 = trunc i32 %24 to i8, !insn.addr !10602
  %27 = inttoptr i32 %25 to i8*, !insn.addr !10602
  store i8 %26, i8* %27, align 1, !insn.addr !10602
  %28 = add nuw nsw i32 %storemerge2.reload, 1, !insn.addr !10603
  %29 = icmp slt i32 %28, %21, !insn.addr !10604
  store i32 %28, i32* %storemerge2.reg2mem, !insn.addr !10604
  br i1 %29, label %dec_label_pc_24538, label %dec_label_pc_24560, !insn.addr !10604

dec_label_pc_24560:                               ; preds = %dec_label_pc_24538, %dec_label_pc_24532
  %30 = call i32 @utf8_check_full(i32 %7, i32 %21, i32 0), !insn.addr !10605
  %31 = icmp eq i32 %30, 0, !insn.addr !10606
  br i1 %31, label %dec_label_pc_245e6, label %dec_label_pc_24574, !insn.addr !10607

dec_label_pc_24574:                               ; preds = %dec_label_pc_24560
  %32 = add i32 %21, %7, !insn.addr !10608
  %33 = inttoptr i32 %32 to i8*, !insn.addr !10609
  store i8 0, i8* %33, align 1, !insn.addr !10609
  br label %dec_label_pc_24588, !insn.addr !10610

dec_label_pc_24582:                               ; preds = %dec_label_pc_244e2
  %34 = add i32 %arg1, 9, !insn.addr !10611
  %35 = inttoptr i32 %34 to i8*, !insn.addr !10611
  store i8 0, i8* %35, align 1, !insn.addr !10611
  br label %dec_label_pc_24588, !insn.addr !10611

dec_label_pc_24588:                               ; preds = %dec_label_pc_244b0, %dec_label_pc_24582, %dec_label_pc_24574
  %36 = load i32, i32* %5, align 4, !insn.addr !10612
  %37 = add i32 %36, %7, !insn.addr !10613
  %38 = inttoptr i32 %37 to i8*, !insn.addr !10613
  %39 = load i8, i8* %38, align 1, !insn.addr !10613
  %40 = add i32 %36, 1, !insn.addr !10614
  store i32 %40, i32* %5, align 4, !insn.addr !10615
  %41 = add i32 %arg1, 36, !insn.addr !10616
  %42 = inttoptr i32 %41 to i32*, !insn.addr !10616
  %43 = load i32, i32* %42, align 4, !insn.addr !10616
  %44 = add i32 %43, 1, !insn.addr !10617
  store i32 %44, i32* %42, align 4, !insn.addr !10618
  %45 = icmp eq i8 %39, 10, !insn.addr !10619
  br i1 %45, label %dec_label_pc_245aa, label %dec_label_pc_245c4, !insn.addr !10620

dec_label_pc_245aa:                               ; preds = %dec_label_pc_24588
  %46 = add i32 %arg1, 24, !insn.addr !10621
  %47 = inttoptr i32 %46 to i32*, !insn.addr !10621
  %48 = load i32, i32* %47, align 4, !insn.addr !10621
  %49 = add i32 %48, 1, !insn.addr !10622
  store i32 %49, i32* %47, align 4, !insn.addr !10623
  %50 = add i32 %arg1, 28, !insn.addr !10624
  %51 = inttoptr i32 %50 to i32*, !insn.addr !10624
  %52 = load i32, i32* %51, align 4, !insn.addr !10624
  %53 = add i32 %arg1, 32, !insn.addr !10625
  %54 = inttoptr i32 %53 to i32*, !insn.addr !10625
  store i32 %52, i32* %54, align 4, !insn.addr !10625
  store i32 0, i32* %51, align 4, !insn.addr !10626
  store i32 10, i32* %r3.0.reg2mem, !insn.addr !10627
  br label %dec_label_pc_24606, !insn.addr !10627

dec_label_pc_245c4:                               ; preds = %dec_label_pc_24588
  %55 = zext i8 %39 to i32, !insn.addr !10613
  %56 = call i32 @utf8_check_first(i32 %55), !insn.addr !10628
  %57 = icmp eq i32 %56, 0, !insn.addr !10629
  store i32 %55, i32* %r3.0.reg2mem, !insn.addr !10630
  br i1 %57, label %dec_label_pc_24606, label %dec_label_pc_245d4, !insn.addr !10630

dec_label_pc_245d4:                               ; preds = %dec_label_pc_245c4
  %58 = add i32 %arg1, 28, !insn.addr !10631
  %59 = inttoptr i32 %58 to i32*, !insn.addr !10631
  %60 = load i32, i32* %59, align 4, !insn.addr !10631
  %61 = add i32 %60, 1, !insn.addr !10632
  store i32 %61, i32* %59, align 4, !insn.addr !10633
  store i32 %55, i32* %r3.0.reg2mem, !insn.addr !10633
  br label %dec_label_pc_24606, !insn.addr !10633

dec_label_pc_245e2:                               ; preds = %dec_label_pc_244fc
  %62 = call i32 @__asm_nop(i32 0, i32 %arg2, i32 0, i32 0), !insn.addr !10634
  br label %dec_label_pc_245e8, !insn.addr !10635

dec_label_pc_245e6:                               ; preds = %dec_label_pc_24560
  %63 = call i32 @__asm_nop(i32 0, i32 %21, i32 0, i32 0), !insn.addr !10636
  br label %dec_label_pc_245e8, !insn.addr !10636

dec_label_pc_245e8:                               ; preds = %dec_label_pc_245e6, %dec_label_pc_245e2
  store i32 -2, i32* %1, align 4, !insn.addr !10637
  %64 = call i32 @error_set(i32 %arg2, i32 %arg1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_2cf88, i32 0, i32 0), i32 %14), !insn.addr !10638
  store i32 -2, i32* %r3.0.reg2mem, !insn.addr !10639
  br label %dec_label_pc_24606, !insn.addr !10639

dec_label_pc_24606:                               ; preds = %dec_label_pc_24498, %dec_label_pc_245aa, %dec_label_pc_245c4, %dec_label_pc_245d4, %dec_label_pc_245e8, %dec_label_pc_244d4
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !10640

; uselistorder directives
  uselistorder i32 %55, { 1, 0, 2 }
  uselistorder i8 %39, { 1, 0 }
  uselistorder i32 %36, { 1, 0 }
  uselistorder i32 %21, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %14, { 2, 0, 1, 3, 4 }
  uselistorder i32 %7, { 0, 1, 5, 2, 4, 3 }
  uselistorder i32* %storemerge2.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 5, 4, 3, 2, 6, 1 }
  uselistorder i32 %arg1, { 1, 2, 4, 3, 5, 6, 7, 9, 0, 8, 10 }
  uselistorder label %dec_label_pc_24606, { 4, 3, 2, 1, 5, 0 }
  uselistorder label %dec_label_pc_24588, { 1, 2, 0 }
  uselistorder label %dec_label_pc_24538, { 1, 0 }
}

define i32 @stream_unget(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24610:
  %r0.3.reg2mem = alloca i32, !insn.addr !10641
  %r3.0.reg2mem = alloca i32, !insn.addr !10641
  %r2.0.reg2mem = alloca i32, !insn.addr !10641
  %r1.0.reg2mem = alloca i32, !insn.addr !10641
  %r0.2.reg2mem = alloca i32, !insn.addr !10641
  %r0.1.reg2mem = alloca i32, !insn.addr !10641
  %.reg2mem = alloca i32, !insn.addr !10641
  %r0.0.reg2mem = alloca i32, !insn.addr !10641
  %switch = icmp ugt i32 %arg2, -3
  store i32 %arg1, i32* %r0.2.reg2mem
  store i32 %arg2, i32* %r1.0.reg2mem
  store i32 %arg2, i32* %r3.0.reg2mem
  br i1 %switch, label %dec_label_pc_246c8, label %dec_label_pc_2462a

dec_label_pc_2462a:                               ; preds = %dec_label_pc_24610
  %0 = add i32 %arg1, 36, !insn.addr !10642
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10642
  %2 = load i32, i32* %1, align 4, !insn.addr !10642
  %3 = add i32 %2, -1, !insn.addr !10643
  store i32 %3, i32* %1, align 4, !insn.addr !10644
  %4 = icmp eq i32 %arg2, 10, !insn.addr !10645
  br i1 %4, label %dec_label_pc_2463a, label %dec_label_pc_2464e, !insn.addr !10646

dec_label_pc_2463a:                               ; preds = %dec_label_pc_2462a
  %5 = add i32 %arg1, 24, !insn.addr !10647
  %6 = inttoptr i32 %5 to i32*, !insn.addr !10647
  %7 = load i32, i32* %6, align 4, !insn.addr !10647
  %8 = add i32 %7, -1, !insn.addr !10648
  store i32 %8, i32* %6, align 4, !insn.addr !10649
  %9 = add i32 %arg1, 32, !insn.addr !10650
  %10 = inttoptr i32 %9 to i32*, !insn.addr !10650
  %11 = load i32, i32* %10, align 4, !insn.addr !10650
  %12 = add i32 %arg1, 28, !insn.addr !10651
  %13 = inttoptr i32 %12 to i32*, !insn.addr !10651
  store i32 %11, i32* %13, align 4, !insn.addr !10651
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !10652
  br label %dec_label_pc_24668, !insn.addr !10652

dec_label_pc_2464e:                               ; preds = %dec_label_pc_2462a
  %14 = urem i32 %arg2, 256, !insn.addr !10653
  %15 = call i32 @utf8_check_first(i32 %14), !insn.addr !10654
  %16 = icmp eq i32 %15, 0, !insn.addr !10655
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !10656
  br i1 %16, label %dec_label_pc_24668, label %dec_label_pc_2465e, !insn.addr !10656

dec_label_pc_2465e:                               ; preds = %dec_label_pc_2464e
  %17 = add i32 %arg1, 28, !insn.addr !10657
  %18 = inttoptr i32 %17 to i32*, !insn.addr !10657
  %19 = load i32, i32* %18, align 4, !insn.addr !10657
  %20 = add i32 %19, -1, !insn.addr !10658
  store i32 %20, i32* %18, align 4, !insn.addr !10659
  store i32 %15, i32* %r0.0.reg2mem, !insn.addr !10659
  br label %dec_label_pc_24668, !insn.addr !10659

dec_label_pc_24668:                               ; preds = %dec_label_pc_2465e, %dec_label_pc_2464e, %dec_label_pc_2463a
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %21 = add i32 %arg1, 16, !insn.addr !10660
  %22 = inttoptr i32 %21 to i32*, !insn.addr !10660
  %23 = load i32, i32* %22, align 4, !insn.addr !10660
  %24 = icmp eq i32 %23, 0, !insn.addr !10661
  store i32 %23, i32* %.reg2mem, !insn.addr !10662
  store i32 %r0.0.reload, i32* %r0.1.reg2mem, !insn.addr !10662
  br i1 %24, label %dec_label_pc_24670, label %dec_label_pc_2468e, !insn.addr !10662

dec_label_pc_24670:                               ; preds = %dec_label_pc_24668
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2cfa4, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2cf68, i32 0, i32 0), i32 224, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2d290, i32 0, i32 0)), !insn.addr !10663
  %.pre = load i32, i32* %22, align 4
  store i32 %.pre, i32* %.reg2mem, !insn.addr !10663
  store i32 ptrtoint (i32* @1 to i32), i32* %r0.1.reg2mem, !insn.addr !10663
  br label %dec_label_pc_2468e, !insn.addr !10663

dec_label_pc_2468e:                               ; preds = %dec_label_pc_24668, %dec_label_pc_24670
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %.reload = load i32, i32* %.reg2mem, !insn.addr !10664
  %25 = add i32 %.reload, -1, !insn.addr !10665
  store i32 %25, i32* %22, align 4, !insn.addr !10666
  %26 = add i32 %arg1, 8, !insn.addr !10667
  %27 = add i32 %26, %25, !insn.addr !10668
  %28 = inttoptr i32 %27 to i8*, !insn.addr !10668
  %29 = load i8, i8* %28, align 1, !insn.addr !10668
  %30 = zext i8 %29 to i32, !insn.addr !10668
  %31 = icmp eq i32 %30, %arg2, !insn.addr !10669
  store i32 %r0.1.reload, i32* %r0.3.reg2mem, !insn.addr !10670
  br i1 %31, label %dec_label_pc_246ca, label %dec_label_pc_246aa, !insn.addr !10670

dec_label_pc_246aa:                               ; preds = %dec_label_pc_2468e
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_2cfbc, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2cf68, i32 0, i32 0), i32 226, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2d290, i32 0, i32 0)), !insn.addr !10671
  store i32 ptrtoint (i32* @1 to i32), i32* %r0.2.reg2mem, !insn.addr !10671
  store i32 ptrtoint ([32 x i8]* @global_var_2cf68 to i32), i32* %r1.0.reg2mem, !insn.addr !10671
  store i32 226, i32* %r2.0.reg2mem, !insn.addr !10671
  store i32 ptrtoint ([13 x i8]* @global_var_2d290 to i32), i32* %r3.0.reg2mem, !insn.addr !10671
  br label %dec_label_pc_246c8, !insn.addr !10671

dec_label_pc_246c8:                               ; preds = %dec_label_pc_24610, %dec_label_pc_246aa
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  %r2.0.reload = load i32, i32* %r2.0.reg2mem
  %r1.0.reload = load i32, i32* %r1.0.reg2mem
  %r0.2.reload = load i32, i32* %r0.2.reg2mem
  %32 = call i32 @__asm_nop(i32 %r0.2.reload, i32 %r1.0.reload, i32 %r2.0.reload, i32 %r3.0.reload), !insn.addr !10672
  store i32 %32, i32* %r0.3.reg2mem, !insn.addr !10672
  br label %dec_label_pc_246ca, !insn.addr !10672

dec_label_pc_246ca:                               ; preds = %dec_label_pc_246c8, %dec_label_pc_2468e
  %r0.3.reload = load i32, i32* %r0.3.reg2mem
  ret i32 %r0.3.reload, !insn.addr !10673

; uselistorder directives
  uselistorder i32* %22, { 1, 0, 2 }
  uselistorder i32* %.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r1.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.3.reg2mem, { 0, 2, 1 }
  uselistorder [13 x i8]* @global_var_2d290, { 1, 0 }
  uselistorder i32 %arg2, { 4, 2, 5, 0, 1, 3 }
  uselistorder i32 %arg1, { 2, 4, 3, 1, 6, 5, 7, 8, 0 }
  uselistorder label %dec_label_pc_246c8, { 1, 0 }
  uselistorder label %dec_label_pc_2468e, { 1, 0 }
}

define i32 @lex_get(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_246d4:
  %0 = call i32 @stream_get(i32 %arg1, i32 %arg2), !insn.addr !10674
  ret i32 %0, !insn.addr !10675
}

define i32 @lex_save(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_246f4:
  %0 = add i32 %arg1, 40, !insn.addr !10676
  %1 = urem i32 %arg2, 256, !insn.addr !10677
  %2 = call i32 @strbuffer_append_byte(i32 %0, i32 %1), !insn.addr !10678
  ret i32 %2, !insn.addr !10679
}

define i32 @lex_get_save(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24718:
  %0 = call i32 @stream_get(i32 %arg1, i32 %arg2), !insn.addr !10680
  %1 = icmp ugt i32 %0, -3
  br i1 %1, label %dec_label_pc_24746, label %dec_label_pc_2473e, !insn.addr !10681

dec_label_pc_2473e:                               ; preds = %dec_label_pc_24718
  %2 = call i32 @lex_save(i32 %arg1, i32 %0), !insn.addr !10682
  br label %dec_label_pc_24746, !insn.addr !10682

dec_label_pc_24746:                               ; preds = %dec_label_pc_2473e, %dec_label_pc_24718
  ret i32 %0, !insn.addr !10683

; uselistorder directives
  uselistorder i32 %0, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @stream_get, { 1, 0 }
}

define i32 @lex_unget(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24754:
  %0 = call i32 @stream_unget(i32 %arg1, i32 %arg2), !insn.addr !10684
  ret i32 %0, !insn.addr !10685
}

define i32 @lex_unget_unsave(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24770:
  %r0.0.reg2mem = alloca i32, !insn.addr !10686
  %0 = icmp ugt i32 %arg2, -3
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !10687
  br i1 %0, label %dec_label_pc_247ca, label %dec_label_pc_2478a, !insn.addr !10687

dec_label_pc_2478a:                               ; preds = %dec_label_pc_24770
  %1 = call i32 @stream_unget(i32 %arg1, i32 %arg2), !insn.addr !10688
  %2 = add i32 %arg1, 40, !insn.addr !10689
  %3 = call i32 @strbuffer_pop(i32 %2), !insn.addr !10690
  %4 = urem i32 %3, 256, !insn.addr !10691
  %5 = icmp eq i32 %4, %arg2, !insn.addr !10692
  store i32 %3, i32* %r0.0.reg2mem, !insn.addr !10693
  br i1 %5, label %dec_label_pc_247ca, label %dec_label_pc_247aa, !insn.addr !10693

dec_label_pc_247aa:                               ; preds = %dec_label_pc_2478a
  call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_2cfe4, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2cf68, i32 0, i32 0), i32 268, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2d27c, i32 0, i32 0)), !insn.addr !10694
  store i32 ptrtoint (i32* @1 to i32), i32* %r0.0.reg2mem, !insn.addr !10694
  br label %dec_label_pc_247ca, !insn.addr !10694

dec_label_pc_247ca:                               ; preds = %dec_label_pc_247aa, %dec_label_pc_2478a, %dec_label_pc_24770
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !10695

; uselistorder directives
  uselistorder i32 -3, { 20, 21, 19, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @lex_save_cached(i32 %arg1) local_unnamed_addr {
dec_label_pc_247d4:
  %r0.0.lcssa.reg2mem = alloca i32, !insn.addr !10696
  %.reg2mem = alloca i8, !insn.addr !10696
  %0 = add i32 %arg1, 16, !insn.addr !10697
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10697
  %2 = load i32, i32* %1, align 4, !insn.addr !10697
  %3 = add i32 %arg1, 8, !insn.addr !10698
  %4 = add i32 %2, %3, !insn.addr !10699
  %5 = inttoptr i32 %4 to i8*, !insn.addr !10699
  %6 = load i8, i8* %5, align 1, !insn.addr !10699
  %7 = icmp eq i8 %6, 0, !insn.addr !10700
  store i32 %arg1, i32* %r0.0.lcssa.reg2mem, !insn.addr !10701
  br i1 %7, label %dec_label_pc_24812, label %dec_label_pc_247de.lr.ph, !insn.addr !10701

dec_label_pc_247de.lr.ph:                         ; preds = %dec_label_pc_247d4
  %8 = add i32 %arg1, 36
  %9 = inttoptr i32 %8 to i32*
  store i8 %6, i8* %.reg2mem
  br label %dec_label_pc_247de

dec_label_pc_247de:                               ; preds = %dec_label_pc_247de.lr.ph, %dec_label_pc_247de
  %.reload = load i8, i8* %.reg2mem
  %10 = zext i8 %.reload to i32, !insn.addr !10702
  %11 = call i32 @lex_save(i32 %arg1, i32 %10), !insn.addr !10703
  %12 = load i32, i32* %1, align 4, !insn.addr !10704
  %13 = add i32 %12, 1, !insn.addr !10705
  store i32 %13, i32* %1, align 4, !insn.addr !10706
  %14 = load i32, i32* %9, align 4, !insn.addr !10707
  %15 = add i32 %14, 1, !insn.addr !10708
  store i32 %15, i32* %9, align 4, !insn.addr !10709
  %16 = load i32, i32* %1, align 4, !insn.addr !10697
  %17 = add i32 %16, %3, !insn.addr !10699
  %18 = inttoptr i32 %17 to i8*, !insn.addr !10699
  %19 = load i8, i8* %18, align 1, !insn.addr !10699
  %20 = icmp eq i8 %19, 0, !insn.addr !10700
  store i8 %19, i8* %.reg2mem, !insn.addr !10701
  store i32 %11, i32* %r0.0.lcssa.reg2mem, !insn.addr !10701
  br i1 %20, label %dec_label_pc_24812, label %dec_label_pc_247de, !insn.addr !10701

dec_label_pc_24812:                               ; preds = %dec_label_pc_247de, %dec_label_pc_247d4
  %r0.0.lcssa.reload = load i32, i32* %r0.0.lcssa.reg2mem
  ret i32 %r0.0.lcssa.reload, !insn.addr !10710

; uselistorder directives
  uselistorder i32* %1, { 3, 1, 2, 0 }
  uselistorder i8* %.reg2mem, { 1, 0, 2 }
  uselistorder i32 %arg1, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_247de, { 1, 0 }
}

define i32 @decode_unicode_escape(i32 %arg1) local_unnamed_addr {
dec_label_pc_2481c:
  %0 = alloca i32
  %stack_var_-16.0.reg2mem = alloca i32, !insn.addr !10711
  %stack_var_-16.11.reg2mem = alloca i32, !insn.addr !10711
  %storemerge2.reg2mem = alloca i32, !insn.addr !10711
  %1 = load i32, i32* %0
  %2 = trunc i32 %1 to i8
  %3 = icmp eq i8 %2, 117, !insn.addr !10712
  br i1 %3, label %dec_label_pc_24850, label %dec_label_pc_24830, !insn.addr !10713

dec_label_pc_24830:                               ; preds = %dec_label_pc_2481c
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2cfec, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2cf68, i32 0, i32 0), i32 288, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2d264, i32 0, i32 0)), !insn.addr !10714
  br label %dec_label_pc_24850, !insn.addr !10714

dec_label_pc_24850:                               ; preds = %dec_label_pc_24830, %dec_label_pc_2481c
  store i32 1, i32* %storemerge2.reg2mem
  store i32 0, i32* %stack_var_-16.11.reg2mem
  br label %dec_label_pc_24856

dec_label_pc_24856:                               ; preds = %dec_label_pc_24850, %dec_label_pc_248ce
  %stack_var_-16.11.reload = load i32, i32* %stack_var_-16.11.reg2mem
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  %4 = add i32 %storemerge2.reload, %arg1, !insn.addr !10715
  %5 = inttoptr i32 %4 to i8*, !insn.addr !10716
  %6 = load i8, i8* %5, align 1, !insn.addr !10716
  %7 = mul i32 %stack_var_-16.11.reload, 16, !insn.addr !10717
  %8 = icmp ult i8 %6, 47, !insn.addr !10718
  %9 = icmp ne i1 %8, true, !insn.addr !10718
  %10 = icmp eq i8 %6, 47, !insn.addr !10718
  %11 = icmp ne i1 %9, true, !insn.addr !10719
  %12 = or i1 %10, %11, !insn.addr !10719
  br i1 %12, label %dec_label_pc_2487e, label %dec_label_pc_2486c, !insn.addr !10719

dec_label_pc_2486c:                               ; preds = %dec_label_pc_24856
  %13 = icmp ult i8 %6, 57, !insn.addr !10720
  %14 = icmp ne i1 %13, true, !insn.addr !10720
  %15 = icmp eq i8 %6, 57, !insn.addr !10720
  %16 = icmp ne i1 %15, true, !insn.addr !10721
  %17 = icmp eq i1 %14, %16, !insn.addr !10721
  br i1 %17, label %dec_label_pc_2487e, label %dec_label_pc_24872, !insn.addr !10721

dec_label_pc_24872:                               ; preds = %dec_label_pc_2486c
  %18 = zext i8 %6 to i32, !insn.addr !10722
  %19 = add i32 %7, -48, !insn.addr !10723
  %20 = add i32 %19, %18, !insn.addr !10724
  store i32 %20, i32* %stack_var_-16.0.reg2mem, !insn.addr !10725
  br label %dec_label_pc_248ce, !insn.addr !10725

dec_label_pc_2487e:                               ; preds = %dec_label_pc_2486c, %dec_label_pc_24856
  %21 = icmp ult i8 %6, 96, !insn.addr !10726
  %22 = icmp ne i1 %21, true, !insn.addr !10726
  %23 = icmp eq i8 %6, 96, !insn.addr !10726
  %24 = icmp ne i1 %22, true, !insn.addr !10727
  %25 = or i1 %23, %24, !insn.addr !10727
  br i1 %25, label %dec_label_pc_24896, label %dec_label_pc_24884, !insn.addr !10727

dec_label_pc_24884:                               ; preds = %dec_label_pc_2487e
  %26 = icmp ult i8 %6, 122, !insn.addr !10728
  %27 = icmp ne i1 %26, true, !insn.addr !10728
  %28 = icmp eq i8 %6, 122, !insn.addr !10728
  %29 = icmp ne i1 %28, true, !insn.addr !10729
  %30 = icmp eq i1 %27, %29, !insn.addr !10729
  br i1 %30, label %dec_label_pc_24896, label %dec_label_pc_2488a, !insn.addr !10729

dec_label_pc_2488a:                               ; preds = %dec_label_pc_24884
  %31 = zext i8 %6 to i32, !insn.addr !10730
  %32 = add i32 %7, -87, !insn.addr !10731
  %33 = add i32 %32, %31, !insn.addr !10732
  store i32 %33, i32* %stack_var_-16.0.reg2mem, !insn.addr !10733
  br label %dec_label_pc_248ce, !insn.addr !10733

dec_label_pc_24896:                               ; preds = %dec_label_pc_24884, %dec_label_pc_2487e
  %34 = icmp ult i8 %6, 64, !insn.addr !10734
  %35 = icmp ne i1 %34, true, !insn.addr !10734
  %36 = icmp eq i8 %6, 64, !insn.addr !10734
  %37 = icmp ne i1 %35, true, !insn.addr !10735
  %38 = or i1 %36, %37, !insn.addr !10735
  br i1 %38, label %dec_label_pc_248ae, label %dec_label_pc_2489c, !insn.addr !10735

dec_label_pc_2489c:                               ; preds = %dec_label_pc_24896
  %39 = icmp ult i8 %6, 90, !insn.addr !10736
  %40 = icmp ne i1 %39, true, !insn.addr !10736
  %41 = icmp eq i8 %6, 90, !insn.addr !10736
  %42 = icmp ne i1 %41, true, !insn.addr !10737
  %43 = icmp eq i1 %40, %42, !insn.addr !10737
  br i1 %43, label %dec_label_pc_248ae, label %dec_label_pc_248a2, !insn.addr !10737

dec_label_pc_248a2:                               ; preds = %dec_label_pc_2489c
  %44 = zext i8 %6 to i32, !insn.addr !10738
  %45 = add i32 %7, -55, !insn.addr !10739
  %46 = add i32 %45, %44, !insn.addr !10740
  store i32 %46, i32* %stack_var_-16.0.reg2mem, !insn.addr !10741
  br label %dec_label_pc_248ce, !insn.addr !10741

dec_label_pc_248ae:                               ; preds = %dec_label_pc_2489c, %dec_label_pc_24896
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_2cffc, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2cf68, i32 0, i32 0), i32 300, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2d264, i32 0, i32 0)), !insn.addr !10742
  store i32 %7, i32* %stack_var_-16.0.reg2mem, !insn.addr !10742
  br label %dec_label_pc_248ce, !insn.addr !10742

dec_label_pc_248ce:                               ; preds = %dec_label_pc_248ae, %dec_label_pc_248a2, %dec_label_pc_2488a, %dec_label_pc_24872
  %stack_var_-16.0.reload = load i32, i32* %stack_var_-16.0.reg2mem
  %47 = add nuw nsw i32 %storemerge2.reload, 1, !insn.addr !10743
  %48 = icmp ult i32 %47, 5, !insn.addr !10744
  store i32 %47, i32* %storemerge2.reg2mem, !insn.addr !10744
  store i32 %stack_var_-16.0.reload, i32* %stack_var_-16.11.reg2mem, !insn.addr !10744
  br i1 %48, label %dec_label_pc_24856, label %dec_label_pc_248da, !insn.addr !10744

dec_label_pc_248da:                               ; preds = %dec_label_pc_248ce
  ret i32 %stack_var_-16.0.reload, !insn.addr !10745

; uselistorder directives
  uselistorder i32 %7, { 0, 3, 2, 1 }
  uselistorder i8 %6, { 7, 5, 6, 4, 3, 12, 10, 11, 9, 8, 2, 1, 0, 13, 14 }
  uselistorder i32* %storemerge2.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16.11.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16.0.reg2mem, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_24856, { 1, 0 }
}

define i32 @lex_scan_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_248e8:
  %r0.4.reg2mem = alloca i32, !insn.addr !10746
  %stack_var_-16.1.reg2mem = alloca i8*, !insn.addr !10746
  %stack_var_-20.0.reg2mem = alloca i32, !insn.addr !10746
  %r1.2.reg2mem = alloca i32, !insn.addr !10746
  %r0.2.reg2mem = alloca i32, !insn.addr !10746
  %r1.3.ph.be.reg2mem = alloca i32, !insn.addr !10746
  %r0.3.ph.be.reg2mem = alloca i32, !insn.addr !10746
  %stack_var_-16.1.ph.be.reg2mem = alloca i8*, !insn.addr !10746
  %stack_var_-20.0.ph.be.reg2mem = alloca i32, !insn.addr !10746
  %stack_var_-28.0.reg2mem = alloca i32, !insn.addr !10746
  %stack_var_-16.0.reg2mem = alloca i8*, !insn.addr !10746
  %r1.3.ph.reg2mem = alloca i32, !insn.addr !10746
  %r0.3.ph.reg2mem = alloca i32, !insn.addr !10746
  %stack_var_-16.1.ph.reg2mem = alloca i8*, !insn.addr !10746
  %stack_var_-20.0.ph.reg2mem = alloca i32, !insn.addr !10746
  %stack_var_-12.1.reg2mem = alloca i32, !insn.addr !10746
  %stack_var_-12.1.be.reg2mem = alloca i32, !insn.addr !10746
  %stack_var_-12.053.reg2mem = alloca i32, !insn.addr !10746
  %storemerge54.reg2mem = alloca i32, !insn.addr !10746
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %0 = add i32 %arg1, 56, !insn.addr !10747
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10747
  store i32 0, i32* %1, align 4, !insn.addr !10747
  %2 = add i32 %arg1, 52, !insn.addr !10748
  %3 = inttoptr i32 %2 to i32*, !insn.addr !10748
  store i32 -1, i32* %3, align 4, !insn.addr !10748
  %4 = call i32 @lex_get_save(i32 %arg1, i32 %arg2), !insn.addr !10749
  store i32 %4, i32* %stack_var_-12.1.reg2mem, !insn.addr !10750
  br label %dec_label_pc_24a3e, !insn.addr !10750

dec_label_pc_2491e:                               ; preds = %dec_label_pc_24a3e
  %5 = call i32 @error_set(i32 %arg2, i32 %arg1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2d000, i32 0, i32 0), i32 -1), !insn.addr !10751
  br label %dec_label_pc_24c8e, !insn.addr !10752

dec_label_pc_24930:                               ; preds = %dec_label_pc_24a3e
  %6 = icmp ugt i32 %stack_var_-12.1.reload, 31
  br i1 %6, label %dec_label_pc_24972, label %dec_label_pc_2493c, !insn.addr !10753

dec_label_pc_2493c:                               ; preds = %dec_label_pc_24930
  %7 = call i32 @lex_unget_unsave(i32 %arg1, i32 %stack_var_-12.1.reload), !insn.addr !10754
  %8 = icmp eq i32 %stack_var_-12.1.reload, 10, !insn.addr !10755
  br i1 %8, label %dec_label_pc_2494a, label %dec_label_pc_2495e, !insn.addr !10756

dec_label_pc_2494a:                               ; preds = %dec_label_pc_2493c
  %9 = call i32 @error_set(i32 %arg2, i32 %arg1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2d018, i32 0, i32 0), i32 10), !insn.addr !10757
  br label %dec_label_pc_24c8e, !insn.addr !10758

dec_label_pc_2495e:                               ; preds = %dec_label_pc_2493c
  %10 = call i32 @error_set(i32 %arg2, i32 %arg1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2d02c, i32 0, i32 0), i32 %stack_var_-12.1.reload), !insn.addr !10759
  br label %dec_label_pc_24c8e, !insn.addr !10760

dec_label_pc_24972:                               ; preds = %dec_label_pc_24930
  %11 = icmp eq i32 %stack_var_-12.1.reload, 92, !insn.addr !10761
  %12 = call i32 @lex_get_save(i32 %arg1, i32 %arg2)
  store i32 %12, i32* %stack_var_-12.1.be.reg2mem, !insn.addr !10762
  br i1 %11, label %dec_label_pc_24978, label %dec_label_pc_24a3e.backedge, !insn.addr !10762

dec_label_pc_24978:                               ; preds = %dec_label_pc_24972
  switch i32 %12, label %dec_label_pc_24a22 [
    i32 117, label %dec_label_pc_24988
    i32 114, label %dec_label_pc_24a16
    i32 110, label %dec_label_pc_24a16
    i32 102, label %dec_label_pc_24a16
    i32 98, label %dec_label_pc_24a16
    i32 92, label %dec_label_pc_24a16
    i32 47, label %dec_label_pc_24a16
    i32 34, label %dec_label_pc_24a16
    i32 116, label %dec_label_pc_24a16
  ]

dec_label_pc_24988:                               ; preds = %dec_label_pc_24978
  %13 = call i32 @lex_get_save(i32 %arg1, i32 %arg2), !insn.addr !10763
  store i32 0, i32* %storemerge54.reg2mem
  store i32 %13, i32* %stack_var_-12.053.reg2mem
  br label %dec_label_pc_24998

dec_label_pc_24998:                               ; preds = %dec_label_pc_24988, %dec_label_pc_249ce
  %stack_var_-12.053.reload = load i32, i32* %stack_var_-12.053.reg2mem
  %storemerge54.reload = load i32, i32* %storemerge54.reg2mem
  %stack_var_-12.0.off = add i32 %stack_var_-12.053.reload, -48
  %14 = icmp ult i32 %stack_var_-12.0.off, 10
  br i1 %14, label %dec_label_pc_249ce, label %switch.early.test

switch.early.test:                                ; preds = %dec_label_pc_24998
  switch i32 %stack_var_-12.053.reload, label %dec_label_pc_249bc [
    i32 102, label %dec_label_pc_249ce
    i32 101, label %dec_label_pc_249ce
    i32 100, label %dec_label_pc_249ce
    i32 99, label %dec_label_pc_249ce
    i32 98, label %dec_label_pc_249ce
    i32 97, label %dec_label_pc_249ce
    i32 70, label %dec_label_pc_249ce
    i32 69, label %dec_label_pc_249ce
    i32 68, label %dec_label_pc_249ce
    i32 67, label %dec_label_pc_249ce
    i32 66, label %dec_label_pc_249ce
    i32 65, label %dec_label_pc_249ce
  ]

dec_label_pc_249bc:                               ; preds = %switch.early.test
  %15 = call i32 @error_set(i32 %arg2, i32 %arg1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2d044, i32 0, i32 0), i32 %stack_var_-12.053.reload), !insn.addr !10764
  br label %dec_label_pc_24c8e, !insn.addr !10765

dec_label_pc_249ce:                               ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %dec_label_pc_24998
  %16 = call i32 @lex_get_save(i32 %arg1, i32 %arg2), !insn.addr !10766
  %17 = add nuw nsw i32 %storemerge54.reload, 1, !insn.addr !10767
  %18 = icmp ult i32 %17, 4, !insn.addr !10768
  store i32 %17, i32* %storemerge54.reg2mem, !insn.addr !10768
  store i32 %16, i32* %stack_var_-12.053.reg2mem, !insn.addr !10768
  store i32 %16, i32* %stack_var_-12.1.be.reg2mem, !insn.addr !10768
  br i1 %18, label %dec_label_pc_24998, label %dec_label_pc_24a3e.backedge, !insn.addr !10768

dec_label_pc_24a16:                               ; preds = %dec_label_pc_24978, %dec_label_pc_24978, %dec_label_pc_24978, %dec_label_pc_24978, %dec_label_pc_24978, %dec_label_pc_24978, %dec_label_pc_24978, %dec_label_pc_24978
  %19 = call i32 @lex_get_save(i32 %arg1, i32 %arg2), !insn.addr !10769
  store i32 %19, i32* %stack_var_-12.1.be.reg2mem, !insn.addr !10770
  br label %dec_label_pc_24a3e.backedge, !insn.addr !10770

dec_label_pc_24a3e.backedge:                      ; preds = %dec_label_pc_249ce, %dec_label_pc_24a16, %dec_label_pc_24972
  %stack_var_-12.1.be.reload = load i32, i32* %stack_var_-12.1.be.reg2mem
  store i32 %stack_var_-12.1.be.reload, i32* %stack_var_-12.1.reg2mem
  br label %dec_label_pc_24a3e

dec_label_pc_24a22:                               ; preds = %dec_label_pc_24978
  %20 = call i32 @error_set(i32 %arg2, i32 %arg1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2d044, i32 0, i32 0), i32 %12), !insn.addr !10771
  br label %dec_label_pc_24c8e, !insn.addr !10772

dec_label_pc_24a3e:                               ; preds = %dec_label_pc_24a3e.backedge, %dec_label_pc_248e8
  %stack_var_-12.1.reload = load i32, i32* %stack_var_-12.1.reg2mem
  switch i32 %stack_var_-12.1.reload, label %dec_label_pc_24930 [
    i32 34, label %dec_label_pc_24a46
    i32 -2, label %dec_label_pc_24c88
    i32 -1, label %dec_label_pc_2491e
  ]

dec_label_pc_24a46:                               ; preds = %dec_label_pc_24a3e
  %21 = add i32 %arg1, 44, !insn.addr !10773
  %22 = inttoptr i32 %21 to i32*, !insn.addr !10773
  %23 = load i32, i32* %22, align 4, !insn.addr !10773
  %24 = add i32 %23, 1, !insn.addr !10774
  %25 = call i32 @jsonp_malloc(i32 %24), !insn.addr !10775
  store i32 %25, i32* %1, align 4, !insn.addr !10776
  %26 = icmp eq i32 %25, 0, !insn.addr !10777
  br i1 %26, label %dec_label_pc_24c8c, label %dec_label_pc_24a62, !insn.addr !10778

dec_label_pc_24a62:                               ; preds = %dec_label_pc_24a46
  %27 = add i32 %arg1, 40, !insn.addr !10779
  %28 = inttoptr i32 %27 to i32*, !insn.addr !10780
  %29 = call i32 @strbuffer_value(i32* %28), !insn.addr !10780
  %30 = add i32 %29, 1, !insn.addr !10781
  %31 = inttoptr i32 %30 to i8*, !insn.addr !10782
  %32 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %25, i32* %stack_var_-20.0.ph.reg2mem, !insn.addr !10783
  store i8* %31, i8** %stack_var_-16.1.ph.reg2mem, !insn.addr !10783
  store i32 %29, i32* %r0.3.ph.reg2mem, !insn.addr !10783
  store i32 %arg2, i32* %r1.3.ph.reg2mem, !insn.addr !10783
  br label %dec_label_pc_24c6e.outer, !insn.addr !10783

dec_label_pc_24c6e.outer:                         ; preds = %dec_label_pc_24c6e.outer.backedge, %dec_label_pc_24a62
  %r1.3.ph.reload = load i32, i32* %r1.3.ph.reg2mem
  %r0.3.ph.reload = load i32, i32* %r0.3.ph.reg2mem
  %stack_var_-16.1.ph.reload = load i8*, i8** %stack_var_-16.1.ph.reg2mem
  %stack_var_-20.0.ph.reload = load i32, i32* %stack_var_-20.0.ph.reg2mem
  store i32 %stack_var_-20.0.ph.reload, i32* %stack_var_-20.0.reg2mem
  store i8* %stack_var_-16.1.ph.reload, i8** %stack_var_-16.1.reg2mem
  br label %dec_label_pc_24c6e

dec_label_pc_24a84:                               ; preds = %dec_label_pc_24c6e
  %33 = ptrtoint i8* %stack_var_-16.1.reload to i32, !insn.addr !10784
  %34 = add i32 %33, 1, !insn.addr !10785
  %35 = inttoptr i32 %34 to i8*, !insn.addr !10786
  %36 = load i8, i8* %35, align 1, !insn.addr !10787
  switch i8 %36, label %dec_label_pc_24bd0 [
    i8 117, label %dec_label_pc_24a94
    i8 102, label %dec_label_pc_24c0c
  ]

dec_label_pc_24a94:                               ; preds = %dec_label_pc_24a84
  %37 = call i32 @decode_unicode_escape(i32 %34), !insn.addr !10788
  %38 = add i32 %33, 6, !insn.addr !10789
  %39 = inttoptr i32 %38 to i8*, !insn.addr !10790
  %40 = and i32 %37, -1024
  switch i32 %40, label %dec_label_pc_24b5e [
    i32 55296, label %dec_label_pc_24ab6
    i32 56320, label %dec_label_pc_24b4a
  ]

dec_label_pc_24ab6:                               ; preds = %dec_label_pc_24a94
  %41 = load i8, i8* %39, align 1, !insn.addr !10791
  %42 = icmp eq i8 %41, 92, !insn.addr !10792
  br i1 %42, label %dec_label_pc_24abe, label %dec_label_pc_24b22, !insn.addr !10793

dec_label_pc_24abe:                               ; preds = %dec_label_pc_24ab6
  %43 = add i32 %33, 7, !insn.addr !10794
  %44 = inttoptr i32 %43 to i8*, !insn.addr !10795
  %45 = load i8, i8* %44, align 1, !insn.addr !10795
  %46 = icmp eq i8 %45, 117, !insn.addr !10796
  br i1 %46, label %dec_label_pc_24ac8, label %dec_label_pc_24b22, !insn.addr !10797

dec_label_pc_24ac8:                               ; preds = %dec_label_pc_24abe
  %47 = call i32 @decode_unicode_escape(i32 %43), !insn.addr !10798
  %48 = and i32 %47, -1024
  %49 = icmp eq i32 %48, 56320
  br i1 %49, label %dec_label_pc_24af0, label %dec_label_pc_24b0a, !insn.addr !10799

dec_label_pc_24af0:                               ; preds = %dec_label_pc_24ac8
  %50 = add i32 %33, 12, !insn.addr !10800
  %51 = inttoptr i32 %50 to i8*, !insn.addr !10801
  %52 = mul i32 %37, 1024, !insn.addr !10802
  %53 = add i32 %52, -56623104, !insn.addr !10803
  %54 = add i32 %52, -56613888, !insn.addr !10804
  %55 = add i32 %54, %47, !insn.addr !10805
  %56 = call i32 @__asm_nop(i32 %47, i32 %r1.3.ph.reload, i32 %53, i32 %55), !insn.addr !10806
  store i8* %51, i8** %stack_var_-16.0.reg2mem, !insn.addr !10807
  store i32 %55, i32* %stack_var_-28.0.reg2mem, !insn.addr !10807
  br label %dec_label_pc_24b76, !insn.addr !10807

dec_label_pc_24b0a:                               ; preds = %dec_label_pc_24ac8
  %57 = call i32 @error_set(i32 %arg2, i32 %arg1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_2d054, i32 0, i32 0), i32 %37), !insn.addr !10808
  br label %dec_label_pc_24c8e, !insn.addr !10809

dec_label_pc_24b22:                               ; preds = %dec_label_pc_24abe, %dec_label_pc_24ab6
  %58 = call i32 @error_set(i32 %arg2, i32 %arg1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2d074, i32 0, i32 0), i32 %37), !insn.addr !10810
  br label %dec_label_pc_24c8e, !insn.addr !10811

dec_label_pc_24b4a:                               ; preds = %dec_label_pc_24a94
  %59 = call i32 @error_set(i32 %arg2, i32 %arg1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2d074, i32 0, i32 0), i32 %37), !insn.addr !10812
  br label %dec_label_pc_24c8e, !insn.addr !10813

dec_label_pc_24b5e:                               ; preds = %dec_label_pc_24a94
  %60 = icmp eq i32 %37, 0, !insn.addr !10814
  store i8* %39, i8** %stack_var_-16.0.reg2mem, !insn.addr !10815
  store i32 %37, i32* %stack_var_-28.0.reg2mem, !insn.addr !10815
  br i1 %60, label %dec_label_pc_24b64, label %dec_label_pc_24b76, !insn.addr !10815

dec_label_pc_24b64:                               ; preds = %dec_label_pc_24b5e
  %61 = call i32 @error_set(i32 %arg2, i32 %arg1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2d090, i32 0, i32 0), i32 0), !insn.addr !10816
  br label %dec_label_pc_24c8e, !insn.addr !10817

dec_label_pc_24b76:                               ; preds = %dec_label_pc_24b5e, %dec_label_pc_24af0
  %stack_var_-28.0.reload = load i32, i32* %stack_var_-28.0.reg2mem
  %stack_var_-16.0.reload = load i8*, i8** %stack_var_-16.0.reg2mem
  %62 = call i32 @utf8_encode(i32 %stack_var_-28.0.reload, i32* nonnull %stack_var_-36, i32* nonnull %stack_var_-40), !insn.addr !10818
  %63 = icmp eq i32 %62, 0, !insn.addr !10819
  br i1 %63, label %dec_label_pc_24bae, label %dec_label_pc_24b8e, !insn.addr !10820

dec_label_pc_24b8e:                               ; preds = %dec_label_pc_24b76
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_2cffc, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2cf68, i32 0, i32 0), i32 430, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2d254, i32 0, i32 0)), !insn.addr !10821
  br label %dec_label_pc_24bae, !insn.addr !10821

dec_label_pc_24bae:                               ; preds = %dec_label_pc_24b8e, %dec_label_pc_24b76
  %64 = load i32, i32* %stack_var_-40, align 4, !insn.addr !10822
  %65 = inttoptr i32 %stack_var_-20.0.reload to i32*, !insn.addr !10823
  %66 = call i32* @memcpy(i32* %65, i32* nonnull %stack_var_-36, i32 %64), !insn.addr !10823
  %67 = ptrtoint i32* %66 to i32, !insn.addr !10823
  %68 = load i32, i32* %stack_var_-40, align 4, !insn.addr !10824
  %69 = add i32 %68, %stack_var_-20.0.reload, !insn.addr !10825
  store i32 %69, i32* %stack_var_-20.0.ph.be.reg2mem, !insn.addr !10826
  store i8* %stack_var_-16.0.reload, i8** %stack_var_-16.1.ph.be.reg2mem, !insn.addr !10826
  store i32 %67, i32* %r0.3.ph.be.reg2mem, !insn.addr !10826
  store i32 %32, i32* %r1.3.ph.be.reg2mem, !insn.addr !10826
  br label %dec_label_pc_24c6e.outer.backedge, !insn.addr !10826

dec_label_pc_24c6e.outer.backedge:                ; preds = %dec_label_pc_24bae, %dec_label_pc_24c4c
  %r1.3.ph.be.reload = load i32, i32* %r1.3.ph.be.reg2mem
  %r0.3.ph.be.reload = load i32, i32* %r0.3.ph.be.reg2mem
  %stack_var_-16.1.ph.be.reload = load i8*, i8** %stack_var_-16.1.ph.be.reg2mem
  %stack_var_-20.0.ph.be.reload = load i32, i32* %stack_var_-20.0.ph.be.reg2mem
  store i32 %stack_var_-20.0.ph.be.reload, i32* %stack_var_-20.0.ph.reg2mem
  store i8* %stack_var_-16.1.ph.be.reload, i8** %stack_var_-16.1.ph.reg2mem
  store i32 %r0.3.ph.be.reload, i32* %r0.3.ph.reg2mem
  store i32 %r1.3.ph.be.reload, i32* %r1.3.ph.reg2mem
  br label %dec_label_pc_24c6e.outer

dec_label_pc_24bd0:                               ; preds = %dec_label_pc_24a84
  %70 = icmp ugt i8 %36, 102, !insn.addr !10827
  br i1 %70, label %dec_label_pc_24bec, label %dec_label_pc_24bd4, !insn.addr !10827

dec_label_pc_24bd4:                               ; preds = %dec_label_pc_24bd0
  %71 = icmp eq i8 %36, 92, !insn.addr !10828
  br i1 %71, label %dec_label_pc_24bfa, label %dec_label_pc_24bd8, !insn.addr !10829

dec_label_pc_24bd8:                               ; preds = %dec_label_pc_24bd4
  %72 = icmp ugt i8 %36, 92, !insn.addr !10830
  br i1 %72, label %dec_label_pc_24be6, label %dec_label_pc_24bdc, !insn.addr !10830

dec_label_pc_24bdc:                               ; preds = %dec_label_pc_24bd8
  switch i8 %36, label %dec_label_pc_24c2c [
    i8 47, label %dec_label_pc_24bfa
    i8 34, label %dec_label_pc_24bfa
  ]

dec_label_pc_24be6:                               ; preds = %dec_label_pc_24bd8
  %73 = icmp eq i8 %36, 98, !insn.addr !10831
  br i1 %73, label %dec_label_pc_24c04, label %dec_label_pc_24c2c, !insn.addr !10832

dec_label_pc_24bec:                               ; preds = %dec_label_pc_24bd0
  switch i8 %36, label %dec_label_pc_24c2c [
    i8 114, label %dec_label_pc_24c1c
    i8 116, label %dec_label_pc_24c24
    i8 110, label %dec_label_pc_24c14
  ]

dec_label_pc_24bfa:                               ; preds = %dec_label_pc_24bdc, %dec_label_pc_24bdc, %dec_label_pc_24bd4
  %74 = inttoptr i32 %stack_var_-20.0.reload to i8*, !insn.addr !10833
  store i8 %36, i8* %74, align 1, !insn.addr !10833
  store i32 %r0.3.ph.reload, i32* %r0.2.reg2mem, !insn.addr !10834
  store i32 %r1.3.ph.reload, i32* %r1.2.reg2mem, !insn.addr !10834
  br label %dec_label_pc_24c4c, !insn.addr !10834

dec_label_pc_24c04:                               ; preds = %dec_label_pc_24be6
  %75 = inttoptr i32 %stack_var_-20.0.reload to i8*, !insn.addr !10835
  store i8 8, i8* %75, align 1, !insn.addr !10835
  store i32 %r0.3.ph.reload, i32* %r0.2.reg2mem, !insn.addr !10836
  store i32 %r1.3.ph.reload, i32* %r1.2.reg2mem, !insn.addr !10836
  br label %dec_label_pc_24c4c, !insn.addr !10836

dec_label_pc_24c0c:                               ; preds = %dec_label_pc_24a84
  %76 = inttoptr i32 %stack_var_-20.0.reload to i8*, !insn.addr !10837
  store i8 12, i8* %76, align 1, !insn.addr !10837
  store i32 %r0.3.ph.reload, i32* %r0.2.reg2mem, !insn.addr !10838
  store i32 %r1.3.ph.reload, i32* %r1.2.reg2mem, !insn.addr !10838
  br label %dec_label_pc_24c4c, !insn.addr !10838

dec_label_pc_24c14:                               ; preds = %dec_label_pc_24bec
  %77 = inttoptr i32 %stack_var_-20.0.reload to i8*, !insn.addr !10839
  store i8 10, i8* %77, align 1, !insn.addr !10839
  store i32 %r0.3.ph.reload, i32* %r0.2.reg2mem, !insn.addr !10840
  store i32 %r1.3.ph.reload, i32* %r1.2.reg2mem, !insn.addr !10840
  br label %dec_label_pc_24c4c, !insn.addr !10840

dec_label_pc_24c1c:                               ; preds = %dec_label_pc_24bec
  %78 = inttoptr i32 %stack_var_-20.0.reload to i8*, !insn.addr !10841
  store i8 13, i8* %78, align 1, !insn.addr !10841
  store i32 %r0.3.ph.reload, i32* %r0.2.reg2mem, !insn.addr !10842
  store i32 %r1.3.ph.reload, i32* %r1.2.reg2mem, !insn.addr !10842
  br label %dec_label_pc_24c4c, !insn.addr !10842

dec_label_pc_24c24:                               ; preds = %dec_label_pc_24bec
  %79 = inttoptr i32 %stack_var_-20.0.reload to i8*, !insn.addr !10843
  store i8 9, i8* %79, align 1, !insn.addr !10843
  store i32 %r0.3.ph.reload, i32* %r0.2.reg2mem, !insn.addr !10844
  store i32 %r1.3.ph.reload, i32* %r1.2.reg2mem, !insn.addr !10844
  br label %dec_label_pc_24c4c, !insn.addr !10844

dec_label_pc_24c2c:                               ; preds = %dec_label_pc_24bec, %dec_label_pc_24bdc, %dec_label_pc_24be6
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_2cffc, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2cf68, i32 0, i32 0), i32 444, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2d254, i32 0, i32 0)), !insn.addr !10845
  store i32 ptrtoint (i32* @1 to i32), i32* %r0.2.reg2mem, !insn.addr !10845
  store i32 ptrtoint ([32 x i8]* @global_var_2cf68 to i32), i32* %r1.2.reg2mem, !insn.addr !10845
  br label %dec_label_pc_24c4c, !insn.addr !10845

dec_label_pc_24c4c:                               ; preds = %dec_label_pc_24c2c, %dec_label_pc_24c24, %dec_label_pc_24c1c, %dec_label_pc_24c14, %dec_label_pc_24c0c, %dec_label_pc_24c04, %dec_label_pc_24bfa
  %r1.2.reload = load i32, i32* %r1.2.reg2mem
  %r0.2.reload = load i32, i32* %r0.2.reg2mem
  %80 = add i32 %stack_var_-20.0.reload, 1, !insn.addr !10846
  %81 = add i32 %33, 2, !insn.addr !10847
  %82 = inttoptr i32 %81 to i8*, !insn.addr !10848
  store i32 %80, i32* %stack_var_-20.0.ph.be.reg2mem, !insn.addr !10849
  store i8* %82, i8** %stack_var_-16.1.ph.be.reg2mem, !insn.addr !10849
  store i32 %r0.2.reload, i32* %r0.3.ph.be.reg2mem, !insn.addr !10849
  store i32 %r1.2.reload, i32* %r1.3.ph.be.reg2mem, !insn.addr !10849
  br label %dec_label_pc_24c6e.outer.backedge, !insn.addr !10849

dec_label_pc_24c5a:                               ; preds = %dec_label_pc_24c6e
  %83 = inttoptr i32 %stack_var_-20.0.reload to i8*, !insn.addr !10850
  store i8 %88, i8* %83, align 1, !insn.addr !10850
  %84 = add i32 %stack_var_-20.0.reload, 1, !insn.addr !10851
  %85 = ptrtoint i8* %stack_var_-16.1.reload to i32, !insn.addr !10852
  %86 = add i32 %85, 1, !insn.addr !10853
  %87 = inttoptr i32 %86 to i8*, !insn.addr !10854
  store i32 %84, i32* %stack_var_-20.0.reg2mem, !insn.addr !10854
  store i8* %87, i8** %stack_var_-16.1.reg2mem, !insn.addr !10854
  br label %dec_label_pc_24c6e, !insn.addr !10854

dec_label_pc_24c6e:                               ; preds = %dec_label_pc_24c6e.outer, %dec_label_pc_24c5a
  %stack_var_-16.1.reload = load i8*, i8** %stack_var_-16.1.reg2mem
  %stack_var_-20.0.reload = load i32, i32* %stack_var_-20.0.reg2mem
  %88 = load i8, i8* %stack_var_-16.1.reload, align 1, !insn.addr !10855
  switch i8 %88, label %dec_label_pc_24c5a [
    i8 34, label %dec_label_pc_24c78
    i8 92, label %dec_label_pc_24a84
  ]

dec_label_pc_24c78:                               ; preds = %dec_label_pc_24c6e
  %89 = inttoptr i32 %stack_var_-20.0.reload to i8*, !insn.addr !10856
  store i8 0, i8* %89, align 1, !insn.addr !10856
  store i32 256, i32* %3, align 4, !insn.addr !10857
  store i32 %r0.3.ph.reload, i32* %r0.4.reg2mem, !insn.addr !10858
  br label %dec_label_pc_24c98, !insn.addr !10858

dec_label_pc_24c88:                               ; preds = %dec_label_pc_24a3e
  %90 = call i32 @__asm_nop(i32 -2, i32 %arg2, i32 -1, i32 -2), !insn.addr !10859
  br label %dec_label_pc_24c8e, !insn.addr !10860

dec_label_pc_24c8c:                               ; preds = %dec_label_pc_24a46
  %91 = call i32 @__asm_nop(i32 0, i32 %arg2, i32 0, i32 0), !insn.addr !10861
  br label %dec_label_pc_24c8e, !insn.addr !10861

dec_label_pc_24c8e:                               ; preds = %dec_label_pc_24c8c, %dec_label_pc_24c88, %dec_label_pc_24b64, %dec_label_pc_24b4a, %dec_label_pc_24b22, %dec_label_pc_24b0a, %dec_label_pc_24a22, %dec_label_pc_249bc, %dec_label_pc_2495e, %dec_label_pc_2494a, %dec_label_pc_2491e
  %92 = load i32, i32* %1, align 4, !insn.addr !10862
  %93 = call i32 @jsonp_free(i32 %92), !insn.addr !10863
  store i32 %93, i32* %r0.4.reg2mem, !insn.addr !10863
  br label %dec_label_pc_24c98, !insn.addr !10863

dec_label_pc_24c98:                               ; preds = %dec_label_pc_24c8e, %dec_label_pc_24c78
  %r0.4.reload = load i32, i32* %r0.4.reg2mem
  ret i32 %r0.4.reload, !insn.addr !10864

; uselistorder directives
  uselistorder i32 %stack_var_-20.0.reload, { 11, 2, 10, 8, 7, 3, 6, 4, 5, 9, 0, 1 }
  uselistorder i8* %stack_var_-16.1.reload, { 0, 2, 1 }
  uselistorder i32 %52, { 1, 0 }
  uselistorder i32 %47, { 2, 0, 1 }
  uselistorder i32 %37, { 0, 6, 4, 3, 2, 1, 5 }
  uselistorder i8 %36, { 0, 1, 4, 2, 5, 6, 7, 3 }
  uselistorder i32 %33, { 3, 0, 1, 2, 4 }
  uselistorder i32 %r0.3.ph.reload, { 0, 4, 5, 3, 6, 1, 2 }
  uselistorder i32 %r1.3.ph.reload, { 3, 4, 2, 5, 0, 1, 6 }
  uselistorder i32 %stack_var_-12.1.reload, { 2, 1, 3, 5, 4, 0 }
  uselistorder i32 %stack_var_-12.053.reload, { 2, 0, 1 }
  uselistorder i32 %12, { 1, 2, 0 }
  uselistorder i32* %1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %storemerge54.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12.053.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12.1.be.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-20.0.ph.reg2mem, { 1, 0, 2 }
  uselistorder i8** %stack_var_-16.1.ph.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r0.3.ph.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r1.3.ph.reg2mem, { 1, 0, 2 }
  uselistorder i8** %stack_var_-16.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20.0.ph.be.reg2mem, { 2, 0, 1 }
  uselistorder i8** %stack_var_-16.1.ph.be.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r0.3.ph.be.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r1.3.ph.be.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r0.2.reg2mem, { 0, 3, 5, 6, 4, 7, 1, 2 }
  uselistorder i32* %r1.2.reg2mem, { 0, 3, 5, 6, 4, 7, 1, 2 }
  uselistorder i32* %stack_var_-20.0.reg2mem, { 0, 2, 1 }
  uselistorder i8** %stack_var_-16.1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.4.reg2mem, { 0, 2, 1 }
  uselistorder i8 9, { 1, 0 }
  uselistorder i8 13, { 1, 2, 3, 0 }
  uselistorder i8 10, { 1, 2, 0 }
  uselistorder i8 98, { 1, 0 }
  uselistorder i8 34, { 1, 0 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_2cffc, i32 0, i32 0), { 2, 1, 0 }
  uselistorder i32 56320, { 1, 0 }
  uselistorder i32 -1024, { 0, 1, 3, 2, 4 }
  uselistorder i32 (i32)* @decode_unicode_escape, { 1, 0 }
  uselistorder i8 102, { 2, 1, 0 }
  uselistorder i8 117, { 1, 0, 2 }
  uselistorder i32 68, { 1, 0, 2, 3 }
  uselistorder i32 100, { 0, 12, 13, 1, 14, 10, 11, 3, 4, 2, 5, 6, 7, 8, 9 }
  uselistorder i32 116, { 0, 3, 4, 5, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 15, 14, 12, 13, 0, 5, 6, 8, 7, 9, 10, 4, 3, 11, 16 }
  uselistorder i32 %arg1, { 13, 12, 10, 11, 14, 15, 3, 4, 6, 5, 7, 8, 1, 0, 2, 9, 16, 17, 18 }
  uselistorder label %dec_label_pc_24c6e, { 1, 0 }
  uselistorder label %dec_label_pc_24c2c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_24c6e.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_24a3e.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_24998, { 1, 0 }
}

define i32 @lex_scan_number(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24ca0:
  %r3.1.reg2mem = alloca i32, !insn.addr !10865
  %stack_var_-48.4.reg2mem = alloca i32, !insn.addr !10865
  %stack_var_-48.3.reg2mem = alloca i32, !insn.addr !10865
  %stack_var_-48.2.reg2mem = alloca i32, !insn.addr !10865
  %stack_var_-48.1.reg2mem = alloca i32, !insn.addr !10865
  %storemerge5.lcssa.reg2mem = alloca i32, !insn.addr !10865
  %stack_var_-48.0.reg2mem = alloca i32, !insn.addr !10865
  %stack_var_-40 = alloca i64, align 8
  %stack_var_-28 = alloca i32, align 4
  %0 = add i32 %arg1, 52, !insn.addr !10866
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10866
  store i32 -1, i32* %1, align 4, !insn.addr !10866
  %2 = icmp eq i32 %arg2, 45, !insn.addr !10867
  store i32 %arg2, i32* %stack_var_-48.0.reg2mem, !insn.addr !10868
  br i1 %2, label %dec_label_pc_24cba, label %dec_label_pc_24cc4, !insn.addr !10868

dec_label_pc_24cba:                               ; preds = %dec_label_pc_24ca0
  %3 = call i32 @lex_get_save(i32 %arg1, i32 %arg3), !insn.addr !10869
  store i32 %3, i32* %stack_var_-48.0.reg2mem, !insn.addr !10870
  br label %dec_label_pc_24cc4, !insn.addr !10870

dec_label_pc_24cc4:                               ; preds = %dec_label_pc_24ca0, %dec_label_pc_24cba
  %stack_var_-48.0.reload = load i32, i32* %stack_var_-48.0.reg2mem
  %4 = icmp eq i32 %stack_var_-48.0.reload, 48, !insn.addr !10871
  br i1 %4, label %dec_label_pc_24cca, label %dec_label_pc_24cea, !insn.addr !10872

dec_label_pc_24cca:                               ; preds = %dec_label_pc_24cc4
  %5 = call i32 @lex_get_save(i32 %arg1, i32 %arg3), !insn.addr !10873
  %.off25 = add i32 %5, -48
  %6 = icmp ugt i32 %.off25, 9
  store i32 %5, i32* %stack_var_-48.1.reg2mem, !insn.addr !10874
  br i1 %6, label %dec_label_pc_24d26, label %dec_label_pc_24ce0, !insn.addr !10874

dec_label_pc_24ce0:                               ; preds = %dec_label_pc_24cca
  %7 = call i32 @lex_unget_unsave(i32 %arg1, i32 %5), !insn.addr !10875
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !10876
  br label %dec_label_pc_24ee8, !insn.addr !10876

dec_label_pc_24cea:                               ; preds = %dec_label_pc_24cc4
  %stack_var_-48.0.off = add i32 %stack_var_-48.0.reload, -48
  %8 = icmp ugt i32 %stack_var_-48.0.off, 9
  br i1 %8, label %dec_label_pc_24d1a, label %dec_label_pc_24cf6, !insn.addr !10877

dec_label_pc_24cf6:                               ; preds = %dec_label_pc_24cea
  %9 = call i32 @lex_get_save(i32 %arg1, i32 %arg3), !insn.addr !10878
  %storemerge5.off29 = add i32 %9, -48
  %10 = icmp ult i32 %storemerge5.off29, 10
  store i32 %9, i32* %storemerge5.lcssa.reg2mem, !insn.addr !10879
  br i1 %10, label %dec_label_pc_24d02, label %dec_label_pc_24d24, !insn.addr !10879

dec_label_pc_24d02:                               ; preds = %dec_label_pc_24cf6, %dec_label_pc_24d02
  %11 = call i32 @lex_get_save(i32 %arg1, i32 %arg3), !insn.addr !10880
  %storemerge5.off = add i32 %11, -48
  %12 = icmp ult i32 %storemerge5.off, 10
  store i32 %11, i32* %storemerge5.lcssa.reg2mem, !insn.addr !10879
  br i1 %12, label %dec_label_pc_24d02, label %dec_label_pc_24d24, !insn.addr !10879

dec_label_pc_24d1a:                               ; preds = %dec_label_pc_24cea
  %13 = call i32 @lex_unget_unsave(i32 %arg1, i32 %stack_var_-48.0.reload), !insn.addr !10881
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !10882
  br label %dec_label_pc_24ee8, !insn.addr !10882

dec_label_pc_24d24:                               ; preds = %dec_label_pc_24d02, %dec_label_pc_24cf6
  %storemerge5.lcssa.reload = load i32, i32* %storemerge5.lcssa.reg2mem
  %14 = call i32 @__asm_nop(i32 %storemerge5.lcssa.reload, i32 %arg3, i32 -1, i32 %storemerge5.lcssa.reload), !insn.addr !10883
  store i32 %storemerge5.lcssa.reload, i32* %stack_var_-48.1.reg2mem, !insn.addr !10883
  br label %dec_label_pc_24d26, !insn.addr !10883

dec_label_pc_24d26:                               ; preds = %dec_label_pc_24d24, %dec_label_pc_24cca
  %stack_var_-48.1.reload = load i32, i32* %stack_var_-48.1.reg2mem
  store i32 %stack_var_-48.1.reload, i32* %stack_var_-48.2.reg2mem
  store i32 %stack_var_-48.1.reload, i32* %stack_var_-48.2.reg2mem
  switch i32 %stack_var_-48.1.reload, label %dec_label_pc_24d38 [
    i32 46, label %dec_label_pc_24dee
    i32 69, label %dec_label_pc_24e38
    i32 101, label %dec_label_pc_24e38
  ]

dec_label_pc_24d38:                               ; preds = %dec_label_pc_24d26
  %15 = call i32 @lex_unget_unsave(i32 %arg1, i32 %stack_var_-48.1.reload), !insn.addr !10884
  %16 = add i32 %arg1, 40, !insn.addr !10885
  %17 = inttoptr i32 %16 to i32*, !insn.addr !10886
  %18 = call i32 @strbuffer_value(i32* %17), !insn.addr !10886
  %19 = call i32* @__errno_location(), !insn.addr !10887
  store i32 0, i32* %19, align 4, !insn.addr !10888
  %20 = inttoptr i32 %18 to i8*, !insn.addr !10889
  %21 = bitcast i32* %stack_var_-28 to i8**, !insn.addr !10889
  %22 = call i64 @strtoll(i8* %20, i8** nonnull %21, i32 10), !insn.addr !10889
  %23 = call i32* @__errno_location(), !insn.addr !10890
  %24 = load i32, i32* %23, align 4, !insn.addr !10891
  %25 = icmp eq i32 %24, 34, !insn.addr !10892
  br i1 %25, label %dec_label_pc_24d74, label %dec_label_pc_24da4, !insn.addr !10893

dec_label_pc_24d74:                               ; preds = %dec_label_pc_24d38
  %26 = trunc i64 %22 to i32, !insn.addr !10894
  %27 = urem i64 %22, 2
  %28 = icmp eq i64 %27, 0, !insn.addr !10895
  br i1 %28, label %dec_label_pc_24d92, label %dec_label_pc_24d80, !insn.addr !10895

dec_label_pc_24d80:                               ; preds = %dec_label_pc_24d74
  %29 = call i32 @error_set(i32 %arg3, i32 %arg1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2d0a8, i32 0, i32 0), i32 %26), !insn.addr !10896
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !10897
  br label %dec_label_pc_24ee8, !insn.addr !10897

dec_label_pc_24d92:                               ; preds = %dec_label_pc_24d74
  %30 = call i32 @error_set(i32 %arg3, i32 %arg1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2d0c4, i32 0, i32 0), i32 %26), !insn.addr !10898
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !10899
  br label %dec_label_pc_24ee8, !insn.addr !10899

dec_label_pc_24da4:                               ; preds = %dec_label_pc_24d38
  %31 = add i32 %arg1, 44, !insn.addr !10900
  %32 = inttoptr i32 %31 to i32*, !insn.addr !10900
  %33 = load i32, i32* %32, align 4, !insn.addr !10900
  %34 = add i32 %33, %18, !insn.addr !10901
  %35 = load i32, i32* %stack_var_-28, align 4, !insn.addr !10902
  %36 = icmp eq i32 %34, %35, !insn.addr !10903
  br i1 %36, label %dec_label_pc_24dd2, label %dec_label_pc_24db2, !insn.addr !10904

dec_label_pc_24db2:                               ; preds = %dec_label_pc_24da4
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_var_2d0d4, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_2cf68, i32 0, i32 0), i32 518, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2d244, i32 0, i32 0)), !insn.addr !10905
  br label %dec_label_pc_24dd2, !insn.addr !10905

dec_label_pc_24dd2:                               ; preds = %dec_label_pc_24db2, %dec_label_pc_24da4
  %37 = mul i64 %22, 4294967296
  store i32 257, i32* %1, align 4, !insn.addr !10906
  %38 = ashr exact i64 %37, 32, !insn.addr !10907
  %39 = trunc i64 %38 to i32, !insn.addr !10907
  %40 = udiv i64 %38, 4294967296, !insn.addr !10907
  %41 = trunc i64 %40 to i32, !insn.addr !10907
  %42 = add i32 %arg1, 56, !insn.addr !10908
  %43 = inttoptr i32 %42 to i32*, !insn.addr !10908
  store i32 %41, i32* %43, align 4, !insn.addr !10908
  %44 = add i32 %arg1, 60, !insn.addr !10908
  %45 = inttoptr i32 %44 to i32*, !insn.addr !10908
  store i32 %39, i32* %45, align 4, !insn.addr !10908
  store i32 0, i32* %r3.1.reg2mem, !insn.addr !10909
  br label %dec_label_pc_24ee8, !insn.addr !10909

dec_label_pc_24dee:                               ; preds = %dec_label_pc_24d26
  %46 = call i32 @lex_get(i32 %arg1, i32 %arg3), !insn.addr !10910
  %.off = add i32 %46, -48
  %47 = icmp ult i32 %.off, 10
  br i1 %47, label %dec_label_pc_24e0e, label %dec_label_pc_24e04, !insn.addr !10911

dec_label_pc_24e04:                               ; preds = %dec_label_pc_24dee
  %48 = call i32 @lex_unget(i32 %arg1, i32 %46), !insn.addr !10912
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !10913
  br label %dec_label_pc_24ee8, !insn.addr !10913

dec_label_pc_24e0e:                               ; preds = %dec_label_pc_24dee
  %49 = call i32 @lex_save(i32 %arg1, i32 %46), !insn.addr !10914
  %50 = call i32 @lex_get_save(i32 %arg1, i32 %arg3), !insn.addr !10915
  %storemerge3.off27 = add i32 %50, -48
  %51 = icmp ult i32 %storemerge3.off27, 10
  store i32 %50, i32* %stack_var_-48.2.reg2mem, !insn.addr !10916
  br i1 %51, label %dec_label_pc_24e22, label %dec_label_pc_24e38, !insn.addr !10916

dec_label_pc_24e22:                               ; preds = %dec_label_pc_24e0e, %dec_label_pc_24e22
  %52 = call i32 @lex_get_save(i32 %arg1, i32 %arg3), !insn.addr !10917
  %storemerge3.off = add i32 %52, -48
  %53 = icmp ult i32 %storemerge3.off, 10
  store i32 %52, i32* %stack_var_-48.2.reg2mem, !insn.addr !10916
  br i1 %53, label %dec_label_pc_24e22, label %dec_label_pc_24e38, !insn.addr !10916

dec_label_pc_24e38:                               ; preds = %dec_label_pc_24e22, %dec_label_pc_24e0e, %dec_label_pc_24d26, %dec_label_pc_24d26
  %stack_var_-48.2.reload = load i32, i32* %stack_var_-48.2.reg2mem
  %54 = or i32 %stack_var_-48.2.reload, 32
  %55 = icmp eq i32 %54, 101
  store i32 %stack_var_-48.2.reload, i32* %stack_var_-48.4.reg2mem, !insn.addr !10918
  br i1 %55, label %dec_label_pc_24e44, label %dec_label_pc_24e9c, !insn.addr !10918

dec_label_pc_24e44:                               ; preds = %dec_label_pc_24e38
  %56 = call i32 @lex_get_save(i32 %arg1, i32 %arg3), !insn.addr !10919
  store i32 %56, i32* %stack_var_-48.3.reg2mem
  switch i32 %56, label %dec_label_pc_24e64 [
    i32 45, label %dec_label_pc_24e5a
    i32 43, label %dec_label_pc_24e5a
  ]

dec_label_pc_24e5a:                               ; preds = %dec_label_pc_24e44, %dec_label_pc_24e44
  %57 = call i32 @lex_get_save(i32 %arg1, i32 %arg3), !insn.addr !10920
  store i32 %57, i32* %stack_var_-48.3.reg2mem, !insn.addr !10921
  br label %dec_label_pc_24e64, !insn.addr !10921

dec_label_pc_24e64:                               ; preds = %dec_label_pc_24e44, %dec_label_pc_24e5a
  %stack_var_-48.3.reload = load i32, i32* %stack_var_-48.3.reg2mem
  %stack_var_-48.3.off = add i32 %stack_var_-48.3.reload, -48
  %58 = icmp ult i32 %stack_var_-48.3.off, 10
  br i1 %58, label %dec_label_pc_24e7a, label %dec_label_pc_24e70, !insn.addr !10922

dec_label_pc_24e70:                               ; preds = %dec_label_pc_24e64
  %59 = call i32 @lex_unget_unsave(i32 %arg1, i32 %stack_var_-48.3.reload), !insn.addr !10923
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !10924
  br label %dec_label_pc_24ee8, !insn.addr !10924

dec_label_pc_24e7a:                               ; preds = %dec_label_pc_24e64
  %60 = call i32 @lex_get_save(i32 %arg1, i32 %arg3), !insn.addr !10925
  %storemerge.off26 = add i32 %60, -48
  %61 = icmp ult i32 %storemerge.off26, 10
  store i32 %60, i32* %stack_var_-48.4.reg2mem, !insn.addr !10926
  br i1 %61, label %dec_label_pc_24e86, label %dec_label_pc_24e9c, !insn.addr !10926

dec_label_pc_24e86:                               ; preds = %dec_label_pc_24e7a, %dec_label_pc_24e86
  %62 = call i32 @lex_get_save(i32 %arg1, i32 %arg3), !insn.addr !10927
  %storemerge.off = add i32 %62, -48
  %63 = icmp ult i32 %storemerge.off, 10
  store i32 %62, i32* %stack_var_-48.4.reg2mem, !insn.addr !10926
  br i1 %63, label %dec_label_pc_24e86, label %dec_label_pc_24e9c, !insn.addr !10926

dec_label_pc_24e9c:                               ; preds = %dec_label_pc_24e86, %dec_label_pc_24e7a, %dec_label_pc_24e38
  %stack_var_-48.4.reload = load i32, i32* %stack_var_-48.4.reg2mem
  %64 = call i32 @lex_unget_unsave(i32 %arg1, i32 %stack_var_-48.4.reload), !insn.addr !10928
  %65 = add i32 %arg1, 40, !insn.addr !10929
  %66 = bitcast i64* %stack_var_-40 to i32*, !insn.addr !10930
  %67 = call i32 @jsonp_strtod(i32 %65, i32* nonnull %66), !insn.addr !10930
  %68 = icmp eq i32 %67, 0, !insn.addr !10931
  br i1 %68, label %dec_label_pc_24ece, label %dec_label_pc_24ebc, !insn.addr !10932

dec_label_pc_24ebc:                               ; preds = %dec_label_pc_24e9c
  %69 = call i32 @error_set(i32 %arg3, i32 %arg1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2d100, i32 0, i32 0), i32 %67), !insn.addr !10933
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !10934
  br label %dec_label_pc_24ee8, !insn.addr !10934

dec_label_pc_24ece:                               ; preds = %dec_label_pc_24e9c
  store i32 258, i32* %1, align 4, !insn.addr !10935
  %70 = load i64, i64* %stack_var_-40, align 8, !insn.addr !10936
  %71 = mul i64 %70, 4294967296
  %72 = ashr exact i64 %71, 32, !insn.addr !10936
  %73 = trunc i64 %72 to i32, !insn.addr !10936
  %74 = udiv i64 %72, 4294967296, !insn.addr !10936
  %75 = trunc i64 %74 to i32, !insn.addr !10936
  %76 = add i32 %arg1, 56, !insn.addr !10937
  %77 = inttoptr i32 %76 to i32*, !insn.addr !10937
  store i32 %75, i32* %77, align 4, !insn.addr !10937
  %78 = add i32 %arg1, 60, !insn.addr !10937
  %79 = inttoptr i32 %78 to i32*, !insn.addr !10937
  store i32 %73, i32* %79, align 4, !insn.addr !10937
  store i32 0, i32* %r3.1.reg2mem, !insn.addr !10938
  br label %dec_label_pc_24ee8, !insn.addr !10938

dec_label_pc_24ee8:                               ; preds = %dec_label_pc_24ce0, %dec_label_pc_24d1a, %dec_label_pc_24d80, %dec_label_pc_24d92, %dec_label_pc_24e04, %dec_label_pc_24e70, %dec_label_pc_24ebc, %dec_label_pc_24ece, %dec_label_pc_24dd2
  %r3.1.reload = load i32, i32* %r3.1.reg2mem
  ret i32 %r3.1.reload, !insn.addr !10939

; uselistorder directives
  uselistorder i32 %56, { 1, 0 }
  uselistorder i32 %46, { 1, 2, 0 }
  uselistorder i32 %stack_var_-48.1.reload, { 2, 3, 0, 1 }
  uselistorder i32 %5, { 2, 0, 1 }
  uselistorder i32 %stack_var_-48.0.reload, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-48.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %stack_var_-48.3.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r3.1.reg2mem, { 0, 9, 7, 6, 5, 8, 4, 3, 2, 1 }
  uselistorder i32 258, { 1, 2, 0 }
  uselistorder i32 60, { 3, 4, 0, 2, 1 }
  uselistorder [32 x i8]* @global_var_2cf68, { 1, 0 }
  uselistorder i64 0, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 69, { 1, 0, 2, 3 }
  uselistorder i32 48, { 4, 0, 2, 3, 1 }
  uselistorder i32 %arg3, { 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 0, 1, 2, 13, 14 }
  uselistorder i32 %arg1, { 12, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 4, 5, 6, 7, 8, 9, 10, 1, 0, 2, 3, 26, 27, 28 }
  uselistorder label %dec_label_pc_24ee8, { 7, 6, 5, 4, 8, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_24e86, { 1, 0 }
  uselistorder label %dec_label_pc_24e64, { 1, 0 }
  uselistorder label %dec_label_pc_24e22, { 1, 0 }
  uselistorder label %dec_label_pc_24d02, { 1, 0 }
  uselistorder label %dec_label_pc_24cc4, { 1, 0 }
}

define i32 @lex_scan(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24ef4:
  %storemerge.lcssa.reg2mem = alloca i32, !insn.addr !10940
  %storemerge2.reg2mem = alloca i32, !insn.addr !10940
  %0 = add i32 %arg1, 40, !insn.addr !10941
  %1 = call i32 @strbuffer_clear(i32 %0), !insn.addr !10942
  %2 = add i32 %arg1, 52, !insn.addr !10943
  %3 = inttoptr i32 %2 to i32*, !insn.addr !10943
  %4 = load i32, i32* %3, align 4, !insn.addr !10943
  %5 = icmp eq i32 %4, 256, !insn.addr !10944
  br i1 %5, label %dec_label_pc_24f12, label %dec_label_pc_24f22, !insn.addr !10945

dec_label_pc_24f12:                               ; preds = %dec_label_pc_24ef4
  %6 = add i32 %arg1, 56, !insn.addr !10946
  %7 = inttoptr i32 %6 to i32*, !insn.addr !10946
  %8 = load i32, i32* %7, align 4, !insn.addr !10946
  %9 = call i32 @jsonp_free(i32 %8), !insn.addr !10947
  store i32 0, i32* %7, align 4, !insn.addr !10948
  br label %dec_label_pc_24f22, !insn.addr !10948

dec_label_pc_24f22:                               ; preds = %dec_label_pc_24ef4, %dec_label_pc_24f12
  %10 = call i32 @lex_get(i32 %arg1, i32 %arg2), !insn.addr !10949
  store i32 %10, i32* %storemerge2.reg2mem, !insn.addr !10950
  br label %dec_label_pc_24f38, !insn.addr !10950

dec_label_pc_24f2e:                               ; preds = %dec_label_pc_24f38, %dec_label_pc_24f38, %dec_label_pc_24f38, %dec_label_pc_24f38
  %11 = call i32 @lex_get(i32 %arg1, i32 %arg2), !insn.addr !10951
  store i32 %11, i32* %storemerge2.reg2mem, !insn.addr !10952
  br label %dec_label_pc_24f38, !insn.addr !10952

dec_label_pc_24f38:                               ; preds = %dec_label_pc_24f2e, %dec_label_pc_24f22
  %storemerge2.reload = load i32, i32* %storemerge2.reg2mem
  switch i32 %storemerge2.reload, label %dec_label_pc_24f72 [
    i32 32, label %dec_label_pc_24f2e
    i32 13, label %dec_label_pc_24f2e
    i32 10, label %dec_label_pc_24f2e
    i32 9, label %dec_label_pc_24f2e
    i32 -1, label %dec_label_pc_24f58
    i32 -2, label %dec_label_pc_24f68
  ]

dec_label_pc_24f58:                               ; preds = %dec_label_pc_24f38
  store i32 0, i32* %3, align 4, !insn.addr !10953
  br label %dec_label_pc_250a4, !insn.addr !10954

dec_label_pc_24f68:                               ; preds = %dec_label_pc_24f38
  store i32 -1, i32* %3, align 4, !insn.addr !10955
  br label %dec_label_pc_250a4, !insn.addr !10956

dec_label_pc_24f72:                               ; preds = %dec_label_pc_24f38
  %12 = call i32 @lex_save(i32 %arg1, i32 %storemerge2.reload), !insn.addr !10957
  switch i32 %storemerge2.reload, label %dec_label_pc_24fb6 [
    i32 125, label %dec_label_pc_24f9e
    i32 123, label %dec_label_pc_24f9e
    i32 93, label %dec_label_pc_24f9e
    i32 91, label %dec_label_pc_24f9e
    i32 58, label %dec_label_pc_24f9e
    i32 44, label %dec_label_pc_24f9e
    i32 34, label %dec_label_pc_24fac
  ]

dec_label_pc_24f9e:                               ; preds = %dec_label_pc_24f72, %dec_label_pc_24f72, %dec_label_pc_24f72, %dec_label_pc_24f72, %dec_label_pc_24f72, %dec_label_pc_24f72
  store i32 %storemerge2.reload, i32* %3, align 4, !insn.addr !10958
  br label %dec_label_pc_250a4, !insn.addr !10959

dec_label_pc_24fac:                               ; preds = %dec_label_pc_24f72
  %13 = call i32 @lex_scan_string(i32 %arg1, i32 %arg2), !insn.addr !10960
  br label %dec_label_pc_250a4, !insn.addr !10961

dec_label_pc_24fb6:                               ; preds = %dec_label_pc_24f72
  %storemerge2.off = add i32 %storemerge2.reload, -48
  %14 = icmp ult i32 %storemerge2.off, 10
  %15 = icmp eq i32 %storemerge2.reload, 45, !insn.addr !10962
  %or.cond21 = or i1 %15, %14
  br i1 %or.cond21, label %dec_label_pc_24fc8, label %dec_label_pc_24fd8, !insn.addr !10963

dec_label_pc_24fc8:                               ; preds = %dec_label_pc_24fb6
  %16 = call i32 @lex_scan_number(i32 %arg1, i32 %storemerge2.reload, i32 %arg2), !insn.addr !10964
  br label %dec_label_pc_250a4, !insn.addr !10965

dec_label_pc_24fd8:                               ; preds = %dec_label_pc_24fb6
  %storemerge2.off30 = add i32 %storemerge2.reload, -65
  %17 = icmp ugt i32 %storemerge2.off30, 25
  %storemerge2.off31 = add i32 %storemerge2.reload, -97
  %18 = icmp ugt i32 %storemerge2.off31, 25
  %or.cond = icmp eq i1 %17, %18
  br i1 %or.cond, label %dec_label_pc_25096, label %dec_label_pc_24ff0, !insn.addr !10966

dec_label_pc_24ff0:                               ; preds = %dec_label_pc_24fd8
  %19 = call i32 @lex_get_save(i32 %arg1, i32 %arg2), !insn.addr !10967
  %20 = and i32 %19, -33
  %21 = add i32 %20, -65
  %22 = icmp ult i32 %21, 26
  store i32 %19, i32* %storemerge.lcssa.reg2mem, !insn.addr !10968
  br i1 %22, label %dec_label_pc_24ffc, label %dec_label_pc_2501e, !insn.addr !10968

dec_label_pc_24ffc:                               ; preds = %dec_label_pc_24ff0, %dec_label_pc_24ffc
  %23 = call i32 @lex_get_save(i32 %arg1, i32 %arg2), !insn.addr !10969
  %24 = and i32 %23, -33
  %25 = add i32 %24, -65
  %26 = icmp ult i32 %25, 26
  store i32 %23, i32* %storemerge.lcssa.reg2mem, !insn.addr !10968
  br i1 %26, label %dec_label_pc_24ffc, label %dec_label_pc_2501e, !insn.addr !10968

dec_label_pc_2501e:                               ; preds = %dec_label_pc_24ffc, %dec_label_pc_24ff0
  %storemerge.lcssa.reload = load i32, i32* %storemerge.lcssa.reg2mem
  %27 = call i32 @lex_unget_unsave(i32 %arg1, i32 %storemerge.lcssa.reload), !insn.addr !10970
  %28 = inttoptr i32 %0 to i32*, !insn.addr !10971
  %29 = call i32 @strbuffer_value(i32* %28), !insn.addr !10971
  %30 = inttoptr i32 %29 to i8*, !insn.addr !10972
  %31 = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2d118, i32 0, i32 0)), !insn.addr !10973
  %32 = icmp eq i32 %31, 0, !insn.addr !10974
  br i1 %32, label %dec_label_pc_25046, label %dec_label_pc_25050, !insn.addr !10975

dec_label_pc_25046:                               ; preds = %dec_label_pc_2501e
  store i32 259, i32* %3, align 4, !insn.addr !10976
  br label %dec_label_pc_250a4, !insn.addr !10977

dec_label_pc_25050:                               ; preds = %dec_label_pc_2501e
  %33 = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2d120, i32 0, i32 0)), !insn.addr !10978
  %34 = icmp eq i32 %33, 0, !insn.addr !10979
  br i1 %34, label %dec_label_pc_25064, label %dec_label_pc_2506e, !insn.addr !10980

dec_label_pc_25064:                               ; preds = %dec_label_pc_25050
  store i32 260, i32* %3, align 4, !insn.addr !10981
  br label %dec_label_pc_250a4, !insn.addr !10982

dec_label_pc_2506e:                               ; preds = %dec_label_pc_25050
  %35 = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2d128, i32 0, i32 0)), !insn.addr !10983
  %36 = icmp eq i32 %35, 0, !insn.addr !10984
  br i1 %36, label %dec_label_pc_25082, label %dec_label_pc_2508c, !insn.addr !10985

dec_label_pc_25082:                               ; preds = %dec_label_pc_2506e
  store i32 261, i32* %3, align 4, !insn.addr !10986
  br label %dec_label_pc_250a4, !insn.addr !10987

dec_label_pc_2508c:                               ; preds = %dec_label_pc_2506e
  store i32 -1, i32* %3, align 4, !insn.addr !10988
  br label %dec_label_pc_250a4, !insn.addr !10989

dec_label_pc_25096:                               ; preds = %dec_label_pc_24fd8
  %37 = call i32 @lex_save_cached(i32 %arg1), !insn.addr !10990
  store i32 -1, i32* %3, align 4, !insn.addr !10991
  br label %dec_label_pc_250a4, !insn.addr !10991

dec_label_pc_250a4:                               ; preds = %dec_label_pc_25096, %dec_label_pc_2508c, %dec_label_pc_25082, %dec_label_pc_25064, %dec_label_pc_25046, %dec_label_pc_24fc8, %dec_label_pc_24fac, %dec_label_pc_24f9e, %dec_label_pc_24f68, %dec_label_pc_24f58
  %38 = load i32, i32* %3, align 4, !insn.addr !10992
  ret i32 %38, !insn.addr !10993

; uselistorder directives
  uselistorder i32 %storemerge2.reload, { 8, 6, 2, 3, 5, 4, 7, 1, 0 }
  uselistorder i32* %3, { 2, 8, 5, 4, 6, 7, 3, 0, 1, 9 }
  uselistorder i32* %storemerge2.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32*)* @strbuffer_value, { 2, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32)* @lex_unget_unsave, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 26, { 1, 0, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 -33, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @lex_get_save, { 1, 0, 16, 15, 13, 12, 14, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 25, { 4, 3, 5, 0, 1, 2 }
  uselistorder i32 -65, { 1, 0, 2 }
  uselistorder i32 45, { 1, 0, 3, 2 }
  uselistorder i32 -48, { 4, 8, 2, 9, 6, 1, 7, 3, 0, 10, 5, 11, 12 }
  uselistorder i32 (i32, i32)* @lex_save, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @lex_get, { 1, 0, 2 }
  uselistorder label %dec_label_pc_24ffc, { 1, 0 }
  uselistorder label %dec_label_pc_24f22, { 1, 0 }
}

define i32 @lex_steal_string(i32 %arg1) local_unnamed_addr {
dec_label_pc_250b4:
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !10994
  %0 = add i32 %arg1, 52, !insn.addr !10995
  %1 = inttoptr i32 %0 to i32*, !insn.addr !10995
  %2 = load i32, i32* %1, align 4, !insn.addr !10995
  %3 = icmp eq i32 %2, 256, !insn.addr !10996
  store i32 0, i32* %stack_var_-12.0.reg2mem, !insn.addr !10997
  br i1 %3, label %dec_label_pc_250ca, label %dec_label_pc_250d6, !insn.addr !10997

dec_label_pc_250ca:                               ; preds = %dec_label_pc_250b4
  %4 = add i32 %arg1, 56, !insn.addr !10998
  %5 = inttoptr i32 %4 to i32*, !insn.addr !10998
  %6 = load i32, i32* %5, align 4, !insn.addr !10998
  store i32 0, i32* %5, align 4, !insn.addr !10999
  store i32 %6, i32* %stack_var_-12.0.reg2mem, !insn.addr !10999
  br label %dec_label_pc_250d6, !insn.addr !10999

dec_label_pc_250d6:                               ; preds = %dec_label_pc_250b4, %dec_label_pc_250ca
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  ret i32 %stack_var_-12.0.reload, !insn.addr !11000

; uselistorder directives
  uselistorder i32* %stack_var_-12.0.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_250d6, { 1, 0 }
}

define i32 @lex_init(i32* %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_250e4:
  %storemerge.reg2mem = alloca i32, !insn.addr !11001
  %0 = ptrtoint i32* %arg3 to i32
  %1 = ptrtoint i32* %arg1 to i32
  %2 = call i32 @stream_init(i32 %1, i32 %arg2, i32 %0), !insn.addr !11002
  %3 = add i32 %1, 40, !insn.addr !11003
  %4 = inttoptr i32 %3 to i32*, !insn.addr !11004
  %5 = call i32 @strbuffer_init(i32* %4), !insn.addr !11004
  %6 = icmp eq i32 %5, 0, !insn.addr !11005
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !11006
  br i1 %6, label %dec_label_pc_25112, label %dec_label_pc_2511c, !insn.addr !11006

dec_label_pc_25112:                               ; preds = %dec_label_pc_250e4
  %7 = add i32 %1, 52, !insn.addr !11007
  %8 = inttoptr i32 %7 to i32*, !insn.addr !11007
  store i32 -1, i32* %8, align 4, !insn.addr !11007
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !11008
  br label %dec_label_pc_2511c, !insn.addr !11008

dec_label_pc_2511c:                               ; preds = %dec_label_pc_250e4, %dec_label_pc_25112
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11009

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32*)* @strbuffer_init, { 1, 0 }
  uselistorder label %dec_label_pc_2511c, { 1, 0 }
}

define i32 @lex_close(i32* %arg1) local_unnamed_addr {
dec_label_pc_25128:
  %0 = ptrtoint i32* %arg1 to i32
  %1 = add i32 %0, 52, !insn.addr !11010
  %2 = inttoptr i32 %1 to i32*, !insn.addr !11010
  %3 = load i32, i32* %2, align 4, !insn.addr !11010
  %4 = icmp eq i32 %3, 256, !insn.addr !11011
  br i1 %4, label %dec_label_pc_2513a, label %dec_label_pc_25144, !insn.addr !11012

dec_label_pc_2513a:                               ; preds = %dec_label_pc_25128
  %5 = add i32 %0, 56, !insn.addr !11013
  %6 = inttoptr i32 %5 to i32*, !insn.addr !11013
  %7 = load i32, i32* %6, align 4, !insn.addr !11013
  %8 = call i32 @jsonp_free(i32 %7), !insn.addr !11014
  br label %dec_label_pc_25144, !insn.addr !11014

dec_label_pc_25144:                               ; preds = %dec_label_pc_25128, %dec_label_pc_2513a
  %9 = add i32 %0, 40, !insn.addr !11015
  %10 = inttoptr i32 %9 to i32*, !insn.addr !11016
  %11 = call i32 @strbuffer_close(i32* %10), !insn.addr !11016
  ret i32 %11, !insn.addr !11017

; uselistorder directives
  uselistorder i32 (i32*)* @strbuffer_close, { 1, 0 }
  uselistorder label %dec_label_pc_25144, { 1, 0 }
}

define i32 @parse_object(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25158:
  %r3.0.reg2mem = alloca i32, !insn.addr !11018
  %.lcssa2.reg2mem = alloca i32, !insn.addr !11018
  %0 = call i32 @json_object(), !insn.addr !11019
  %1 = icmp eq i32 %0, 0, !insn.addr !11020
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11021
  br i1 %1, label %dec_label_pc_2529c, label %dec_label_pc_25174, !insn.addr !11021

dec_label_pc_25174:                               ; preds = %dec_label_pc_25158
  %2 = call i32 @lex_scan(i32 %arg1, i32 %arg3), !insn.addr !11022
  %3 = add i32 %arg1, 52, !insn.addr !11023
  %4 = inttoptr i32 %3 to i32*, !insn.addr !11023
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %.lcssa2.reg2mem
  store i32 %0, i32* %r3.0.reg2mem
  switch i32 %5, label %dec_label_pc_25192 [
    i32 125, label %dec_label_pc_2529c
    i32 256, label %dec_label_pc_251a4.lr.ph
  ]

dec_label_pc_251a4.lr.ph:                         ; preds = %dec_label_pc_25174
  %6 = urem i32 %arg2, 2
  %7 = icmp eq i32 %6, 0
  br label %dec_label_pc_251a4

dec_label_pc_25192:                               ; preds = %dec_label_pc_2526a, %dec_label_pc_25174
  %.lcssa2.reload = load i32, i32* %.lcssa2.reg2mem
  %8 = call i32 @error_set(i32 %arg3, i32 %arg1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_2d130, i32 0, i32 0), i32 %.lcssa2.reload), !insn.addr !11024
  br label %dec_label_pc_25294, !insn.addr !11025

dec_label_pc_251a4:                               ; preds = %dec_label_pc_251a4.lr.ph, %dec_label_pc_2526a
  %9 = call i32 @lex_steal_string(i32 %arg1), !insn.addr !11026
  %10 = icmp eq i32 %9, 0, !insn.addr !11027
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11028
  br i1 %10, label %dec_label_pc_2529c, label %dec_label_pc_251b6, !insn.addr !11028

dec_label_pc_251b6:                               ; preds = %dec_label_pc_251a4
  br i1 %7, label %dec_label_pc_251e6, label %dec_label_pc_251c0, !insn.addr !11029

dec_label_pc_251c0:                               ; preds = %dec_label_pc_251b6
  %11 = inttoptr i32 %9 to i8*, !insn.addr !11030
  %12 = call i32 @json_object_get(i32 %0, i8* %11), !insn.addr !11031
  %13 = icmp eq i32 %12, 0, !insn.addr !11032
  br i1 %13, label %dec_label_pc_251e6, label %dec_label_pc_251ce, !insn.addr !11033

dec_label_pc_251ce:                               ; preds = %dec_label_pc_251c0
  %14 = call i32 @jsonp_free(i32 %9), !insn.addr !11034
  %15 = call i32 @error_set(i32 %arg3, i32 %arg1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2d148, i32 0, i32 0), i32 %12), !insn.addr !11035
  br label %dec_label_pc_25294, !insn.addr !11036

dec_label_pc_251e6:                               ; preds = %dec_label_pc_251c0, %dec_label_pc_251b6
  %16 = call i32 @lex_scan(i32 %arg1, i32 %arg3), !insn.addr !11037
  %17 = load i32, i32* %4, align 4, !insn.addr !11038
  %18 = icmp eq i32 %17, 58, !insn.addr !11039
  br i1 %18, label %dec_label_pc_2520e, label %dec_label_pc_251f6, !insn.addr !11040

dec_label_pc_251f6:                               ; preds = %dec_label_pc_251e6
  %19 = call i32 @jsonp_free(i32 %9), !insn.addr !11041
  %20 = call i32 @error_set(i32 %arg3, i32 %arg1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2d160, i32 0, i32 0), i32 %17), !insn.addr !11042
  br label %dec_label_pc_25294, !insn.addr !11043

dec_label_pc_2520e:                               ; preds = %dec_label_pc_251e6
  %21 = call i32 @lex_scan(i32 %arg1, i32 %arg3), !insn.addr !11044
  %22 = call i32 @parse_value(i32 %arg1, i32 %arg2, i32 %arg3), !insn.addr !11045
  %23 = icmp eq i32 %22, 0, !insn.addr !11046
  br i1 %23, label %dec_label_pc_25228, label %dec_label_pc_25230, !insn.addr !11047

dec_label_pc_25228:                               ; preds = %dec_label_pc_2520e
  %24 = call i32 @jsonp_free(i32 %9), !insn.addr !11048
  br label %dec_label_pc_25294, !insn.addr !11049

dec_label_pc_25230:                               ; preds = %dec_label_pc_2520e
  %25 = call i32 @json_object_set_nocheck(i32 %0, i32 %9, i32 %22), !insn.addr !11050
  %26 = icmp eq i32 %25, 0, !insn.addr !11051
  br i1 %26, label %dec_label_pc_2524e, label %dec_label_pc_25240, !insn.addr !11052

dec_label_pc_25240:                               ; preds = %dec_label_pc_25230
  %27 = call i32 @jsonp_free(i32 %9), !insn.addr !11053
  %28 = call i32 @json_decref.65(i32 %22), !insn.addr !11054
  br label %dec_label_pc_25294, !insn.addr !11055

dec_label_pc_2524e:                               ; preds = %dec_label_pc_25230
  %29 = call i32 @json_decref.65(i32 %22), !insn.addr !11056
  %30 = call i32 @jsonp_free(i32 %9), !insn.addr !11057
  %31 = call i32 @lex_scan(i32 %arg1, i32 %arg3), !insn.addr !11058
  %32 = load i32, i32* %4, align 4, !insn.addr !11059
  %33 = icmp eq i32 %32, 44, !insn.addr !11060
  br i1 %33, label %dec_label_pc_2526a, label %dec_label_pc_25274, !insn.addr !11061

dec_label_pc_2526a:                               ; preds = %dec_label_pc_2524e
  %34 = call i32 @lex_scan(i32 %arg1, i32 %arg3), !insn.addr !11062
  %.pr = load i32, i32* %4, align 4
  %35 = icmp eq i32 %.pr, 256, !insn.addr !11063
  store i32 %.pr, i32* %.lcssa2.reg2mem, !insn.addr !11064
  br i1 %35, label %dec_label_pc_251a4, label %dec_label_pc_25192, !insn.addr !11064

dec_label_pc_25274:                               ; preds = %dec_label_pc_2524e
  %36 = call i32 @__asm_nop(i32 %31, i32 %arg3, i32 %22, i32 %32), !insn.addr !11065
  %37 = load i32, i32* %4, align 4, !insn.addr !11066
  %38 = icmp eq i32 %37, 125, !insn.addr !11067
  store i32 %0, i32* %r3.0.reg2mem, !insn.addr !11068
  br i1 %38, label %dec_label_pc_2529c, label %dec_label_pc_2527e, !insn.addr !11068

dec_label_pc_2527e:                               ; preds = %dec_label_pc_25274
  %39 = call i32 @error_set(i32 %arg3, i32 %arg1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2d170, i32 0, i32 0), i32 %37), !insn.addr !11069
  br label %dec_label_pc_25294, !insn.addr !11070

dec_label_pc_25294:                               ; preds = %dec_label_pc_2527e, %dec_label_pc_25240, %dec_label_pc_25228, %dec_label_pc_251f6, %dec_label_pc_251ce, %dec_label_pc_25192
  %40 = call i32 @json_decref.65(i32 %0), !insn.addr !11071
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11072
  br label %dec_label_pc_2529c, !insn.addr !11072

dec_label_pc_2529c:                               ; preds = %dec_label_pc_251a4, %dec_label_pc_25174, %dec_label_pc_25274, %dec_label_pc_25158, %dec_label_pc_25294
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11073

; uselistorder directives
  uselistorder i32 %22, { 0, 2, 1, 3, 4 }
  uselistorder i32 %9, { 4, 1, 5, 0, 2, 3, 6, 7 }
  uselistorder i32 %5, { 1, 0 }
  uselistorder i32* %4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %0, { 4, 0, 3, 2, 1, 5 }
  uselistorder i32* %.lcssa2.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r3.0.reg2mem, { 0, 5, 2, 1, 3, 4 }
  uselistorder i32 58, { 2, 0, 1 }
  uselistorder i32 125, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg3, { 3, 4, 5, 6, 8, 7, 2, 9, 1, 0, 10 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 4, 5, 7, 6, 2, 8, 1, 9, 0, 11, 10 }
  uselistorder label %dec_label_pc_2529c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_251a4, { 1, 0 }
}

define i32 @parse_array(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_252a8:
  %r3.0.reg2mem = alloca i32, !insn.addr !11074
  %.reg2mem = alloca i32, !insn.addr !11074
  %0 = call i32 @json_array(), !insn.addr !11075
  %1 = icmp eq i32 %0, 0, !insn.addr !11076
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11077
  br i1 %1, label %dec_label_pc_25356, label %dec_label_pc_252c4, !insn.addr !11077

dec_label_pc_252c4:                               ; preds = %dec_label_pc_252a8
  %2 = call i32 @lex_scan(i32 %arg1, i32 %arg3), !insn.addr !11078
  %3 = add i32 %arg1, 52, !insn.addr !11079
  %4 = inttoptr i32 %3 to i32*, !insn.addr !11079
  %5 = load i32, i32* %4, align 4, !insn.addr !11079
  %6 = icmp eq i32 %5, 93, !insn.addr !11080
  store i32 %0, i32* %r3.0.reg2mem, !insn.addr !11081
  br i1 %6, label %dec_label_pc_25356, label %dec_label_pc_25320, !insn.addr !11081

dec_label_pc_252d8:                               ; preds = %dec_label_pc_25320, %dec_label_pc_25316
  %7 = call i32 @parse_value(i32 %arg1, i32 %arg2, i32 %arg3), !insn.addr !11082
  %8 = icmp eq i32 %7, 0, !insn.addr !11083
  br i1 %8, label %dec_label_pc_2534c, label %dec_label_pc_252ea, !insn.addr !11084

dec_label_pc_252ea:                               ; preds = %dec_label_pc_252d8
  %9 = call i32 @json_array_append(i32 %0, i32 %7), !insn.addr !11085
  %10 = icmp eq i32 %9, 0, !insn.addr !11086
  %11 = call i32 @json_decref.65(i32 %7)
  br i1 %10, label %dec_label_pc_25300, label %dec_label_pc_2534e, !insn.addr !11087

dec_label_pc_25300:                               ; preds = %dec_label_pc_252ea
  %12 = call i32 @lex_scan(i32 %arg1, i32 %arg3), !insn.addr !11088
  %13 = load i32, i32* %4, align 4, !insn.addr !11089
  %14 = icmp eq i32 %13, 44, !insn.addr !11090
  br i1 %14, label %dec_label_pc_25316, label %dec_label_pc_2532e, !insn.addr !11091

dec_label_pc_25316:                               ; preds = %dec_label_pc_25300
  %15 = call i32 @lex_scan(i32 %arg1, i32 %arg3), !insn.addr !11092
  %16 = load i32, i32* %4, align 4
  %17 = icmp eq i32 %16, 0, !insn.addr !11093
  store i32 0, i32* %.reg2mem, !insn.addr !11094
  br i1 %17, label %dec_label_pc_25336, label %dec_label_pc_252d8, !insn.addr !11094

dec_label_pc_25320:                               ; preds = %dec_label_pc_252c4
  %18 = call i32 @__asm_nop(i32 %2, i32 %arg3, i32 %arg3, i32 %5), !insn.addr !11095
  %19 = load i32, i32* %4, align 4
  %20 = icmp eq i32 %19, 0, !insn.addr !11093
  store i32 0, i32* %.reg2mem, !insn.addr !11094
  br i1 %20, label %dec_label_pc_25336, label %dec_label_pc_252d8, !insn.addr !11094

dec_label_pc_2532e:                               ; preds = %dec_label_pc_25300
  %21 = call i32 @__asm_nop(i32 %12, i32 %arg3, i32 %arg3, i32 %13), !insn.addr !11096
  %.pr = load i32, i32* %4, align 4
  %22 = icmp eq i32 %.pr, 93, !insn.addr !11097
  store i32 %.pr, i32* %.reg2mem, !insn.addr !11098
  store i32 %0, i32* %r3.0.reg2mem, !insn.addr !11098
  br i1 %22, label %dec_label_pc_25356, label %dec_label_pc_25336, !insn.addr !11098

dec_label_pc_25336:                               ; preds = %dec_label_pc_25316, %dec_label_pc_25320, %dec_label_pc_2532e
  %.reload = load i32, i32* %.reg2mem
  %23 = call i32 @error_set(i32 %arg3, i32 %arg1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2d180, i32 0, i32 0), i32 %.reload), !insn.addr !11099
  br label %dec_label_pc_2534e, !insn.addr !11100

dec_label_pc_2534c:                               ; preds = %dec_label_pc_252d8
  %24 = call i32 @__asm_nop(i32 0, i32 %arg2, i32 %arg3, i32 0), !insn.addr !11101
  br label %dec_label_pc_2534e, !insn.addr !11101

dec_label_pc_2534e:                               ; preds = %dec_label_pc_252ea, %dec_label_pc_2534c, %dec_label_pc_25336
  %25 = call i32 @json_decref.65(i32 %0), !insn.addr !11102
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11103
  br label %dec_label_pc_25356, !insn.addr !11103

dec_label_pc_25356:                               ; preds = %dec_label_pc_2532e, %dec_label_pc_252c4, %dec_label_pc_252a8, %dec_label_pc_2534e
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11104

; uselistorder directives
  uselistorder i32* %4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %0, { 3, 0, 2, 1, 4 }
  uselistorder i32* %.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 4, 1, 2, 3 }
  uselistorder i32 44, { 3, 4, 0, 5, 6, 7, 1, 2 }
  uselistorder i32 93, { 3, 4, 0, 1, 2 }
  uselistorder i32 %arg3, { 4, 6, 0, 1, 7, 8, 2, 3, 5, 9 }
  uselistorder i32 %arg1, { 2, 0, 1, 3, 5, 4 }
  uselistorder label %dec_label_pc_25356, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_2534e, { 1, 2, 0 }
  uselistorder label %dec_label_pc_25336, { 2, 1, 0 }
}

define i32 @parse_value(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25360:
  %r3.0.reg2mem = alloca i32, !insn.addr !11105
  %stack_var_-24 = alloca i32, align 4
  %0 = add i32 %arg1, 52, !insn.addr !11106
  %1 = inttoptr i32 %0 to i32*, !insn.addr !11106
  %2 = load i32, i32* %1, align 4, !insn.addr !11106
  %3 = icmp eq i32 %2, 257, !insn.addr !11107
  br i1 %3, label %dec_label_pc_253ca, label %dec_label_pc_25378, !insn.addr !11108

dec_label_pc_25378:                               ; preds = %dec_label_pc_25360
  %4 = icmp sgt i32 %2, 257, !insn.addr !11109
  br i1 %4, label %dec_label_pc_2539c, label %dec_label_pc_25380, !insn.addr !11109

dec_label_pc_25380:                               ; preds = %dec_label_pc_25378
  %5 = icmp eq i32 %2, 91, !insn.addr !11110
  br i1 %5, label %dec_label_pc_2545a, label %dec_label_pc_25384, !insn.addr !11111

dec_label_pc_25384:                               ; preds = %dec_label_pc_25380
  %6 = icmp sgt i32 %2, 91, !insn.addr !11112
  br i1 %6, label %dec_label_pc_25390, label %dec_label_pc_25388, !insn.addr !11112

dec_label_pc_25388:                               ; preds = %dec_label_pc_25384
  %7 = icmp eq i32 %2, -1, !insn.addr !11113
  br i1 %7, label %dec_label_pc_25468, label %dec_label_pc_2547c, !insn.addr !11114

dec_label_pc_25390:                               ; preds = %dec_label_pc_25384
  switch i32 %2, label %dec_label_pc_2547c [
    i32 123, label %dec_label_pc_2544c
    i32 256, label %dec_label_pc_253bc
  ]

dec_label_pc_2539c:                               ; preds = %dec_label_pc_25378
  %8 = icmp eq i32 %2, 259, !insn.addr !11115
  br i1 %8, label %dec_label_pc_25434, label %dec_label_pc_253a4, !insn.addr !11116

dec_label_pc_253a4:                               ; preds = %dec_label_pc_2539c
  %9 = icmp slt i32 %2, 259, !insn.addr !11117
  br i1 %9, label %dec_label_pc_25422, label %dec_label_pc_253ac, !insn.addr !11117

dec_label_pc_253ac:                               ; preds = %dec_label_pc_253a4
  switch i32 %2, label %dec_label_pc_2547c [
    i32 260, label %dec_label_pc_2543c
    i32 261, label %dec_label_pc_25444
  ]

dec_label_pc_253bc:                               ; preds = %dec_label_pc_25390
  %10 = add i32 %arg1, 56, !insn.addr !11118
  %11 = inttoptr i32 %10 to i32*, !insn.addr !11118
  %12 = load i32, i32* %11, align 4, !insn.addr !11118
  %13 = call i32 @json_string_nocheck(i32 %12), !insn.addr !11119
  store i32 %13, i32* %r3.0.reg2mem, !insn.addr !11120
  br label %dec_label_pc_2549c, !insn.addr !11120

dec_label_pc_253ca:                               ; preds = %dec_label_pc_25360
  %14 = and i32 %arg2, 8, !insn.addr !11121
  %15 = icmp eq i32 %14, 0, !insn.addr !11122
  br i1 %15, label %dec_label_pc_25410, label %dec_label_pc_253d4, !insn.addr !11123

dec_label_pc_253d4:                               ; preds = %dec_label_pc_253ca
  %16 = add i32 %arg1, 40, !insn.addr !11124
  %17 = call i32 @jsonp_strtod(i32 %16, i32* nonnull %stack_var_-24), !insn.addr !11125
  %18 = icmp eq i32 %17, 0, !insn.addr !11126
  br i1 %18, label %dec_label_pc_25400, label %dec_label_pc_253ec, !insn.addr !11127

dec_label_pc_253ec:                               ; preds = %dec_label_pc_253d4
  %19 = call i32 @error_set(i32 %arg3, i32 %arg1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2d100, i32 0, i32 0), i32 %17), !insn.addr !11128
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11129
  br label %dec_label_pc_2549c, !insn.addr !11129

dec_label_pc_25400:                               ; preds = %dec_label_pc_253d4
  %20 = load i32, i32* %stack_var_-24, align 4, !insn.addr !11130
  %21 = call double @__asm_vldr.70(i32 %20), !insn.addr !11130
  ret i32 0, !insn.addr !11130

dec_label_pc_25410:                               ; preds = %dec_label_pc_253ca
  %22 = add i32 %arg1, 56, !insn.addr !11131
  %23 = inttoptr i32 %22 to i64*, !insn.addr !11131
  %24 = load i64, i64* %23, align 4, !insn.addr !11131
  %25 = trunc i64 %24 to i32, !insn.addr !11131
  %26 = udiv i64 %24, 4294967296, !insn.addr !11131
  %27 = trunc i64 %26 to i32, !insn.addr !11131
  %28 = call i32 @json_integer(i32 %27, i32 %25), !insn.addr !11132
  store i32 %28, i32* %r3.0.reg2mem, !insn.addr !11133
  br label %dec_label_pc_2549c, !insn.addr !11133

dec_label_pc_25422:                               ; preds = %dec_label_pc_253a4
  %29 = add i32 %arg1, 56, !insn.addr !11134
  %30 = inttoptr i32 %29 to i32*, !insn.addr !11134
  %31 = load i32, i32* %30, align 4, !insn.addr !11134
  %32 = call double @__asm_vldr.70(i32 %31), !insn.addr !11134
  ret i32 %arg1, !insn.addr !11134

dec_label_pc_25434:                               ; preds = %dec_label_pc_2539c
  %33 = call i32 @json_true(), !insn.addr !11135
  store i32 %33, i32* %r3.0.reg2mem, !insn.addr !11136
  br label %dec_label_pc_2549c, !insn.addr !11136

dec_label_pc_2543c:                               ; preds = %dec_label_pc_253ac
  %34 = call i32 @json_false(), !insn.addr !11137
  store i32 %34, i32* %r3.0.reg2mem, !insn.addr !11138
  br label %dec_label_pc_2549c, !insn.addr !11138

dec_label_pc_25444:                               ; preds = %dec_label_pc_253ac
  %35 = call i32 @json_null(), !insn.addr !11139
  store i32 %35, i32* %r3.0.reg2mem, !insn.addr !11140
  br label %dec_label_pc_2549c, !insn.addr !11140

dec_label_pc_2544c:                               ; preds = %dec_label_pc_25390
  %36 = call i32 @parse_object(i32 %arg1, i32 %arg2, i32 %arg3), !insn.addr !11141
  store i32 %36, i32* %r3.0.reg2mem, !insn.addr !11142
  br label %dec_label_pc_2549c, !insn.addr !11142

dec_label_pc_2545a:                               ; preds = %dec_label_pc_25380
  %37 = call i32 @parse_array(i32 %arg1, i32 %arg2, i32 %arg3), !insn.addr !11143
  store i32 %37, i32* %r3.0.reg2mem, !insn.addr !11144
  br label %dec_label_pc_2549c, !insn.addr !11144

dec_label_pc_25468:                               ; preds = %dec_label_pc_25388
  %38 = call i32 @error_set(i32 %arg3, i32 %arg1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2d190, i32 0, i32 0), i32 -1), !insn.addr !11145
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11146
  br label %dec_label_pc_2549c, !insn.addr !11146

dec_label_pc_2547c:                               ; preds = %dec_label_pc_253ac, %dec_label_pc_25390, %dec_label_pc_25388
  %39 = call i32 @error_set(i32 %arg3, i32 %arg1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2d1a0, i32 0, i32 0), i32 %2), !insn.addr !11147
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11148
  br label %dec_label_pc_2549c, !insn.addr !11148

dec_label_pc_2549c:                               ; preds = %dec_label_pc_253bc, %dec_label_pc_25410, %dec_label_pc_25434, %dec_label_pc_2543c, %dec_label_pc_25444, %dec_label_pc_2544c, %dec_label_pc_2545a, %dec_label_pc_2547c, %dec_label_pc_25468, %dec_label_pc_253ec
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11149

; uselistorder directives
  uselistorder i32 %2, { 2, 0, 5, 6, 1, 3, 4, 7, 8, 9 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.0.reg2mem, { 0, 9, 8, 3, 2, 4, 5, 6, 7, 10, 1 }
  uselistorder i32 (i32, i32*)* @jsonp_strtod, { 1, 0 }
  uselistorder i32 40, { 8, 15, 16, 14, 9, 10, 11, 12, 13, 17, 1, 2, 0, 5, 7, 6, 3, 4 }
  uselistorder i32 56, { 5, 6, 7, 12, 4, 11, 8, 9, 10, 0, 2, 1, 3 }
  uselistorder i32 257, { 3, 4, 5, 6, 7, 8, 9, 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 0, 2, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 4, 0, 3, 2, 5, 6, 8, 7, 9, 1, 10 }
  uselistorder label %dec_label_pc_2549c, { 7, 8, 6, 5, 4, 3, 2, 1, 9, 0 }
}

define i32 @parse_json(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_254a8:
  %r3.0.reg2mem = alloca i32, !insn.addr !11150
  %0 = ptrtoint i32* %arg1 to i32
  %1 = call i32 @lex_scan(i32 %0, i32 %arg3), !insn.addr !11151
  %2 = and i32 %arg2, 4, !insn.addr !11152
  %3 = icmp eq i32 %2, 0, !insn.addr !11153
  br i1 %3, label %dec_label_pc_254c6, label %dec_label_pc_254ea, !insn.addr !11154

dec_label_pc_254c6:                               ; preds = %dec_label_pc_254a8
  %4 = add i32 %0, 52, !insn.addr !11155
  %5 = inttoptr i32 %4 to i32*, !insn.addr !11155
  %6 = load i32, i32* %5, align 4, !insn.addr !11155
  switch i32 %6, label %dec_label_pc_254d6 [
    i32 91, label %dec_label_pc_254ea
    i32 123, label %dec_label_pc_254ea
  ]

dec_label_pc_254d6:                               ; preds = %dec_label_pc_254c6
  %7 = call i32 @error_set(i32 %arg3, i32 %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_2d1b4, i32 0, i32 0), i32 %6), !insn.addr !11156
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11157
  br label %dec_label_pc_25546, !insn.addr !11157

dec_label_pc_254ea:                               ; preds = %dec_label_pc_254c6, %dec_label_pc_254c6, %dec_label_pc_254a8
  %8 = call i32 @parse_value(i32 %0, i32 %arg2, i32 %arg3), !insn.addr !11158
  %9 = icmp eq i32 %8, 0, !insn.addr !11159
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11160
  br i1 %9, label %dec_label_pc_25546, label %dec_label_pc_25500, !insn.addr !11160

dec_label_pc_25500:                               ; preds = %dec_label_pc_254ea
  %10 = and i32 %arg2, 2, !insn.addr !11161
  %11 = icmp eq i32 %10, 0, !insn.addr !11162
  br i1 %11, label %dec_label_pc_2550a, label %dec_label_pc_25534, !insn.addr !11163

dec_label_pc_2550a:                               ; preds = %dec_label_pc_25500
  %12 = call i32 @lex_scan(i32 %0, i32 %arg3), !insn.addr !11164
  %13 = add i32 %0, 52, !insn.addr !11165
  %14 = inttoptr i32 %13 to i32*, !insn.addr !11165
  %15 = load i32, i32* %14, align 4, !insn.addr !11165
  %16 = icmp eq i32 %15, 0, !insn.addr !11166
  br i1 %16, label %dec_label_pc_25534, label %dec_label_pc_2551a, !insn.addr !11167

dec_label_pc_2551a:                               ; preds = %dec_label_pc_2550a
  %17 = call i32 @error_set(i32 %arg3, i32 %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_2d1c8, i32 0, i32 0), i32 %15), !insn.addr !11168
  %18 = call i32 @json_decref.65(i32 %8), !insn.addr !11169
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11170
  br label %dec_label_pc_25546, !insn.addr !11170

dec_label_pc_25534:                               ; preds = %dec_label_pc_25500, %dec_label_pc_2550a
  %19 = icmp eq i32 %arg3, 0, !insn.addr !11171
  store i32 %8, i32* %r3.0.reg2mem, !insn.addr !11172
  br i1 %19, label %dec_label_pc_25546, label %dec_label_pc_2553a, !insn.addr !11172

dec_label_pc_2553a:                               ; preds = %dec_label_pc_25534
  %20 = add i32 %0, 36, !insn.addr !11173
  %21 = inttoptr i32 %20 to i32*, !insn.addr !11173
  %22 = load i32, i32* %21, align 4, !insn.addr !11173
  %23 = add i32 %arg3, 8, !insn.addr !11174
  %24 = inttoptr i32 %23 to i32*, !insn.addr !11174
  store i32 %22, i32* %24, align 4, !insn.addr !11174
  store i32 %8, i32* %r3.0.reg2mem, !insn.addr !11174
  br label %dec_label_pc_25546, !insn.addr !11174

dec_label_pc_25546:                               ; preds = %dec_label_pc_25534, %dec_label_pc_2553a, %dec_label_pc_254ea, %dec_label_pc_2551a, %dec_label_pc_254d6
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11175

; uselistorder directives
  uselistorder i32 %8, { 1, 0, 2, 3 }
  uselistorder i32 %6, { 1, 0 }
  uselistorder i32 %0, { 2, 1, 4, 3, 5, 0, 6, 7 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 5, 3, 4 }
  uselistorder i32 (i32)* @json_decref.65, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @parse_value, { 0, 2, 1 }
  uselistorder i32 91, { 0, 2, 3, 1 }
  uselistorder i32 52, { 11, 12, 7, 4, 6, 13, 14, 5, 10, 8, 9, 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @lex_scan, { 1, 0, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %arg3, { 3, 2, 1, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_25546, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_25534, { 1, 0 }
}

define i32 @string_get(i32 %arg1) local_unnamed_addr {
dec_label_pc_25550:
  %storemerge.reg2mem = alloca i32, !insn.addr !11176
  %0 = add i32 %arg1, 4, !insn.addr !11177
  %1 = inttoptr i32 %0 to i32*, !insn.addr !11177
  %2 = load i32, i32* %1, align 4, !insn.addr !11177
  %3 = add i32 %2, %arg1, !insn.addr !11178
  %4 = inttoptr i32 %3 to i8*, !insn.addr !11179
  %5 = load i8, i8* %4, align 1, !insn.addr !11179
  %6 = icmp eq i8 %5, 0, !insn.addr !11180
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !11181
  br i1 %6, label %dec_label_pc_25582, label %dec_label_pc_25576, !insn.addr !11181

dec_label_pc_25576:                               ; preds = %dec_label_pc_25550
  %7 = add i32 %2, 1, !insn.addr !11182
  store i32 %7, i32* %1, align 4, !insn.addr !11183
  %8 = zext i8 %5 to i32, !insn.addr !11184
  store i32 %8, i32* %storemerge.reg2mem, !insn.addr !11184
  br label %dec_label_pc_25582, !insn.addr !11184

dec_label_pc_25582:                               ; preds = %dec_label_pc_25550, %dec_label_pc_25576
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11185

; uselistorder directives
  uselistorder i32 %2, { 1, 0 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_25582, { 1, 0 }
}

define i32 @json_loads(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25590:
  %r3.0.reg2mem = alloca i32, !insn.addr !11186
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %0 = call i32 @jsonp_error_init(i32 %arg3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2d1e0, i32 0, i32 0)), !insn.addr !11187
  %1 = icmp eq i32 %arg1, 0, !insn.addr !11188
  br i1 %1, label %dec_label_pc_255b0, label %dec_label_pc_255c4, !insn.addr !11189

dec_label_pc_255b0:                               ; preds = %dec_label_pc_25590
  %2 = call i32 @error_set(i32 %arg3, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2d1ec, i32 0, i32 0), i32 0), !insn.addr !11190
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11191
  br label %dec_label_pc_2560a, !insn.addr !11191

dec_label_pc_255c4:                               ; preds = %dec_label_pc_25590
  store i32 %arg1, i32* %stack_var_-88, align 4, !insn.addr !11192
  %3 = call i32 @lex_init(i32* nonnull %stack_var_-80, i32 152913, i32* nonnull %stack_var_-88), !insn.addr !11193
  %4 = icmp eq i32 %3, 0, !insn.addr !11194
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11195
  br i1 %4, label %dec_label_pc_255ee, label %dec_label_pc_2560a, !insn.addr !11195

dec_label_pc_255ee:                               ; preds = %dec_label_pc_255c4
  %5 = call i32 @parse_json(i32* nonnull %stack_var_-80, i32 %arg2, i32 %arg3), !insn.addr !11196
  %6 = call i32 @lex_close(i32* nonnull %stack_var_-80), !insn.addr !11197
  store i32 %5, i32* %r3.0.reg2mem, !insn.addr !11198
  br label %dec_label_pc_2560a, !insn.addr !11198

dec_label_pc_2560a:                               ; preds = %dec_label_pc_255c4, %dec_label_pc_255ee, %dec_label_pc_255b0
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11199

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_2560a, { 1, 0, 2 }
}

define i32 @buffer_get(i32 %arg1) local_unnamed_addr {
dec_label_pc_25614:
  %storemerge.reg2mem = alloca i32, !insn.addr !11200
  %0 = add i32 %arg1, 8, !insn.addr !11201
  %1 = inttoptr i32 %0 to i32*, !insn.addr !11201
  %2 = load i32, i32* %1, align 4, !insn.addr !11201
  %3 = add i32 %arg1, 4, !insn.addr !11202
  %4 = inttoptr i32 %3 to i32*, !insn.addr !11202
  %5 = load i32, i32* %4, align 4, !insn.addr !11202
  %6 = icmp ult i32 %2, %5, !insn.addr !11203
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !11204
  br i1 %6, label %dec_label_pc_25632, label %dec_label_pc_2564c, !insn.addr !11204

dec_label_pc_25632:                               ; preds = %dec_label_pc_25614
  %7 = add i32 %2, %arg1, !insn.addr !11205
  %8 = inttoptr i32 %7 to i8*, !insn.addr !11206
  %9 = load i8, i8* %8, align 1, !insn.addr !11206
  %10 = zext i8 %9 to i32, !insn.addr !11206
  %11 = add i32 %2, 1, !insn.addr !11207
  store i32 %11, i32* %1, align 4, !insn.addr !11208
  store i32 %10, i32* %storemerge.reg2mem, !insn.addr !11209
  br label %dec_label_pc_2564c, !insn.addr !11209

dec_label_pc_2564c:                               ; preds = %dec_label_pc_25614, %dec_label_pc_25632
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11210

; uselistorder directives
  uselistorder i32 %2, { 1, 0, 2 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2564c, { 1, 0 }
}

define i32 @json_loadb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25658:
  %r3.0.reg2mem = alloca i32, !insn.addr !11211
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %0 = call i32 @jsonp_error_init(i32 %arg4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2d1fc, i32 0, i32 0)), !insn.addr !11212
  %1 = icmp eq i32 %arg1, 0, !insn.addr !11213
  br i1 %1, label %dec_label_pc_2567a, label %dec_label_pc_2568e, !insn.addr !11214

dec_label_pc_2567a:                               ; preds = %dec_label_pc_25658
  %2 = call i32 @error_set(i32 %arg4, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2d1ec, i32 0, i32 0), i32 0), !insn.addr !11215
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11216
  br label %dec_label_pc_256d8, !insn.addr !11216

dec_label_pc_2568e:                               ; preds = %dec_label_pc_25658
  store i32 %arg1, i32* %stack_var_-92, align 4, !insn.addr !11217
  %3 = call i32 @lex_init(i32* nonnull %stack_var_-80, i32 153109, i32* nonnull %stack_var_-92), !insn.addr !11218
  %4 = icmp eq i32 %3, 0, !insn.addr !11219
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11220
  br i1 %4, label %dec_label_pc_256bc, label %dec_label_pc_256d8, !insn.addr !11220

dec_label_pc_256bc:                               ; preds = %dec_label_pc_2568e
  %5 = call i32 @parse_json(i32* nonnull %stack_var_-80, i32 %arg3, i32 %arg4), !insn.addr !11221
  %6 = call i32 @lex_close(i32* nonnull %stack_var_-80), !insn.addr !11222
  store i32 %5, i32* %r3.0.reg2mem, !insn.addr !11223
  br label %dec_label_pc_256d8, !insn.addr !11223

dec_label_pc_256d8:                               ; preds = %dec_label_pc_2568e, %dec_label_pc_256bc, %dec_label_pc_2567a
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11224

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_256d8, { 1, 0, 2 }
}

define i32 @json_loadf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_256e4:
  %r3.0.reg2mem = alloca i32, !insn.addr !11225
  %stack_var_-80 = alloca i32, align 4
  %0 = load i32, i32* @global_var_35aa0, align 4, !insn.addr !11226
  %1 = icmp eq i32 %0, %arg1, !insn.addr !11227
  %. = select i1 %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2d208, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2d210, i32 0, i32 0)
  %2 = call i32 @jsonp_error_init(i32 %arg3, i8* %.), !insn.addr !11228
  %3 = icmp eq i32 %arg1, 0, !insn.addr !11229
  br i1 %3, label %dec_label_pc_25724, label %dec_label_pc_25738, !insn.addr !11230

dec_label_pc_25724:                               ; preds = %dec_label_pc_256e4
  %4 = call i32 @error_set(i32 %arg3, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2d1ec, i32 0, i32 0), i32 0), !insn.addr !11231
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11232
  br label %dec_label_pc_25772, !insn.addr !11232

dec_label_pc_25738:                               ; preds = %dec_label_pc_256e4
  %5 = inttoptr i32 %arg1 to i32*, !insn.addr !11233
  %6 = call i32 @lex_init(i32* nonnull %stack_var_-80, i32 36504, i32* %5), !insn.addr !11233
  %7 = icmp eq i32 %6, 0, !insn.addr !11234
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11235
  br i1 %7, label %dec_label_pc_25756, label %dec_label_pc_25772, !insn.addr !11235

dec_label_pc_25756:                               ; preds = %dec_label_pc_25738
  %8 = call i32 @parse_json(i32* nonnull %stack_var_-80, i32 %arg2, i32 %arg3), !insn.addr !11236
  %9 = call i32 @lex_close(i32* nonnull %stack_var_-80), !insn.addr !11237
  store i32 %8, i32* %r3.0.reg2mem, !insn.addr !11238
  br label %dec_label_pc_25772, !insn.addr !11238

dec_label_pc_25772:                               ; preds = %dec_label_pc_25738, %dec_label_pc_25756, %dec_label_pc_25724
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11239

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_25772, { 1, 0, 2 }
}

define i32 @json_load_file(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_2577c:
  %r3.0.reg2mem = alloca i32, !insn.addr !11240
  %0 = ptrtoint i32* %arg3 to i32
  %1 = inttoptr i32 %arg1 to i8*, !insn.addr !11241
  %2 = call i32 @jsonp_error_init(i32 %0, i8* %1), !insn.addr !11241
  %3 = icmp eq i32 %arg1, 0, !insn.addr !11242
  br i1 %3, label %dec_label_pc_25796, label %dec_label_pc_257aa, !insn.addr !11243

dec_label_pc_25796:                               ; preds = %dec_label_pc_2577c
  %4 = call i32 @error_set(i32 %0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2d1ec, i32 0, i32 0), i32 0), !insn.addr !11244
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11245
  br label %dec_label_pc_257fc, !insn.addr !11245

dec_label_pc_257aa:                               ; preds = %dec_label_pc_2577c
  %5 = call %_IO_FILE* @fopen(i8* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2d21c, i32 0, i32 0)), !insn.addr !11246
  %6 = icmp eq %_IO_FILE* %5, null, !insn.addr !11247
  br i1 %6, label %dec_label_pc_257c0, label %dec_label_pc_257e8, !insn.addr !11248

dec_label_pc_257c0:                               ; preds = %dec_label_pc_257aa
  %7 = call i32* @__errno_location(), !insn.addr !11249
  %8 = load i32, i32* %7, align 4, !insn.addr !11250
  %9 = call i8* @strerror(i32 %8), !insn.addr !11251
  %10 = call i32 @error_set(i32 %0, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_2d220, i32 0, i32 0), i32 %arg1), !insn.addr !11252
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11253
  br label %dec_label_pc_257fc, !insn.addr !11253

dec_label_pc_257e8:                               ; preds = %dec_label_pc_257aa
  %11 = ptrtoint %_IO_FILE* %5 to i32, !insn.addr !11254
  %12 = call i32 @json_loadf(i32 %11, i32 %arg2, i32 %0), !insn.addr !11255
  %13 = call i32 @fclose(%_IO_FILE* nonnull %5), !insn.addr !11256
  store i32 %12, i32* %r3.0.reg2mem, !insn.addr !11257
  br label %dec_label_pc_257fc, !insn.addr !11257

dec_label_pc_257fc:                               ; preds = %dec_label_pc_257e8, %dec_label_pc_257c0, %dec_label_pc_25796
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11258

; uselistorder directives
  uselistorder %_IO_FILE* %5, { 1, 0, 2 }
  uselistorder i32 (%_IO_FILE*)* @fclose, { 1, 3, 2, 0 }
  uselistorder %_IO_FILE* (i8*, i8*)* @fopen, { 2, 4, 3, 1, 0 }
}

define i32 @callback_get(i32 %arg1) local_unnamed_addr {
dec_label_pc_25808:
  %storemerge.reg2mem = alloca i32, !insn.addr !11259
  %.reg2mem = alloca i32, !insn.addr !11259
  %0 = add i32 %arg1, 1028, !insn.addr !11260
  %1 = inttoptr i32 %0 to i32*, !insn.addr !11260
  %2 = load i32, i32* %1, align 4, !insn.addr !11260
  %3 = add i32 %arg1, 1024, !insn.addr !11261
  %4 = inttoptr i32 %3 to i32*, !insn.addr !11261
  %5 = load i32, i32* %4, align 4, !insn.addr !11261
  %6 = icmp ult i32 %2, %5, !insn.addr !11262
  store i32 %2, i32* %.reg2mem, !insn.addr !11263
  br i1 %6, label %dec_label_pc_25866, label %dec_label_pc_25824, !insn.addr !11263

dec_label_pc_25824:                               ; preds = %dec_label_pc_25808
  store i32 0, i32* %1, align 4, !insn.addr !11264
  store i32 %arg1, i32* %4, align 4, !insn.addr !11265
  store i32 -1, i32* %storemerge.reg2mem
  store i32 -1, i32* %storemerge.reg2mem
  switch i32 %arg1, label %dec_label_pc_25824.dec_label_pc_25866_crit_edge [
    i32 0, label %dec_label_pc_25882
    i32 -1, label %dec_label_pc_25882
  ]

dec_label_pc_25824.dec_label_pc_25866_crit_edge:  ; preds = %dec_label_pc_25824
  %.pre = load i32, i32* %1, align 4
  store i32 %.pre, i32* %.reg2mem
  br label %dec_label_pc_25866

dec_label_pc_25866:                               ; preds = %dec_label_pc_25824.dec_label_pc_25866_crit_edge, %dec_label_pc_25808
  %.reload = load i32, i32* %.reg2mem, !insn.addr !11266
  %7 = add i32 %.reload, %arg1, !insn.addr !11267
  %8 = inttoptr i32 %7 to i8*, !insn.addr !11267
  %9 = load i8, i8* %8, align 1, !insn.addr !11267
  %10 = zext i8 %9 to i32, !insn.addr !11267
  %11 = add i32 %.reload, 1, !insn.addr !11268
  store i32 %11, i32* %1, align 4, !insn.addr !11269
  store i32 %10, i32* %storemerge.reg2mem, !insn.addr !11270
  br label %dec_label_pc_25882, !insn.addr !11270

dec_label_pc_25882:                               ; preds = %dec_label_pc_25824, %dec_label_pc_25824, %dec_label_pc_25866
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11271

; uselistorder directives
  uselistorder i32* %1, { 1, 0, 2, 3 }
  uselistorder i32* %.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32 1024, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_25882, { 2, 0, 1 }
}

define i32 @json_load_callback(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2588c:
  %r3.0.reg2mem = alloca i32, !insn.addr !11272
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-1128 = alloca i32, align 4
  %stack_var_-1144 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-1144, align 4, !insn.addr !11273
  %0 = call i32* @memset(i32* nonnull %stack_var_-1128, i32 0, i32 1040), !insn.addr !11274
  %1 = call i32 @jsonp_error_init(i32 %arg4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2d238, i32 0, i32 0)), !insn.addr !11275
  %2 = icmp eq i32 %arg1, 0, !insn.addr !11276
  br i1 %2, label %dec_label_pc_258ee, label %dec_label_pc_25904, !insn.addr !11277

dec_label_pc_258ee:                               ; preds = %dec_label_pc_2588c
  %3 = ptrtoint i32* %stack_var_-1144 to i32, !insn.addr !11278
  %4 = call i32 @error_set(i32 %arg4, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2d1ec, i32 0, i32 0), i32 %3), !insn.addr !11279
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11280
  br label %dec_label_pc_2594a, !insn.addr !11280

dec_label_pc_25904:                               ; preds = %dec_label_pc_2588c
  %5 = call i32 @lex_init(i32* nonnull %stack_var_-88, i32 153609, i32* nonnull %stack_var_-1128), !insn.addr !11281
  %6 = icmp eq i32 %5, 0, !insn.addr !11282
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11283
  br i1 %6, label %dec_label_pc_25926, label %dec_label_pc_2594a, !insn.addr !11283

dec_label_pc_25926:                               ; preds = %dec_label_pc_25904
  %7 = load i32, i32* %stack_var_-1144, align 4, !insn.addr !11284
  %8 = call i32 @parse_json(i32* nonnull %stack_var_-88, i32 %arg3, i32 %7), !insn.addr !11285
  %9 = call i32 @lex_close(i32* nonnull %stack_var_-88), !insn.addr !11286
  store i32 %8, i32* %r3.0.reg2mem, !insn.addr !11287
  br label %dec_label_pc_2594a, !insn.addr !11287

dec_label_pc_2594a:                               ; preds = %dec_label_pc_25904, %dec_label_pc_25926, %dec_label_pc_258ee
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11288

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3 }
  uselistorder i32 (i32*)* @lex_close, { 3, 0, 2, 1 }
  uselistorder i32 (i32*, i32, i32)* @parse_json, { 3, 0, 2, 1 }
  uselistorder i32 (i32*, i32, i32*)* @lex_init, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i8*, i32)* @error_set, { 28, 1, 0, 2, 27, 26, 4, 3, 20, 19, 18, 25, 24, 23, 22, 21, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32, i8*)* @jsonp_error_init, { 4, 0, 1, 3, 2 }
  uselistorder i32* (i32*, i32, i32)* @memset, { 44, 28, 27, 26, 25, 24, 43, 23, 42, 41, 40, 31, 30, 29, 39, 38, 37, 36, 21, 22, 20, 35, 34, 33, 32, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 8, 7, 9, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_2594a, { 1, 0, 2 }
}

define i32 @jsonp_malloc(i32 %arg1) local_unnamed_addr {
dec_label_pc_25958:
  %storemerge.reg2mem = alloca i32, !insn.addr !11289
  %0 = icmp eq i32 %arg1, 0, !insn.addr !11290
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !11291
  br i1 %0, label %dec_label_pc_2597a, label %dec_label_pc_2596a, !insn.addr !11291

dec_label_pc_2596a:                               ; preds = %dec_label_pc_25958
  %1 = call i32* @malloc(i32 %arg1), !insn.addr !11292
  %2 = ptrtoint i32* %1 to i32, !insn.addr !11292
  store i32 %2, i32* %storemerge.reg2mem, !insn.addr !11293
  br label %dec_label_pc_2597a, !insn.addr !11293

dec_label_pc_2597a:                               ; preds = %dec_label_pc_25958, %dec_label_pc_2596a
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11294

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32* (i32)* @malloc, { 10, 14, 9, 8, 7, 6, 5, 4, 3, 2, 1, 13, 12, 11, 0 }
  uselistorder label %dec_label_pc_2597a, { 1, 0 }
}

define i32 @jsonp_free(i32 %arg1) local_unnamed_addr {
dec_label_pc_25984:
  %0 = alloca i32
  %storemerge.reg2mem = alloca i32, !insn.addr !11295
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = icmp eq i32 %arg1, 0, !insn.addr !11296
  br i1 %3, label %dec_label_pc_259a2, label %dec_label_pc_25992, !insn.addr !11297

dec_label_pc_25992:                               ; preds = %dec_label_pc_25984
  %4 = inttoptr i32 %arg1 to i32*, !insn.addr !11298
  call void @free(i32* %4), !insn.addr !11298
  store i32 ptrtoint (i32* @1 to i32), i32* %storemerge.reg2mem, !insn.addr !11299
  br label %dec_label_pc_259a4, !insn.addr !11299

dec_label_pc_259a2:                               ; preds = %dec_label_pc_25984
  %5 = call i32 @__asm_nop(i32 0, i32 %2, i32 %1, i32 0), !insn.addr !11300
  store i32 %5, i32* %storemerge.reg2mem, !insn.addr !11300
  br label %dec_label_pc_259a4, !insn.addr !11300

dec_label_pc_259a4:                               ; preds = %dec_label_pc_259a2, %dec_label_pc_25992
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11301

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32* %0, { 1, 0 }
  uselistorder void (i32*)* @free, { 34, 33, 32, 45, 31, 27, 30, 29, 28, 26, 23, 22, 25, 24, 21, 20, 19, 18, 17, 16, 15, 14, 13, 11, 12, 8, 10, 9, 6, 7, 3, 5, 4, 44, 43, 2, 1, 42, 41, 0, 40, 39, 38, 37, 36, 35 }
}

define i32 @jsonp_strdup(i32 %arg1) local_unnamed_addr {
dec_label_pc_259ac:
  %r3.0.reg2mem = alloca i32, !insn.addr !11302
  %0 = inttoptr i32 %arg1 to i8*, !insn.addr !11303
  %1 = call i32 @strlen(i8* %0), !insn.addr !11303
  %2 = icmp eq i32 %1, -1, !insn.addr !11304
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11305
  br i1 %2, label %dec_label_pc_259ee, label %dec_label_pc_259c8, !insn.addr !11305

dec_label_pc_259c8:                               ; preds = %dec_label_pc_259ac
  %3 = add i32 %1, 1, !insn.addr !11306
  %4 = call i32 @jsonp_malloc(i32 %3), !insn.addr !11307
  %5 = icmp eq i32 %4, 0, !insn.addr !11308
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11309
  br i1 %5, label %dec_label_pc_259ee, label %dec_label_pc_259de, !insn.addr !11309

dec_label_pc_259de:                               ; preds = %dec_label_pc_259c8
  %6 = inttoptr i32 %4 to i32*, !insn.addr !11310
  %7 = inttoptr i32 %arg1 to i32*, !insn.addr !11310
  %8 = call i32* @memcpy(i32* %6, i32* %7, i32 %3), !insn.addr !11310
  store i32 %4, i32* %r3.0.reg2mem, !insn.addr !11311
  br label %dec_label_pc_259ee, !insn.addr !11311

dec_label_pc_259ee:                               ; preds = %dec_label_pc_259c8, %dec_label_pc_259ac, %dec_label_pc_259de
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11312

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_259ee, { 2, 0, 1 }
}

define i32 @json_set_alloc_funcs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_259f8:
  store i32 %arg1, i32* @global_var_35a80, align 4, !insn.addr !11313
  store i32 %arg2, i32* @global_var_35a84, align 4, !insn.addr !11314
  ret i32 %arg1, !insn.addr !11315

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @strbuffer_init(i32* %arg1) local_unnamed_addr {
dec_label_pc_25a24:
  %storemerge.reg2mem = alloca i32, !insn.addr !11316
  %0 = ptrtoint i32* %arg1 to i32
  %1 = add i32 %0, 8, !insn.addr !11317
  %2 = inttoptr i32 %1 to i32*, !insn.addr !11317
  store i32 16, i32* %2, align 4, !insn.addr !11317
  %3 = add i32 %0, 4, !insn.addr !11318
  %4 = inttoptr i32 %3 to i32*, !insn.addr !11318
  store i32 0, i32* %4, align 4, !insn.addr !11318
  %5 = load i32, i32* %2, align 4, !insn.addr !11319
  %6 = call i32 @jsonp_malloc(i32 %5), !insn.addr !11320
  store i32 %6, i32* %arg1, align 4, !insn.addr !11321
  %7 = icmp eq i32 %6, 0, !insn.addr !11322
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !11323
  br i1 %7, label %dec_label_pc_25a60, label %dec_label_pc_25a56, !insn.addr !11323

dec_label_pc_25a56:                               ; preds = %dec_label_pc_25a24
  %8 = inttoptr i32 %6 to i8*, !insn.addr !11324
  store i8 0, i8* %8, align 1, !insn.addr !11324
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !11325
  br label %dec_label_pc_25a60, !insn.addr !11325

dec_label_pc_25a60:                               ; preds = %dec_label_pc_25a24, %dec_label_pc_25a56
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11326

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_25a60, { 1, 0 }
}

define i32 @strbuffer_close(i32* %arg1) local_unnamed_addr {
dec_label_pc_25a6c:
  %r0.0.reg2mem = alloca i32, !insn.addr !11327
  %0 = ptrtoint i32* %arg1 to i32
  %1 = icmp eq i32* %arg1, null, !insn.addr !11328
  store i32 %0, i32* %r0.0.reg2mem, !insn.addr !11329
  br i1 %1, label %dec_label_pc_25a86, label %dec_label_pc_25a7c, !insn.addr !11329

dec_label_pc_25a7c:                               ; preds = %dec_label_pc_25a6c
  %2 = call i32 @jsonp_free(i32 %0), !insn.addr !11330
  store i32 %2, i32* %r0.0.reg2mem, !insn.addr !11330
  br label %dec_label_pc_25a86, !insn.addr !11330

dec_label_pc_25a86:                               ; preds = %dec_label_pc_25a7c, %dec_label_pc_25a6c
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %3 = add i32 %0, 8, !insn.addr !11331
  %4 = inttoptr i32 %3 to i32*, !insn.addr !11331
  store i32 0, i32* %4, align 4, !insn.addr !11331
  %5 = add i32 %0, 4, !insn.addr !11332
  %6 = inttoptr i32 %5 to i32*, !insn.addr !11332
  store i32 0, i32* %6, align 4, !insn.addr !11332
  store i32 0, i32* %arg1, align 4, !insn.addr !11333
  ret i32 %r0.0.reload, !insn.addr !11334

; uselistorder directives
  uselistorder i32 %0, { 2, 3, 1, 0 }
}

define i32 @strbuffer_clear(i32 %arg1) local_unnamed_addr {
dec_label_pc_25aa0:
  %0 = add i32 %arg1, 4, !insn.addr !11335
  %1 = inttoptr i32 %0 to i32*, !insn.addr !11335
  store i32 0, i32* %1, align 4, !insn.addr !11335
  %2 = inttoptr i32 %arg1 to i8*, !insn.addr !11336
  store i8 0, i8* %2, align 1, !insn.addr !11336
  ret i32 %arg1, !insn.addr !11337

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
}

define i32 @strbuffer_value(i32* %arg1) local_unnamed_addr {
dec_label_pc_25ac0:
  %0 = ptrtoint i32* %arg1 to i32
  ret i32 %0, !insn.addr !11338
}

define i32 @strbuffer_steal_value(i32 %arg1) local_unnamed_addr {
dec_label_pc_25ad8:
  %0 = inttoptr i32 %arg1 to i32*, !insn.addr !11339
  store i32 0, i32* %0, align 4, !insn.addr !11339
  ret i32 %arg1, !insn.addr !11340
}

define i32 @strbuffer_append(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25afc:
  %0 = inttoptr i32 %arg2 to i8*, !insn.addr !11341
  %1 = call i32 @strlen(i8* %0), !insn.addr !11341
  %2 = call i32 @strbuffer_append_bytes(i32 %arg1, i32 %arg2, i32 %1), !insn.addr !11342
  ret i32 %2, !insn.addr !11343
}

define i32 @strbuffer_append_byte(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25b24:
  %stack_var_-13 = alloca i32, align 4
  %0 = mul i32 %arg2, 16777216
  %1 = ashr exact i32 %0, 24, !insn.addr !11344
  store i32 %1, i32* %stack_var_-13, align 4, !insn.addr !11344
  %2 = ptrtoint i32* %stack_var_-13 to i32, !insn.addr !11345
  %3 = call i32 @strbuffer_append_bytes(i32 %arg1, i32 %2, i32 1), !insn.addr !11346
  ret i32 %3, !insn.addr !11347

; uselistorder directives
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @strbuffer_append_bytes, { 0, 2, 1 }
  uselistorder i32 16777216, { 0, 146, 1, 2, 3, 4, 5, 138, 139, 140, 141, 142, 147, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 143, 144, 145, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137 }
}

define i32 @strbuffer_append_bytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25b48:
  %r3.1.reg2mem = alloca i32, !insn.addr !11348
  %r0.0.reg2mem = alloca i32, !insn.addr !11348
  %.reg2mem = alloca i32, !insn.addr !11348
  %0 = add i32 %arg1, 8, !insn.addr !11349
  %1 = inttoptr i32 %0 to i32*, !insn.addr !11349
  %2 = load i32, i32* %1, align 4, !insn.addr !11349
  %3 = add i32 %arg1, 4, !insn.addr !11350
  %4 = inttoptr i32 %3 to i32*, !insn.addr !11350
  %5 = load i32, i32* %4, align 4, !insn.addr !11350
  %6 = sub i32 %2, %5, !insn.addr !11351
  %7 = icmp ult i32 %6, %arg3, !insn.addr !11352
  %8 = icmp ne i1 %7, true, !insn.addr !11352
  %9 = icmp eq i32 %6, %arg3, !insn.addr !11352
  %10 = icmp ne i1 %9, true, !insn.addr !11353
  %11 = icmp eq i1 %8, %10, !insn.addr !11353
  store i32 %5, i32* %.reg2mem, !insn.addr !11353
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !11353
  br i1 %11, label %dec_label_pc_25be2, label %dec_label_pc_25b64, !insn.addr !11353

dec_label_pc_25b64:                               ; preds = %dec_label_pc_25b48
  %12 = icmp slt i32 %2, 0, !insn.addr !11354
  %13 = icmp eq i32 %arg3, -1, !insn.addr !11355
  %or.cond = or i1 %13, %12
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !11356
  br i1 %or.cond, label %dec_label_pc_25c12, label %dec_label_pc_25b74, !insn.addr !11356

dec_label_pc_25b74:                               ; preds = %dec_label_pc_25b64
  %14 = sub i32 -2, %arg3, !insn.addr !11357
  %15 = icmp ult i32 %5, %14, !insn.addr !11358
  %16 = icmp ne i1 %15, true, !insn.addr !11358
  %17 = icmp eq i32 %5, %14, !insn.addr !11358
  %18 = icmp ne i1 %16, true, !insn.addr !11359
  %19 = or i1 %17, %18, !insn.addr !11359
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !11359
  br i1 %19, label %dec_label_pc_25b8e, label %dec_label_pc_25c12, !insn.addr !11359

dec_label_pc_25b8e:                               ; preds = %dec_label_pc_25b74
  %20 = add i32 %arg3, 1, !insn.addr !11360
  %21 = add i32 %20, %5, !insn.addr !11361
  %22 = mul i32 %2, 2, !insn.addr !11362
  %23 = icmp ult i32 %21, %22, !insn.addr !11363
  %24 = icmp ne i1 %23, true, !insn.addr !11363
  br i1 %24, label %25, label %27, !insn.addr !11364

; <label>:25:                                     ; preds = %dec_label_pc_25b8e
  %26 = call i32 @__asm_it(), !insn.addr !11364
  br label %27, !insn.addr !11364

; <label>:27:                                     ; preds = %dec_label_pc_25b8e, %25
  %spec.select = select i1 %24, i32 %21, i32 %22
  %28 = call i32 @jsonp_malloc(i32 %spec.select), !insn.addr !11365
  %29 = icmp eq i32 %28, 0, !insn.addr !11366
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !11367
  br i1 %29, label %dec_label_pc_25c12, label %dec_label_pc_25bba, !insn.addr !11367

dec_label_pc_25bba:                               ; preds = %27
  %30 = load i32, i32* %4, align 4, !insn.addr !11368
  %31 = inttoptr i32 %28 to i32*, !insn.addr !11369
  %32 = call i32* @memcpy(i32* %31, i32* %31, i32 %30), !insn.addr !11369
  %33 = ptrtoint i32* %32 to i32, !insn.addr !11369
  %34 = call i32 @jsonp_free(i32 %33), !insn.addr !11370
  %35 = inttoptr i32 %arg1 to i32*, !insn.addr !11371
  store i32 %28, i32* %35, align 4, !insn.addr !11371
  store i32 %spec.select, i32* %1, align 4, !insn.addr !11372
  %.pre = load i32, i32* %4, align 4
  store i32 %.pre, i32* %.reg2mem, !insn.addr !11372
  store i32 %34, i32* %r0.0.reg2mem, !insn.addr !11372
  br label %dec_label_pc_25be2, !insn.addr !11372

dec_label_pc_25be2:                               ; preds = %dec_label_pc_25bba, %dec_label_pc_25b48
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %.reload = load i32, i32* %.reg2mem, !insn.addr !11373
  %36 = add i32 %r0.0.reload, %.reload, !insn.addr !11374
  %37 = inttoptr i32 %36 to i32*, !insn.addr !11375
  %38 = inttoptr i32 %arg2 to i32*, !insn.addr !11375
  %39 = call i32* @memcpy(i32* %37, i32* %38, i32 %arg3), !insn.addr !11375
  %40 = ptrtoint i32* %39 to i32, !insn.addr !11375
  %41 = load i32, i32* %4, align 4, !insn.addr !11376
  %42 = add i32 %41, %arg3, !insn.addr !11377
  store i32 %42, i32* %4, align 4, !insn.addr !11378
  %43 = add i32 %42, %40, !insn.addr !11379
  %44 = inttoptr i32 %43 to i8*, !insn.addr !11380
  store i8 0, i8* %44, align 1, !insn.addr !11380
  store i32 0, i32* %r3.1.reg2mem, !insn.addr !11381
  br label %dec_label_pc_25c12, !insn.addr !11381

dec_label_pc_25c12:                               ; preds = %27, %dec_label_pc_25b64, %dec_label_pc_25b74, %dec_label_pc_25be2
  %r3.1.reload = load i32, i32* %r3.1.reg2mem
  ret i32 %r3.1.reload, !insn.addr !11382

; uselistorder directives
  uselistorder i32 %spec.select, { 1, 0 }
  uselistorder i32 %22, { 1, 0 }
  uselistorder i32 %14, { 1, 0 }
  uselistorder i32 %6, { 1, 0 }
  uselistorder i32 %5, { 1, 2, 3, 0, 4 }
  uselistorder i32* %4, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r3.1.reg2mem, { 0, 4, 1, 3, 2 }
  uselistorder i32 %arg3, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_25c12, { 3, 0, 2, 1 }
  uselistorder label %27, { 1, 0 }
}

define i32 @strbuffer_pop(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c1c:
  %storemerge.reg2mem = alloca i32, !insn.addr !11383
  %0 = add i32 %arg1, 4, !insn.addr !11384
  %1 = inttoptr i32 %0 to i32*, !insn.addr !11384
  %2 = load i32, i32* %1, align 4, !insn.addr !11384
  %3 = icmp eq i32 %2, 0, !insn.addr !11385
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !11386
  br i1 %3, label %dec_label_pc_25c58, label %dec_label_pc_25c2c, !insn.addr !11386

dec_label_pc_25c2c:                               ; preds = %dec_label_pc_25c1c
  %4 = add i32 %2, -1, !insn.addr !11387
  store i32 %4, i32* %1, align 4, !insn.addr !11388
  %5 = add i32 %4, %arg1, !insn.addr !11389
  %6 = inttoptr i32 %5 to i8*, !insn.addr !11390
  %7 = load i8, i8* %6, align 1, !insn.addr !11390
  %8 = zext i8 %7 to i32, !insn.addr !11390
  store i8 0, i8* %6, align 1, !insn.addr !11391
  store i32 %8, i32* %storemerge.reg2mem, !insn.addr !11392
  br label %dec_label_pc_25c58, !insn.addr !11392

dec_label_pc_25c58:                               ; preds = %dec_label_pc_25c1c, %dec_label_pc_25c2c
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11393

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_25c58, { 1, 0 }
}

define i32 @to_locale(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c64:
  %0 = alloca i32
  %r0.0.reg2mem = alloca i32, !insn.addr !11394
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = call %lconv* @localeconv(), !insn.addr !11395
  %4 = bitcast %lconv* %3 to i32*, !insn.addr !11396
  %5 = load i32, i32* %4, align 4, !insn.addr !11396
  %6 = inttoptr i32 %5 to i8*, !insn.addr !11397
  %7 = load i8, i8* %6, align 1, !insn.addr !11398
  %8 = icmp eq i8 %7, 46, !insn.addr !11399
  br i1 %8, label %dec_label_pc_25c9c, label %dec_label_pc_25c7e, !insn.addr !11400

dec_label_pc_25c7e:                               ; preds = %dec_label_pc_25c64
  %9 = bitcast %lconv* %3 to i8*, !insn.addr !11401
  %10 = call i8* @strchr(i8* %9, i32 46), !insn.addr !11401
  %11 = ptrtoint i8* %10 to i32, !insn.addr !11401
  %12 = icmp eq i8* %10, null, !insn.addr !11402
  store i32 %11, i32* %r0.0.reg2mem, !insn.addr !11403
  br i1 %12, label %dec_label_pc_25c9e, label %dec_label_pc_25c92, !insn.addr !11403

dec_label_pc_25c92:                               ; preds = %dec_label_pc_25c7e
  %13 = load i8, i8* %6, align 1, !insn.addr !11404
  store i8 %13, i8* %10, align 1, !insn.addr !11405
  store i32 %11, i32* %r0.0.reg2mem, !insn.addr !11406
  br label %dec_label_pc_25c9e, !insn.addr !11406

dec_label_pc_25c9c:                               ; preds = %dec_label_pc_25c64
  %14 = ptrtoint %lconv* %3 to i32, !insn.addr !11395
  %15 = call i32 @__asm_nop(i32 %14, i32 %2, i32 %1, i32 46), !insn.addr !11407
  store i32 %15, i32* %r0.0.reg2mem, !insn.addr !11407
  br label %dec_label_pc_25c9e, !insn.addr !11407

dec_label_pc_25c9e:                               ; preds = %dec_label_pc_25c9c, %dec_label_pc_25c92, %dec_label_pc_25c7e
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !11408

; uselistorder directives
  uselistorder %lconv* %3, { 2, 0, 1 }
  uselistorder i32* %r0.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %0, { 1, 0 }
}

define i32 @from_locale(i32 %arg1) local_unnamed_addr {
dec_label_pc_25ca8:
  %0 = alloca i32
  %r0.0.reg2mem = alloca i32, !insn.addr !11409
  %1 = load i32, i32* %0
  %2 = load i32, i32* %0
  %3 = call %lconv* @localeconv(), !insn.addr !11410
  %4 = bitcast %lconv* %3 to i32*, !insn.addr !11411
  %5 = load i32, i32* %4, align 4, !insn.addr !11411
  %6 = inttoptr i32 %5 to i8*, !insn.addr !11412
  %7 = load i8, i8* %6, align 1, !insn.addr !11413
  %8 = icmp eq i8 %7, 46, !insn.addr !11414
  %9 = zext i8 %7 to i32
  br i1 %8, label %dec_label_pc_25cde, label %dec_label_pc_25cc2, !insn.addr !11415

dec_label_pc_25cc2:                               ; preds = %dec_label_pc_25ca8
  %10 = inttoptr i32 %arg1 to i8*, !insn.addr !11416
  %11 = call i8* @strchr(i8* %10, i32 %9), !insn.addr !11416
  %12 = ptrtoint i8* %11 to i32, !insn.addr !11416
  %13 = icmp eq i8* %11, null, !insn.addr !11417
  store i32 %12, i32* %r0.0.reg2mem, !insn.addr !11418
  br i1 %13, label %dec_label_pc_25ce0, label %dec_label_pc_25cd6, !insn.addr !11418

dec_label_pc_25cd6:                               ; preds = %dec_label_pc_25cc2
  store i8 46, i8* %11, align 1, !insn.addr !11419
  store i32 %12, i32* %r0.0.reg2mem, !insn.addr !11420
  br label %dec_label_pc_25ce0, !insn.addr !11420

dec_label_pc_25cde:                               ; preds = %dec_label_pc_25ca8
  %14 = ptrtoint %lconv* %3 to i32, !insn.addr !11410
  %15 = call i32 @__asm_nop(i32 %14, i32 %2, i32 %1, i32 %9), !insn.addr !11421
  store i32 %15, i32* %r0.0.reg2mem, !insn.addr !11421
  br label %dec_label_pc_25ce0, !insn.addr !11421

dec_label_pc_25ce0:                               ; preds = %dec_label_pc_25cde, %dec_label_pc_25cd6, %dec_label_pc_25cc2
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !11422

; uselistorder directives
  uselistorder i32 %9, { 1, 0 }
  uselistorder i8 %7, { 1, 0 }
  uselistorder %lconv* %3, { 1, 0 }
  uselistorder i32* %r0.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %0, { 1, 0 }
  uselistorder %lconv* ()* @localeconv, { 1, 0 }
}

define i32 @jsonp_strtod(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_25ce8:
  %0 = alloca i64
  %1 = alloca double
  %2 = load double, double* %1
  %3 = load i64, i64* %0
  %stack_var_-20 = alloca i32, align 4
  %4 = call i32 @to_locale(i32 %arg1), !insn.addr !11423
  %5 = call i32* @__errno_location(), !insn.addr !11424
  store i32 0, i32* %5, align 4, !insn.addr !11425
  %6 = bitcast i32* %5 to i8*, !insn.addr !11426
  %7 = bitcast i32* %stack_var_-20 to i8**, !insn.addr !11426
  %8 = call double @strtod(i8* %6, i8** nonnull %7), !insn.addr !11426
  %9 = fptrunc double %8 to float, !insn.addr !11426
  %10 = bitcast float %9 to i32, !insn.addr !11426
  %11 = trunc i64 %3 to i32, !insn.addr !11427
  call void @__asm_vstr.71(double %2, i32 %11), !insn.addr !11427
  %12 = add i32 %arg1, 4, !insn.addr !11428
  %13 = inttoptr i32 %12 to i32*, !insn.addr !11428
  %14 = load i32, i32* %13, align 4, !insn.addr !11428
  %15 = add i32 %14, %10, !insn.addr !11429
  %16 = load i32, i32* %stack_var_-20, align 4, !insn.addr !11430
  %17 = icmp eq i32 %15, %16, !insn.addr !11431
  br i1 %17, label %dec_label_pc_25d44, label %dec_label_pc_25d26, !insn.addr !11432

dec_label_pc_25d26:                               ; preds = %dec_label_pc_25ce8
  call void @__assert_fail(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_var_2d2ac, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_2d2d8, i32 0, i32 0), i32 70, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2d304, i32 0, i32 0)), !insn.addr !11433
  br label %dec_label_pc_25d44, !insn.addr !11433

dec_label_pc_25d44:                               ; preds = %dec_label_pc_25d26, %dec_label_pc_25ce8
  %18 = call i32* @__errno_location(), !insn.addr !11434
  %19 = load i32, i32* %18, align 4, !insn.addr !11435
  %20 = icmp eq i32 %19, 34, !insn.addr !11436
  br i1 %20, label %dec_label_pc_25d50, label %dec_label_pc_25d64, !insn.addr !11437

dec_label_pc_25d50:                               ; preds = %dec_label_pc_25d44
  %21 = ptrtoint i32* %18 to i32, !insn.addr !11434
  %22 = call double @__asm_vldr.70(i32 %11), !insn.addr !11438
  ret i32 %21, !insn.addr !11438

dec_label_pc_25d64:                               ; preds = %dec_label_pc_25d44
  %23 = ptrtoint i32* %arg2 to i32
  %24 = mul i64 %3, 4294967296
  %25 = ashr exact i64 %24, 32, !insn.addr !11439
  %26 = trunc i64 %25 to i32, !insn.addr !11439
  %27 = udiv i64 %25, 4294967296, !insn.addr !11439
  %28 = trunc i64 %27 to i32, !insn.addr !11439
  store i32 %28, i32* %arg2, align 4, !insn.addr !11440
  %29 = add i32 %23, 4, !insn.addr !11440
  %30 = inttoptr i32 %29 to i32*, !insn.addr !11440
  store i32 %26, i32* %30, align 4, !insn.addr !11440
  ret i32 0, !insn.addr !11441

; uselistorder directives
  uselistorder i32* %18, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i64 %3, { 1, 0 }
  uselistorder i32 34, { 3, 0, 4, 2, 1 }
  uselistorder void (i8*, i8*, i32, i8*)* @__assert_fail, { 15, 14, 11, 10, 13, 12, 7, 9, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 70, { 1, 0 }
  uselistorder i32* ()* @__errno_location, { 4, 3, 0, 2, 1 }
}

define i32 @jsonp_dtostr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25d7c:
  %0 = alloca double
  %r3.1.reg2mem = alloca i32, !insn.addr !11442
  %stack_var_-16.0.reg2mem = alloca i32, !insn.addr !11442
  %r2.0.reg2mem = alloca i32, !insn.addr !11442
  %stack_var_-20.0.reg2mem = alloca i32, !insn.addr !11442
  %1 = load double, double* %0
  %2 = load double, double* %0
  %3 = fptrunc double %2 to float, !insn.addr !11443
  %4 = bitcast float %3 to i32, !insn.addr !11443
  call void @__asm_vstr.71(double %1, i32 %4), !insn.addr !11443
  %5 = inttoptr i32 %arg1 to i8*, !insn.addr !11444
  %6 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %5, i32 %arg2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2d2fc, i32 0, i32 0), double %2), !insn.addr !11444
  %7 = icmp sgt i32 %6, -1, !insn.addr !11445
  %8 = icmp ult i32 %6, %arg2, !insn.addr !11446
  %or.cond = icmp eq i1 %7, %8
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !11447
  br i1 %or.cond, label %dec_label_pc_25dc2, label %dec_label_pc_25e86, !insn.addr !11447

dec_label_pc_25dc2:                               ; preds = %dec_label_pc_25d7c
  %9 = call i32 @from_locale(i32 %arg1), !insn.addr !11448
  %10 = call i8* @strchr(i8* %5, i32 46), !insn.addr !11449
  %11 = icmp eq i8* %10, null, !insn.addr !11450
  store i32 %6, i32* %stack_var_-20.0.reg2mem, !insn.addr !11451
  store i32 %6, i32* %r2.0.reg2mem, !insn.addr !11451
  br i1 %11, label %dec_label_pc_25dd6, label %dec_label_pc_25e1c, !insn.addr !11451

dec_label_pc_25dd6:                               ; preds = %dec_label_pc_25dc2
  %12 = call i8* @strchr(i8* %5, i32 101), !insn.addr !11452
  %13 = icmp eq i8* %12, null, !insn.addr !11453
  store i32 %6, i32* %stack_var_-20.0.reg2mem, !insn.addr !11454
  store i32 %6, i32* %r2.0.reg2mem, !insn.addr !11454
  br i1 %13, label %dec_label_pc_25de4, label %dec_label_pc_25e1c, !insn.addr !11454

dec_label_pc_25de4:                               ; preds = %dec_label_pc_25dd6
  %14 = add i32 %6, 3, !insn.addr !11455
  %15 = icmp ult i32 %14, %arg2, !insn.addr !11456
  store i32 -1, i32* %r3.1.reg2mem, !insn.addr !11457
  br i1 %15, label %dec_label_pc_25df4, label %dec_label_pc_25e86, !insn.addr !11457

dec_label_pc_25df4:                               ; preds = %dec_label_pc_25de4
  %16 = add i32 %6, %arg1
  %17 = inttoptr i32 %16 to i8*, !insn.addr !11458
  store i8 46, i8* %17, align 1, !insn.addr !11458
  %18 = add i32 %16, 1, !insn.addr !11459
  %19 = inttoptr i32 %18 to i8*, !insn.addr !11460
  store i8 48, i8* %19, align 1, !insn.addr !11460
  %20 = add i32 %6, 2, !insn.addr !11461
  %21 = add i32 %20, %arg1, !insn.addr !11462
  %22 = inttoptr i32 %21 to i8*, !insn.addr !11463
  store i8 0, i8* %22, align 1, !insn.addr !11463
  store i32 %20, i32* %stack_var_-20.0.reg2mem, !insn.addr !11464
  store i32 0, i32* %r2.0.reg2mem, !insn.addr !11464
  br label %dec_label_pc_25e1c, !insn.addr !11464

dec_label_pc_25e1c:                               ; preds = %dec_label_pc_25dd6, %dec_label_pc_25dc2, %dec_label_pc_25df4
  %stack_var_-20.0.reload = load i32, i32* %stack_var_-20.0.reg2mem
  %23 = call i8* @strchr(i8* %5, i32 101), !insn.addr !11465
  %24 = icmp eq i8* %23, null, !insn.addr !11466
  store i32 %stack_var_-20.0.reload, i32* %r3.1.reg2mem, !insn.addr !11467
  br i1 %24, label %dec_label_pc_25e86, label %dec_label_pc_25e2c, !insn.addr !11467

dec_label_pc_25e2c:                               ; preds = %dec_label_pc_25e1c
  %r2.0.reload = load i32, i32* %r2.0.reg2mem
  %25 = ptrtoint i8* %23 to i32, !insn.addr !11465
  %26 = add i32 %25, 1, !insn.addr !11468
  %27 = add i32 %25, 2, !insn.addr !11469
  %28 = inttoptr i32 %26 to i8*, !insn.addr !11470
  %29 = load i8, i8* %28, align 1, !insn.addr !11470
  %30 = zext i8 %29 to i32, !insn.addr !11470
  %31 = icmp eq i8 %29, 45, !insn.addr !11471
  %spec.select2 = select i1 %31, i32 %27, i32 %30
  %32 = call i32 @__asm_nop(i32 %25, i32 101, i32 %r2.0.reload, i32 %spec.select2), !insn.addr !11472
  store i32 %27, i32* %stack_var_-16.0.reg2mem, !insn.addr !11472
  br label %dec_label_pc_25e52, !insn.addr !11472

dec_label_pc_25e52:                               ; preds = %dec_label_pc_25e52, %dec_label_pc_25e2c
  %stack_var_-16.0.reload = load i32, i32* %stack_var_-16.0.reg2mem
  %33 = inttoptr i32 %stack_var_-16.0.reload to i8*, !insn.addr !11473
  %34 = load i8, i8* %33, align 1, !insn.addr !11473
  %35 = icmp eq i8 %34, 48, !insn.addr !11474
  %36 = add i32 %stack_var_-16.0.reload, 1, !insn.addr !11475
  store i32 %36, i32* %stack_var_-16.0.reg2mem, !insn.addr !11476
  br i1 %35, label %dec_label_pc_25e52, label %dec_label_pc_25e5a, !insn.addr !11476

dec_label_pc_25e5a:                               ; preds = %dec_label_pc_25e52
  %spec.select = select i1 %31, i32 %27, i32 %26
  %37 = icmp eq i32 %spec.select, %stack_var_-16.0.reload, !insn.addr !11477
  store i32 %stack_var_-20.0.reload, i32* %r3.1.reg2mem, !insn.addr !11478
  br i1 %37, label %dec_label_pc_25e86, label %dec_label_pc_25e62, !insn.addr !11478

dec_label_pc_25e62:                               ; preds = %dec_label_pc_25e5a
  %38 = add i32 %stack_var_-20.0.reload, %arg1, !insn.addr !11479
  %39 = sub i32 %38, %stack_var_-16.0.reload, !insn.addr !11480
  %40 = inttoptr i32 %spec.select to i32*, !insn.addr !11481
  %41 = inttoptr i32 %stack_var_-16.0.reload to i32*, !insn.addr !11481
  %42 = call i32* @memmove(i32* %40, i32* %41, i32 %39), !insn.addr !11481
  %43 = add i32 %spec.select, %stack_var_-20.0.reload, !insn.addr !11482
  %44 = sub i32 %43, %stack_var_-16.0.reload, !insn.addr !11483
  store i32 %44, i32* %r3.1.reg2mem, !insn.addr !11484
  br label %dec_label_pc_25e86, !insn.addr !11484

dec_label_pc_25e86:                               ; preds = %dec_label_pc_25d7c, %dec_label_pc_25e1c, %dec_label_pc_25e5a, %dec_label_pc_25e62, %dec_label_pc_25de4
  %r3.1.reload = load i32, i32* %r3.1.reg2mem
  ret i32 %r3.1.reload, !insn.addr !11485

; uselistorder directives
  uselistorder i32 %stack_var_-16.0.reload, { 5, 2, 4, 3, 0, 1 }
  uselistorder i1 %31, { 1, 0 }
  uselistorder i32 %27, { 1, 0, 2 }
  uselistorder i32 %25, { 0, 2, 1 }
  uselistorder i8* %23, { 1, 0 }
  uselistorder i32 %stack_var_-20.0.reload, { 3, 2, 0, 1 }
  uselistorder i32 %6, { 7, 4, 8, 1, 3, 0, 2, 6, 5 }
  uselistorder i32* %stack_var_-20.0.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32* %r2.0.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-16.0.reg2mem, { 1, 0, 2 }
  uselistorder double* %0, { 1, 0 }
  uselistorder i8 48, { 1, 2, 0 }
  uselistorder i8 46, { 0, 2, 1, 3 }
  uselistorder i32 101, { 3, 4, 5, 2, 1, 0, 6 }
  uselistorder i8* (i8*, i32)* @strchr, { 4, 3, 2, 1, 0 }
  uselistorder i32 46, { 4, 1, 5, 3, 6, 2, 0 }
  uselistorder i32 (i8*, i32, i8*, ...)* @snprintf, { 11, 5, 4, 6, 9, 10, 8, 7, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_25e86, { 3, 2, 1, 4, 0 }
  uselistorder label %dec_label_pc_25e1c, { 2, 0, 1 }
}

define i32 @utf8_encode(i32 %arg1, i32* %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_25e90:
  %r3.0.reg2mem = alloca i32, !insn.addr !11486
  %0 = icmp slt i32 %arg1, 0, !insn.addr !11487
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11488
  br i1 %0, label %dec_label_pc_25fae, label %dec_label_pc_25ea8, !insn.addr !11488

dec_label_pc_25ea8:                               ; preds = %dec_label_pc_25e90
  %1 = icmp sgt i32 %arg1, 127, !insn.addr !11489
  br i1 %1, label %dec_label_pc_25ebe, label %dec_label_pc_25eae, !insn.addr !11489

dec_label_pc_25eae:                               ; preds = %dec_label_pc_25ea8
  %2 = trunc i32 %arg1 to i8, !insn.addr !11490
  %3 = bitcast i32* %arg2 to i8*, !insn.addr !11490
  store i8 %2, i8* %3, align 1, !insn.addr !11490
  store i32 1, i32* %arg3, align 4, !insn.addr !11491
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11492
  br label %dec_label_pc_25fae, !insn.addr !11492

dec_label_pc_25ebe:                               ; preds = %dec_label_pc_25ea8
  %4 = ptrtoint i32* %arg2 to i32
  %5 = icmp sgt i32 %arg1, 2047, !insn.addr !11493
  br i1 %5, label %dec_label_pc_25ef6, label %dec_label_pc_25ec8, !insn.addr !11493

dec_label_pc_25ec8:                               ; preds = %dec_label_pc_25ebe
  %6 = udiv i32 %arg1, 64, !insn.addr !11494
  %7 = trunc i32 %6 to i8
  %8 = urem i8 %7, 32
  %9 = or i8 %8, -64, !insn.addr !11495
  %10 = bitcast i32* %arg2 to i8*, !insn.addr !11495
  store i8 %9, i8* %10, align 1, !insn.addr !11495
  %11 = add i32 %4, 1, !insn.addr !11496
  %12 = trunc i32 %arg1 to i8
  %13 = urem i8 %12, 64
  %14 = or i8 %13, -128, !insn.addr !11497
  %15 = inttoptr i32 %11 to i8*, !insn.addr !11497
  store i8 %14, i8* %15, align 1, !insn.addr !11497
  store i32 2, i32* %arg3, align 4, !insn.addr !11498
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11499
  br label %dec_label_pc_25fae, !insn.addr !11499

dec_label_pc_25ef6:                               ; preds = %dec_label_pc_25ebe
  %16 = icmp sgt i32 %arg1, 65535, !insn.addr !11500
  br i1 %16, label %dec_label_pc_25f42, label %dec_label_pc_25f00, !insn.addr !11500

dec_label_pc_25f00:                               ; preds = %dec_label_pc_25ef6
  %17 = udiv i32 %arg1, 4096, !insn.addr !11501
  %18 = trunc i32 %17 to i8
  %19 = urem i8 %18, 16
  %20 = or i8 %19, -32, !insn.addr !11502
  %21 = bitcast i32* %arg2 to i8*, !insn.addr !11502
  store i8 %20, i8* %21, align 1, !insn.addr !11502
  %22 = add i32 %4, 1, !insn.addr !11503
  %23 = udiv i32 %arg1, 64, !insn.addr !11504
  %24 = trunc i32 %23 to i8
  %25 = urem i8 %24, 64
  %26 = or i8 %25, -128, !insn.addr !11505
  %27 = inttoptr i32 %22 to i8*, !insn.addr !11505
  store i8 %26, i8* %27, align 1, !insn.addr !11505
  %28 = add i32 %4, 2, !insn.addr !11506
  %29 = trunc i32 %arg1 to i8
  %30 = urem i8 %29, 64
  %31 = or i8 %30, -128, !insn.addr !11507
  %32 = inttoptr i32 %28 to i8*, !insn.addr !11507
  store i8 %31, i8* %32, align 1, !insn.addr !11507
  store i32 3, i32* %arg3, align 4, !insn.addr !11508
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11509
  br label %dec_label_pc_25fae, !insn.addr !11509

dec_label_pc_25f42:                               ; preds = %dec_label_pc_25ef6
  %33 = icmp sgt i32 %arg1, ptrtoint (i1* @global_var_10ffff to i32), !insn.addr !11510
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11510
  br i1 %33, label %dec_label_pc_25fae, label %dec_label_pc_25f50, !insn.addr !11510

dec_label_pc_25f50:                               ; preds = %dec_label_pc_25f42
  %34 = and i32 %arg1, ptrtoint (i32* @global_var_1c0000 to i32), !insn.addr !11511
  %35 = udiv i32 %34, 262144
  %36 = trunc i32 %35 to i8
  %37 = add i8 %36, -16, !insn.addr !11512
  %38 = bitcast i32* %arg2 to i8*, !insn.addr !11512
  store i8 %37, i8* %38, align 1, !insn.addr !11512
  %39 = add i32 %4, 1, !insn.addr !11513
  %40 = and i32 %arg1, ptrtoint (i32* @global_var_3f000 to i32), !insn.addr !11514
  %41 = udiv i32 %40, 4096
  %42 = trunc i32 %41 to i8
  %43 = xor i8 %42, -128, !insn.addr !11515
  %44 = inttoptr i32 %39 to i8*, !insn.addr !11515
  store i8 %43, i8* %44, align 1, !insn.addr !11515
  %45 = add i32 %4, 2, !insn.addr !11516
  %46 = udiv i32 %arg1, 64, !insn.addr !11517
  %47 = trunc i32 %46 to i8
  %48 = urem i8 %47, 64
  %49 = or i8 %48, -128, !insn.addr !11518
  %50 = inttoptr i32 %45 to i8*, !insn.addr !11518
  store i8 %49, i8* %50, align 1, !insn.addr !11518
  %51 = add i32 %4, 3, !insn.addr !11519
  %52 = trunc i32 %arg1 to i8
  %53 = urem i8 %52, 64
  %54 = or i8 %53, -128, !insn.addr !11520
  %55 = inttoptr i32 %51 to i8*, !insn.addr !11520
  store i8 %54, i8* %55, align 1, !insn.addr !11520
  store i32 4, i32* %arg3, align 4, !insn.addr !11521
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11522
  br label %dec_label_pc_25fae, !insn.addr !11522

dec_label_pc_25fae:                               ; preds = %dec_label_pc_25eae, %dec_label_pc_25ec8, %dec_label_pc_25f00, %dec_label_pc_25f50, %dec_label_pc_25f42, %dec_label_pc_25e90
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11523

; uselistorder directives
  uselistorder i32 %4, { 3, 4, 5, 1, 2, 0 }
  uselistorder i32* %r3.0.reg2mem, { 0, 4, 5, 3, 2, 1, 6 }
  uselistorder i8 -128, { 5, 6, 4, 7, 8, 9, 2, 3, 0, 1 }
  uselistorder i32 127, { 0, 1, 2, 4, 5, 6, 7, 3 }
  uselistorder i32* %arg2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg1, { 6, 0, 7, 13, 12, 5, 1, 2, 11, 4, 3, 10, 9, 8, 14 }
  uselistorder label %dec_label_pc_25fae, { 3, 4, 2, 1, 0, 5 }
}

define i32 @utf8_check_first(i32 %arg1) local_unnamed_addr {
dec_label_pc_25fbc:
  %r3.0.reg2mem = alloca i32, !insn.addr !11524
  %0 = urem i32 %arg1, 256, !insn.addr !11525
  %1 = call i32 @__asm_sxtb(i32 %0), !insn.addr !11526
  %2 = icmp slt i32 %1, 0, !insn.addr !11527
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !11528
  br i1 %2, label %dec_label_pc_25fd6, label %dec_label_pc_2602a, !insn.addr !11528

dec_label_pc_25fd6:                               ; preds = %dec_label_pc_25fbc
  %3 = trunc i32 %arg1 to i8, !insn.addr !11529
  %4 = call i32 @__asm_sxtb(i32 %0), !insn.addr !11530
  %5 = icmp slt i32 %4, 0, !insn.addr !11531
  br i1 %5, label %dec_label_pc_25fde, label %dec_label_pc_25fe8, !insn.addr !11532

dec_label_pc_25fde:                               ; preds = %dec_label_pc_25fd6
  %6 = icmp ult i8 %3, -65, !insn.addr !11533
  %7 = icmp ne i1 %6, true, !insn.addr !11533
  %8 = icmp eq i8 %3, -65, !insn.addr !11533
  %9 = icmp ne i1 %8, true, !insn.addr !11534
  %10 = icmp eq i1 %7, %9, !insn.addr !11534
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11534
  br i1 %10, label %dec_label_pc_25fe8, label %dec_label_pc_2602a, !insn.addr !11534

dec_label_pc_25fe8:                               ; preds = %dec_label_pc_25fd6, %dec_label_pc_25fde
  %11 = or i8 %3, 1
  %12 = icmp eq i8 %11, -63
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11535
  br i1 %12, label %dec_label_pc_2602a, label %dec_label_pc_25ff8, !insn.addr !11535

dec_label_pc_25ff8:                               ; preds = %dec_label_pc_25fe8
  %13 = icmp ult i8 %3, -63, !insn.addr !11536
  br i1 %13, label %dec_label_pc_26028, label %dec_label_pc_25ffe, !insn.addr !11537

dec_label_pc_25ffe:                               ; preds = %dec_label_pc_25ff8
  %14 = icmp ult i8 %3, -33
  %15 = icmp ne i1 %14, true
  %16 = icmp eq i8 %3, -33
  %17 = icmp ne i1 %16, true, !insn.addr !11538
  %18 = icmp eq i1 %15, %17, !insn.addr !11538
  store i32 2, i32* %r3.0.reg2mem, !insn.addr !11538
  br i1 %18, label %dec_label_pc_26008, label %dec_label_pc_2602a, !insn.addr !11538

dec_label_pc_26008:                               ; preds = %dec_label_pc_25ffe
  %19 = icmp ne i1 %15, true, !insn.addr !11539
  %20 = or i1 %16, %19, !insn.addr !11539
  br i1 %20, label %dec_label_pc_26018, label %dec_label_pc_2600e, !insn.addr !11539

dec_label_pc_2600e:                               ; preds = %dec_label_pc_26008
  %21 = icmp ult i8 %3, -17, !insn.addr !11540
  %22 = icmp ne i1 %21, true, !insn.addr !11540
  %23 = icmp eq i8 %3, -17, !insn.addr !11540
  %24 = icmp ne i1 %23, true, !insn.addr !11541
  %25 = icmp eq i1 %22, %24, !insn.addr !11541
  store i32 3, i32* %r3.0.reg2mem, !insn.addr !11541
  br i1 %25, label %dec_label_pc_26018, label %dec_label_pc_2602a, !insn.addr !11541

dec_label_pc_26018:                               ; preds = %dec_label_pc_2600e, %dec_label_pc_26008
  %26 = icmp ult i8 %3, -17, !insn.addr !11542
  %27 = icmp ne i1 %26, true, !insn.addr !11542
  %28 = icmp eq i8 %3, -17, !insn.addr !11542
  %29 = icmp ne i1 %27, true, !insn.addr !11543
  %30 = or i1 %28, %29, !insn.addr !11543
  br i1 %30, label %dec_label_pc_26028, label %dec_label_pc_2601e, !insn.addr !11543

dec_label_pc_2601e:                               ; preds = %dec_label_pc_26018
  %31 = icmp ult i8 %3, -12, !insn.addr !11544
  %32 = icmp ne i1 %31, true, !insn.addr !11544
  %33 = icmp eq i8 %3, -12, !insn.addr !11544
  %34 = icmp ne i1 %33, true, !insn.addr !11545
  %35 = icmp eq i1 %32, %34, !insn.addr !11545
  store i32 4, i32* %r3.0.reg2mem, !insn.addr !11545
  br i1 %35, label %dec_label_pc_26028, label %dec_label_pc_2602a, !insn.addr !11545

dec_label_pc_26028:                               ; preds = %dec_label_pc_25ff8, %dec_label_pc_2601e, %dec_label_pc_26018
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11546
  br label %dec_label_pc_2602a, !insn.addr !11546

dec_label_pc_2602a:                               ; preds = %dec_label_pc_2601e, %dec_label_pc_2600e, %dec_label_pc_25ffe, %dec_label_pc_25fe8, %dec_label_pc_25fde, %dec_label_pc_25fbc, %dec_label_pc_26028
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11547

; uselistorder directives
  uselistorder i8 %3, { 3, 4, 2, 1, 5, 6, 8, 9, 7, 0, 11, 10 }
  uselistorder i32 %0, { 1, 0 }
  uselistorder i32* %r3.0.reg2mem, { 0, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i8 -63, { 1, 0 }
  uselistorder i8 1, { 6, 8, 9, 10, 11, 13, 12, 15, 14, 17, 16, 19, 18, 23, 22, 21, 20, 25, 24, 27, 26, 7, 29, 28, 31, 30, 33, 32, 37, 36, 35, 34, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48, 51, 50, 55, 54, 53, 52, 57, 56, 62, 63, 60, 59, 61, 58, 65, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 78, 0, 1, 80, 81, 82, 2, 83, 84, 85, 3, 86, 87, 88, 89, 90, 91, 92, 4, 94, 93, 95, 96, 5, 97, 98, 99, 100, 101, 102, 103, 104 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_2602a, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_26028, { 1, 2, 0 }
  uselistorder label %dec_label_pc_25fe8, { 1, 0 }
}

define i32 @utf8_check_full(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26038:
  %0 = alloca i32
  %r3.0.reg2mem = alloca i32, !insn.addr !11548
  %stack_var_-16.110.reg2mem = alloca i32, !insn.addr !11548
  %storemerge11.reg2mem = alloca i32, !insn.addr !11548
  %stack_var_-16.0.in.reg2mem = alloca i8, !insn.addr !11548
  %1 = load i32, i32* %0
  %2 = trunc i32 %1 to i8
  store i32 0, i32* %r3.0.reg2mem
  switch i32 %arg2, label %dec_label_pc_26128 [
    i32 2, label %dec_label_pc_26054
    i32 3, label %dec_label_pc_26064
    i32 4, label %dec_label_pc_26074
  ]

dec_label_pc_26054:                               ; preds = %dec_label_pc_26038
  %3 = urem i8 %2, 32
  store i8 %3, i8* %stack_var_-16.0.in.reg2mem, !insn.addr !11549
  br label %dec_label_pc_26088.lr.ph, !insn.addr !11549

dec_label_pc_26064:                               ; preds = %dec_label_pc_26038
  %4 = urem i8 %2, 16
  store i8 %4, i8* %stack_var_-16.0.in.reg2mem, !insn.addr !11550
  br label %dec_label_pc_26088.lr.ph, !insn.addr !11550

dec_label_pc_26074:                               ; preds = %dec_label_pc_26038
  %5 = urem i8 %2, 8
  store i8 %5, i8* %stack_var_-16.0.in.reg2mem, !insn.addr !11551
  br label %dec_label_pc_26088.lr.ph, !insn.addr !11551

dec_label_pc_26088.lr.ph:                         ; preds = %dec_label_pc_26054, %dec_label_pc_26064, %dec_label_pc_26074
  %stack_var_-16.0.in.reload = load i8, i8* %stack_var_-16.0.in.reg2mem
  %stack_var_-16.0 = zext i8 %stack_var_-16.0.in.reload to i32
  store i32 1, i32* %storemerge11.reg2mem
  store i32 %stack_var_-16.0, i32* %stack_var_-16.110.reg2mem
  br label %dec_label_pc_26088

dec_label_pc_26088:                               ; preds = %dec_label_pc_26088.lr.ph, %dec_label_pc_260a4
  %storemerge11.reload = load i32, i32* %storemerge11.reg2mem
  %6 = add i32 %storemerge11.reload, %arg1, !insn.addr !11552
  %7 = inttoptr i32 %6 to i8*, !insn.addr !11553
  %8 = load i8, i8* %7, align 1, !insn.addr !11553
  %9 = zext i8 %8 to i32, !insn.addr !11553
  %10 = call i32 @__asm_sxtb(i32 %9), !insn.addr !11554
  %11 = icmp slt i32 %10, 0, !insn.addr !11555
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11556
  br i1 %11, label %dec_label_pc_2609a, label %dec_label_pc_26128, !insn.addr !11556

dec_label_pc_2609a:                               ; preds = %dec_label_pc_26088
  %12 = icmp ult i8 %8, -65, !insn.addr !11557
  %13 = icmp ne i1 %12, true, !insn.addr !11557
  %14 = icmp eq i8 %8, -65, !insn.addr !11557
  %15 = icmp ne i1 %13, true, !insn.addr !11558
  %16 = or i1 %14, %15, !insn.addr !11558
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11558
  br i1 %16, label %dec_label_pc_260a4, label %dec_label_pc_26128, !insn.addr !11558

dec_label_pc_260a4:                               ; preds = %dec_label_pc_2609a
  %stack_var_-16.110.reload = load i32, i32* %stack_var_-16.110.reg2mem
  %17 = mul i32 %stack_var_-16.110.reload, 64, !insn.addr !11559
  %18 = urem i8 %8, 64
  %19 = zext i8 %18 to i32, !insn.addr !11560
  %20 = or i32 %17, %19, !insn.addr !11561
  %21 = add nuw nsw i32 %storemerge11.reload, 1, !insn.addr !11562
  %22 = icmp slt i32 %21, %arg2, !insn.addr !11563
  store i32 %21, i32* %storemerge11.reg2mem, !insn.addr !11563
  store i32 %20, i32* %stack_var_-16.110.reg2mem, !insn.addr !11563
  br i1 %22, label %dec_label_pc_26088, label %dec_label_pc_260c0, !insn.addr !11563

dec_label_pc_260c0:                               ; preds = %dec_label_pc_260a4
  %23 = icmp sgt i32 %20, ptrtoint (i1* @global_var_10ffff to i32), !insn.addr !11564
  %24 = and i32 %stack_var_-16.110.reload, 67108832
  %25 = icmp eq i32 %24, 864
  %or.cond = or i1 %25, %23
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11564
  br i1 %or.cond, label %dec_label_pc_26128, label %dec_label_pc_260ea, !insn.addr !11564

dec_label_pc_260ea:                               ; preds = %dec_label_pc_260c0
  %26 = icmp eq i32 %arg2, 2, !insn.addr !11565
  %27 = icmp slt i32 %20, 128, !insn.addr !11566
  %or.cond3 = icmp eq i1 %26, %27
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11567
  br i1 %or.cond3, label %dec_label_pc_26128, label %dec_label_pc_260f6, !insn.addr !11567

dec_label_pc_260f6:                               ; preds = %dec_label_pc_260ea
  %28 = icmp eq i32 %arg2, 3, !insn.addr !11568
  %29 = icmp slt i32 %20, 2048, !insn.addr !11569
  %or.cond5 = icmp eq i1 %28, %29
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11570
  br i1 %or.cond5, label %dec_label_pc_26128, label %dec_label_pc_26106, !insn.addr !11570

dec_label_pc_26106:                               ; preds = %dec_label_pc_260f6
  %30 = icmp ne i32 %arg2, 4, !insn.addr !11571
  %31 = icmp sgt i32 %20, 65535, !insn.addr !11572
  %or.cond7 = or i1 %30, %31
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11573
  br i1 %or.cond7, label %dec_label_pc_2611a, label %dec_label_pc_26128, !insn.addr !11573

dec_label_pc_2611a:                               ; preds = %dec_label_pc_26106
  %32 = icmp eq i32 %arg3, 0, !insn.addr !11574
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !11575
  br i1 %32, label %dec_label_pc_26128, label %dec_label_pc_26120, !insn.addr !11575

dec_label_pc_26120:                               ; preds = %dec_label_pc_2611a
  %33 = inttoptr i32 %arg3 to i32*, !insn.addr !11576
  store i32 %20, i32* %33, align 4, !insn.addr !11576
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !11576
  br label %dec_label_pc_26128, !insn.addr !11576

dec_label_pc_26128:                               ; preds = %dec_label_pc_2609a, %dec_label_pc_26088, %dec_label_pc_2611a, %dec_label_pc_26120, %dec_label_pc_260ea, %dec_label_pc_260f6, %dec_label_pc_26106, %dec_label_pc_260c0, %dec_label_pc_26038
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11577

; uselistorder directives
  uselistorder i32 %20, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8 %8, { 0, 2, 1, 3 }
  uselistorder i32* %storemerge11.reg2mem, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16.110.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r3.0.reg2mem, { 0, 4, 3, 7, 6, 5, 8, 1, 2, 9 }
  uselistorder i32 65535, { 2, 3, 1, 0 }
  uselistorder i32 128, { 120, 119, 123, 125, 126, 121, 127, 2, 3, 4, 5, 128, 129, 130, 131, 132, 122, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 133, 134, 0, 135, 136, 1, 137, 138, 124 }
  uselistorder i32 ptrtoint (i1* @global_var_10ffff to i32), { 1, 0 }
  uselistorder i32 64, { 4, 6, 7, 8, 10, 11, 12, 45, 46, 13, 14, 15, 16, 17, 18, 19, 5, 36, 20, 21, 37, 38, 39, 40, 41, 42, 43, 44, 22, 23, 24, 25, 26, 47, 48, 0, 49, 50, 27, 28, 29, 30, 31, 1, 9, 51, 52, 2, 53, 54, 32, 33, 55, 34, 3, 35 }
  uselistorder i32 (i32)* @__asm_sxtb, { 3, 4, 5, 0, 1, 6, 7, 8, 9, 2 }
  uselistorder i8 16, { 1, 2, 3, 0, 4 }
  uselistorder i8 32, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_26128, { 3, 2, 6, 5, 4, 7, 0, 1, 8 }
  uselistorder label %dec_label_pc_26088, { 1, 0 }
  uselistorder label %dec_label_pc_26088.lr.ph, { 2, 1, 0 }
}

define i32 @utf8_iterate(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_26134:
  %0 = alloca i32
  %r3.0.reg2mem = alloca i32, !insn.addr !11578
  %1 = load i32, i32* %0
  %stack_var_-16 = alloca i32, align 4
  %2 = trunc i32 %1 to i8
  %3 = icmp eq i8 %2, 0, !insn.addr !11579
  store i32 %arg1, i32* %r3.0.reg2mem, !insn.addr !11580
  br i1 %3, label %dec_label_pc_26198, label %dec_label_pc_2614a, !insn.addr !11580

dec_label_pc_2614a:                               ; preds = %dec_label_pc_26134
  %4 = urem i32 %1, 256
  %5 = call i32 @utf8_check_first(i32 %4), !insn.addr !11581
  %6 = icmp sgt i32 %5, 0, !insn.addr !11582
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11582
  br i1 %6, label %dec_label_pc_26160, label %dec_label_pc_26198, !insn.addr !11582

dec_label_pc_26160:                               ; preds = %dec_label_pc_2614a
  %7 = icmp eq i32 %5, 1, !insn.addr !11583
  br i1 %7, label %dec_label_pc_26166, label %dec_label_pc_2616e, !insn.addr !11584

dec_label_pc_26166:                               ; preds = %dec_label_pc_26160
  store i32 %4, i32* %stack_var_-16, align 4, !insn.addr !11585
  br label %dec_label_pc_26186, !insn.addr !11586

dec_label_pc_2616e:                               ; preds = %dec_label_pc_26160
  %8 = ptrtoint i32* %stack_var_-16 to i32, !insn.addr !11587
  %9 = call i32 @utf8_check_full(i32 %arg1, i32 %5, i32 %8), !insn.addr !11588
  %10 = icmp eq i32 %9, 0, !insn.addr !11589
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11590
  br i1 %10, label %dec_label_pc_26198, label %dec_label_pc_26186, !insn.addr !11590

dec_label_pc_26186:                               ; preds = %dec_label_pc_2616e, %dec_label_pc_26166
  %11 = icmp eq i32* %arg2, null, !insn.addr !11591
  br i1 %11, label %dec_label_pc_26192, label %dec_label_pc_2618c, !insn.addr !11592

dec_label_pc_2618c:                               ; preds = %dec_label_pc_26186
  %12 = load i32, i32* %stack_var_-16, align 4, !insn.addr !11593
  store i32 %12, i32* %arg2, align 4, !insn.addr !11594
  br label %dec_label_pc_26192, !insn.addr !11594

dec_label_pc_26192:                               ; preds = %dec_label_pc_2618c, %dec_label_pc_26186
  %13 = add i32 %5, %arg1, !insn.addr !11595
  store i32 %13, i32* %r3.0.reg2mem, !insn.addr !11595
  br label %dec_label_pc_26198, !insn.addr !11595

dec_label_pc_26198:                               ; preds = %dec_label_pc_2616e, %dec_label_pc_2614a, %dec_label_pc_26134, %dec_label_pc_26192
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11596

; uselistorder directives
  uselistorder i32 %1, { 1, 0 }
  uselistorder i32* %r3.0.reg2mem, { 0, 4, 1, 2, 3 }
  uselistorder i32* null, { 1, 4, 5, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 3, 16, 17, 18, 19, 20, 21, 22, 23, 0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 256, { 21, 22, 326, 343, 323, 345, 342, 344, 328, 23, 24, 25, 26, 329, 2, 27, 3, 28, 29, 30, 31, 32, 330, 331, 332, 333, 33, 0, 327, 34, 35, 36, 37, 38, 39, 4, 5, 40, 334, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 335, 166, 167, 168, 169, 336, 170, 171, 172, 173, 174, 175, 176, 177, 6, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 341, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 7, 264, 265, 8, 266, 267, 268, 9, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 10, 278, 279, 280, 11, 12, 281, 13, 282, 284, 285, 14, 286, 15, 287, 288, 289, 290, 291, 292, 293, 16, 17, 294, 346, 347, 1, 348, 349, 296, 295, 18, 297, 337, 338, 339, 298, 299, 300, 301, 19, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 20, 312, 313, 314, 340, 315, 324, 325, 316, 317, 318, 319, 320, 321, 322 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_26198, { 3, 0, 1, 2 }
}

define i32 @utf8_check_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_261a4:
  %r3.0.reg2mem = alloca i32, !insn.addr !11597
  %stack_var_-12.0.reg2mem = alloca i32, !insn.addr !11597
  %storemerge1.reg2mem = alloca i32, !insn.addr !11597
  %stack_var_-24.0.reg2mem = alloca i32, !insn.addr !11597
  %0 = icmp eq i32 %arg2, -1, !insn.addr !11598
  store i32 %arg2, i32* %stack_var_-24.0.reg2mem, !insn.addr !11599
  br i1 %0, label %dec_label_pc_261b6, label %dec_label_pc_261c0, !insn.addr !11599

dec_label_pc_261b6:                               ; preds = %dec_label_pc_261a4
  %1 = inttoptr i32 %arg1 to i8*, !insn.addr !11600
  %2 = call i32 @strlen(i8* %1), !insn.addr !11600
  store i32 %2, i32* %stack_var_-24.0.reg2mem, !insn.addr !11601
  br label %dec_label_pc_261c0, !insn.addr !11601

dec_label_pc_261c0:                               ; preds = %dec_label_pc_261a4, %dec_label_pc_261b6
  %stack_var_-24.0.reload = load i32, i32* %stack_var_-24.0.reg2mem
  %3 = icmp sgt i32 %stack_var_-24.0.reload, 0, !insn.addr !11602
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !11602
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !11602
  br i1 %3, label %dec_label_pc_261c6, label %dec_label_pc_2622a, !insn.addr !11602

dec_label_pc_261c6:                               ; preds = %dec_label_pc_261c0, %dec_label_pc_2621a
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %4 = add i32 %storemerge1.reload, %arg1, !insn.addr !11603
  %5 = inttoptr i32 %4 to i8*, !insn.addr !11604
  %6 = load i8, i8* %5, align 1, !insn.addr !11604
  %7 = zext i8 %6 to i32, !insn.addr !11604
  %8 = call i32 @utf8_check_first(i32 %7), !insn.addr !11605
  %9 = icmp eq i32 %8, 0, !insn.addr !11606
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11607
  br i1 %9, label %dec_label_pc_2622a, label %dec_label_pc_261e0, !insn.addr !11607

dec_label_pc_261e0:                               ; preds = %dec_label_pc_261c6
  %10 = icmp slt i32 %8, 2, !insn.addr !11608
  store i32 %storemerge1.reload, i32* %stack_var_-12.0.reg2mem, !insn.addr !11608
  br i1 %10, label %dec_label_pc_2621a, label %dec_label_pc_261e6, !insn.addr !11608

dec_label_pc_261e6:                               ; preds = %dec_label_pc_261e0
  %11 = add i32 %8, %storemerge1.reload
  %12 = icmp sgt i32 %11, %stack_var_-24.0.reload, !insn.addr !11609
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11609
  br i1 %12, label %dec_label_pc_2622a, label %dec_label_pc_261f6, !insn.addr !11609

dec_label_pc_261f6:                               ; preds = %dec_label_pc_261e6
  %13 = call i32 @utf8_check_full(i32 %4, i32 %8, i32 0), !insn.addr !11610
  %14 = icmp eq i32 %13, 0, !insn.addr !11611
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11612
  br i1 %14, label %dec_label_pc_2622a, label %dec_label_pc_26210, !insn.addr !11612

dec_label_pc_26210:                               ; preds = %dec_label_pc_261f6
  %15 = add i32 %11, -1, !insn.addr !11613
  store i32 %15, i32* %stack_var_-12.0.reg2mem, !insn.addr !11614
  br label %dec_label_pc_2621a, !insn.addr !11614

dec_label_pc_2621a:                               ; preds = %dec_label_pc_26210, %dec_label_pc_261e0
  %stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem
  %16 = add i32 %stack_var_-12.0.reload, 1, !insn.addr !11615
  %17 = icmp slt i32 %16, %stack_var_-24.0.reload, !insn.addr !11602
  store i32 %16, i32* %storemerge1.reg2mem, !insn.addr !11602
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !11602
  br i1 %17, label %dec_label_pc_261c6, label %dec_label_pc_2622a, !insn.addr !11602

dec_label_pc_2622a:                               ; preds = %dec_label_pc_261c6, %dec_label_pc_261e6, %dec_label_pc_261f6, %dec_label_pc_2621a, %dec_label_pc_261c0
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11616

; uselistorder directives
  uselistorder i32 %8, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge1.reload, { 2, 0, 1 }
  uselistorder i32* %stack_var_-24.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @utf8_check_full, { 2, 1, 0 }
  uselistorder i32 (i32)* @utf8_check_first, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_2622a, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_261c6, { 1, 0 }
  uselistorder label %dec_label_pc_261c0, { 1, 0 }
}

define i32 @json_incref.66(i32 %arg1) local_unnamed_addr {
dec_label_pc_26234:
  %0 = icmp eq i32 %arg1, 0, !insn.addr !11617
  br i1 %0, label %dec_label_pc_26256, label %dec_label_pc_26242, !insn.addr !11618

dec_label_pc_26242:                               ; preds = %dec_label_pc_26234
  %1 = add i32 %arg1, 4, !insn.addr !11619
  %2 = inttoptr i32 %1 to i32*, !insn.addr !11619
  %3 = load i32, i32* %2, align 4, !insn.addr !11619
  %4 = icmp eq i32 %3, -1, !insn.addr !11620
  br i1 %4, label %dec_label_pc_26256, label %dec_label_pc_2624c, !insn.addr !11621

dec_label_pc_2624c:                               ; preds = %dec_label_pc_26242
  %5 = add i32 %3, 1, !insn.addr !11622
  store i32 %5, i32* %2, align 4, !insn.addr !11623
  br label %dec_label_pc_26256, !insn.addr !11623

dec_label_pc_26256:                               ; preds = %dec_label_pc_2624c, %dec_label_pc_26242, %dec_label_pc_26234
  ret i32 %arg1, !insn.addr !11624
}

define i32 @json_decref.67(i32 %arg1) local_unnamed_addr {
dec_label_pc_26264:
  %r0.0.reg2mem = alloca i32, !insn.addr !11625
  %0 = icmp eq i32 %arg1, 0, !insn.addr !11626
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !11627
  br i1 %0, label %dec_label_pc_26294, label %dec_label_pc_26272, !insn.addr !11627

dec_label_pc_26272:                               ; preds = %dec_label_pc_26264
  %1 = add i32 %arg1, 4, !insn.addr !11628
  %2 = inttoptr i32 %1 to i32*, !insn.addr !11628
  %3 = load i32, i32* %2, align 4, !insn.addr !11628
  %4 = icmp eq i32 %3, -1, !insn.addr !11629
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !11630
  br i1 %4, label %dec_label_pc_26294, label %dec_label_pc_2627c, !insn.addr !11630

dec_label_pc_2627c:                               ; preds = %dec_label_pc_26272
  %5 = add i32 %3, -1, !insn.addr !11631
  store i32 %5, i32* %2, align 4, !insn.addr !11632
  %6 = icmp eq i32 %5, 0, !insn.addr !11633
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !11634
  br i1 %6, label %dec_label_pc_2628e, label %dec_label_pc_26294, !insn.addr !11634

dec_label_pc_2628e:                               ; preds = %dec_label_pc_2627c
  %7 = call i32 @json_delete(i32 %arg1), !insn.addr !11635
  store i32 %7, i32* %r0.0.reg2mem, !insn.addr !11635
  br label %dec_label_pc_26294, !insn.addr !11635

dec_label_pc_26294:                               ; preds = %dec_label_pc_2627c, %dec_label_pc_2628e, %dec_label_pc_26272, %dec_label_pc_26264
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !11636

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32)* @json_delete, { 3, 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_26294, { 1, 0, 2, 3 }
}

define i32 @json_object_set_nocheck.68(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2629c:
  %0 = call i32 @json_incref.66(i32 %arg3), !insn.addr !11637
  %1 = call i32 @json_object_set_new_nocheck(i32 %arg1, i32 %arg2, i32 %0), !insn.addr !11638
  ret i32 %1, !insn.addr !11639
}

define i32 @json_array_append.69(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_262c8:
  %0 = call i32 @json_incref.66(i32 %arg2), !insn.addr !11640
  %1 = call i32 @json_array_append_new(i32 %arg1, i32 %0), !insn.addr !11641
  ret i32 %1, !insn.addr !11642
}

define i32 @json_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_262f0:
  %0 = inttoptr i32 %arg1 to i32*, !insn.addr !11643
  store i32 %arg2, i32* %0, align 4, !insn.addr !11643
  %1 = add i32 %arg1, 4, !insn.addr !11644
  %2 = inttoptr i32 %1 to i32*, !insn.addr !11644
  store i32 1, i32* %2, align 4, !insn.addr !11644
  ret i32 %arg1, !insn.addr !11645

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
}

define i32 @json_object() local_unnamed_addr {
dec_label_pc_26310:
  %r3.0.reg2mem = alloca i32, !insn.addr !11646
  %0 = call i32 @jsonp_malloc(i32 36), !insn.addr !11647
  %1 = icmp eq i32 %0, 0, !insn.addr !11648
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11649
  br i1 %1, label %dec_label_pc_2635a, label %dec_label_pc_26328, !insn.addr !11649

dec_label_pc_26328:                               ; preds = %dec_label_pc_26310
  %2 = call i32 @json_init(i32 %0, i32 0), !insn.addr !11650
  %3 = add i32 %0, 8, !insn.addr !11651
  %4 = call i32 @hashtable_init(i32 %3), !insn.addr !11652
  %5 = icmp eq i32 %4, 0, !insn.addr !11653
  br i1 %5, label %dec_label_pc_2634c, label %dec_label_pc_26342, !insn.addr !11654

dec_label_pc_26342:                               ; preds = %dec_label_pc_26328
  %6 = call i32 @jsonp_free(i32 %0), !insn.addr !11655
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11656
  br label %dec_label_pc_2635a, !insn.addr !11656

dec_label_pc_2634c:                               ; preds = %dec_label_pc_26328
  %7 = add i32 %0, 28, !insn.addr !11657
  %8 = inttoptr i32 %7 to i32*, !insn.addr !11657
  store i32 0, i32* %8, align 4, !insn.addr !11657
  %9 = add i32 %0, 32, !insn.addr !11658
  %10 = inttoptr i32 %9 to i32*, !insn.addr !11658
  store i32 0, i32* %10, align 4, !insn.addr !11658
  store i32 %0, i32* %r3.0.reg2mem, !insn.addr !11659
  br label %dec_label_pc_2635a, !insn.addr !11659

dec_label_pc_2635a:                               ; preds = %dec_label_pc_26310, %dec_label_pc_2634c, %dec_label_pc_26342
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11660

; uselistorder directives
  uselistorder i32 %0, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32 28, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 36, { 1, 7, 4, 5, 6, 8, 9, 10, 0, 3, 2 }
  uselistorder label %dec_label_pc_2635a, { 1, 2, 0 }
}

define i32 @json_delete_object(i32 %arg1) local_unnamed_addr {
dec_label_pc_26364:
  %0 = add i32 %arg1, 8, !insn.addr !11661
  %1 = call i32 @hashtable_close(i32 %0), !insn.addr !11662
  %2 = call i32 @jsonp_free(i32 %arg1), !insn.addr !11663
  ret i32 %2, !insn.addr !11664
}

define i32 @json_object_size(i32 %arg1) local_unnamed_addr {
dec_label_pc_26384:
  ret i32 0, !insn.addr !11665
}

define i32 @json_object_get(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_263b4:
  ret i32 0, !insn.addr !11666
}

define i32 @json_object_set_new_nocheck(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_263ec:
  %0 = icmp eq i32 %arg3, 0, !insn.addr !11667
  br i1 %0, label %dec_label_pc_26460, label %dec_label_pc_26420, !insn.addr !11668

dec_label_pc_26420:                               ; preds = %dec_label_pc_263ec
  %1 = call i32 @json_decref.67(i32 %arg3), !insn.addr !11669
  br label %dec_label_pc_26460, !insn.addr !11670

dec_label_pc_26460:                               ; preds = %dec_label_pc_263ec, %dec_label_pc_26420
  ret i32 -1, !insn.addr !11671

; uselistorder directives
  uselistorder label %dec_label_pc_26460, { 1, 0 }
}

define i32 @json_object_set_new(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2646c:
  %storemerge.reg2mem = alloca i32, !insn.addr !11672
  %0 = icmp eq i32 %arg2, 0, !insn.addr !11673
  br i1 %0, label %dec_label_pc_2648e, label %dec_label_pc_2647e, !insn.addr !11674

dec_label_pc_2647e:                               ; preds = %dec_label_pc_2646c
  %1 = call i32 @utf8_check_string(i32 %arg2, i32 -1), !insn.addr !11675
  %2 = icmp eq i32 %1, 0, !insn.addr !11676
  br i1 %2, label %dec_label_pc_2648e, label %dec_label_pc_2649a, !insn.addr !11677

dec_label_pc_2648e:                               ; preds = %dec_label_pc_2647e, %dec_label_pc_2646c
  %3 = call i32 @json_decref.67(i32 %arg3), !insn.addr !11678
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !11679
  br label %dec_label_pc_264a6, !insn.addr !11679

dec_label_pc_2649a:                               ; preds = %dec_label_pc_2647e
  %4 = call i32 @json_object_set_new_nocheck(i32 %arg1, i32 %arg2, i32 %arg3), !insn.addr !11680
  store i32 %4, i32* %storemerge.reg2mem, !insn.addr !11681
  br label %dec_label_pc_264a6, !insn.addr !11681

dec_label_pc_264a6:                               ; preds = %dec_label_pc_2649a, %dec_label_pc_2648e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11682

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
}

define i32 @json_object_del(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_264b0:
  ret i32 -1, !insn.addr !11683
}

define i32 @json_object_clear(i32 %arg1) local_unnamed_addr {
dec_label_pc_264ec:
  ret i32 -1, !insn.addr !11684
}

define i32 @json_object_update(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26528:
  ret i32 -1, !insn.addr !11685
}

define i32 @json_object_update_existing(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_265c0:
  ret i32 -1, !insn.addr !11686
}

define i32 @json_object_update_missing(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26658:
  ret i32 -1, !insn.addr !11687
}

define i32 @json_object_iter(i32 %arg1) local_unnamed_addr {
dec_label_pc_266f0:
  ret i32 0, !insn.addr !11688
}

define i32 @json_object_iter_at(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26724:
  ret i32 0, !insn.addr !11689
}

define i32 @json_object_iter_next(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26764:
  ret i32 0, !insn.addr !11690
}

define i32 @json_object_iter_key(i32 %arg1) local_unnamed_addr {
dec_label_pc_267a4:
  %storemerge.reg2mem = alloca i32, !insn.addr !11691
  %0 = icmp eq i32 %arg1, 0, !insn.addr !11692
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !11693
  br i1 %0, label %dec_label_pc_267be, label %dec_label_pc_267b6, !insn.addr !11693

dec_label_pc_267b6:                               ; preds = %dec_label_pc_267a4
  %1 = call i32 @hashtable_iter_key(i32 %arg1), !insn.addr !11694
  store i32 %1, i32* %storemerge.reg2mem, !insn.addr !11695
  br label %dec_label_pc_267be, !insn.addr !11695

dec_label_pc_267be:                               ; preds = %dec_label_pc_267a4, %dec_label_pc_267b6
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11696

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_267be, { 1, 0 }
}

define i32 @json_object_iter_value(i32 %arg1) local_unnamed_addr {
dec_label_pc_267c8:
  %storemerge.reg2mem = alloca i32, !insn.addr !11697
  %0 = icmp eq i32 %arg1, 0, !insn.addr !11698
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !11699
  br i1 %0, label %dec_label_pc_267e2, label %dec_label_pc_267da, !insn.addr !11699

dec_label_pc_267da:                               ; preds = %dec_label_pc_267c8
  %1 = call i32 @hashtable_iter_value(i32 %arg1), !insn.addr !11700
  store i32 %1, i32* %storemerge.reg2mem, !insn.addr !11701
  br label %dec_label_pc_267e2, !insn.addr !11701

dec_label_pc_267e2:                               ; preds = %dec_label_pc_267c8, %dec_label_pc_267da
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11702

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_267e2, { 1, 0 }
}

define i32 @json_object_iter_set_new(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_267ec:
  ret i32 -1, !insn.addr !11703
}

define i32 @json_object_key_to_iter(i32 %arg1) local_unnamed_addr {
dec_label_pc_2682c:
  %0 = icmp eq i32 %arg1, 0, !insn.addr !11704
  %1 = add i32 %arg1, -16
  %storemerge = select i1 %0, i32 0, i32 %1
  ret i32 %storemerge, !insn.addr !11705

; uselistorder directives
  uselistorder i32 -16, { 5, 6, 0, 1, 2, 3, 4 }
}

define i32 @json_object_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26850:
  %r3.0.reg2mem = alloca i32, !insn.addr !11706
  %storemerge4.in.reg2mem = alloca i32, !insn.addr !11706
  %0 = call i32 @json_object_size(i32 %arg1), !insn.addr !11707
  %1 = call i32 @json_object_size(i32 %arg2), !insn.addr !11708
  %2 = icmp eq i32 %0, %1, !insn.addr !11709
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11710
  br i1 %2, label %dec_label_pc_26872, label %dec_label_pc_268d8, !insn.addr !11710

dec_label_pc_26872:                               ; preds = %dec_label_pc_26850
  %3 = call i32 @json_object_iter(i32 %arg1), !insn.addr !11711
  %4 = call i32 @json_object_iter_key(i32 %3), !insn.addr !11712
  %5 = icmp eq i32 %4, 0, !insn.addr !11713
  store i32 %4, i32* %storemerge4.in.reg2mem, !insn.addr !11714
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !11714
  br i1 %5, label %dec_label_pc_268d8, label %dec_label_pc_268c0, !insn.addr !11714

dec_label_pc_26884:                               ; preds = %dec_label_pc_268c0
  %storemerge4 = inttoptr i32 %storemerge4.in.reload to i8*
  %6 = call i32 @json_object_get(i32 %arg2, i8* %storemerge4), !insn.addr !11715
  %7 = call i32 @json_equal(i32 %14, i32 %6), !insn.addr !11716
  %8 = icmp eq i32 %7, 0, !insn.addr !11717
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11718
  br i1 %8, label %dec_label_pc_268d8, label %dec_label_pc_268a0, !insn.addr !11718

dec_label_pc_268a0:                               ; preds = %dec_label_pc_26884
  %9 = call i32 @json_object_key_to_iter(i32 %storemerge4.in.reload), !insn.addr !11719
  %10 = call i32 @json_object_iter_next(i32 %arg1, i32 %9), !insn.addr !11720
  %11 = call i32 @json_object_iter_key(i32 %10), !insn.addr !11721
  %12 = icmp eq i32 %11, 0, !insn.addr !11713
  store i32 %11, i32* %storemerge4.in.reg2mem, !insn.addr !11714
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !11714
  br i1 %12, label %dec_label_pc_268d8, label %dec_label_pc_268c0, !insn.addr !11714

dec_label_pc_268c0:                               ; preds = %dec_label_pc_26872, %dec_label_pc_268a0
  %storemerge4.in.reload = load i32, i32* %storemerge4.in.reg2mem
  %13 = call i32 @json_object_key_to_iter(i32 %storemerge4.in.reload), !insn.addr !11722
  %14 = call i32 @json_object_iter_value(i32 %13), !insn.addr !11723
  %15 = icmp eq i32 %14, 0, !insn.addr !11724
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !11725
  br i1 %15, label %dec_label_pc_268d8, label %dec_label_pc_26884, !insn.addr !11725

dec_label_pc_268d8:                               ; preds = %dec_label_pc_26884, %dec_label_pc_268c0, %dec_label_pc_268a0, %dec_label_pc_26872, %dec_label_pc_26850
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11726

; uselistorder directives
  uselistorder i32 %14, { 1, 0 }
  uselistorder i32 %storemerge4.in.reload, { 1, 0, 2 }
  uselistorder i32* %storemerge4.in.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 (i32, i8*)* @json_object_get, { 14, 13, 12, 11, 10, 6, 9, 8, 7, 1, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32)* @json_object_size, { 1, 0 }
  uselistorder label %dec_label_pc_268d8, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_268c0, { 1, 0 }
}

define i32 @json_object_copy(i32 %arg1) local_unnamed_addr {
dec_label_pc_268e4:
  %storemerge12.reg2mem = alloca i32, !insn.addr !11727
  %0 = call i32 @json_object(), !insn.addr !11728
  %1 = icmp eq i32 %0, 0, !insn.addr !11729
  br i1 %1, label %dec_label_pc_26950, label %dec_label_pc_268fc, !insn.addr !11730

dec_label_pc_268fc:                               ; preds = %dec_label_pc_268e4
  %2 = call i32 @json_object_iter(i32 %arg1), !insn.addr !11731
  %3 = call i32 @json_object_iter_key(i32 %2), !insn.addr !11732
  %4 = icmp eq i32 %3, 0, !insn.addr !11733
  store i32 %3, i32* %storemerge12.reg2mem, !insn.addr !11734
  br i1 %4, label %dec_label_pc_26950, label %dec_label_pc_26938, !insn.addr !11734

dec_label_pc_2690e:                               ; preds = %dec_label_pc_26938
  %5 = call i32 @json_object_set_nocheck.68(i32 %0, i32 %storemerge12.reload, i32 %11), !insn.addr !11735
  %6 = call i32 @json_object_key_to_iter(i32 %storemerge12.reload), !insn.addr !11736
  %7 = call i32 @json_object_iter_next(i32 %arg1, i32 %6), !insn.addr !11737
  %8 = call i32 @json_object_iter_key(i32 %7), !insn.addr !11738
  %9 = icmp eq i32 %8, 0, !insn.addr !11733
  store i32 %8, i32* %storemerge12.reg2mem, !insn.addr !11734
  br i1 %9, label %dec_label_pc_26950, label %dec_label_pc_26938, !insn.addr !11734

dec_label_pc_26938:                               ; preds = %dec_label_pc_268fc, %dec_label_pc_2690e
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %10 = call i32 @json_object_key_to_iter(i32 %storemerge12.reload), !insn.addr !11739
  %11 = call i32 @json_object_iter_value(i32 %10), !insn.addr !11740
  %12 = icmp eq i32 %11, 0, !insn.addr !11741
  br i1 %12, label %dec_label_pc_26950, label %dec_label_pc_2690e, !insn.addr !11742

dec_label_pc_26950:                               ; preds = %dec_label_pc_26938, %dec_label_pc_2690e, %dec_label_pc_268fc, %dec_label_pc_268e4
  ret i32 %0, !insn.addr !11743

; uselistorder directives
  uselistorder i32 %11, { 1, 0 }
  uselistorder i32 %storemerge12.reload, { 2, 0, 1 }
  uselistorder i32* %storemerge12.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32)* @json_object_key_to_iter, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_26938, { 1, 0 }
}

define i32 @json_object_deep_copy(i32 %arg1) local_unnamed_addr {
dec_label_pc_2695c:
  %storemerge12.reg2mem = alloca i32, !insn.addr !11744
  %0 = call i32 @json_object(), !insn.addr !11745
  %1 = icmp eq i32 %0, 0, !insn.addr !11746
  br i1 %1, label %dec_label_pc_269b2, label %dec_label_pc_26974, !insn.addr !11747

dec_label_pc_26974:                               ; preds = %dec_label_pc_2695c
  %2 = call i32 @json_object_iter(i32 %arg1), !insn.addr !11748
  %3 = icmp eq i32 %2, 0, !insn.addr !11749
  store i32 %2, i32* %storemerge12.reg2mem, !insn.addr !11750
  br i1 %3, label %dec_label_pc_269b2, label %dec_label_pc_2697e, !insn.addr !11750

dec_label_pc_2697e:                               ; preds = %dec_label_pc_26974, %dec_label_pc_2697e
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %4 = call i32 @json_object_iter_key(i32 %storemerge12.reload), !insn.addr !11751
  %5 = call i32 @json_object_iter_value(i32 %storemerge12.reload), !insn.addr !11752
  %6 = call i32 @json_deep_copy(i32 %5), !insn.addr !11753
  %7 = call i32 @json_object_set_new_nocheck(i32 %0, i32 %4, i32 %6), !insn.addr !11754
  %8 = call i32 @json_object_iter_next(i32 %arg1, i32 %storemerge12.reload), !insn.addr !11755
  %9 = icmp eq i32 %8, 0, !insn.addr !11749
  store i32 %8, i32* %storemerge12.reg2mem, !insn.addr !11750
  br i1 %9, label %dec_label_pc_269b2, label %dec_label_pc_2697e, !insn.addr !11750

dec_label_pc_269b2:                               ; preds = %dec_label_pc_2697e, %dec_label_pc_26974, %dec_label_pc_2695c
  ret i32 %0, !insn.addr !11756

; uselistorder directives
  uselistorder i32 %storemerge12.reload, { 0, 2, 1 }
  uselistorder i32* %storemerge12.reg2mem, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @json_object_iter_next, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @json_object_set_new_nocheck, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @json_object_iter_value, { 2, 1, 0 }
  uselistorder i32 (i32)* @json_object_iter_key, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @json_object_iter, { 2, 1, 0 }
  uselistorder i32 ()* @json_object, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2697e, { 1, 0 }
}

define i32 @json_array() local_unnamed_addr {
dec_label_pc_269bc:
  %r3.0.reg2mem = alloca i32, !insn.addr !11757
  %0 = call i32 @jsonp_malloc(i32 24), !insn.addr !11758
  %1 = icmp eq i32 %0, 0, !insn.addr !11759
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11760
  br i1 %1, label %dec_label_pc_26a16, label %dec_label_pc_269d4, !insn.addr !11760

dec_label_pc_269d4:                               ; preds = %dec_label_pc_269bc
  %2 = call i32 @json_init(i32 %0, i32 1), !insn.addr !11761
  %3 = add i32 %0, 12, !insn.addr !11762
  %4 = inttoptr i32 %3 to i32*, !insn.addr !11762
  store i32 0, i32* %4, align 4, !insn.addr !11762
  %5 = add i32 %0, 8, !insn.addr !11763
  %6 = inttoptr i32 %5 to i32*, !insn.addr !11763
  store i32 8, i32* %6, align 4, !insn.addr !11763
  %7 = call i32 @jsonp_malloc(i32 32), !insn.addr !11764
  %8 = add i32 %0, 16, !insn.addr !11765
  %9 = inttoptr i32 %8 to i32*, !insn.addr !11765
  store i32 %7, i32* %9, align 4, !insn.addr !11765
  %10 = icmp eq i32 %7, 0, !insn.addr !11766
  br i1 %10, label %dec_label_pc_26a04, label %dec_label_pc_26a0e, !insn.addr !11767

dec_label_pc_26a04:                               ; preds = %dec_label_pc_269d4
  %11 = call i32 @jsonp_free(i32 %0), !insn.addr !11768
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11769
  br label %dec_label_pc_26a16, !insn.addr !11769

dec_label_pc_26a0e:                               ; preds = %dec_label_pc_269d4
  %12 = add i32 %0, 20, !insn.addr !11770
  %13 = inttoptr i32 %12 to i32*, !insn.addr !11770
  store i32 0, i32* %13, align 4, !insn.addr !11770
  store i32 %0, i32* %r3.0.reg2mem, !insn.addr !11771
  br label %dec_label_pc_26a16, !insn.addr !11771

dec_label_pc_26a16:                               ; preds = %dec_label_pc_269bc, %dec_label_pc_26a0e, %dec_label_pc_26a04
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11772

; uselistorder directives
  uselistorder i32 %0, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32 20, { 19, 21, 22, 23, 24, 25, 20, 26, 27, 28, 29, 30, 31, 12, 0, 13, 14, 32, 33, 34, 35, 15, 16, 36, 37, 2, 17, 1, 18, 7, 3, 4, 8, 9, 5, 6, 10, 11 }
  uselistorder i32 24, { 36, 7, 42, 43, 44, 45, 37, 38, 8, 39, 9, 10, 11, 12, 13, 14, 15, 3, 4, 5, 6, 16, 40, 41, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32, 33, 1, 34, 2, 35 }
  uselistorder label %dec_label_pc_26a16, { 1, 2, 0 }
}

define i32 @json_delete_array(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a20:
  %.lcssa.reg2mem = alloca i32, !insn.addr !11773
  %storemerge1.reg2mem = alloca i32, !insn.addr !11773
  %.reg2mem = alloca i32, !insn.addr !11773
  %0 = add i32 %arg1, 12, !insn.addr !11774
  %1 = inttoptr i32 %0 to i32*, !insn.addr !11774
  %2 = load i32, i32* %1, align 4, !insn.addr !11774
  %3 = icmp eq i32 %2, 0, !insn.addr !11775
  %4 = add i32 %arg1, 16
  %5 = inttoptr i32 %4 to i32*
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %.reg2mem, !insn.addr !11776
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !11776
  store i32 %6, i32* %.lcssa.reg2mem, !insn.addr !11776
  br i1 %3, label %dec_label_pc_26a50, label %dec_label_pc_26a2e, !insn.addr !11776

dec_label_pc_26a2e:                               ; preds = %dec_label_pc_26a20, %dec_label_pc_26a2e
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %7 = mul i32 %storemerge1.reload, 4, !insn.addr !11777
  %8 = add i32 %7, %.reload, !insn.addr !11778
  %9 = inttoptr i32 %8 to i32*, !insn.addr !11779
  %10 = load i32, i32* %9, align 4, !insn.addr !11779
  %11 = call i32 @json_decref.67(i32 %10), !insn.addr !11780
  %12 = add i32 %storemerge1.reload, 1, !insn.addr !11781
  %13 = load i32, i32* %1, align 4, !insn.addr !11774
  %14 = icmp ult i32 %13, %12, !insn.addr !11775
  %15 = icmp ne i1 %14, true, !insn.addr !11775
  %16 = icmp eq i32 %13, %12, !insn.addr !11775
  %17 = icmp ne i1 %16, true, !insn.addr !11776
  %18 = icmp eq i1 %15, %17, !insn.addr !11776
  %19 = load i32, i32* %5, align 4
  store i32 %19, i32* %.reg2mem, !insn.addr !11776
  store i32 %12, i32* %storemerge1.reg2mem, !insn.addr !11776
  store i32 %19, i32* %.lcssa.reg2mem, !insn.addr !11776
  br i1 %18, label %dec_label_pc_26a2e, label %dec_label_pc_26a50, !insn.addr !11776

dec_label_pc_26a50:                               ; preds = %dec_label_pc_26a2e, %dec_label_pc_26a20
  %.lcssa.reload = load i32, i32* %.lcssa.reg2mem
  %20 = call i32 @jsonp_free(i32 %.lcssa.reload), !insn.addr !11782
  %21 = call i32 @jsonp_free(i32 %arg1), !insn.addr !11783
  ret i32 %21, !insn.addr !11784

; uselistorder directives
  uselistorder i32 %13, { 1, 0 }
  uselistorder i32 %12, { 0, 2, 1 }
  uselistorder i32* %5, { 1, 0 }
  uselistorder i32* %1, { 1, 0 }
  uselistorder i32* %.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_26a2e, { 1, 0 }
}

define i32 @json_array_size(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a68:
  %storemerge.reg2mem = alloca i32, !insn.addr !11785
  %0 = icmp eq i32 %arg1, 1, !insn.addr !11786
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !11787
  br i1 %0, label %dec_label_pc_26a82, label %dec_label_pc_26a86, !insn.addr !11787

dec_label_pc_26a82:                               ; preds = %dec_label_pc_26a68
  %1 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11788
  store i32 %1, i32* %storemerge.reg2mem, !insn.addr !11788
  br label %dec_label_pc_26a86, !insn.addr !11788

dec_label_pc_26a86:                               ; preds = %dec_label_pc_26a68, %dec_label_pc_26a82
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11789

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_26a86, { 1, 0 }
}

define i32 @json_array_get(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26a94:
  %r3.0.reg2mem = alloca i32, !insn.addr !11790
  %0 = icmp eq i32 %arg1, 1, !insn.addr !11791
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11792
  br i1 %0, label %dec_label_pc_26ab0, label %dec_label_pc_26ace, !insn.addr !11792

dec_label_pc_26ab0:                               ; preds = %dec_label_pc_26a94
  %1 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11793
  %2 = icmp ult i32 %1, %arg2, !insn.addr !11794
  %3 = icmp ne i1 %2, true, !insn.addr !11794
  %4 = icmp eq i32 %1, %arg2, !insn.addr !11794
  %5 = icmp ne i1 %4, true, !insn.addr !11795
  %6 = icmp eq i1 %3, %5, !insn.addr !11795
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11795
  br i1 %6, label %dec_label_pc_26ac2, label %dec_label_pc_26ace, !insn.addr !11795

dec_label_pc_26ac2:                               ; preds = %dec_label_pc_26ab0
  %7 = load i32, i32* inttoptr (i32 17 to i32*), align 4, !insn.addr !11796
  %8 = mul i32 %arg2, 4, !insn.addr !11797
  %9 = add i32 %7, %8, !insn.addr !11798
  %10 = inttoptr i32 %9 to i32*, !insn.addr !11799
  %11 = load i32, i32* %10, align 4, !insn.addr !11799
  store i32 %11, i32* %r3.0.reg2mem, !insn.addr !11799
  br label %dec_label_pc_26ace, !insn.addr !11799

dec_label_pc_26ace:                               ; preds = %dec_label_pc_26ab0, %dec_label_pc_26a94, %dec_label_pc_26ac2
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11800

; uselistorder directives
  uselistorder i32 %1, { 1, 0 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_26ace, { 2, 0, 1 }
}

define i32 @json_array_set_new(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26adc:
  %r3.0.reg2mem = alloca i32, !insn.addr !11801
  %0 = icmp eq i32 %arg3, 0, !insn.addr !11802
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11803
  br i1 %0, label %dec_label_pc_26b52, label %dec_label_pc_26af4, !insn.addr !11803

dec_label_pc_26af4:                               ; preds = %dec_label_pc_26adc
  %1 = icmp ne i32 %arg1, 1, !insn.addr !11804
  %2 = icmp eq i32 %arg1, %arg3, !insn.addr !11805
  %or.cond = or i1 %1, %2
  br i1 %or.cond, label %dec_label_pc_26b0a, label %dec_label_pc_26b16, !insn.addr !11806

dec_label_pc_26b0a:                               ; preds = %dec_label_pc_26af4
  %3 = call i32 @json_decref.67(i32 %arg3), !insn.addr !11807
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11808
  br label %dec_label_pc_26b52, !insn.addr !11808

dec_label_pc_26b16:                               ; preds = %dec_label_pc_26af4
  %4 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11809
  %5 = icmp ult i32 %4, %arg2, !insn.addr !11810
  %6 = icmp ne i1 %5, true, !insn.addr !11810
  %7 = icmp eq i32 %4, %arg2, !insn.addr !11810
  %8 = icmp ne i1 %7, true, !insn.addr !11811
  %9 = icmp eq i1 %6, %8, !insn.addr !11811
  br i1 %9, label %dec_label_pc_26b30, label %dec_label_pc_26b24, !insn.addr !11811

dec_label_pc_26b24:                               ; preds = %dec_label_pc_26b16
  %10 = call i32 @json_decref.67(i32 %arg3), !insn.addr !11812
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11813
  br label %dec_label_pc_26b52, !insn.addr !11813

dec_label_pc_26b30:                               ; preds = %dec_label_pc_26b16
  %11 = load i32, i32* inttoptr (i32 17 to i32*), align 4, !insn.addr !11814
  %12 = mul i32 %arg2, 4, !insn.addr !11815
  %13 = add i32 %11, %12, !insn.addr !11816
  %14 = inttoptr i32 %13 to i32*, !insn.addr !11817
  %15 = load i32, i32* %14, align 4, !insn.addr !11817
  %16 = call i32 @json_decref.67(i32 %15), !insn.addr !11818
  %17 = load i32, i32* inttoptr (i32 17 to i32*), align 4, !insn.addr !11819
  %18 = add i32 %17, %12, !insn.addr !11820
  %19 = inttoptr i32 %18 to i32*, !insn.addr !11821
  store i32 %arg3, i32* %19, align 4, !insn.addr !11821
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11822
  br label %dec_label_pc_26b52, !insn.addr !11822

dec_label_pc_26b52:                               ; preds = %dec_label_pc_26adc, %dec_label_pc_26b30, %dec_label_pc_26b24, %dec_label_pc_26b0a
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11823

; uselistorder directives
  uselistorder i32 %12, { 1, 0 }
  uselistorder i32 %4, { 1, 0 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 2, 4, 1 }
  uselistorder i32 %arg3, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_26b52, { 1, 2, 3, 0 }
}

define i32 @array_move(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_26b5c:
  %0 = add i32 %arg1, 16, !insn.addr !11824
  %1 = inttoptr i32 %0 to i32*, !insn.addr !11824
  %2 = load i32, i32* %1, align 4, !insn.addr !11824
  %3 = mul i32 %arg2, 4, !insn.addr !11825
  %4 = add i32 %2, %3, !insn.addr !11826
  %5 = mul i32 %arg3, 4, !insn.addr !11827
  %6 = add i32 %2, %5, !insn.addr !11828
  %7 = mul i32 %arg4, 4, !insn.addr !11829
  %8 = inttoptr i32 %4 to i32*, !insn.addr !11830
  %9 = inttoptr i32 %6 to i32*, !insn.addr !11830
  %10 = call i32* @memmove(i32* %8, i32* %9, i32 %7), !insn.addr !11830
  %11 = ptrtoint i32* %10 to i32, !insn.addr !11830
  ret i32 %11, !insn.addr !11831

; uselistorder directives
  uselistorder i32* (i32*, i32*, i32)* @memmove, { 1, 0 }
}

define i32 @array_copy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_26b94:
  %0 = mul i32 %arg2, 4, !insn.addr !11832
  %1 = add i32 %0, %arg1, !insn.addr !11833
  %2 = mul i32 %arg4, 4, !insn.addr !11834
  %3 = add i32 %2, %arg3, !insn.addr !11835
  %4 = mul i32 %arg5, 4, !insn.addr !11836
  %5 = inttoptr i32 %1 to i32*, !insn.addr !11837
  %6 = inttoptr i32 %3 to i32*, !insn.addr !11837
  %7 = call i32* @memcpy(i32* %5, i32* %6, i32 %4), !insn.addr !11837
  %8 = ptrtoint i32* %7 to i32, !insn.addr !11837
  ret i32 %8, !insn.addr !11838

; uselistorder directives
  uselistorder i32* (i32*, i32*, i32)* @memcpy, { 11, 10, 9, 8, 7, 24, 6, 5, 26, 25, 4, 3, 2, 23, 22, 21, 20, 15, 14, 13, 12, 1, 19, 18, 17, 16, 0 }
}

define i32 @json_array_grow(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26bc8:
  %r3.1.reg2mem = alloca i32, !insn.addr !11839
  %0 = add i32 %arg1, 12, !insn.addr !11840
  %1 = inttoptr i32 %0 to i32*, !insn.addr !11840
  %2 = load i32, i32* %1, align 4, !insn.addr !11840
  %3 = add i32 %2, %arg2, !insn.addr !11841
  %4 = add i32 %arg1, 8, !insn.addr !11842
  %5 = inttoptr i32 %4 to i32*, !insn.addr !11842
  %6 = load i32, i32* %5, align 4, !insn.addr !11842
  %7 = icmp ult i32 %3, %6, !insn.addr !11843
  %8 = icmp ne i1 %7, true, !insn.addr !11843
  %9 = icmp eq i32 %3, %6, !insn.addr !11843
  %10 = icmp ne i1 %9, true, !insn.addr !11844
  %11 = icmp eq i1 %8, %10, !insn.addr !11844
  %12 = add i32 %arg1, 16
  %13 = inttoptr i32 %12 to i32*
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %r3.1.reg2mem, !insn.addr !11844
  br i1 %11, label %dec_label_pc_26bea, label %dec_label_pc_26c52, !insn.addr !11844

dec_label_pc_26bea:                               ; preds = %dec_label_pc_26bc8
  %15 = mul i32 %6, 2, !insn.addr !11845
  %16 = add i32 %6, %arg2, !insn.addr !11846
  %17 = icmp ult i32 %15, %16, !insn.addr !11847
  %18 = icmp ne i1 %17, true, !insn.addr !11847
  br i1 %18, label %19, label %21, !insn.addr !11848

; <label>:19:                                     ; preds = %dec_label_pc_26bea
  %20 = call i32 @__asm_it(), !insn.addr !11848
  br label %21, !insn.addr !11848

; <label>:21:                                     ; preds = %dec_label_pc_26bea, %19
  %spec.select = select i1 %18, i32 %15, i32 %16
  %22 = mul i32 %spec.select, 4, !insn.addr !11849
  %23 = call i32 @jsonp_malloc(i32 %22), !insn.addr !11850
  %24 = icmp eq i32 %23, 0, !insn.addr !11851
  store i32 0, i32* %r3.1.reg2mem, !insn.addr !11852
  br i1 %24, label %dec_label_pc_26c52, label %dec_label_pc_26c1c, !insn.addr !11852

dec_label_pc_26c1c:                               ; preds = %21
  store i32 %spec.select, i32* %5, align 4, !insn.addr !11853
  store i32 %23, i32* %13, align 4, !insn.addr !11854
  %25 = icmp eq i32 %arg3, 0, !insn.addr !11855
  store i32 %14, i32* %r3.1.reg2mem, !insn.addr !11856
  br i1 %25, label %dec_label_pc_26c52, label %dec_label_pc_26c2e, !insn.addr !11856

dec_label_pc_26c2e:                               ; preds = %dec_label_pc_26c1c
  %26 = load i32, i32* %1, align 4, !insn.addr !11857
  %27 = call i32 @array_copy(i32 %23, i32 0, i32 %14, i32 0, i32 %26), !insn.addr !11858
  %28 = call i32 @jsonp_free(i32 %14), !insn.addr !11859
  %29 = load i32, i32* %13, align 4, !insn.addr !11860
  store i32 %29, i32* %r3.1.reg2mem, !insn.addr !11861
  br label %dec_label_pc_26c52, !insn.addr !11861

dec_label_pc_26c52:                               ; preds = %dec_label_pc_26c1c, %21, %dec_label_pc_26bc8, %dec_label_pc_26c2e
  %r3.1.reload = load i32, i32* %r3.1.reg2mem
  ret i32 %r3.1.reload, !insn.addr !11862

; uselistorder directives
  uselistorder i32 %spec.select, { 1, 0 }
  uselistorder i32 %15, { 1, 0 }
  uselistorder i32 %14, { 3, 2, 0, 1 }
  uselistorder i32 %6, { 1, 0, 3, 2 }
  uselistorder i32 %3, { 1, 0 }
  uselistorder i32* %r3.1.reg2mem, { 0, 4, 1, 2, 3 }
  uselistorder label %dec_label_pc_26c52, { 3, 0, 1, 2 }
  uselistorder label %21, { 1, 0 }
}

define i32 @json_array_append_new(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26c5c:
  %r3.0.reg2mem = alloca i32, !insn.addr !11863
  %0 = icmp eq i32 %arg2, 0, !insn.addr !11864
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11865
  br i1 %0, label %dec_label_pc_26cd0, label %dec_label_pc_26c72, !insn.addr !11865

dec_label_pc_26c72:                               ; preds = %dec_label_pc_26c5c
  %1 = icmp ne i32 %arg1, 1, !insn.addr !11866
  %2 = icmp eq i32 %arg1, %arg2, !insn.addr !11867
  %or.cond = or i1 %1, %2
  br i1 %or.cond, label %dec_label_pc_26c88, label %dec_label_pc_26c94, !insn.addr !11868

dec_label_pc_26c88:                               ; preds = %dec_label_pc_26c72
  %3 = call i32 @json_decref.67(i32 %arg2), !insn.addr !11869
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11870
  br label %dec_label_pc_26cd0, !insn.addr !11870

dec_label_pc_26c94:                               ; preds = %dec_label_pc_26c72
  %4 = call i32 @json_array_grow(i32 1, i32 1, i32 1), !insn.addr !11871
  %5 = icmp eq i32 %4, 0, !insn.addr !11872
  br i1 %5, label %dec_label_pc_26ca8, label %dec_label_pc_26cb4, !insn.addr !11873

dec_label_pc_26ca8:                               ; preds = %dec_label_pc_26c94
  %6 = call i32 @json_decref.67(i32 %arg2), !insn.addr !11874
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11875
  br label %dec_label_pc_26cd0, !insn.addr !11875

dec_label_pc_26cb4:                               ; preds = %dec_label_pc_26c94
  %7 = load i32, i32* inttoptr (i32 17 to i32*), align 4, !insn.addr !11876
  %8 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11877
  %9 = mul i32 %8, 4, !insn.addr !11878
  %10 = add i32 %9, %7, !insn.addr !11879
  %11 = inttoptr i32 %10 to i32*, !insn.addr !11880
  store i32 %arg2, i32* %11, align 4, !insn.addr !11880
  %12 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11881
  %13 = add i32 %12, 1, !insn.addr !11882
  store i32 %13, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11883
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11884
  br label %dec_label_pc_26cd0, !insn.addr !11884

dec_label_pc_26cd0:                               ; preds = %dec_label_pc_26c5c, %dec_label_pc_26cb4, %dec_label_pc_26ca8, %dec_label_pc_26c88
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11885

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 4, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_26cd0, { 1, 2, 3, 0 }
}

define i32 @json_array_insert_new(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26cdc:
  %r3.0.reg2mem = alloca i32, !insn.addr !11886
  %0 = icmp eq i32 %arg3, 0, !insn.addr !11887
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11888
  br i1 %0, label %dec_label_pc_26dc2, label %dec_label_pc_26cf4, !insn.addr !11888

dec_label_pc_26cf4:                               ; preds = %dec_label_pc_26cdc
  %1 = icmp ne i32 %arg1, 1, !insn.addr !11889
  %2 = icmp eq i32 %arg1, %arg3, !insn.addr !11890
  %or.cond = or i1 %1, %2
  br i1 %or.cond, label %dec_label_pc_26d0a, label %dec_label_pc_26d16, !insn.addr !11891

dec_label_pc_26d0a:                               ; preds = %dec_label_pc_26cf4
  %3 = call i32 @json_decref.67(i32 %arg3), !insn.addr !11892
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11893
  br label %dec_label_pc_26dc2, !insn.addr !11893

dec_label_pc_26d16:                               ; preds = %dec_label_pc_26cf4
  %4 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11894
  %5 = icmp ult i32 %4, %arg2, !insn.addr !11895
  br i1 %5, label %dec_label_pc_26d24, label %dec_label_pc_26d30, !insn.addr !11896

dec_label_pc_26d24:                               ; preds = %dec_label_pc_26d16
  %6 = call i32 @json_decref.67(i32 %arg3), !insn.addr !11897
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11898
  br label %dec_label_pc_26dc2, !insn.addr !11898

dec_label_pc_26d30:                               ; preds = %dec_label_pc_26d16
  %7 = call i32 @json_array_grow(i32 1, i32 1, i32 0), !insn.addr !11899
  %8 = icmp eq i32 %7, 0, !insn.addr !11900
  br i1 %8, label %dec_label_pc_26d42, label %dec_label_pc_26d4e, !insn.addr !11901

dec_label_pc_26d42:                               ; preds = %dec_label_pc_26d30
  %9 = call i32 @json_decref.67(i32 %arg3), !insn.addr !11902
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11903
  br label %dec_label_pc_26dc2, !insn.addr !11903

dec_label_pc_26d4e:                               ; preds = %dec_label_pc_26d30
  %10 = load i32, i32* inttoptr (i32 17 to i32*), align 4, !insn.addr !11904
  %11 = icmp eq i32 %10, %7, !insn.addr !11905
  br i1 %11, label %dec_label_pc_26d92, label %dec_label_pc_26d58, !insn.addr !11906

dec_label_pc_26d58:                               ; preds = %dec_label_pc_26d4e
  %12 = call i32 @array_copy(i32 %10, i32 0, i32 %7, i32 0, i32 %arg2), !insn.addr !11907
  %13 = load i32, i32* inttoptr (i32 17 to i32*), align 4, !insn.addr !11908
  %14 = add i32 %arg2, 1, !insn.addr !11909
  %15 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11910
  %16 = sub i32 %15, %arg2, !insn.addr !11911
  %17 = call i32 @array_copy(i32 %13, i32 %14, i32 %7, i32 %arg2, i32 %16), !insn.addr !11912
  %18 = call i32 @jsonp_free(i32 %7), !insn.addr !11913
  br label %dec_label_pc_26da8, !insn.addr !11914

dec_label_pc_26d92:                               ; preds = %dec_label_pc_26d4e
  %19 = add i32 %arg2, 1, !insn.addr !11915
  %20 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11916
  %21 = sub i32 %20, %arg2, !insn.addr !11917
  %22 = call i32 @array_move(i32 1, i32 %19, i32 %arg2, i32 %21), !insn.addr !11918
  br label %dec_label_pc_26da8, !insn.addr !11918

dec_label_pc_26da8:                               ; preds = %dec_label_pc_26d92, %dec_label_pc_26d58
  %23 = load i32, i32* inttoptr (i32 17 to i32*), align 4, !insn.addr !11919
  %24 = mul i32 %arg2, 4, !insn.addr !11920
  %25 = add i32 %23, %24, !insn.addr !11921
  %26 = inttoptr i32 %25 to i32*, !insn.addr !11922
  store i32 %arg3, i32* %26, align 4, !insn.addr !11922
  %27 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11923
  %28 = add i32 %27, 1, !insn.addr !11924
  store i32 %28, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11925
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11926
  br label %dec_label_pc_26dc2, !insn.addr !11926

dec_label_pc_26dc2:                               ; preds = %dec_label_pc_26cdc, %dec_label_pc_26da8, %dec_label_pc_26d42, %dec_label_pc_26d24, %dec_label_pc_26d0a
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11927

; uselistorder directives
  uselistorder i32 %7, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %arg3, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg2, { 0, 7, 6, 5, 3, 2, 1, 4, 8 }
  uselistorder label %dec_label_pc_26dc2, { 1, 2, 3, 4, 0 }
}

define i32 @json_array_remove(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26dcc:
  %r3.0.reg2mem = alloca i32, !insn.addr !11928
  %.pre-phi.reg2mem = alloca i32, !insn.addr !11928
  %0 = icmp eq i32 %arg1, 1, !insn.addr !11929
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11930
  br i1 %0, label %dec_label_pc_26dea, label %dec_label_pc_26e3e, !insn.addr !11930

dec_label_pc_26dea:                               ; preds = %dec_label_pc_26dcc
  %1 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11931
  %2 = icmp ult i32 %1, %arg2, !insn.addr !11932
  %3 = icmp ne i1 %2, true, !insn.addr !11932
  %4 = icmp eq i32 %1, %arg2, !insn.addr !11932
  %5 = icmp ne i1 %4, true, !insn.addr !11933
  %6 = icmp eq i1 %3, %5, !insn.addr !11933
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11933
  br i1 %6, label %dec_label_pc_26dfe, label %dec_label_pc_26e3e, !insn.addr !11933

dec_label_pc_26dfe:                               ; preds = %dec_label_pc_26dea
  %7 = load i32, i32* inttoptr (i32 17 to i32*), align 4, !insn.addr !11934
  %8 = mul i32 %arg2, 4, !insn.addr !11935
  %9 = add i32 %7, %8, !insn.addr !11936
  %10 = inttoptr i32 %9 to i32*, !insn.addr !11937
  %11 = load i32, i32* %10, align 4, !insn.addr !11937
  %12 = call i32 @json_decref.67(i32 %11), !insn.addr !11938
  %13 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11939
  %14 = add i32 %13, -1
  %15 = icmp ult i32 %14, %arg2, !insn.addr !11940
  %16 = icmp ne i1 %15, true, !insn.addr !11940
  %17 = icmp eq i32 %14, %arg2, !insn.addr !11940
  %18 = icmp ne i1 %16, true, !insn.addr !11941
  %19 = or i1 %17, %18, !insn.addr !11941
  store i32 %14, i32* %.pre-phi.reg2mem, !insn.addr !11941
  br i1 %19, label %dec_label_pc_26e32, label %dec_label_pc_26e1c, !insn.addr !11941

dec_label_pc_26e1c:                               ; preds = %dec_label_pc_26dfe
  %20 = add i32 %arg2, 1, !insn.addr !11942
  %21 = sub i32 0, %arg2
  %22 = sub i32 %21, 1
  %23 = add i32 %13, %22, !insn.addr !11943
  %24 = call i32 @array_move(i32 1, i32 %arg2, i32 %20, i32 %23), !insn.addr !11944
  %.pre = load i32, i32* inttoptr (i32 13 to i32*), align 4
  %.pre2 = add i32 %.pre, -1, !insn.addr !11945
  store i32 %.pre2, i32* %.pre-phi.reg2mem, !insn.addr !11944
  br label %dec_label_pc_26e32, !insn.addr !11944

dec_label_pc_26e32:                               ; preds = %dec_label_pc_26e1c, %dec_label_pc_26dfe
  %.pre-phi.reload = load i32, i32* %.pre-phi.reg2mem
  store i32 %.pre-phi.reload, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11946
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11947
  br label %dec_label_pc_26e3e, !insn.addr !11947

dec_label_pc_26e3e:                               ; preds = %dec_label_pc_26dea, %dec_label_pc_26dcc, %dec_label_pc_26e32
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11948

; uselistorder directives
  uselistorder i32 %1, { 1, 0 }
  uselistorder i32* %.pre-phi.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @array_move, { 1, 0 }
  uselistorder i32 %arg2, { 5, 0, 4, 2, 3, 1, 6, 7 }
  uselistorder label %dec_label_pc_26e3e, { 2, 0, 1 }
}

define i32 @json_array_clear(i32 %arg1) local_unnamed_addr {
dec_label_pc_26e48:
  %storemerge.reg2mem = alloca i32, !insn.addr !11949
  %storemerge13.reg2mem = alloca i32, !insn.addr !11949
  %0 = icmp eq i32 %arg1, 1, !insn.addr !11950
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !11951
  br i1 %0, label %dec_label_pc_26e86.preheader, label %dec_label_pc_26e98, !insn.addr !11951

dec_label_pc_26e86.preheader:                     ; preds = %dec_label_pc_26e48
  %1 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11952
  %2 = icmp eq i32 %1, 0, !insn.addr !11953
  store i32 0, i32* %storemerge13.reg2mem, !insn.addr !11954
  br i1 %2, label %dec_label_pc_26e90, label %dec_label_pc_26e6e, !insn.addr !11954

dec_label_pc_26e6e:                               ; preds = %dec_label_pc_26e86.preheader, %dec_label_pc_26e6e
  %storemerge13.reload = load i32, i32* %storemerge13.reg2mem
  %3 = load i32, i32* inttoptr (i32 17 to i32*), align 4, !insn.addr !11955
  %4 = mul i32 %storemerge13.reload, 4, !insn.addr !11956
  %5 = add i32 %3, %4, !insn.addr !11957
  %6 = inttoptr i32 %5 to i32*, !insn.addr !11958
  %7 = load i32, i32* %6, align 4, !insn.addr !11958
  %8 = call i32 @json_decref.67(i32 %7), !insn.addr !11959
  %9 = add i32 %storemerge13.reload, 1, !insn.addr !11960
  %10 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11952
  %11 = icmp ult i32 %10, %9, !insn.addr !11953
  %12 = icmp ne i1 %11, true, !insn.addr !11953
  %13 = icmp eq i32 %10, %9, !insn.addr !11953
  %14 = icmp ne i1 %13, true, !insn.addr !11954
  %15 = icmp eq i1 %12, %14, !insn.addr !11954
  store i32 %9, i32* %storemerge13.reg2mem, !insn.addr !11954
  br i1 %15, label %dec_label_pc_26e6e, label %dec_label_pc_26e90, !insn.addr !11954

dec_label_pc_26e90:                               ; preds = %dec_label_pc_26e6e, %dec_label_pc_26e86.preheader
  store i32 0, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11961
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !11962
  br label %dec_label_pc_26e98, !insn.addr !11962

dec_label_pc_26e98:                               ; preds = %dec_label_pc_26e48, %dec_label_pc_26e90
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !11963

; uselistorder directives
  uselistorder i32 %10, { 1, 0 }
  uselistorder i32 %9, { 0, 2, 1 }
  uselistorder i32* %storemerge13.reg2mem, { 2, 0, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32)* @json_decref.67, { 12, 11, 10, 9, 8, 2, 1, 7, 6, 5, 3, 4, 0 }
  uselistorder label %dec_label_pc_26e98, { 1, 0 }
  uselistorder label %dec_label_pc_26e6e, { 1, 0 }
}

define i32 @json_array_extend(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26ea4:
  %r3.0.reg2mem = alloca i32, !insn.addr !11964
  %.reg2mem = alloca i32, !insn.addr !11964
  %storemerge6.reg2mem = alloca i32, !insn.addr !11964
  %0 = icmp eq i32 %arg1, 1, !insn.addr !11965
  %1 = icmp eq i32 %arg2, 1, !insn.addr !11966
  %or.cond5 = icmp eq i1 %0, %1
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11967
  br i1 %or.cond5, label %dec_label_pc_26ed0, label %dec_label_pc_26f48, !insn.addr !11967

dec_label_pc_26ed0:                               ; preds = %dec_label_pc_26ea4
  %2 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11968
  %3 = call i32 @json_array_grow(i32 1, i32 %2, i32 1), !insn.addr !11969
  %4 = icmp eq i32 %3, 0, !insn.addr !11970
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !11971
  br i1 %4, label %dec_label_pc_26f48, label %dec_label_pc_26f10.preheader, !insn.addr !11971

dec_label_pc_26f10.preheader:                     ; preds = %dec_label_pc_26ed0
  %5 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11972
  %6 = icmp eq i32 %5, 0, !insn.addr !11973
  store i32 0, i32* %storemerge6.reg2mem, !insn.addr !11974
  store i32 0, i32* %.reg2mem, !insn.addr !11974
  br i1 %6, label %dec_label_pc_26f1a, label %dec_label_pc_26ef8, !insn.addr !11974

dec_label_pc_26ef8:                               ; preds = %dec_label_pc_26f10.preheader, %dec_label_pc_26ef8
  %storemerge6.reload = load i32, i32* %storemerge6.reg2mem
  %7 = load i32, i32* inttoptr (i32 17 to i32*), align 4, !insn.addr !11975
  %8 = mul i32 %storemerge6.reload, 4, !insn.addr !11976
  %9 = add i32 %7, %8, !insn.addr !11977
  %10 = inttoptr i32 %9 to i32*, !insn.addr !11978
  %11 = load i32, i32* %10, align 4, !insn.addr !11978
  %12 = call i32 @json_incref.66(i32 %11), !insn.addr !11979
  %13 = add i32 %storemerge6.reload, 1, !insn.addr !11980
  %14 = load i32, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11972
  %15 = icmp ult i32 %14, %13, !insn.addr !11973
  %16 = icmp ne i1 %15, true, !insn.addr !11973
  %17 = icmp eq i32 %14, %13, !insn.addr !11973
  %18 = icmp ne i1 %17, true, !insn.addr !11974
  %19 = icmp eq i1 %16, %18, !insn.addr !11974
  store i32 %13, i32* %storemerge6.reg2mem, !insn.addr !11974
  store i32 %14, i32* %.reg2mem, !insn.addr !11974
  br i1 %19, label %dec_label_pc_26ef8, label %dec_label_pc_26f1a, !insn.addr !11974

dec_label_pc_26f1a:                               ; preds = %dec_label_pc_26ef8, %dec_label_pc_26f10.preheader
  %.reload = load i32, i32* %.reg2mem, !insn.addr !11981
  %20 = load i32, i32* inttoptr (i32 17 to i32*), align 4
  %21 = call i32 @array_copy(i32 %20, i32 %.reload, i32 %20, i32 0, i32 %.reload), !insn.addr !11982
  %22 = load i32, i32* inttoptr (i32 13 to i32*), align 4
  %23 = mul i32 %22, 2, !insn.addr !11983
  store i32 %23, i32* inttoptr (i32 13 to i32*), align 4, !insn.addr !11984
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11985
  br label %dec_label_pc_26f48, !insn.addr !11985

dec_label_pc_26f48:                               ; preds = %dec_label_pc_26ed0, %dec_label_pc_26ea4, %dec_label_pc_26f1a
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !11986

; uselistorder directives
  uselistorder i32 %.reload, { 1, 0 }
  uselistorder i32 %14, { 0, 2, 1 }
  uselistorder i32 %13, { 0, 2, 1 }
  uselistorder i32* %storemerge6.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @array_copy, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @json_incref.66, { 2, 1, 0 }
  uselistorder i32 17, { 0, 3, 2, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* inttoptr (i32 17 to i32*), { 0, 1, 2, 3, 5, 6, 4, 7, 9, 8, 10 }
  uselistorder i32 (i32, i32, i32)* @json_array_grow, { 2, 1, 0 }
  uselistorder i32 13, { 1, 2, 8, 9, 6, 7, 10, 11, 3, 0, 12, 4, 5 }
  uselistorder i32* inttoptr (i32 13 to i32*), { 0, 1, 3, 4, 2, 7, 5, 6, 11, 8, 10, 9, 14, 15, 13, 16, 12, 18, 19, 17, 20, 21, 22 }
  uselistorder label %dec_label_pc_26f48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_26ef8, { 1, 0 }
}

define i32 @json_array_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26f54:
  %r3.0.reg2mem = alloca i32, !insn.addr !11987
  %storemerge1.reg2mem = alloca i32, !insn.addr !11987
  %0 = call i32 @json_array_size(i32 %arg1), !insn.addr !11988
  %1 = call i32 @json_array_size(i32 %arg2), !insn.addr !11989
  %2 = icmp eq i32 %1, %0, !insn.addr !11990
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11991
  br i1 %2, label %dec_label_pc_26faa.preheader, label %dec_label_pc_26fb4, !insn.addr !11991

dec_label_pc_26faa.preheader:                     ; preds = %dec_label_pc_26f54
  %3 = icmp eq i32 %0, 0, !insn.addr !11992
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !11993
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !11993
  br i1 %3, label %dec_label_pc_26fb4, label %dec_label_pc_26f7e, !insn.addr !11993

dec_label_pc_26f7e:                               ; preds = %dec_label_pc_26faa.preheader, %dec_label_pc_26faa
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %4 = call i32 @json_array_get(i32 %arg1, i32 %storemerge1.reload), !insn.addr !11994
  %5 = call i32 @json_array_get(i32 %arg2, i32 %storemerge1.reload), !insn.addr !11995
  %6 = call i32 @json_equal(i32 %4, i32 %5), !insn.addr !11996
  %7 = icmp eq i32 %6, 0, !insn.addr !11997
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !11998
  br i1 %7, label %dec_label_pc_26fb4, label %dec_label_pc_26faa, !insn.addr !11998

dec_label_pc_26faa:                               ; preds = %dec_label_pc_26f7e
  %8 = add nuw i32 %storemerge1.reload, 1, !insn.addr !11999
  %9 = icmp ult i32 %8, %0, !insn.addr !11992
  store i32 %8, i32* %storemerge1.reg2mem, !insn.addr !11993
  store i32 1, i32* %r3.0.reg2mem, !insn.addr !11993
  br i1 %9, label %dec_label_pc_26f7e, label %dec_label_pc_26fb4, !insn.addr !11993

dec_label_pc_26fb4:                               ; preds = %dec_label_pc_26f7e, %dec_label_pc_26faa, %dec_label_pc_26faa.preheader, %dec_label_pc_26f54
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !12000

; uselistorder directives
  uselistorder i32 %storemerge1.reload, { 0, 2, 1 }
  uselistorder i32 %0, { 1, 0, 2 }
  uselistorder i32* %storemerge1.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i32)* @json_equal, { 1, 0 }
  uselistorder label %dec_label_pc_26fb4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_26f7e, { 1, 0 }
}

define i32 @json_array_copy(i32 %arg1) local_unnamed_addr {
dec_label_pc_26fc0:
  %storemerge12.reg2mem = alloca i32, !insn.addr !12001
  %0 = call i32 @json_array(), !insn.addr !12002
  %1 = icmp eq i32 %0, 0, !insn.addr !12003
  br i1 %1, label %dec_label_pc_27006, label %dec_label_pc_26ff6.preheader, !insn.addr !12004

dec_label_pc_26ff6.preheader:                     ; preds = %dec_label_pc_26fc0
  %2 = call i32 @json_array_size(i32 %arg1), !insn.addr !12005
  %3 = icmp eq i32 %2, 0, !insn.addr !12006
  store i32 0, i32* %storemerge12.reg2mem, !insn.addr !12007
  br i1 %3, label %dec_label_pc_27006, label %dec_label_pc_26fde, !insn.addr !12007

dec_label_pc_26fde:                               ; preds = %dec_label_pc_26ff6.preheader, %dec_label_pc_26fde
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %4 = call i32 @json_array_get(i32 %arg1, i32 %storemerge12.reload), !insn.addr !12008
  %5 = call i32 @json_array_append.69(i32 %0, i32 %4), !insn.addr !12009
  %6 = add i32 %storemerge12.reload, 1, !insn.addr !12010
  %7 = call i32 @json_array_size(i32 %arg1), !insn.addr !12005
  %8 = icmp ult i32 %7, %6, !insn.addr !12006
  %9 = icmp ne i1 %8, true, !insn.addr !12006
  %10 = icmp eq i32 %7, %6, !insn.addr !12006
  %11 = icmp ne i1 %10, true, !insn.addr !12007
  %12 = icmp eq i1 %9, %11, !insn.addr !12007
  store i32 %6, i32* %storemerge12.reg2mem, !insn.addr !12007
  br i1 %12, label %dec_label_pc_26fde, label %dec_label_pc_27006, !insn.addr !12007

dec_label_pc_27006:                               ; preds = %dec_label_pc_26fde, %dec_label_pc_26ff6.preheader, %dec_label_pc_26fc0
  ret i32 %0, !insn.addr !12011

; uselistorder directives
  uselistorder i32 %7, { 1, 0 }
  uselistorder i32 %6, { 0, 2, 1 }
  uselistorder i32 %storemerge12.reload, { 1, 0 }
  uselistorder i32* %storemerge12.reg2mem, { 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_26fde, { 1, 0 }
}

define i32 @json_array_deep_copy(i32 %arg1) local_unnamed_addr {
dec_label_pc_27010:
  %storemerge12.reg2mem = alloca i32, !insn.addr !12012
  %0 = call i32 @json_array(), !insn.addr !12013
  %1 = icmp eq i32 %0, 0, !insn.addr !12014
  br i1 %1, label %dec_label_pc_2705e, label %dec_label_pc_2704e.preheader, !insn.addr !12015

dec_label_pc_2704e.preheader:                     ; preds = %dec_label_pc_27010
  %2 = call i32 @json_array_size(i32 %arg1), !insn.addr !12016
  %3 = icmp eq i32 %2, 0, !insn.addr !12017
  store i32 0, i32* %storemerge12.reg2mem, !insn.addr !12018
  br i1 %3, label %dec_label_pc_2705e, label %dec_label_pc_2702e, !insn.addr !12018

dec_label_pc_2702e:                               ; preds = %dec_label_pc_2704e.preheader, %dec_label_pc_2702e
  %storemerge12.reload = load i32, i32* %storemerge12.reg2mem
  %4 = call i32 @json_array_get(i32 %arg1, i32 %storemerge12.reload), !insn.addr !12019
  %5 = call i32 @json_deep_copy(i32 %4), !insn.addr !12020
  %6 = call i32 @json_array_append_new(i32 %0, i32 %5), !insn.addr !12021
  %7 = add i32 %storemerge12.reload, 1, !insn.addr !12022
  %8 = call i32 @json_array_size(i32 %arg1), !insn.addr !12016
  %9 = icmp ult i32 %8, %7, !insn.addr !12017
  %10 = icmp ne i1 %9, true, !insn.addr !12017
  %11 = icmp eq i32 %8, %7, !insn.addr !12017
  %12 = icmp ne i1 %11, true, !insn.addr !12018
  %13 = icmp eq i1 %10, %12, !insn.addr !12018
  store i32 %7, i32* %storemerge12.reg2mem, !insn.addr !12018
  br i1 %13, label %dec_label_pc_2702e, label %dec_label_pc_2705e, !insn.addr !12018

dec_label_pc_2705e:                               ; preds = %dec_label_pc_2702e, %dec_label_pc_2704e.preheader, %dec_label_pc_27010
  ret i32 %0, !insn.addr !12023

; uselistorder directives
  uselistorder i32 %8, { 1, 0 }
  uselistorder i32 %7, { 0, 2, 1 }
  uselistorder i32 %storemerge12.reload, { 1, 0 }
  uselistorder i32* %storemerge12.reg2mem, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @json_array_append_new, { 2, 1, 0 }
  uselistorder i32 (i32)* @json_deep_copy, { 1, 0 }
  uselistorder i32 (i32, i32)* @json_array_get, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @json_array_size, { 8, 0, 9, 1, 7, 6, 5, 3, 4, 2 }
  uselistorder i32 ()* @json_array, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2702e, { 1, 0 }
}

define i32 @json_string_nocheck(i32 %arg1) local_unnamed_addr {
dec_label_pc_27068:
  %r3.0.reg2mem = alloca i32, !insn.addr !12024
  %0 = icmp eq i32 %arg1, 0, !insn.addr !12025
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !12026
  br i1 %0, label %dec_label_pc_270b6, label %dec_label_pc_2707a, !insn.addr !12026

dec_label_pc_2707a:                               ; preds = %dec_label_pc_27068
  %1 = call i32 @jsonp_malloc(i32 12), !insn.addr !12027
  %2 = icmp eq i32 %1, 0, !insn.addr !12028
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !12029
  br i1 %2, label %dec_label_pc_270b6, label %dec_label_pc_2708c, !insn.addr !12029

dec_label_pc_2708c:                               ; preds = %dec_label_pc_2707a
  %3 = call i32 @json_init(i32 %1, i32 2), !insn.addr !12030
  %4 = call i32 @jsonp_strdup(i32 %arg1), !insn.addr !12031
  %5 = add i32 %1, 8, !insn.addr !12032
  %6 = inttoptr i32 %5 to i32*, !insn.addr !12032
  store i32 %4, i32* %6, align 4, !insn.addr !12032
  %7 = icmp eq i32 %4, 0, !insn.addr !12033
  store i32 %1, i32* %r3.0.reg2mem, !insn.addr !12034
  br i1 %7, label %dec_label_pc_270aa, label %dec_label_pc_270b6, !insn.addr !12034

dec_label_pc_270aa:                               ; preds = %dec_label_pc_2708c
  %8 = call i32 @jsonp_free(i32 %1), !insn.addr !12035
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !12036
  br label %dec_label_pc_270b6, !insn.addr !12036

dec_label_pc_270b6:                               ; preds = %dec_label_pc_2708c, %dec_label_pc_2707a, %dec_label_pc_27068, %dec_label_pc_270aa
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !12037

; uselistorder directives
  uselistorder i32 %1, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r3.0.reg2mem, { 0, 4, 1, 2, 3 }
  uselistorder label %dec_label_pc_270b6, { 3, 0, 1, 2 }
}

define i32 @json_string(i32 %arg1) local_unnamed_addr {
dec_label_pc_270c0:
  %storemerge.reg2mem = alloca i32, !insn.addr !12038
  %0 = icmp eq i32 %arg1, 0, !insn.addr !12039
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !12040
  br i1 %0, label %dec_label_pc_270ea, label %dec_label_pc_270ce, !insn.addr !12040

dec_label_pc_270ce:                               ; preds = %dec_label_pc_270c0
  %1 = call i32 @utf8_check_string(i32 %arg1, i32 -1), !insn.addr !12041
  %2 = icmp eq i32 %1, 0, !insn.addr !12042
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !12043
  br i1 %2, label %dec_label_pc_270ea, label %dec_label_pc_270e2, !insn.addr !12043

dec_label_pc_270e2:                               ; preds = %dec_label_pc_270ce
  %3 = call i32 @json_string_nocheck(i32 %arg1), !insn.addr !12044
  store i32 %3, i32* %storemerge.reg2mem, !insn.addr !12045
  br label %dec_label_pc_270ea, !insn.addr !12045

dec_label_pc_270ea:                               ; preds = %dec_label_pc_270c0, %dec_label_pc_270ce, %dec_label_pc_270e2
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !12046

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_270ea, { 2, 1, 0 }
}

define i32 @json_string_value(i32 %arg1) local_unnamed_addr {
dec_label_pc_270f4:
  %storemerge.reg2mem = alloca i32, !insn.addr !12047
  %0 = icmp eq i32 %arg1, 2, !insn.addr !12048
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !12049
  br i1 %0, label %dec_label_pc_2710e, label %dec_label_pc_27112, !insn.addr !12049

dec_label_pc_2710e:                               ; preds = %dec_label_pc_270f4
  %1 = load i32, i32* inttoptr (i32 10 to i32*), align 4, !insn.addr !12050
  store i32 %1, i32* %storemerge.reg2mem, !insn.addr !12050
  br label %dec_label_pc_27112, !insn.addr !12050

dec_label_pc_27112:                               ; preds = %dec_label_pc_270f4, %dec_label_pc_2710e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !12051

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_27112, { 1, 0 }
}

define i32 @json_string_set_nocheck(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27120:
  %r3.0.reg2mem = alloca i32, !insn.addr !12052
  %0 = icmp ne i32 %arg1, 2, !insn.addr !12053
  %1 = icmp eq i32 %arg2, 0, !insn.addr !12054
  %or.cond3 = or i1 %0, %1
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !12055
  br i1 %or.cond3, label %dec_label_pc_2716e, label %dec_label_pc_27144, !insn.addr !12055

dec_label_pc_27144:                               ; preds = %dec_label_pc_27120
  %2 = call i32 @jsonp_strdup(i32 %arg2), !insn.addr !12056
  %3 = icmp eq i32 %2, 0, !insn.addr !12057
  store i32 -1, i32* %r3.0.reg2mem, !insn.addr !12058
  br i1 %3, label %dec_label_pc_2716e, label %dec_label_pc_27158, !insn.addr !12058

dec_label_pc_27158:                               ; preds = %dec_label_pc_27144
  %4 = load i32, i32* inttoptr (i32 10 to i32*), align 4, !insn.addr !12059
  %5 = call i32 @jsonp_free(i32 %4), !insn.addr !12060
  store i32 %2, i32* inttoptr (i32 10 to i32*), align 4, !insn.addr !12061
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !12062
  br label %dec_label_pc_2716e, !insn.addr !12062

dec_label_pc_2716e:                               ; preds = %dec_label_pc_27144, %dec_label_pc_27120, %dec_label_pc_27158
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !12063

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32 10, { 5, 14, 12, 17, 10, 18, 15, 9, 16, 38, 11, 8, 19, 6, 64, 65, 0, 39, 66, 7, 20, 21, 22, 23, 24, 25, 26, 40, 41, 42, 43, 44, 45, 46, 47, 1, 2, 27, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 13, 28, 29, 30, 31, 67, 68, 69, 58, 59, 60, 3, 32, 33, 34, 61, 62, 63, 4, 35, 36, 37 }
  uselistorder i32* inttoptr (i32 10 to i32*), { 1, 0, 2 }
  uselistorder i32 (i32)* @jsonp_strdup, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2716e, { 2, 0, 1 }
}

define i32 @json_string_set(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27178:
  %storemerge.reg2mem = alloca i32, !insn.addr !12064
  %0 = icmp eq i32 %arg2, 0, !insn.addr !12065
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !12066
  br i1 %0, label %dec_label_pc_271a8, label %dec_label_pc_27188, !insn.addr !12066

dec_label_pc_27188:                               ; preds = %dec_label_pc_27178
  %1 = call i32 @utf8_check_string(i32 %arg2, i32 -1), !insn.addr !12067
  %2 = icmp eq i32 %1, 0, !insn.addr !12068
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !12069
  br i1 %2, label %dec_label_pc_271a8, label %dec_label_pc_2719e, !insn.addr !12069

dec_label_pc_2719e:                               ; preds = %dec_label_pc_27188
  %3 = call i32 @json_string_set_nocheck(i32 %arg1, i32 %arg2), !insn.addr !12070
  store i32 %3, i32* %storemerge.reg2mem, !insn.addr !12071
  br label %dec_label_pc_271a8, !insn.addr !12071

dec_label_pc_271a8:                               ; preds = %dec_label_pc_27178, %dec_label_pc_27188, %dec_label_pc_2719e
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !12072

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @utf8_check_string, { 2, 1, 0 }
  uselistorder label %dec_label_pc_271a8, { 2, 1, 0 }
}

define i32 @json_delete_string(i32 %arg1) local_unnamed_addr {
dec_label_pc_271b4:
  %0 = add i32 %arg1, 8, !insn.addr !12073
  %1 = inttoptr i32 %0 to i32*, !insn.addr !12073
  %2 = load i32, i32* %1, align 4, !insn.addr !12073
  %3 = call i32 @jsonp_free(i32 %2), !insn.addr !12074
  %4 = call i32 @jsonp_free(i32 %arg1), !insn.addr !12075
  ret i32 %4, !insn.addr !12076
}

define i32 @json_string_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_271d4:
  %0 = call i32 @json_string_value(i32 %arg1), !insn.addr !12077
  %1 = call i32 @json_string_value(i32 %arg2), !insn.addr !12078
  %2 = inttoptr i32 %0 to i8*, !insn.addr !12079
  %3 = inttoptr i32 %1 to i8*, !insn.addr !12079
  %4 = call i32 @strcmp(i8* %2, i8* %3), !insn.addr !12079
  %5 = icmp eq i32 %4, 0, !insn.addr !12080
  br i1 %5, label %8, label %6, !insn.addr !12081

; <label>:6:                                      ; preds = %dec_label_pc_271d4
  %7 = call i32 @__asm_ite(), !insn.addr !12081
  br label %8, !insn.addr !12081

; <label>:8:                                      ; preds = %dec_label_pc_271d4, %6
  %r3.1 = zext i1 %5 to i32
  ret i32 %r3.1, !insn.addr !12082

; uselistorder directives
  uselistorder i32 (i8*, i8*)* @strcmp, { 5, 2, 1, 0, 3, 4 }
  uselistorder label %8, { 1, 0 }
}

define i32 @json_string_copy(i32 %arg1) local_unnamed_addr {
dec_label_pc_2720c:
  %0 = call i32 @json_string_value(i32 %arg1), !insn.addr !12083
  %1 = call i32 @json_string_nocheck(i32 %0), !insn.addr !12084
  ret i32 %1, !insn.addr !12085

; uselistorder directives
  uselistorder i32 (i32)* @json_string_nocheck, { 1, 2, 0 }
  uselistorder i32 (i32)* @json_string_value, { 2, 1, 0 }
}

define i32 @json_integer(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27230:
  %0 = call i32 @jsonp_malloc(i32 16), !insn.addr !12086
  %1 = icmp eq i32 %0, 0, !insn.addr !12087
  br i1 %1, label %dec_label_pc_27262, label %dec_label_pc_2724c, !insn.addr !12088

dec_label_pc_2724c:                               ; preds = %dec_label_pc_27230
  %2 = call i32 @json_init(i32 %0, i32 3), !insn.addr !12089
  %3 = ashr i32 %arg1, 31
  %4 = add i32 %0, 8, !insn.addr !12090
  %5 = inttoptr i32 %4 to i32*, !insn.addr !12090
  store i32 %3, i32* %5, align 4, !insn.addr !12090
  %6 = add i32 %0, 12, !insn.addr !12090
  %7 = inttoptr i32 %6 to i32*, !insn.addr !12090
  store i32 %arg1, i32* %7, align 4, !insn.addr !12090
  br label %dec_label_pc_27262, !insn.addr !12091

dec_label_pc_27262:                               ; preds = %dec_label_pc_27230, %dec_label_pc_2724c
  ret i32 %0, !insn.addr !12092

; uselistorder directives
  uselistorder i32 %0, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_27262, { 1, 0 }
}

define i32 @json_integer_value(i32 %arg1) local_unnamed_addr {
dec_label_pc_2726c:
  %storemerge.reg2mem = alloca i32, !insn.addr !12093
  %0 = icmp eq i32 %arg1, 3, !insn.addr !12094
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !12095
  br i1 %0, label %dec_label_pc_2728c, label %dec_label_pc_27292, !insn.addr !12095

dec_label_pc_2728c:                               ; preds = %dec_label_pc_2726c
  %1 = load i64, i64* inttoptr (i32 11 to i64*), align 4, !insn.addr !12096
  %2 = udiv i64 %1, 4294967296, !insn.addr !12096
  %3 = trunc i64 %2 to i32, !insn.addr !12096
  store i32 %3, i32* %storemerge.reg2mem, !insn.addr !12096
  br label %dec_label_pc_27292, !insn.addr !12096

dec_label_pc_27292:                               ; preds = %dec_label_pc_2726c, %dec_label_pc_2728c
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !12097

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_27292, { 1, 0 }
}

define i32 @json_integer_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_272a0:
  %storemerge.reg2mem = alloca i32, !insn.addr !12098
  %0 = icmp eq i32 %arg1, 3, !insn.addr !12099
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !12100
  br i1 %0, label %dec_label_pc_272c0, label %dec_label_pc_272cc, !insn.addr !12100

dec_label_pc_272c0:                               ; preds = %dec_label_pc_272a0
  %1 = ashr i32 %arg3, 31
  store i32 %1, i32* inttoptr (i32 11 to i32*), align 4, !insn.addr !12101
  store i32 %arg3, i32* inttoptr (i32 15 to i32*), align 4, !insn.addr !12101
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !12102
  br label %dec_label_pc_272cc, !insn.addr !12102

dec_label_pc_272cc:                               ; preds = %dec_label_pc_272a0, %dec_label_pc_272c0
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !12103

; uselistorder directives
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder i32 11, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_272cc, { 1, 0 }
}

define i32 @json_delete_integer(i32 %arg1) local_unnamed_addr {
dec_label_pc_272d8:
  %0 = call i32 @jsonp_free(i32 %arg1), !insn.addr !12104
  ret i32 %0, !insn.addr !12105
}

define i32 @json_integer_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_272f0:
  %0 = call i32 @json_integer_value(i32 %arg1), !insn.addr !12106
  %1 = call i32 @json_integer_value(i32 %arg2), !insn.addr !12107
  %2 = call i32 @__asm_it(), !insn.addr !12108
  %3 = icmp eq i32 %0, %1, !insn.addr !12109
  br i1 %3, label %6, label %4, !insn.addr !12110

; <label>:4:                                      ; preds = %dec_label_pc_272f0
  %5 = call i32 @__asm_ite(), !insn.addr !12110
  br label %6, !insn.addr !12110

; <label>:6:                                      ; preds = %dec_label_pc_272f0, %4
  %r3.1 = zext i1 %3 to i32
  ret i32 %r3.1, !insn.addr !12111

; uselistorder directives
  uselistorder label %6, { 1, 0 }
}

define i32 @json_integer_copy(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27328:
  %0 = call i32 @json_integer_value(i32 %arg1), !insn.addr !12112
  %1 = call i32 @json_integer(i32 %0, i32 %arg2), !insn.addr !12113
  ret i32 %1, !insn.addr !12114

; uselistorder directives
  uselistorder i32 (i32, i32)* @json_integer, { 1, 0 }
}

define i32 @json_real() local_unnamed_addr {
dec_label_pc_27350:
  %0 = alloca i64
  %1 = alloca i32
  %2 = alloca double
  %r3.0.reg2mem = alloca i32, !insn.addr !12115
  %3 = load i32, i32* %1
  %4 = load double, double* %2
  %5 = load i64, i64* %0
  %6 = trunc i64 %5 to i32, !insn.addr !12116
  call void @__asm_vstr.71(double %4, i32 %6), !insn.addr !12116
  %7 = call double @__asm_vldr.70(i32 %6), !insn.addr !12117
  %8 = sext i32 %3 to i64, !insn.addr !12118
  %9 = bitcast i64 %8 to double, !insn.addr !12118
  %10 = call i32 @__isnan(double %9), !insn.addr !12118
  %11 = icmp eq i32 %10, 0, !insn.addr !12119
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !12120
  br i1 %11, label %dec_label_pc_27368, label %dec_label_pc_273a2, !insn.addr !12120

dec_label_pc_27368:                               ; preds = %dec_label_pc_27350
  %12 = call double @__asm_vldr.70(i32 %6), !insn.addr !12121
  %13 = call i32 @__isinf(double 0.000000e+00), !insn.addr !12122
  %14 = icmp eq i32 %13, 0, !insn.addr !12123
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !12124
  br i1 %14, label %dec_label_pc_2737a, label %dec_label_pc_273a2, !insn.addr !12124

dec_label_pc_2737a:                               ; preds = %dec_label_pc_27368
  %15 = call i32 @jsonp_malloc(i32 16), !insn.addr !12125
  %16 = icmp eq i32 %15, 0, !insn.addr !12126
  store i32 0, i32* %r3.0.reg2mem, !insn.addr !12127
  br i1 %16, label %dec_label_pc_273a2, label %dec_label_pc_2738c, !insn.addr !12127

dec_label_pc_2738c:                               ; preds = %dec_label_pc_2737a
  %17 = call i32 @json_init(i32 %15, i32 4), !insn.addr !12128
  %18 = mul i64 %5, 4294967296
  %19 = ashr exact i64 %18, 32, !insn.addr !12129
  %20 = trunc i64 %19 to i32, !insn.addr !12129
  %21 = udiv i64 %19, 4294967296, !insn.addr !12129
  %22 = trunc i64 %21 to i32, !insn.addr !12129
  %23 = add i32 %15, 8, !insn.addr !12130
  %24 = inttoptr i32 %23 to i32*, !insn.addr !12130
  store i32 %22, i32* %24, align 4, !insn.addr !12130
  %25 = add i32 %15, 12, !insn.addr !12130
  %26 = inttoptr i32 %25 to i32*, !insn.addr !12130
  store i32 %20, i32* %26, align 4, !insn.addr !12130
  store i32 %15, i32* %r3.0.reg2mem, !insn.addr !12131
  br label %dec_label_pc_273a2, !insn.addr !12131

dec_label_pc_273a2:                               ; preds = %dec_label_pc_2737a, %dec_label_pc_27368, %dec_label_pc_27350, %dec_label_pc_2738c
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !12132

; uselistorder directives
  uselistorder i32 %15, { 0, 3, 2, 1, 4 }
  uselistorder i64 %5, { 1, 0 }
  uselistorder i32* %r3.0.reg2mem, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32)* @json_init, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @jsonp_malloc, { 13, 12, 11, 10, 9, 8, 4, 3, 2, 1, 0, 6, 5, 7 }
  uselistorder label %dec_label_pc_273a2, { 3, 0, 1, 2 }
}

define i32 @json_real_value(i32 %arg1) local_unnamed_addr {
dec_label_pc_273ac:
  %storemerge.reg2mem = alloca i32, !insn.addr !12133
  %storemerge1.reg2mem = alloca i32, !insn.addr !12133
  %0 = icmp eq i32 %arg1, 4, !insn.addr !12134
  store i32 0, i32* %storemerge1.reg2mem, !insn.addr !12135
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !12135
  br i1 %0, label %dec_label_pc_273cc, label %dec_label_pc_273d2, !insn.addr !12135

dec_label_pc_273cc:                               ; preds = %dec_label_pc_273ac
  %1 = load i64, i64* inttoptr (i32 12 to i64*), align 4, !insn.addr !12136
  %2 = trunc i64 %1 to i32, !insn.addr !12136
  %3 = udiv i64 %1, 4294967296, !insn.addr !12136
  %4 = trunc i64 %3 to i32, !insn.addr !12136
  store i32 %4, i32* %storemerge1.reg2mem, !insn.addr !12136
  store i32 %2, i32* %storemerge.reg2mem, !insn.addr !12136
  br label %dec_label_pc_273d2, !insn.addr !12136

dec_label_pc_273d2:                               ; preds = %dec_label_pc_273ac, %dec_label_pc_273cc
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  %storemerge1.reload = load i32, i32* %storemerge1.reg2mem
  %5 = call double @__asm_vmov.73(i32 %storemerge1.reload, i32 %storemerge.reload), !insn.addr !12137
  ret i32 %arg1, !insn.addr !12137

; uselistorder directives
  uselistorder i32* %storemerge1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge.reg2mem, { 0, 2, 1 }
  uselistorder label %dec_label_pc_273d2, { 1, 0 }
}

define i32 @function_273d6() local_unnamed_addr {
dec_label_pc_273d6:
  %0 = alloca i1
  %r0.0.reg2mem = alloca i32, !insn.addr !12138
  %1 = load i1, i1* %0
  br i1 %1, label %2, label %dec_label_pc_273da, !insn.addr !12138

; <label>:2:                                      ; preds = %dec_label_pc_273d6
  %3 = call i32 @function_1222e9e(), !insn.addr !12138
  store i32 %3, i32* %r0.0.reg2mem, !insn.addr !12138
  br label %dec_label_pc_273da, !insn.addr !12138

dec_label_pc_273da:                               ; preds = %2, %dec_label_pc_273d6
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !12139
}

define i32 @json_real_set(i32 %arg1) local_unnamed_addr {
dec_label_pc_273e4:
  %0 = alloca i64
  %1 = alloca double
  %storemerge.reg2mem = alloca i32, !insn.addr !12140
  %2 = load double, double* %1
  %3 = load i64, i64* %0
  %4 = trunc i64 %3 to i32, !insn.addr !12141
  call void @__asm_vstr.71(double %2, i32 %4), !insn.addr !12141
  %5 = icmp eq i32 %arg1, 4, !insn.addr !12142
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !12143
  br i1 %5, label %dec_label_pc_273fe, label %dec_label_pc_2742c, !insn.addr !12143

dec_label_pc_273fe:                               ; preds = %dec_label_pc_273e4
  %6 = call double @__asm_vldr.70(i32 %4), !insn.addr !12144
  %7 = call i32 @__isnan(double 1.976260e-323), !insn.addr !12145
  %8 = icmp eq i32 %7, 0, !insn.addr !12146
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !12147
  br i1 %8, label %dec_label_pc_2740c, label %dec_label_pc_2742c, !insn.addr !12147

dec_label_pc_2740c:                               ; preds = %dec_label_pc_273fe
  %9 = call double @__asm_vldr.70(i32 %4), !insn.addr !12148
  %10 = call i32 @__isinf(double 0.000000e+00), !insn.addr !12149
  %11 = icmp eq i32 %10, 0, !insn.addr !12150
  store i32 -1, i32* %storemerge.reg2mem, !insn.addr !12151
  br i1 %11, label %dec_label_pc_27420, label %dec_label_pc_2742c, !insn.addr !12151

dec_label_pc_27420:                               ; preds = %dec_label_pc_2740c
  %12 = mul i64 %3, 4294967296
  %13 = ashr exact i64 %12, 32, !insn.addr !12152
  %14 = trunc i64 %13 to i32, !insn.addr !12152
  %15 = udiv i64 %13, 4294967296, !insn.addr !12152
  %16 = trunc i64 %15 to i32, !insn.addr !12152
  store i32 %16, i32* inttoptr (i32 12 to i32*), align 4, !insn.addr !12153
  store i32 %14, i32* inttoptr (i32 16 to i32*), align 16, !insn.addr !12153
  store i32 0, i32* %storemerge.reg2mem, !insn.addr !12154
  br label %dec_label_pc_2742c, !insn.addr !12154

dec_label_pc_2742c:                               ; preds = %dec_label_pc_2740c, %dec_label_pc_273fe, %dec_label_pc_273e4, %dec_label_pc_27420
  %storemerge.reload = load i32, i32* %storemerge.reg2mem
  ret i32 %storemerge.reload, !insn.addr !12155

; uselistorder directives
  uselistorder i64 %3, { 1, 0 }
  uselistorder i32* %storemerge.reg2mem, { 0, 4, 1, 2, 3 }
  uselistorder i64 32, { 0, 1, 2, 3, 4, 5, 6, 7, 15, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i64 4294967296, { 19, 0, 20, 21, 1, 22, 23, 2, 24, 25, 3, 26, 4, 5, 27, 28, 29, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 7, 8, 9, 10, 11, 12, 13, 14, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 15, 71, 16, 72, 73, 74, 17, 75, 76, 18 }
  uselistorder i32 (double)* @__isinf, { 1, 0 }
  uselistorder i32 (double)* @__isnan, { 1, 0 }
  uselistorder double (i32)* @__asm_vldr.70, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9 }
  uselistorder label %dec_label_pc_2742c, { 3, 0, 1, 2 }
}

define i32 @json_delete_real(i32 %arg1) local_unnamed_addr {
dec_label_pc_27438:
  %0 = call i32 @jsonp_free(i32 %arg1), !insn.addr !12156
  ret i32 %0, !insn.addr !12157

; uselistorder directives
  uselistorder i32 (i32)* @jsonp_free, { 23, 22, 21, 20, 26, 14, 25, 13, 19, 18, 12, 15, 10, 9, 8, 7, 6, 5, 4, 3, 0, 1, 2, 16, 11, 17, 24 }
}

define i32 @json_real_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27450:
  %0 = alloca double
  %1 = load double, double* %0
  %2 = call double @__asm_vpush(double %1), !insn.addr !12158
  %3 = call i32 @json_real_value(i32 %arg1), !insn.addr !12159
  ret i32 %3, !insn.addr !12159
}

define i32 @function_27464() local_unnamed_addr {
dec_label_pc_27464:
  %0 = alloca i1
  %r0.0.reg2mem = alloca i32, !insn.addr !12160
  %1 = load i1, i1* %0
  %2 = load i1, i1* %0
  %3 = icmp ne i1 %2, true, !insn.addr !12160
  %4 = icmp eq i1 %1, %3, !insn.addr !12160
  br i1 %4, label %5, label %dec_label_pc_27468, !insn.addr !12160

; <label>:5:                                      ; preds = %dec_label_pc_27464
  %6 = call i32 @function_1062f2c(), !insn.addr !12160
  store i32 %6, i32* %r0.0.reg2mem, !insn.addr !12160
  br label %dec_label_pc_27468, !insn.addr !12160

dec_label_pc_27468:                               ; preds = %5, %dec_label_pc_27464
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !12160

; uselistorder directives
  uselistorder i1* %0, { 1, 0 }
}

define i32 @function_2746a() local_unnamed_addr {
dec_label_pc_2746a:
  %0 = alloca i32
  %1 = load i32, i32* %0
  %2 = call i32 @json_real_value(i32 %1), !insn.addr !12161
  ret i32 %2, !insn.addr !12161
}

define i32 @function_2746e() local_unnamed_addr {
dec_label_pc_2746e:
  %0 = alloca i1
  %1 = load i1, i1* %0
  %2 = load i1, i1* %0
  %3 = load i1, i1* %0
  br i1 %1, label %dec_label_pc_27472, label %4, !insn.addr !12162

; <label>:4:                                      ; preds = %dec_label_pc_2746e
  %5 = call i32 @function_1062f36(), !insn.addr !12162
  br label %dec_label_pc_27472, !insn.addr !12162

dec_label_pc_27472:                               ; preds = %dec_label_pc_2746e, %4
  %6 = icmp ne i1 %3, true, !insn.addr !12163
  %7 = icmp eq i1 %2, %6, !insn.addr !12163
  br i1 %7, label %8, label %dec_label_pc_27476, !insn.addr !12163

; <label>:8:                                      ; preds = %dec_label_pc_27472
  %9 = call i32 @function_1222f4a(), !insn.addr !12163
  br label %dec_label_pc_27476, !insn.addr !12163

dec_label_pc_27476:                               ; preds = %8, %dec_label_pc_27472
  %10 = call i32 @unknown_463042(), !insn.addr !12164
  ret i32 %10, !insn.addr !12165

; uselistorder directives
  uselistorder i1* %0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27472, { 1, 0 }
}

define i32 @function_27482(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27482:
  %0 = alloca double
  %1 = load double, double* %0
  %2 = call double @__asm_vpop(double %1), !insn.addr !12166
  ret i32 %arg4, !insn.addr !12167
}

define i32 @json_real_copy(i32 %arg1) local_unnamed_addr {
dec_label_pc_27490:
  %0 = call i32 @json_real_value(i32 %arg1), !insn.addr !12168
  ret i32 %0, !insn.addr !12168
}

define i32 @function_2749e() local_unnamed_addr {
dec_label_pc_2749e:
  %0 = alloca i1
  %r0.1.reg2mem = alloca i32, !insn.addr !12169
  %r0.0.reg2mem = alloca i32, !insn.addr !12169
  %1 = load i1, i1* %0
  %2 = load i1, i1* %0
  br i1 %1, label %dec_label_pc_274a2, label %3, !insn.addr !12169

; <label>:3:                                      ; preds = %dec_label_pc_2749e
  %4 = call i32 @function_1062f66(), !insn.addr !12169
  store i32 %4, i32* %r0.0.reg2mem, !insn.addr !12169
  br label %dec_label_pc_274a2, !insn.addr !12169

dec_label_pc_274a2:                               ; preds = %dec_label_pc_2749e, %3
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  store i32 %r0.0.reload, i32* %r0.1.reg2mem, !insn.addr !12170
  br i1 %2, label %5, label %dec_label_pc_274a6, !insn.addr !12170

; <label>:5:                                      ; preds = %dec_label_pc_274a2
  %6 = call i32 @function_1222f6a(), !insn.addr !12170
  store i32 %6, i32* %r0.1.reg2mem, !insn.addr !12170
  br label %dec_label_pc_274a6, !insn.addr !12170

dec_label_pc_274a6:                               ; preds = %5, %dec_label_pc_274a2
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  ret i32 %r0.1.reload, !insn.addr !12170

; uselistorder directives
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 1 }
  uselistorder i1* %0, { 1, 0 }
  uselistorder label %dec_label_pc_274a2, { 1, 0 }
}

define i32 @function_274a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_274a8:
  %0 = alloca double
  %1 = load double, double* %0
  %2 = call double @__asm_vmax.u16(double %1, double %1), !insn.addr !12171
  ret i32 %arg4, !insn.addr !12172

; uselistorder directives
  uselistorder double %1, { 1, 0 }
}

define i32 @json_number_value(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_274b8:
  %0 = alloca double
  %r3.0.reg2mem = alloca i32, !insn.addr !12173
  %r2.0.reg2mem = alloca i32, !insn.addr !12173
  %r0.0.reg2mem = alloca i32, !insn.addr !12173
  %1 = load double, double* %0
  store i32 %arg1, i32* %r0.0.reg2mem
  store i32 0, i32* %r2.0.reg2mem
  store i32 0, i32* %r3.0.reg2mem
  switch i32 %arg1, label %dec_label_pc_27508 [
    i32 3, label %dec_label_pc_274ce
    i32 4, label %dec_label_pc_274f4
  ]

dec_label_pc_274ce:                               ; preds = %dec_label_pc_274b8
  %2 = call i32 @json_integer_value(i32 3), !insn.addr !12174
  %3 = call i32 @__aeabi_l2d(i32 %2, i32 %arg2), !insn.addr !12175
  store i32 %3, i32* %r0.0.reg2mem, !insn.addr !12176
  store i32 %3, i32* %r2.0.reg2mem, !insn.addr !12176
  store i32 %arg2, i32* %r3.0.reg2mem, !insn.addr !12176
  br label %dec_label_pc_27508, !insn.addr !12176

dec_label_pc_274f4:                               ; preds = %dec_label_pc_274b8
  %4 = call i32 @json_real_value(i32 4), !insn.addr !12177
  %5 = call i32 @__asm_vmov.74(double %1), !insn.addr !12178
  store i32 %4, i32* %r0.0.reg2mem, !insn.addr !12179
  store i32 %5, i32* %r2.0.reg2mem, !insn.addr !12179
  store i32 %5, i32* %r3.0.reg2mem, !insn.addr !12179
  br label %dec_label_pc_27508, !insn.addr !12179

dec_label_pc_27508:                               ; preds = %dec_label_pc_274b8, %dec_label_pc_274f4, %dec_label_pc_274ce
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  %r2.0.reload = load i32, i32* %r2.0.reg2mem
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %6 = call double @__asm_vmov.73(i32 %r2.0.reload, i32 %r3.0.reload), !insn.addr !12180
  ret i32 %r0.0.reload, !insn.addr !12180

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %r2.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @json_real_value, { 2, 1, 3, 0 }
  uselistorder i32 (i32)* @json_integer_value, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_27508, { 1, 2, 0 }
}

define i32 @function_2750c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2750c:
  %0 = alloca i32
  %1 = alloca i1
  %r0.01.reg2mem = alloca i32, !insn.addr !12181
  %2 = load i1, i1* %1
  %3 = load i1, i1* %1
  %4 = load i1, i1* %1
  %5 = load i32, i32* %0
  %6 = load i32, i32* %0
  store i32 %arg1, i32* %r0.01.reg2mem, !insn.addr !12181
  br i1 %3, label %7, label %dec_label_pc_27510, !insn.addr !12181

; <label>:7:                                      ; preds = %dec_label_pc_2750c
  %8 = call i32 @function_1222fd4(), !insn.addr !12181
  %9 = mul i32 %6, 4, !insn.addr !12182
  %10 = add i32 %9, %5, !insn.addr !12182
  %11 = inttoptr i32 %10 to i32*, !insn.addr !12182
  store i32 161048, i32* %11, align 4, !insn.addr !12182
  store i32 %8, i32* %r0.01.reg2mem, !insn.addr !12182
  br label %dec_label_pc_27510, !insn.addr !12182

dec_label_pc_27510:                               ; preds = %dec_label_pc_2750c, %7
  %r0.01.reload = load i32, i32* %r0.01.reg2mem
  %12 = icmp eq i1 %4, %2, !insn.addr !12183
  br i1 %12, label %17, label %13, !insn.addr !12183

; <label>:13:                                     ; preds = %dec_label_pc_27510
  %14 = add i32 %r0.01.reload, 756, !insn.addr !12183
  %15 = inttoptr i32 %14 to i32*, !insn.addr !12183
  %16 = load i32, i32* %15, align 4, !insn.addr !12183
  call void @__asm_stclt(i32 6, i32 4, i32 %16), !insn.addr !12183
  br label %17, !insn.addr !12183

; <label>:17:                                     ; preds = %dec_label_pc_27510, %13
  ret i32 %r0.01.reload, !insn.addr !12183

; uselistorder directives
  uselistorder i32* %r0.01.reg2mem, { 0, 2, 1 }
  uselistorder i1* %1, { 2, 1, 0 }
  uselistorder i32* %0, { 1, 0 }
  uselistorder label %17, { 1, 0 }
  uselistorder label %dec_label_pc_27510, { 1, 0 }
}

define i32 @json_true() local_unnamed_addr {
dec_label_pc_27518:
  ret i32 ptrtoint (i32* @global_var_35a98 to i32), !insn.addr !12184
}

define i32 @json_false() local_unnamed_addr {
dec_label_pc_2752c:
  ret i32 ptrtoint (i32* @global_var_35a90 to i32), !insn.addr !12185
}

define i32 @json_null() local_unnamed_addr {
dec_label_pc_27540:
  ret i32 ptrtoint (i32* @global_var_35a88 to i32), !insn.addr !12186
}

define i32 @json_delete(i32 %arg1) local_unnamed_addr {
dec_label_pc_27554:
  %r0.0.reg2mem = alloca i32, !insn.addr !12187
  store i32 %arg1, i32* %r0.0.reg2mem
  switch i32 %arg1, label %dec_label_pc_275c8 [
    i32 1, label %dec_label_pc_27580
    i32 2, label %dec_label_pc_27596
    i32 3, label %dec_label_pc_275ac
    i32 4, label %dec_label_pc_275c2
  ]

dec_label_pc_27580:                               ; preds = %dec_label_pc_27554
  %0 = call i32 @json_delete_array(i32 1), !insn.addr !12188
  store i32 %0, i32* %r0.0.reg2mem, !insn.addr !12189
  br label %dec_label_pc_275c8, !insn.addr !12189

dec_label_pc_27596:                               ; preds = %dec_label_pc_27554
  %1 = call i32 @json_delete_string(i32 2), !insn.addr !12190
  store i32 %1, i32* %r0.0.reg2mem, !insn.addr !12191
  br label %dec_label_pc_275c8, !insn.addr !12191

dec_label_pc_275ac:                               ; preds = %dec_label_pc_27554
  %2 = call i32 @json_delete_integer(i32 3), !insn.addr !12192
  store i32 %2, i32* %r0.0.reg2mem, !insn.addr !12193
  br label %dec_label_pc_275c8, !insn.addr !12193

dec_label_pc_275c2:                               ; preds = %dec_label_pc_27554
  %3 = call i32 @json_delete_real(i32 4), !insn.addr !12194
  store i32 %3, i32* %r0.0.reg2mem, !insn.addr !12194
  br label %dec_label_pc_275c8, !insn.addr !12194

dec_label_pc_275c8:                               ; preds = %dec_label_pc_27554, %dec_label_pc_275c2, %dec_label_pc_275ac, %dec_label_pc_27596, %dec_label_pc_27580
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !12195

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_275c8, { 1, 2, 3, 4, 0 }
}

define i32 @json_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_275d0:
  %0 = icmp ne i32 %arg1, 0, !insn.addr !12196
  %1 = icmp ne i32 %arg2, 0, !insn.addr !12197
  %or.cond.not = icmp eq i1 %0, %1
  %2 = icmp eq i32 %arg1, %arg2, !insn.addr !12198
  %or.cond12 = icmp eq i1 %2, %or.cond.not
  %r3.0 = zext i1 %or.cond12 to i32
  ret i32 %r3.0, !insn.addr !12199
}

define i32 @json_copy(i32 %arg1) local_unnamed_addr {
dec_label_pc_27694:
  %0 = alloca i32
  %r3.0.reg2mem = alloca i32, !insn.addr !12200
  %1 = load i32, i32* %0
  store i32 0, i32* %r3.0.reg2mem
  switch i32 %arg1, label %dec_label_pc_2774e [
    i32 7, label %dec_label_pc_27748
    i32 1, label %dec_label_pc_276cc
    i32 2, label %dec_label_pc_276e4
    i32 3, label %dec_label_pc_276fc
    i32 4, label %dec_label_pc_27714
    i32 5, label %dec_label_pc_27748
    i32 6, label %dec_label_pc_27748
  ]

dec_label_pc_276cc:                               ; preds = %dec_label_pc_27694
  %2 = call i32 @json_array_copy(i32 1), !insn.addr !12201
  store i32 %2, i32* %r3.0.reg2mem, !insn.addr !12202
  br label %dec_label_pc_2774e, !insn.addr !12202

dec_label_pc_276e4:                               ; preds = %dec_label_pc_27694
  %3 = call i32 @json_string_copy(i32 2), !insn.addr !12203
  store i32 %3, i32* %r3.0.reg2mem, !insn.addr !12204
  br label %dec_label_pc_2774e, !insn.addr !12204

dec_label_pc_276fc:                               ; preds = %dec_label_pc_27694
  %4 = call i32 @json_integer_copy(i32 3, i32 %1), !insn.addr !12205
  store i32 %4, i32* %r3.0.reg2mem, !insn.addr !12206
  br label %dec_label_pc_2774e, !insn.addr !12206

dec_label_pc_27714:                               ; preds = %dec_label_pc_27694
  %5 = call i32 @json_real_copy(i32 4), !insn.addr !12207
  store i32 %5, i32* %r3.0.reg2mem, !insn.addr !12208
  br label %dec_label_pc_2774e, !insn.addr !12208

dec_label_pc_27748:                               ; preds = %dec_label_pc_27694, %dec_label_pc_27694, %dec_label_pc_27694
  store i32 %arg1, i32* %r3.0.reg2mem, !insn.addr !12209
  br label %dec_label_pc_2774e, !insn.addr !12209

dec_label_pc_2774e:                               ; preds = %dec_label_pc_27694, %dec_label_pc_27748, %dec_label_pc_27714, %dec_label_pc_276fc, %dec_label_pc_276e4, %dec_label_pc_276cc
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !12210

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder label %dec_label_pc_2774e, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_27748, { 1, 2, 0 }
}

define i32 @json_deep_copy(i32 %arg1) local_unnamed_addr {
dec_label_pc_27758:
  %0 = alloca i32
  %r3.0.reg2mem = alloca i32, !insn.addr !12211
  %1 = load i32, i32* %0
  store i32 0, i32* %r3.0.reg2mem
  switch i32 %arg1, label %dec_label_pc_27812 [
    i32 7, label %dec_label_pc_2780c
    i32 1, label %dec_label_pc_27790
    i32 2, label %dec_label_pc_277a8
    i32 3, label %dec_label_pc_277c0
    i32 4, label %dec_label_pc_277d8
    i32 5, label %dec_label_pc_2780c
    i32 6, label %dec_label_pc_2780c
  ]

dec_label_pc_27790:                               ; preds = %dec_label_pc_27758
  %2 = call i32 @json_array_deep_copy(i32 1), !insn.addr !12212
  store i32 %2, i32* %r3.0.reg2mem, !insn.addr !12213
  br label %dec_label_pc_27812, !insn.addr !12213

dec_label_pc_277a8:                               ; preds = %dec_label_pc_27758
  %3 = call i32 @json_string_copy(i32 2), !insn.addr !12214
  store i32 %3, i32* %r3.0.reg2mem, !insn.addr !12215
  br label %dec_label_pc_27812, !insn.addr !12215

dec_label_pc_277c0:                               ; preds = %dec_label_pc_27758
  %4 = call i32 @json_integer_copy(i32 3, i32 %1), !insn.addr !12216
  store i32 %4, i32* %r3.0.reg2mem, !insn.addr !12217
  br label %dec_label_pc_27812, !insn.addr !12217

dec_label_pc_277d8:                               ; preds = %dec_label_pc_27758
  %5 = call i32 @json_real_copy(i32 4), !insn.addr !12218
  store i32 %5, i32* %r3.0.reg2mem, !insn.addr !12219
  br label %dec_label_pc_27812, !insn.addr !12219

dec_label_pc_2780c:                               ; preds = %dec_label_pc_27758, %dec_label_pc_27758, %dec_label_pc_27758
  store i32 %arg1, i32* %r3.0.reg2mem, !insn.addr !12220
  br label %dec_label_pc_27812, !insn.addr !12220

dec_label_pc_27812:                               ; preds = %dec_label_pc_27758, %dec_label_pc_2780c, %dec_label_pc_277d8, %dec_label_pc_277c0, %dec_label_pc_277a8, %dec_label_pc_27790
  %r3.0.reload = load i32, i32* %r3.0.reg2mem
  ret i32 %r3.0.reload, !insn.addr !12221

; uselistorder directives
  uselistorder i32* %r3.0.reg2mem, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 5, { 0, 1, 2, 3, 4, 5, 6, 19, 20, 21, 22, 26, 23, 24, 25, 27, 16, 17, 7, 8, 9, 10, 11, 18, 12, 13, 14, 15 }
  uselistorder i32 7, { 6, 7, 9, 24, 25, 26, 10, 21, 22, 23, 27, 28, 1, 0, 8, 14, 2, 3, 29, 15, 16, 17, 30, 11, 18, 19, 4, 5, 20, 12, 13 }
  uselistorder label %dec_label_pc_27812, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_2780c, { 1, 2, 0 }
}

define i32 @jsonp_error_init(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_2781c:
  %r0.0.reg2mem = alloca i32, !insn.addr !12222
  %0 = icmp eq i32 %arg1, 0, !insn.addr !12223
  store i32 0, i32* %r0.0.reg2mem, !insn.addr !12224
  br i1 %0, label %dec_label_pc_27860, label %dec_label_pc_2782c, !insn.addr !12224

dec_label_pc_2782c:                               ; preds = %dec_label_pc_2781c
  %1 = add i32 %arg1, 92, !insn.addr !12225
  %2 = inttoptr i32 %1 to i8*, !insn.addr !12225
  store i8 0, i8* %2, align 1, !insn.addr !12225
  %3 = inttoptr i32 %arg1 to i32*, !insn.addr !12226
  store i32 -1, i32* %3, align 4, !insn.addr !12226
  %4 = add i32 %arg1, 4, !insn.addr !12227
  %5 = inttoptr i32 %4 to i32*, !insn.addr !12227
  store i32 -1, i32* %5, align 4, !insn.addr !12227
  %6 = add i32 %arg1, 8, !insn.addr !12228
  %7 = inttoptr i32 %6 to i32*, !insn.addr !12228
  store i32 0, i32* %7, align 4, !insn.addr !12228
  %8 = icmp eq i8* %arg2, null, !insn.addr !12229
  br i1 %8, label %dec_label_pc_2785a, label %dec_label_pc_27850, !insn.addr !12230

dec_label_pc_27850:                               ; preds = %dec_label_pc_2782c
  %9 = ptrtoint i8* %arg2 to i32, !insn.addr !12231
  %10 = call i32 @jsonp_error_set_source(i32 %arg1, i32 %9), !insn.addr !12232
  store i32 %10, i32* %r0.0.reg2mem, !insn.addr !12233
  br label %dec_label_pc_27860, !insn.addr !12233

dec_label_pc_2785a:                               ; preds = %dec_label_pc_2782c
  %11 = add i32 %arg1, 12, !insn.addr !12234
  %12 = inttoptr i32 %11 to i8*, !insn.addr !12234
  store i8 0, i8* %12, align 1, !insn.addr !12234
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !12234
  br label %dec_label_pc_27860, !insn.addr !12234

dec_label_pc_27860:                               ; preds = %dec_label_pc_2785a, %dec_label_pc_27850, %dec_label_pc_2781c
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !12235

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1, 3 }
  uselistorder i8* null, { 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 55, 1 }
  uselistorder i8* %arg2, { 1, 0 }
}

define i32 @jsonp_error_set_source(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27868:
  %0 = alloca i32
  %r0.0.reg2mem = alloca i32, !insn.addr !12236
  %1 = load i32, i32* %0
  %2 = icmp eq i32 %arg1, 0, !insn.addr !12237
  %3 = icmp eq i32 %arg2, 0, !insn.addr !12238
  %or.cond = or i1 %2, %3
  br i1 %or.cond, label %dec_label_pc_278c8, label %dec_label_pc_2787e, !insn.addr !12239

dec_label_pc_2787e:                               ; preds = %dec_label_pc_27868
  %4 = inttoptr i32 %arg2 to i8*, !insn.addr !12240
  %5 = call i32 @strlen(i8* %4), !insn.addr !12240
  %6 = icmp ult i32 %5, 79, !insn.addr !12241
  %7 = icmp ne i1 %6, true, !insn.addr !12241
  %8 = icmp eq i32 %5, 79, !insn.addr !12241
  %9 = icmp ne i1 %8, true, !insn.addr !12242
  %10 = icmp eq i1 %7, %9, !insn.addr !12242
  %11 = add i32 %arg1, 12
  br i1 %10, label %dec_label_pc_2789a, label %dec_label_pc_2788c, !insn.addr !12242

dec_label_pc_2788c:                               ; preds = %dec_label_pc_2787e
  %12 = inttoptr i32 %11 to i8*, !insn.addr !12243
  %13 = call i8* @strcpy(i8* %12, i8* %4), !insn.addr !12243
  %14 = ptrtoint i8* %13 to i32, !insn.addr !12243
  store i32 %14, i32* %r0.0.reg2mem, !insn.addr !12244
  br label %dec_label_pc_278ca, !insn.addr !12244

dec_label_pc_2789a:                               ; preds = %dec_label_pc_2787e
  %15 = inttoptr i32 %11 to i32*, !insn.addr !12245
  store i32 ptrtoint (i32* @global_var_2e2e2e to i32), i32* %15, align 4, !insn.addr !12245
  %16 = add i32 %arg1, 15, !insn.addr !12246
  %17 = add i32 %arg2, -76, !insn.addr !12247
  %18 = add i32 %17, %5, !insn.addr !12248
  %19 = inttoptr i32 %16 to i8*, !insn.addr !12249
  %20 = inttoptr i32 %18 to i8*, !insn.addr !12249
  %21 = call i8* @strcpy(i8* %19, i8* %20), !insn.addr !12249
  %22 = ptrtoint i8* %21 to i32, !insn.addr !12249
  store i32 %22, i32* %r0.0.reg2mem, !insn.addr !12250
  br label %dec_label_pc_278ca, !insn.addr !12250

dec_label_pc_278c8:                               ; preds = %dec_label_pc_27868
  %23 = call i32 @__asm_nop(i32 %arg1, i32 %arg2, i32 %1, i32 0), !insn.addr !12251
  store i32 %23, i32* %r0.0.reg2mem, !insn.addr !12251
  br label %dec_label_pc_278ca, !insn.addr !12251

dec_label_pc_278ca:                               ; preds = %dec_label_pc_278c8, %dec_label_pc_2789a, %dec_label_pc_2788c
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !12252

; uselistorder directives
  uselistorder i32 %11, { 1, 0 }
  uselistorder i32 %5, { 0, 2, 1 }
  uselistorder i32* %r0.0.reg2mem, { 0, 3, 2, 1 }
  uselistorder i32 15, { 22, 1, 14, 15, 16, 17, 18, 19, 20, 21, 0, 4, 23, 7, 8, 9, 10, 11, 2, 3, 12, 13, 5, 6 }
  uselistorder i8* (i8*, i8*)* @strcpy, { 10, 9, 8, 11, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 79, { 3, 4, 0, 1, 2 }
  uselistorder i32 (i8*)* @strlen, { 2, 4, 3, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
}

define i32 @jsonp_error_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_278d4:
  %stack_var_4 = alloca i32, align 4
  %0 = ptrtoint i32* %stack_var_4 to i32, !insn.addr !12253
  %1 = call i32 @jsonp_error_vset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %0), !insn.addr !12254
  ret i32 %1, !insn.addr !12255
}

define i32 @jsonp_error_vset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_27904:
  %r0.0.reg2mem = alloca i32, !insn.addr !12256
  %0 = icmp eq i32 %arg1, 0, !insn.addr !12257
  br i1 %0, label %dec_label_pc_2794e, label %dec_label_pc_27918, !insn.addr !12258

dec_label_pc_27918:                               ; preds = %dec_label_pc_27904
  %1 = add i32 %arg1, 92, !insn.addr !12259
  %2 = inttoptr i32 %1 to i8*, !insn.addr !12259
  %3 = load i8, i8* %2, align 1, !insn.addr !12259
  %4 = icmp eq i8 %3, 0, !insn.addr !12260
  br i1 %4, label %dec_label_pc_27922, label %dec_label_pc_27952, !insn.addr !12261

dec_label_pc_27922:                               ; preds = %dec_label_pc_27918
  %5 = inttoptr i32 %arg1 to i32*, !insn.addr !12262
  store i32 %arg2, i32* %5, align 4, !insn.addr !12262
  %6 = add i32 %arg1, 4, !insn.addr !12263
  %7 = inttoptr i32 %6 to i32*, !insn.addr !12263
  store i32 %arg3, i32* %7, align 4, !insn.addr !12263
  %8 = add i32 %arg1, 8, !insn.addr !12264
  %9 = inttoptr i32 %8 to i32*, !insn.addr !12264
  store i32 %arg4, i32* %9, align 4, !insn.addr !12264
  %10 = inttoptr i32 %arg5 to i8*, !insn.addr !12265
  %11 = call i32 @vsnprintf(i8* %2, i32 160, i8* %10, i32 %arg6), !insn.addr !12265
  %12 = add i32 %arg1, 251, !insn.addr !12266
  %13 = inttoptr i32 %12 to i8*, !insn.addr !12266
  store i8 0, i8* %13, align 1, !insn.addr !12266
  store i32 %11, i32* %r0.0.reg2mem, !insn.addr !12267
  br label %dec_label_pc_27954, !insn.addr !12267

dec_label_pc_2794e:                               ; preds = %dec_label_pc_27904
  %14 = call i32 @__asm_nop(i32 0, i32 %arg2, i32 %arg3, i32 0), !insn.addr !12268
  store i32 %14, i32* %r0.0.reg2mem, !insn.addr !12269
  br label %dec_label_pc_27954, !insn.addr !12269

dec_label_pc_27952:                               ; preds = %dec_label_pc_27918
  %15 = zext i8 %3 to i32, !insn.addr !12259
  %16 = call i32 @__asm_nop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %15), !insn.addr !12270
  store i32 %16, i32* %r0.0.reg2mem, !insn.addr !12270
  br label %dec_label_pc_27954, !insn.addr !12270

dec_label_pc_27954:                               ; preds = %dec_label_pc_27952, %dec_label_pc_2794e, %dec_label_pc_27922
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !12271

; uselistorder directives
  uselistorder i8 %3, { 1, 0 }
  uselistorder i32* %r0.0.reg2mem, { 0, 1, 3, 2 }
  uselistorder i32 (i8*, i32, i8*, i32)* @vsnprintf, { 1, 0 }
  uselistorder i32 4, { 151, 152, 83, 90, 84, 91, 85, 92, 114, 3, 86, 93, 95, 96, 105, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 169, 155, 117, 173, 94, 0, 106, 174, 175, 176, 177, 178, 179, 180, 118, 119, 184, 97, 182, 185, 183, 181, 122, 120, 121, 123, 124, 168, 163, 164, 154, 171, 172, 156, 157, 158, 153, 125, 126, 127, 166, 167, 19, 161, 165, 128, 159, 160, 170, 162, 186, 129, 130, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 133, 134, 135, 132, 131, 136, 197, 198, 199, 209, 210, 205, 206, 207, 208, 200, 87, 201, 202, 203, 204, 219, 220, 221, 222, 223, 217, 218, 224, 211, 212, 213, 214, 215, 216, 225, 107, 99, 98, 226, 227, 228, 229, 230, 108, 20, 21, 109, 22, 23, 137, 24, 25, 80, 78, 81, 26, 27, 79, 82, 233, 234, 231, 232, 235, 236, 100, 237, 110, 111, 138, 28, 29, 30, 101, 31, 238, 102, 32, 150, 139, 140, 33, 34, 35, 36, 37, 38, 103, 39, 239, 240, 40, 141, 41, 142, 42, 43, 44, 112, 104, 45, 241, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 242, 61, 62, 63, 64, 143, 65, 66, 144, 67, 145, 146, 147, 148, 243, 68, 246, 149, 69, 70, 71, 72, 73, 1, 244, 245, 247, 2, 248, 249, 74, 75, 250, 88, 251, 252, 253, 254, 255, 76, 77, 256, 89, 257, 258, 259, 260, 261, 115, 116, 113 }
  uselistorder i8 0, { 91, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 79, 104, 105, 103, 106, 107, 108, 80, 109, 110, 60, 2, 1, 0, 111, 3, 4, 62, 112, 5, 6, 7, 8, 63, 113, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 64, 114, 19, 20, 21, 22, 65, 115, 23, 24, 25, 26, 66, 116, 27, 28, 67, 117, 29, 30, 68, 118, 31, 32, 69, 119, 33, 34, 70, 120, 35, 36, 37, 38, 39, 40, 71, 121, 41, 42, 43, 44, 72, 122, 45, 46, 123, 47, 124, 125, 127, 128, 129, 85, 86, 87, 126, 48, 49, 50, 84, 130, 131, 132, 133, 134, 135, 51, 138, 136, 137, 139, 82, 143, 140, 141, 83, 142, 81, 73, 52, 144, 145, 53, 54, 74, 147, 148, 149, 150, 151, 152, 153, 154, 146, 155, 156, 157, 158, 159, 160, 75, 76, 78, 55, 56, 57, 77, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 58, 59, 172, 88, 173, 174, 175, 176, 177, 178, 179, 182, 180, 181, 89, 61, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201 }
  uselistorder i32 92, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @__aeabi_uidiv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27960:
  %merge.reg2mem = alloca i32, !insn.addr !12272
  store i32 undef, i32* %merge.reg2mem
  switch i32 %arg2, label %dec_label_pc_2796a [
    i32 1, label %.thread
    i32 0, label %dec_label_pc_27bb2
  ]

.thread:                                          ; preds = %dec_label_pc_27960
  %0 = call i32 @__asm_it(), !insn.addr !12273
  store i32 %0, i32* %merge.reg2mem
  br label %dec_label_pc_27bb2

dec_label_pc_27bb2:                               ; preds = %dec_label_pc_27960, %.thread, %12
  %merge.reload = load i32, i32* %merge.reg2mem
  ret i32 %merge.reload, !insn.addr !12274

dec_label_pc_2796a:                               ; preds = %dec_label_pc_27960
  %1 = icmp ult i32 %arg1, %arg2, !insn.addr !12275
  %2 = icmp ne i1 %1, true, !insn.addr !12275
  %3 = icmp eq i32 %arg1, %arg2, !insn.addr !12275
  %4 = icmp ne i1 %2, true, !insn.addr !12276
  %5 = or i1 %3, %4, !insn.addr !12276
  br i1 %5, label %dec_label_pc_27b9c, label %dec_label_pc_27970, !insn.addr !12276

dec_label_pc_27970:                               ; preds = %dec_label_pc_2796a
  %6 = add i32 %arg2, -1, !insn.addr !12272
  %7 = and i32 %6, %arg2, !insn.addr !12277
  %8 = icmp eq i32 %7, 0, !insn.addr !12277
  br i1 %8, label %dec_label_pc_27ba4, label %dec_label_pc_27976, !insn.addr !12278

dec_label_pc_27976:                               ; preds = %dec_label_pc_27970
  %9 = call i32 @__asm_adr(i32 16), !insn.addr !12279
  ret i32 %arg1, !insn.addr !12280

dec_label_pc_27b9c:                               ; preds = %dec_label_pc_2796a
  br i1 %3, label %10, label %12, !insn.addr !12281

; <label>:10:                                     ; preds = %dec_label_pc_27b9c
  %11 = call i32 @__asm_ite(), !insn.addr !12281
  br label %12, !insn.addr !12281

; <label>:12:                                     ; preds = %dec_label_pc_27b9c, %10
  %r0.3 = zext i1 %3 to i32
  store i32 %r0.3, i32* %merge.reg2mem
  br label %dec_label_pc_27bb2

dec_label_pc_27ba4:                               ; preds = %dec_label_pc_27970
  %13 = call i32 @llvm.ctlz.i32(i32 %arg2, i1 true), !range !12282, !insn.addr !12283
  %14 = xor i32 %13, 31, !insn.addr !12284
  %15 = lshr i32 %arg1, %14, !insn.addr !12285
  ret i32 %15, !insn.addr !12286

; uselistorder directives
  uselistorder i32* %merge.reg2mem, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 5, 4, 3, 1 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %12, { 1, 0 }
  uselistorder label %dec_label_pc_27bb2, { 2, 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27bbc:
  %0 = udiv i32 %arg1, %arg2, !insn.addr !12287
  ret i32 %0, !insn.addr !12288
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27bd8:
  %r0.9.reg2mem = alloca i32, !insn.addr !12289
  %r0.6.reg2mem = alloca i32, !insn.addr !12289
  %r0.4.reg2mem = alloca i32, !insn.addr !12289
  %r0.3.reg2mem = alloca i32, !insn.addr !12289
  %r0.2.reg2mem = alloca i32, !insn.addr !12289
  %r0.1.reg2mem = alloca i32, !insn.addr !12289
  %r0.0.reg2mem = alloca i32, !insn.addr !12289
  %0 = icmp eq i32 %arg2, 0, !insn.addr !12289
  br i1 %0, label %dec_label_pc_27e5a, label %dec_label_pc_27bde, !insn.addr !12290

dec_label_pc_27bde:                               ; preds = %dec_label_pc_27bd8
  %1 = icmp slt i32 %arg2, 0, !insn.addr !12289
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !12291
  br i1 %1, label %2, label %4, !insn.addr !12291

; <label>:2:                                      ; preds = %dec_label_pc_27bde
  %3 = call i32 @__asm_it(), !insn.addr !12291
  store i32 %3, i32* %r0.0.reg2mem, !insn.addr !12291
  br label %4, !insn.addr !12291

; <label>:4:                                      ; preds = %dec_label_pc_27bde, %2
  %5 = xor i32 %arg2, %arg1, !insn.addr !12292
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  %6 = sub i32 0, %arg2
  %spec.select = select i1 %1, i32 %6, i32 %arg2
  %7 = icmp eq i32 %spec.select, 1, !insn.addr !12293
  br i1 %7, label %dec_label_pc_27e2a, label %dec_label_pc_27bec, !insn.addr !12294

dec_label_pc_27bec:                               ; preds = %4
  %8 = icmp slt i32 %r0.0.reload, 0, !insn.addr !12295
  store i32 %r0.0.reload, i32* %r0.1.reg2mem, !insn.addr !12296
  br i1 %8, label %9, label %11, !insn.addr !12296

; <label>:9:                                      ; preds = %dec_label_pc_27bec
  %10 = call i32 @__asm_it(), !insn.addr !12296
  store i32 %10, i32* %r0.1.reg2mem, !insn.addr !12296
  br label %11, !insn.addr !12296

; <label>:11:                                     ; preds = %dec_label_pc_27bec, %9
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %12 = sub i32 0, %r0.1.reload
  %spec.select1 = select i1 %8, i32 %12, i32 %r0.0.reload
  %13 = icmp ult i32 %spec.select1, %spec.select, !insn.addr !12297
  %14 = icmp ne i1 %13, true, !insn.addr !12297
  %15 = icmp eq i32 %spec.select1, %spec.select, !insn.addr !12297
  %16 = icmp ne i1 %14, true, !insn.addr !12298
  %17 = or i1 %15, %16, !insn.addr !12298
  br i1 %17, label %dec_label_pc_27e34, label %dec_label_pc_27bf8, !insn.addr !12298

dec_label_pc_27bf8:                               ; preds = %11
  %18 = add i32 %spec.select, -1, !insn.addr !12293
  %19 = and i32 %18, %spec.select, !insn.addr !12299
  %20 = icmp eq i32 %19, 0, !insn.addr !12299
  br i1 %20, label %dec_label_pc_27e44, label %dec_label_pc_27bfe, !insn.addr !12300

dec_label_pc_27bfe:                               ; preds = %dec_label_pc_27bf8
  %21 = call i32 @__asm_adr(i32 16), !insn.addr !12301
  ret i32 0, !insn.addr !12302

dec_label_pc_27e2a:                               ; preds = %4
  %22 = xor i32 %r0.0.reload, %5, !insn.addr !12303
  %23 = icmp slt i32 %22, 0, !insn.addr !12303
  store i32 %r0.0.reload, i32* %r0.2.reg2mem, !insn.addr !12304
  br i1 %23, label %24, label %26, !insn.addr !12304

; <label>:24:                                     ; preds = %dec_label_pc_27e2a
  %25 = call i32 @__asm_it(), !insn.addr !12304
  store i32 %25, i32* %r0.2.reg2mem, !insn.addr !12304
  br label %26, !insn.addr !12304

; <label>:26:                                     ; preds = %dec_label_pc_27e2a, %24
  %r0.2.reload = load i32, i32* %r0.2.reg2mem
  %27 = sub i32 0, %r0.2.reload
  %spec.select2 = select i1 %23, i32 %27, i32 %r0.2.reload
  ret i32 %spec.select2

; <label>:28:                                     ; preds = %51, %48, %34, %43
  %r0.3.reload = load i32, i32* %r0.3.reg2mem
  ret i32 %r0.3.reload, !insn.addr !12305

dec_label_pc_27e34:                               ; preds = %11
  store i32 %r0.1.reload, i32* %r0.4.reg2mem, !insn.addr !12306
  br i1 %14, label %31, label %29, !insn.addr !12306

; <label>:29:                                     ; preds = %dec_label_pc_27e34
  %30 = call i32 @__asm_it(), !insn.addr !12306
  store i32 %30, i32* %r0.4.reg2mem, !insn.addr !12306
  br label %31, !insn.addr !12306

; <label>:31:                                     ; preds = %dec_label_pc_27e34, %29
  %r0.4.reload = load i32, i32* %r0.4.reg2mem
  %spec.select3 = select i1 %14, i32 %r0.4.reload, i32 0
  store i32 %spec.select3, i32* %r0.6.reg2mem, !insn.addr !12307
  br i1 %15, label %32, label %34, !insn.addr !12307

; <label>:32:                                     ; preds = %31
  %33 = call i32 @__asm_itt(), !insn.addr !12307
  store i32 %33, i32* %r0.6.reg2mem, !insn.addr !12307
  br label %34, !insn.addr !12307

; <label>:34:                                     ; preds = %31, %32
  %r0.6.reload = load i32, i32* %r0.6.reg2mem
  %35 = ashr i32 %5, 31
  %36 = or i32 %35, 1
  %r0.8 = select i1 %15, i32 %36, i32 %r0.6.reload
  store i32 %r0.8, i32* %r0.3.reg2mem
  br label %28

dec_label_pc_27e44:                               ; preds = %dec_label_pc_27bf8
  %37 = call i32 @llvm.ctlz.i32(i32 %spec.select, i1 true), !range !12282, !insn.addr !12308
  %38 = xor i32 %37, 31, !insn.addr !12309
  %39 = icmp slt i32 %5, 0, !insn.addr !12310
  %40 = lshr i32 %spec.select1, %38, !insn.addr !12311
  store i32 %40, i32* %r0.9.reg2mem, !insn.addr !12312
  br i1 %39, label %41, label %43, !insn.addr !12312

; <label>:41:                                     ; preds = %dec_label_pc_27e44
  %42 = call i32 @__asm_it(), !insn.addr !12312
  store i32 %42, i32* %r0.9.reg2mem, !insn.addr !12312
  br label %43, !insn.addr !12312

; <label>:43:                                     ; preds = %dec_label_pc_27e44, %41
  %r0.9.reload = load i32, i32* %r0.9.reg2mem
  %44 = sub i32 0, %r0.9.reload
  %spec.select5 = select i1 %39, i32 %44, i32 %r0.9.reload
  store i32 %spec.select5, i32* %r0.3.reg2mem
  br label %28

dec_label_pc_27e5a:                               ; preds = %dec_label_pc_27bd8
  %45 = icmp sgt i32 %arg1, 0, !insn.addr !12313
  br i1 %45, label %46, label %48, !insn.addr !12313

; <label>:46:                                     ; preds = %dec_label_pc_27e5a
  %47 = call i32 @__asm_it(), !insn.addr !12313
  br label %48, !insn.addr !12313

; <label>:48:                                     ; preds = %dec_label_pc_27e5a, %46
  %49 = icmp slt i32 %arg1, 0, !insn.addr !12314
  %50 = icmp eq i1 %49, false, !insn.addr !12315
  store i32 undef, i32* %r0.3.reg2mem, !insn.addr !12315
  br i1 %50, label %28, label %51, !insn.addr !12315

; <label>:51:                                     ; preds = %48
  %52 = call i32 @__asm_it(), !insn.addr !12315
  store i32 undef, i32* %r0.3.reg2mem, !insn.addr !12315
  br label %28, !insn.addr !12315

; uselistorder directives
  uselistorder i32 %r0.9.reload, { 1, 0 }
  uselistorder i32 %r0.2.reload, { 1, 0 }
  uselistorder i32 %spec.select1, { 2, 0, 1 }
  uselistorder i32 %spec.select, { 5, 0, 1, 3, 4, 2 }
  uselistorder i32 %r0.0.reload, { 0, 4, 3, 1, 2 }
  uselistorder i32 %5, { 1, 2, 0 }
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.3.reg2mem, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r0.6.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.9.reg2mem, { 0, 2, 1 }
  uselistorder i32 (i32)* @__asm_adr, { 9, 10, 11, 14, 15, 12, 13, 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 18, 19 }
  uselistorder i32 16, { 102, 103, 19, 32, 33, 106, 94, 104, 107, 34, 3, 110, 111, 112, 113, 26, 109, 108, 105, 22, 20, 116, 114, 115, 117, 118, 119, 120, 121, 122, 0, 27, 4, 28, 5, 29, 6, 30, 7, 25, 8, 123, 124, 13, 14, 15, 16, 9, 21, 125, 35, 36, 37, 95, 96, 97, 38, 10, 98, 18, 39, 40, 41, 31, 99, 101, 42, 24, 23, 11, 43, 12, 17, 44, 45, 46, 47, 48, 49, 50, 51, 52, 100, 88, 89, 53, 54, 55, 56, 126, 127, 1, 128, 129, 130, 57, 131, 132, 2, 133, 134, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 135, 136, 90, 91, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 137, 138, 92, 93 }
  uselistorder i32 %arg2, { 1, 2, 0, 4, 3 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %48, { 1, 0 }
  uselistorder label %43, { 1, 0 }
  uselistorder label %34, { 1, 0 }
  uselistorder label %31, { 1, 0 }
  uselistorder label %28, { 0, 1, 3, 2 }
  uselistorder label %26, { 1, 0 }
  uselistorder label %11, { 1, 0 }
  uselistorder label %4, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27e6c:
  ret i32 %arg1, !insn.addr !12316
}

define i32 @__aeabi_drsub(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27e88:
  %0 = sext i32 %arg1 to i64, !insn.addr !12317
  %1 = bitcast i64 %0 to double, !insn.addr !12317
  %2 = sext i32 %arg3 to i64, !insn.addr !12317
  %3 = bitcast i64 %2 to double, !insn.addr !12317
  %4 = fadd double %1, %3, !insn.addr !12317
  %5 = fptrunc double %4 to float, !insn.addr !12317
  %6 = bitcast float %5 to i32, !insn.addr !12317
  ret i32 %6, !insn.addr !12317
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27e90:
  ret i32 %arg1, !insn.addr !12318
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27e94:
  %r0.30.reg2mem = alloca i32, !insn.addr !12319
  %spec.select1662.reg2mem = alloca i32, !insn.addr !12319
  %spec.select1661.reg2mem = alloca i32, !insn.addr !12319
  %r0.22.reg2mem = alloca i32, !insn.addr !12319
  %r0.2156.reg2mem = alloca i32, !insn.addr !12319
  %r0.19.reg2mem = alloca i32, !insn.addr !12319
  %r1.6.reg2mem = alloca i32, !insn.addr !12319
  %r0.17.reg2mem = alloca i32, !insn.addr !12319
  %r0.16.reg2mem = alloca i32, !insn.addr !12319
  %.reg2mem63 = alloca i32, !insn.addr !12319
  %cpsr_v.0.in.reg2mem = alloca i32, !insn.addr !12319
  %cpsr_z.5.reg2mem = alloca i1, !insn.addr !12319
  %cpsr_n.0.reg2mem = alloca i1, !insn.addr !12319
  %r2.2.reg2mem = alloca i32, !insn.addr !12319
  %r0.14.reg2mem = alloca i32, !insn.addr !12319
  %spec.select528.reg2mem = alloca i32, !insn.addr !12319
  %.reg2mem = alloca i32, !insn.addr !12319
  %r0.11.reg2mem = alloca i32, !insn.addr !12319
  %ip.3.reg2mem = alloca i32, !insn.addr !12319
  %r0.10.reg2mem = alloca i32, !insn.addr !12319
  %ip.2.reg2mem = alloca i32, !insn.addr !12319
  %r1.3.reg2mem = alloca i32, !insn.addr !12319
  %r0.9.reg2mem = alloca i32, !insn.addr !12319
  %storemerge1.in.reg2mem = alloca i32, !insn.addr !12319
  %ip.1.reg2mem = alloca i32, !insn.addr !12319
  %r0.8.reg2mem = alloca i32, !insn.addr !12319
  %r0.7.reg2mem = alloca i32, !insn.addr !12319
  %r5.1.reg2mem = alloca i32, !insn.addr !12319
  %r4.1.reg2mem = alloca i32, !insn.addr !12319
  %r3.2.reg2mem = alloca i32, !insn.addr !12319
  %r1.2.reg2mem = alloca i32, !insn.addr !12319
  %r0.6.reg2mem = alloca i32, !insn.addr !12319
  %r3.1.reg2mem = alloca i32, !insn.addr !12319
  %r2.1.reg2mem = alloca i32, !insn.addr !12319
  %r1.1.reg2mem = alloca i32, !insn.addr !12319
  %r0.5.reg2mem = alloca i32, !insn.addr !12319
  %merge.reg2mem = alloca i32, !insn.addr !12319
  %r0.2.reg2mem = alloca i32, !insn.addr !12319
  %r0.1.reg2mem = alloca i32, !insn.addr !12319
  %spec.select50.reg2mem = alloca i1, !insn.addr !12319
  %0 = mul i32 %arg2, 2
  %1 = mul i32 %arg4, 2, !insn.addr !12320
  %2 = icmp eq i32 %0, %1, !insn.addr !12321
  br i1 %2, label %3, label %.thread47, !insn.addr !12322

; <label>:3:                                      ; preds = %dec_label_pc_27e94
  %4 = call i32 @__asm_it(), !insn.addr !12322
  %5 = icmp eq i32 %4, %arg3
  store i1 true, i1* %spec.select50.reg2mem, !insn.addr !12323
  store i32 %arg3, i32* %r0.1.reg2mem, !insn.addr !12323
  br i1 %5, label %7, label %.thread47, !insn.addr !12323

.thread47:                                        ; preds = %dec_label_pc_27e94, %3
  %6 = call i32 @__asm_itttt(), !insn.addr !12323
  store i1 false, i1* %spec.select50.reg2mem, !insn.addr !12323
  store i32 %6, i32* %r0.1.reg2mem, !insn.addr !12323
  br label %7, !insn.addr !12323

; <label>:7:                                      ; preds = %3, %.thread47
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %spec.select50.reload = load i1, i1* %spec.select50.reg2mem
  %8 = or i32 %r0.1.reload, %0
  %9 = icmp eq i32 %8, 0
  %cpsr_z.1 = or i1 %spec.select50.reload, %9
  %10 = or i32 %1, %arg3
  %11 = icmp eq i32 %10, 0
  %cpsr_z.2 = or i1 %11, %cpsr_z.1
  %12 = icmp ugt i32 %0, -2097153
  %spec.select2 = or i1 %12, %cpsr_z.2
  %13 = icmp ugt i32 %1, -2097153
  %cpsr_z.4 = or i1 %13, %spec.select2
  br i1 %cpsr_z.4, label %dec_label_pc_28082, label %dec_label_pc_27ebe, !insn.addr !12324

dec_label_pc_27ebe:                               ; preds = %7
  %14 = udiv i32 %arg2, 1048576
  %15 = urem i32 %14, 2048, !insn.addr !12325
  %16 = udiv i32 %arg4, 1048576
  %17 = urem i32 %16, 2048, !insn.addr !12326
  %18 = icmp ult i32 %17, %15, !insn.addr !12327
  store i32 %r0.1.reload, i32* %r0.2.reg2mem, !insn.addr !12327
  br i1 %18, label %19, label %dec_label_pc_27ee6, !insn.addr !12327

; <label>:19:                                     ; preds = %dec_label_pc_27ebe
  %20 = call i32 @__asm_it(), !insn.addr !12327
  store i32 %20, i32* %r0.2.reg2mem, !insn.addr !12327
  br label %dec_label_pc_27ee6, !insn.addr !12327

dec_label_pc_27ee6:                               ; preds = %dec_label_pc_27ebe, %19
  %21 = sub nsw i32 %17, %15, !insn.addr !12326
  %22 = sub nsw i32 0, %21
  %spec.select3 = select i1 %18, i32 %22, i32 %21
  %23 = icmp ult i32 %spec.select3, 54, !insn.addr !12328
  %24 = icmp ne i1 %23, true, !insn.addr !12328
  %25 = icmp eq i32 %spec.select3, 54, !insn.addr !12328
  %26 = icmp ne i1 %25, true, !insn.addr !12329
  %27 = icmp eq i1 %24, %26, !insn.addr !12329
  br i1 %27, label %.thread, label %dec_label_pc_27eec, !insn.addr !12329

.thread:                                          ; preds = %dec_label_pc_27ee6
  %28 = call i32 @__asm_it(), !insn.addr !12329
  store i32 %28, i32* %merge.reg2mem
  br label %dec_label_pc_280d4

dec_label_pc_280d4:                               ; preds = %dec_label_pc_280c4, %250, %dec_label_pc_27f86, %244, %230, %193, %.thread, %254, %240, %dec_label_pc_280b8, %228
  %merge.reload = load i32, i32* %merge.reg2mem
  ret i32 %merge.reload, !insn.addr !12330

dec_label_pc_27eec:                               ; preds = %dec_label_pc_27ee6
  %r0.2.reload = load i32, i32* %r0.2.reg2mem
  %29 = icmp ugt i32 %17, %15, !insn.addr !12331
  %spec.select19 = select i1 %29, i32 %arg3, i32 %r0.2.reload
  %spec.select20 = select i1 %29, i32 %arg4, i32 %arg2
  %30 = icmp sgt i32 %spec.select20, -1, !insn.addr !12332
  %31 = urem i32 %spec.select20, 1048576, !insn.addr !12333
  %32 = or i32 %31, ptrtoint (i1* @global_var_100000 to i32), !insn.addr !12334
  store i32 %spec.select19, i32* %r0.5.reg2mem, !insn.addr !12335
  store i32 %32, i32* %r1.1.reg2mem, !insn.addr !12335
  br i1 %30, label %dec_label_pc_27f04, label %dec_label_pc_27efe, !insn.addr !12335

dec_label_pc_27efe:                               ; preds = %dec_label_pc_27eec
  %33 = sub i32 0, %spec.select19, !insn.addr !12336
  %34 = icmp slt i32 %32, 0, !insn.addr !12337
  %35 = icmp eq i1 %34, false, !insn.addr !12337
  %36 = mul i32 %32, -1, !insn.addr !12337
  %37 = zext i1 %35 to i32, !insn.addr !12337
  %38 = sub i32 %36, %37, !insn.addr !12337
  store i32 %33, i32* %r0.5.reg2mem, !insn.addr !12337
  store i32 %38, i32* %r1.1.reg2mem, !insn.addr !12337
  br label %dec_label_pc_27f04, !insn.addr !12337

dec_label_pc_27f04:                               ; preds = %dec_label_pc_27efe, %dec_label_pc_27eec
  %spec.select21 = select i1 %29, i32 %r0.2.reload, i32 %arg3
  %spec.select22 = select i1 %29, i32 %arg2, i32 %arg4
  %r1.1.reload = load i32, i32* %r1.1.reg2mem
  %r0.5.reload = load i32, i32* %r0.5.reg2mem
  %39 = icmp sgt i32 %spec.select22, -1, !insn.addr !12338
  %40 = urem i32 %spec.select22, 1048576, !insn.addr !12339
  %41 = or i32 %40, ptrtoint (i1* @global_var_100000 to i32), !insn.addr !12340
  store i32 %spec.select21, i32* %r2.1.reg2mem, !insn.addr !12341
  store i32 %41, i32* %r3.1.reg2mem, !insn.addr !12341
  br i1 %39, label %dec_label_pc_27f18, label %dec_label_pc_27f12, !insn.addr !12341

dec_label_pc_27f12:                               ; preds = %dec_label_pc_27f04
  %42 = sub i32 0, %spec.select21, !insn.addr !12342
  %43 = icmp slt i32 %41, 0, !insn.addr !12343
  %44 = icmp eq i1 %43, false, !insn.addr !12343
  %45 = mul i32 %41, -1, !insn.addr !12343
  %46 = zext i1 %44 to i32, !insn.addr !12343
  %47 = sub i32 %45, %46, !insn.addr !12343
  store i32 %42, i32* %r2.1.reg2mem, !insn.addr !12343
  store i32 %47, i32* %r3.1.reg2mem, !insn.addr !12343
  br label %dec_label_pc_27f18, !insn.addr !12343

dec_label_pc_27f18:                               ; preds = %dec_label_pc_27f12, %dec_label_pc_27f04
  %48 = select i1 %29, i32 %spec.select3, i32 0
  %spec.select23 = add nsw i32 %48, %15
  %r3.1.reload = load i32, i32* %r3.1.reg2mem
  %r2.1.reload = load i32, i32* %r2.1.reg2mem
  %49 = icmp eq i32 %spec.select23, %spec.select3, !insn.addr !12344
  store i32 %r0.5.reload, i32* %r0.6.reg2mem, !insn.addr !12345
  store i32 %r1.1.reload, i32* %r1.2.reg2mem, !insn.addr !12345
  store i32 %r3.1.reload, i32* %r3.2.reg2mem, !insn.addr !12345
  store i32 %spec.select23, i32* %r4.1.reg2mem, !insn.addr !12345
  store i32 %spec.select3, i32* %r5.1.reg2mem, !insn.addr !12345
  br i1 %49, label %dec_label_pc_2806e, label %dec_label_pc_27f20, !insn.addr !12345

dec_label_pc_27f20:                               ; preds = %214, %dec_label_pc_27f18
  %r5.1.reload = load i32, i32* %r5.1.reg2mem
  %r4.1.reload = load i32, i32* %r4.1.reg2mem
  %r3.2.reload = load i32, i32* %r3.2.reg2mem
  %r1.2.reload = load i32, i32* %r1.2.reg2mem
  %r0.6.reload = load i32, i32* %r0.6.reg2mem
  %50 = sub nsw i32 32, %r5.1.reload, !insn.addr !12346
  %51 = icmp sgt i32 %r5.1.reload, 32, !insn.addr !12347
  br i1 %51, label %dec_label_pc_27f46, label %dec_label_pc_27f2a, !insn.addr !12347

dec_label_pc_27f2a:                               ; preds = %dec_label_pc_27f20
  %52 = shl i32 %r2.1.reload, %50, !insn.addr !12348
  %53 = lshr i32 %r2.1.reload, %r5.1.reload, !insn.addr !12349
  %54 = add i32 %53, %r0.6.reload, !insn.addr !12350
  %55 = icmp ult i32 %54, %r0.6.reload, !insn.addr !12350
  %56 = zext i1 %55 to i32, !insn.addr !12351
  %57 = shl i32 %r3.2.reload, %50, !insn.addr !12352
  %58 = add i32 %54, %57, !insn.addr !12353
  %59 = add nsw i32 %r5.1.reload, -1, !insn.addr !12354
  %60 = shl i32 1, %59, !insn.addr !12354
  %61 = and i32 %60, %r3.2.reload, !insn.addr !12354
  %62 = icmp ne i32 %61, 0, !insn.addr !12354
  %63 = ashr i32 %r3.2.reload, %r5.1.reload, !insn.addr !12354
  %64 = zext i1 %62 to i32, !insn.addr !12355
  %65 = add i32 %63, %r1.2.reload, !insn.addr !12351
  %66 = add i32 %65, %56, !insn.addr !12355
  %67 = add i32 %66, %64, !insn.addr !12355
  store i32 %58, i32* %r0.8.reg2mem, !insn.addr !12356
  store i32 %52, i32* %ip.1.reg2mem, !insn.addr !12356
  store i32 %67, i32* %storemerge1.in.reg2mem, !insn.addr !12356
  br label %dec_label_pc_27f64, !insn.addr !12356

dec_label_pc_27f46:                               ; preds = %dec_label_pc_27f20
  %68 = add i32 %50, 31, !insn.addr !12357
  %69 = lshr i32 -2147483648, %68
  %70 = and i32 %69, %r3.2.reload
  %71 = icmp ne i32 %70, 0, !insn.addr !12357
  store i32 %r0.6.reload, i32* %r0.7.reg2mem, !insn.addr !12358
  br i1 %71, label %72, label %74, !insn.addr !12358

; <label>:72:                                     ; preds = %dec_label_pc_27f46
  %73 = call i32 @__asm_it(), !insn.addr !12358
  store i32 %73, i32* %r0.7.reg2mem, !insn.addr !12358
  br label %74, !insn.addr !12358

; <label>:74:                                     ; preds = %dec_label_pc_27f46, %72
  %75 = add nsw i32 %r5.1.reload, -32, !insn.addr !12359
  %76 = add i32 %50, 32, !insn.addr !12360
  %77 = shl i32 %r3.2.reload, %76, !insn.addr !12357
  %r0.7.reload = load i32, i32* %r0.7.reg2mem
  %78 = or i32 %77, 2
  %spec.select4 = select i1 %71, i32 %78, i32 %77
  %79 = ashr i32 %r3.2.reload, %75, !insn.addr !12361
  %80 = add i32 %r0.7.reload, %79, !insn.addr !12362
  %81 = and i32 %79, 1073741824, !insn.addr !12363
  %82 = icmp ne i32 %81, 0, !insn.addr !12363
  %83 = ashr i32 %79, 31, !insn.addr !12363
  %84 = add i32 %83, %r1.2.reload, !insn.addr !12363
  %85 = zext i1 %82 to i32, !insn.addr !12363
  %86 = add i32 %84, %85, !insn.addr !12363
  store i32 %80, i32* %r0.8.reg2mem, !insn.addr !12363
  store i32 %spec.select4, i32* %ip.1.reg2mem, !insn.addr !12363
  store i32 %86, i32* %storemerge1.in.reg2mem, !insn.addr !12363
  br label %dec_label_pc_27f64, !insn.addr !12363

dec_label_pc_27f64:                               ; preds = %74, %dec_label_pc_27f2a
  %storemerge1.in.reload = load i32, i32* %storemerge1.in.reg2mem
  %ip.1.reload = load i32, i32* %ip.1.reg2mem
  %r0.8.reload = load i32, i32* %r0.8.reg2mem
  %storemerge1 = icmp slt i32 %storemerge1.in.reload, 0
  store i32 %r0.8.reload, i32* %r0.9.reg2mem, !insn.addr !12364
  store i32 %storemerge1.in.reload, i32* %r1.3.reg2mem, !insn.addr !12364
  store i32 %ip.1.reload, i32* %ip.2.reg2mem, !insn.addr !12364
  br i1 %storemerge1, label %dec_label_pc_27f6a, label %dec_label_pc_27f7a, !insn.addr !12364

dec_label_pc_27f6a:                               ; preds = %dec_label_pc_27f64
  %87 = sub i32 0, %ip.1.reload, !insn.addr !12365
  %88 = icmp ne i32 %ip.1.reload, 0, !insn.addr !12365
  %89 = icmp ne i1 %88, true, !insn.addr !12365
  %90 = icmp eq i1 %89, false, !insn.addr !12366
  %91 = zext i1 %90 to i32, !insn.addr !12366
  %.neg = sext i1 %90 to i32
  %92 = sub i32 %.neg, %r0.8.reload, !insn.addr !12366
  %93 = icmp ne i32 %92, %91, !insn.addr !12366
  %94 = icmp ne i32 %r0.8.reload, -1, !insn.addr !12366
  %95 = or i1 %94, %93, !insn.addr !12366
  %96 = icmp ne i32 %r0.8.reload, 0, !insn.addr !12366
  %97 = select i1 %90, i1 %95, i1 %96, !insn.addr !12366
  %98 = icmp ne i1 %97, true, !insn.addr !12366
  %99 = icmp eq i1 %98, false, !insn.addr !12367
  %.neg46 = sext i1 %99 to i32
  %100 = sub i32 %.neg46, %storemerge1.in.reload, !insn.addr !12367
  store i32 %92, i32* %r0.9.reg2mem, !insn.addr !12367
  store i32 %100, i32* %r1.3.reg2mem, !insn.addr !12367
  store i32 %87, i32* %ip.2.reg2mem, !insn.addr !12367
  br label %dec_label_pc_27f7a, !insn.addr !12367

dec_label_pc_27f7a:                               ; preds = %dec_label_pc_27f64, %dec_label_pc_27f6a
  %ip.2.reload = load i32, i32* %ip.2.reg2mem
  %r1.3.reload = load i32, i32* %r1.3.reg2mem
  %r0.9.reload = load i32, i32* %r0.9.reg2mem
  %101 = icmp ult i32 %r1.3.reload, ptrtoint (i1* @global_var_100000 to i32), !insn.addr !12368
  br i1 %101, label %dec_label_pc_27fb8, label %dec_label_pc_27f80, !insn.addr !12369

dec_label_pc_27f80:                               ; preds = %dec_label_pc_27f7a
  %102 = icmp ult i32 %r1.3.reload, ptrtoint (i1* @global_var_200000 to i32), !insn.addr !12370
  store i32 %r0.9.reload, i32* %r0.10.reg2mem, !insn.addr !12371
  store i32 %ip.2.reload, i32* %ip.3.reg2mem, !insn.addr !12371
  br i1 %102, label %dec_label_pc_27fa0, label %dec_label_pc_27f86, !insn.addr !12371

dec_label_pc_27f86:                               ; preds = %dec_label_pc_27f80
  %103 = urem i32 %r1.3.reload, 2, !insn.addr !12372
  %104 = icmp ne i32 %103, 0, !insn.addr !12372
  %105 = zext i1 %104 to i32, !insn.addr !12373
  %106 = zext i32 %r0.9.reload to i64, !insn.addr !12373
  %107 = sub i32 33, %r0.9.reload, !insn.addr !12373
  %108 = zext i32 %107 to i64, !insn.addr !12373
  %109 = shl i64 %106, %108, !insn.addr !12373
  %110 = sub i32 32, %r0.9.reload, !insn.addr !12373
  %111 = shl i32 %105, %110, !insn.addr !12373
  %112 = trunc i64 %109 to i32
  %113 = or i32 %111, %112, !insn.addr !12373
  %114 = add i32 %r0.9.reload, -1, !insn.addr !12373
  %115 = shl i32 1, %114, !insn.addr !12373
  %116 = and i32 %115, %r0.9.reload, !insn.addr !12373
  %117 = icmp ne i32 %116, 0, !insn.addr !12373
  %118 = zext i1 %117 to i32, !insn.addr !12374
  %119 = zext i32 %ip.2.reload to i64, !insn.addr !12374
  %120 = sub i32 33, %ip.2.reload, !insn.addr !12374
  %121 = zext i32 %120 to i64, !insn.addr !12374
  %122 = shl i64 %119, %121, !insn.addr !12374
  %123 = sub i32 32, %ip.2.reload, !insn.addr !12374
  %124 = shl i32 %118, %123, !insn.addr !12374
  %125 = trunc i64 %122 to i32
  %126 = or i32 %124, %125, !insn.addr !12374
  %127 = mul i32 %r4.1.reload, 2097152, !insn.addr !12375
  %128 = xor i32 %127, -4194304
  %129 = icmp ult i32 %128, 4194304, !insn.addr !12376
  store i32 0, i32* %merge.reg2mem, !insn.addr !12377
  store i32 %113, i32* %r0.10.reg2mem, !insn.addr !12377
  store i32 %126, i32* %ip.3.reg2mem, !insn.addr !12377
  br i1 %129, label %dec_label_pc_280d4, label %dec_label_pc_27fa0, !insn.addr !12377

dec_label_pc_27fa0:                               ; preds = %dec_label_pc_27fb8, %dec_label_pc_27f80, %dec_label_pc_27f86
  %ip.3.reload = load i32, i32* %ip.3.reg2mem
  %r0.10.reload = load i32, i32* %r0.10.reg2mem
  %130 = icmp eq i32 %ip.3.reload, -2147483648, !insn.addr !12378
  store i32 %r0.10.reload, i32* %r0.11.reg2mem, !insn.addr !12379
  br i1 %130, label %131, label %133, !insn.addr !12379

; <label>:131:                                    ; preds = %dec_label_pc_27fa0
  %132 = call i32 @__asm_it(), !insn.addr !12379
  store i32 %132, i32* %r0.11.reg2mem, !insn.addr !12379
  br label %133, !insn.addr !12379

; <label>:133:                                    ; preds = %dec_label_pc_27fa0, %131
  %134 = icmp sgt i32 %ip.3.reload, -1, !insn.addr !12378
  %135 = icmp ne i1 %134, true, !insn.addr !12378
  %r0.11.reload = load i32, i32* %r0.11.reg2mem
  %136 = urem i32 %r0.11.reload, 2
  %137 = icmp ne i32 %136, 0
  %cpsr_c.0 = select i1 %130, i1 %137, i1 %135
  %138 = zext i1 %cpsr_c.0 to i32, !insn.addr !12380
  %139 = add i32 %r0.11.reload, %138, !insn.addr !12380
  ret i32 %139, !insn.addr !12381

dec_label_pc_27fb8:                               ; preds = %dec_label_pc_27f7a
  %140 = icmp slt i32 %ip.2.reload, 0, !insn.addr !12382
  %141 = mul i32 %ip.2.reload, 2, !insn.addr !12382
  %142 = mul i32 %r0.9.reload, 2, !insn.addr !12383
  %143 = zext i1 %140 to i32, !insn.addr !12383
  %144 = or i32 %142, %143, !insn.addr !12383
  %145 = icmp ule i32 %144, %r0.9.reload, !insn.addr !12383
  %146 = icmp ult i32 %142, %r0.9.reload, !insn.addr !12383
  %147 = select i1 %140, i1 %145, i1 %146, !insn.addr !12383
  %148 = mul i32 %r1.3.reload, 2, !insn.addr !12384
  %149 = zext i1 %147 to i32, !insn.addr !12384
  %150 = or i32 %148, %149, !insn.addr !12384
  %151 = and i32 %150, ptrtoint (i1* @global_var_100000 to i32), !insn.addr !12385
  %152 = icmp eq i32 %151, 0, !insn.addr !12385
  store i32 %144, i32* %r0.10.reg2mem, !insn.addr !12386
  store i32 %141, i32* %ip.3.reg2mem, !insn.addr !12386
  br i1 %152, label %dec_label_pc_27fcc, label %dec_label_pc_27fa0, !insn.addr !12386

dec_label_pc_27fcc:                               ; preds = %dec_label_pc_27fb8
  %153 = icmp eq i32 %150, 0, !insn.addr !12387
  br i1 %153, label %156, label %154, !insn.addr !12388

; <label>:154:                                    ; preds = %dec_label_pc_27fcc
  %155 = call i32 @llvm.ctlz.i32(i32 %150, i1 true), !range !12282, !insn.addr !12389
  store i32 %155, i32* %.reg2mem
  store i32 %150, i32* %spec.select528.reg2mem
  store i32 %144, i32* %r0.14.reg2mem
  br label %160

; <label>:156:                                    ; preds = %dec_label_pc_27fcc
  %157 = call i32 @__asm_itt(), !insn.addr !12388
  %158 = call i32 @llvm.ctlz.i32(i32 %157, i1 true), !range !12282, !insn.addr !12389
  %159 = call i32 @__asm_it(), !insn.addr !12390
  store i32 %158, i32* %.reg2mem, !insn.addr !12390
  store i32 %157, i32* %spec.select528.reg2mem, !insn.addr !12390
  store i32 %159, i32* %r0.14.reg2mem, !insn.addr !12390
  br label %160, !insn.addr !12390

; <label>:160:                                    ; preds = %154, %156
  %r0.14.reload = load i32, i32* %r0.14.reg2mem
  %spec.select528.reload = load i32, i32* %spec.select528.reg2mem
  %.reload = load i32, i32* %.reg2mem
  %161 = or i32 %.reload, 32
  %spec.select6 = select i1 %153, i32 %161, i32 %.reload
  %162 = add nsw i32 %spec.select6, -11, !insn.addr !12391
  %163 = add nsw i32 %spec.select6, -43, !insn.addr !12392
  %164 = sub nsw i32 42, %spec.select6
  %165 = and i32 %162, %164, !insn.addr !12392
  %166 = icmp slt i32 %163, 0, !insn.addr !12392
  %167 = icmp eq i32 %162, 32, !insn.addr !12392
  %168 = icmp sgt i32 %162, 31, !insn.addr !12393
  store i32 %163, i32* %r2.2.reg2mem, !insn.addr !12393
  store i1 %166, i1* %cpsr_n.0.reg2mem, !insn.addr !12393
  store i1 %167, i1* %cpsr_z.5.reg2mem, !insn.addr !12393
  store i32 %165, i32* %cpsr_v.0.in.reg2mem, !insn.addr !12393
  br i1 %168, label %dec_label_pc_28002, label %dec_label_pc_27fe8, !insn.addr !12393

dec_label_pc_27fe8:                               ; preds = %160
  %169 = add nsw i32 %spec.select6, -31, !insn.addr !12394
  %170 = icmp slt i32 %169, 1, !insn.addr !12395
  br i1 %170, label %dec_label_pc_27ffe, label %dec_label_pc_27fec, !insn.addr !12395

dec_label_pc_27fec:                               ; preds = %dec_label_pc_27fe8
  %171 = sub nsw i32 43, %spec.select6, !insn.addr !12396
  %172 = shl i32 %spec.select528.reload, %162, !insn.addr !12397
  %173 = lshr i32 %spec.select528.reload, %171, !insn.addr !12398
  store i32 %172, i32* %r0.17.reg2mem, !insn.addr !12399
  store i32 %173, i32* %r1.6.reg2mem, !insn.addr !12399
  br label %dec_label_pc_28018, !insn.addr !12399

dec_label_pc_27ffe:                               ; preds = %dec_label_pc_27fe8
  %174 = icmp eq i32 %169, 0, !insn.addr !12394
  %175 = icmp ne i32 %169, 0, !insn.addr !12394
  %176 = add nuw i32 %spec.select6, 2147483605
  %177 = and i32 %169, %176, !insn.addr !12394
  store i32 %162, i32* %r2.2.reg2mem, !insn.addr !12400
  store i1 %175, i1* %cpsr_n.0.reg2mem, !insn.addr !12400
  store i1 %174, i1* %cpsr_z.5.reg2mem, !insn.addr !12400
  store i32 %177, i32* %cpsr_v.0.in.reg2mem, !insn.addr !12400
  br label %dec_label_pc_28002, !insn.addr !12400

dec_label_pc_28002:                               ; preds = %dec_label_pc_27ffe, %160
  %cpsr_v.0.in.reload = load i32, i32* %cpsr_v.0.in.reg2mem
  %cpsr_z.5.reload = load i1, i1* %cpsr_z.5.reg2mem
  %cpsr_n.0.reload = load i1, i1* %cpsr_n.0.reg2mem
  %r2.2.reload = load i32, i32* %r2.2.reg2mem
  %cpsr_v.0 = icmp slt i32 %cpsr_v.0.in.reload, 0
  %178 = icmp ne i1 %cpsr_n.0.reload, %cpsr_v.0, !insn.addr !12401
  %179 = or i1 %cpsr_z.5.reload, %178, !insn.addr !12401
  br i1 %179, label %182, label %180, !insn.addr !12401

; <label>:180:                                    ; preds = %dec_label_pc_28002
  %181 = lshr i32 %r0.14.reload, %141, !insn.addr !12402
  store i32 %181, i32* %.reg2mem63
  store i32 %r0.14.reload, i32* %r0.16.reg2mem
  br label %187

; <label>:182:                                    ; preds = %dec_label_pc_28002
  %183 = call i32 @__asm_it(), !insn.addr !12401
  %184 = sub nsw i32 32, %r2.2.reload
  %185 = lshr i32 %183, %184, !insn.addr !12402
  %186 = call i32 @__asm_itt(), !insn.addr !12403
  store i32 %185, i32* %.reg2mem63, !insn.addr !12403
  store i32 %186, i32* %r0.16.reg2mem, !insn.addr !12403
  br label %187, !insn.addr !12403

; <label>:187:                                    ; preds = %180, %182
  %r0.16.reload = load i32, i32* %r0.16.reg2mem
  %.reload64 = load i32, i32* %.reg2mem63
  %188 = shl i32 %spec.select528.reload, %r2.2.reload
  %189 = select i1 %179, i32 %.reload64, i32 0
  %spec.select8 = or i32 %189, %188
  %190 = select i1 %179, i32 %r2.2.reload, i32 0
  %spec.select24 = shl i32 %r0.16.reload, %190
  store i32 %spec.select24, i32* %r0.17.reg2mem
  store i32 %spec.select8, i32* %r1.6.reg2mem
  br label %dec_label_pc_28018

dec_label_pc_28018:                               ; preds = %187, %dec_label_pc_27fec
  %191 = add i32 %r4.1.reload, -2, !insn.addr !12404
  %192 = icmp slt i32 %191, %162, !insn.addr !12405
  br i1 %192, label %dec_label_pc_28024, label %193, !insn.addr !12405

; <label>:193:                                    ; preds = %dec_label_pc_28018
  %194 = call i32 @__asm_ittt(), !insn.addr !12405
  store i32 %194, i32* %merge.reg2mem
  br label %dec_label_pc_280d4

dec_label_pc_28024:                               ; preds = %dec_label_pc_28018
  %r1.6.reload = load i32, i32* %r1.6.reg2mem
  %195 = sub i32 %191, %162, !insn.addr !12406
  %196 = sub i32 -32, %195, !insn.addr !12407
  %197 = icmp slt i32 %195, -31, !insn.addr !12408
  br i1 %197, label %dec_label_pc_28066, label %dec_label_pc_2802c, !insn.addr !12408

dec_label_pc_2802c:                               ; preds = %dec_label_pc_28024
  %r0.17.reload = load i32, i32* %r0.17.reg2mem
  %198 = add i32 %196, 12, !insn.addr !12409
  %199 = icmp sgt i32 %198, 0, !insn.addr !12410
  br i1 %199, label %dec_label_pc_2804e, label %dec_label_pc_28030, !insn.addr !12410

dec_label_pc_28030:                               ; preds = %dec_label_pc_2802c
  %200 = add i32 %196, 32, !insn.addr !12411
  %201 = sub i32 0, %196, !insn.addr !12412
  %202 = lshr i32 %r0.17.reload, %200, !insn.addr !12413
  %203 = shl i32 %r1.6.reload, %201, !insn.addr !12414
  %204 = or i32 %203, %202, !insn.addr !12415
  ret i32 %204, !insn.addr !12416

dec_label_pc_2804e:                               ; preds = %dec_label_pc_2802c
  %205 = sub i32 0, %196, !insn.addr !12417
  %206 = add i32 %196, 32, !insn.addr !12418
  %207 = lshr i32 %r0.17.reload, %206, !insn.addr !12419
  %208 = shl i32 %r1.6.reload, %205, !insn.addr !12420
  %209 = or i32 %208, %207, !insn.addr !12421
  ret i32 %209, !insn.addr !12422

dec_label_pc_28066:                               ; preds = %dec_label_pc_28024
  %210 = lshr i32 %r1.6.reload, %196, !insn.addr !12423
  ret i32 %210, !insn.addr !12424

dec_label_pc_2806e:                               ; preds = %dec_label_pc_27f18
  %211 = icmp eq i32 %spec.select3, 0, !insn.addr !12425
  store i32 %r0.5.reload, i32* %r0.19.reg2mem, !insn.addr !12426
  br i1 %211, label %212, label %214, !insn.addr !12426

; <label>:212:                                    ; preds = %dec_label_pc_2806e
  %213 = call i32 @__asm_itte(), !insn.addr !12426
  store i32 %213, i32* %r0.19.reg2mem, !insn.addr !12426
  br label %214, !insn.addr !12426

; <label>:214:                                    ; preds = %dec_label_pc_2806e, %212
  %215 = xor i32 %r3.1.reload, ptrtoint (i1* @global_var_100000 to i32), !insn.addr !12427
  %r0.19.reload = load i32, i32* %r0.19.reg2mem
  %216 = xor i32 %r1.1.reload, ptrtoint (i1* @global_var_100000 to i32)
  %spec.select10 = select i1 %211, i32 %216, i32 %r1.1.reload
  %217 = zext i1 %211 to i32
  %r4.2 = add nsw i32 %spec.select3, %217
  %not. = icmp ne i1 %211, true
  %218 = sext i1 %not. to i32
  %spec.select11 = add nsw i32 %spec.select3, %218
  store i32 %r0.19.reload, i32* %r0.6.reg2mem
  store i32 %spec.select10, i32* %r1.2.reg2mem
  store i32 %215, i32* %r3.2.reg2mem
  store i32 %r4.2, i32* %r4.1.reg2mem
  store i32 %spec.select11, i32* %r5.1.reg2mem
  br label %dec_label_pc_27f20

dec_label_pc_28082:                               ; preds = %7
  br i1 %12, label %247, label %219, !insn.addr !12428

; <label>:219:                                    ; preds = %dec_label_pc_28082
  %220 = call i32 @__asm_it(), !insn.addr !12428
  br i1 %13, label %.thread57, label %dec_label_pc_2808e, !insn.addr !12429

dec_label_pc_2808e:                               ; preds = %219
  store i32 %220, i32* %r0.2156.reg2mem, !insn.addr !12430
  br i1 %2, label %221, label %dec_label_pc_2809a, !insn.addr !12430

; <label>:221:                                    ; preds = %dec_label_pc_2808e
  %222 = call i32 @__asm_it(), !insn.addr !12430
  %223 = icmp eq i32 %222, %arg3
  store i32 %222, i32* %r0.2156.reg2mem, !insn.addr !12431
  br i1 %223, label %dec_label_pc_280a6, label %dec_label_pc_2809a, !insn.addr !12431

dec_label_pc_2809a:                               ; preds = %dec_label_pc_2808e, %221
  %r0.2156.reload = load i32, i32* %r0.2156.reg2mem
  %224 = or i32 %r0.2156.reload, %0, !insn.addr !12432
  %225 = icmp eq i32 %224, 0, !insn.addr !12432
  store i32 %r0.2156.reload, i32* %r0.22.reg2mem, !insn.addr !12433
  br i1 %225, label %226, label %228, !insn.addr !12433

; <label>:226:                                    ; preds = %dec_label_pc_2809a
  %227 = call i32 @__asm_itt(), !insn.addr !12433
  store i32 %227, i32* %r0.22.reg2mem, !insn.addr !12433
  br label %228, !insn.addr !12433

; <label>:228:                                    ; preds = %dec_label_pc_2809a, %226
  %r0.22.reload = load i32, i32* %r0.22.reg2mem
  %spec.select14 = select i1 %225, i32 %arg3, i32 %r0.22.reload
  store i32 %spec.select14, i32* %merge.reg2mem
  br label %dec_label_pc_280d4

dec_label_pc_280a6:                               ; preds = %221
  %229 = icmp eq i32 %arg2, %arg4, !insn.addr !12434
  br i1 %229, label %dec_label_pc_280b2, label %230, !insn.addr !12435

; <label>:230:                                    ; preds = %dec_label_pc_280a6
  %231 = call i32 @__asm_ittt(), !insn.addr !12435
  store i32 0, i32* %merge.reg2mem
  br label %dec_label_pc_280d4

dec_label_pc_280b2:                               ; preds = %dec_label_pc_280a6
  %232 = icmp ult i32 %0, 2097152, !insn.addr !12436
  br i1 %232, label %dec_label_pc_280b8, label %dec_label_pc_280c4, !insn.addr !12437

dec_label_pc_280b8:                               ; preds = %dec_label_pc_280b2
  %233 = icmp slt i32 %arg3, 0, !insn.addr !12438
  %234 = mul i32 %arg3, 2, !insn.addr !12438
  %235 = zext i1 %233 to i32, !insn.addr !12439
  %236 = or i32 %0, %235, !insn.addr !12439
  %237 = icmp ule i32 %236, %arg2, !insn.addr !12439
  %238 = icmp ult i32 %0, %arg2, !insn.addr !12439
  %239 = select i1 %233, i1 %237, i1 %238, !insn.addr !12439
  store i32 %234, i32* %merge.reg2mem, !insn.addr !12440
  br i1 %239, label %240, label %dec_label_pc_280d4, !insn.addr !12440

; <label>:240:                                    ; preds = %dec_label_pc_280b8
  %241 = call i32 @__asm_it(), !insn.addr !12440
  store i32 %241, i32* %merge.reg2mem, !insn.addr !12440
  br label %dec_label_pc_280d4, !insn.addr !12440

dec_label_pc_280c4:                               ; preds = %dec_label_pc_280b2
  %242 = xor i32 %0, -4194304
  %243 = icmp ult i32 %242, 4194304, !insn.addr !12441
  store i32 0, i32* %merge.reg2mem, !insn.addr !12442
  br i1 %243, label %dec_label_pc_280d4, label %244, !insn.addr !12442

; <label>:244:                                    ; preds = %dec_label_pc_280c4
  %245 = call i32 @__asm_itt(), !insn.addr !12442
  store i32 %245, i32* %merge.reg2mem
  br label %dec_label_pc_280d4

.thread57:                                        ; preds = %219
  %246 = call i32 @__asm_itte(), !insn.addr !12443
  store i32 %arg4, i32* %spec.select1661.reg2mem
  br label %248

; <label>:247:                                    ; preds = %dec_label_pc_28082
  store i32 %arg2, i32* %spec.select1661.reg2mem, !insn.addr !12444
  store i32 %arg2, i32* %spec.select1662.reg2mem, !insn.addr !12444
  store i32 %r0.1.reload, i32* %r0.30.reg2mem, !insn.addr !12444
  br i1 %13, label %250, label %248, !insn.addr !12444

; <label>:248:                                    ; preds = %.thread57, %247
  %spec.select1661.reload = load i32, i32* %spec.select1661.reg2mem
  %249 = call i32 @__asm_itt(), !insn.addr !12444
  store i32 %spec.select1661.reload, i32* %spec.select1662.reg2mem, !insn.addr !12444
  store i32 %249, i32* %r0.30.reg2mem, !insn.addr !12444
  br label %250, !insn.addr !12444

; <label>:250:                                    ; preds = %247, %248
  %r0.30.reload = load i32, i32* %r0.30.reg2mem
  %spec.select1662.reload = load i32, i32* %spec.select1662.reg2mem
  %251 = mul i32 %spec.select1662.reload, 4096, !insn.addr !12445
  %252 = or i32 %r0.30.reload, %251, !insn.addr !12445
  %253 = icmp eq i32 %252, 0, !insn.addr !12445
  store i32 %r0.30.reload, i32* %merge.reg2mem, !insn.addr !12446
  br i1 %253, label %254, label %dec_label_pc_280d4, !insn.addr !12446

; <label>:254:                                    ; preds = %250
  %255 = call i32 @__asm_itte(), !insn.addr !12446
  store i32 %255, i32* %merge.reg2mem, !insn.addr !12447
  br label %dec_label_pc_280d4, !insn.addr !12447

; uselistorder directives
  uselistorder i32 %r0.30.reload, { 1, 0 }
  uselistorder i32 %r0.17.reload, { 1, 0 }
  uselistorder i32 %196, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %195, { 1, 0 }
  uselistorder i32 %r2.2.reload, { 2, 1, 0 }
  uselistorder i32 %169, { 1, 0, 3, 2 }
  uselistorder i32 %162, { 2, 3, 0, 1, 5, 6, 4 }
  uselistorder i32 %spec.select6, { 4, 5, 3, 0, 1, 2 }
  uselistorder i32 %.reload, { 1, 0 }
  uselistorder i32 %spec.select528.reload, { 2, 1, 0 }
  uselistorder i32 %141, { 1, 0 }
  uselistorder i32 %r0.9.reload, { 1, 2, 8, 7, 3, 5, 4, 6, 0 }
  uselistorder i32 %r1.3.reload, { 3, 2, 0, 1 }
  uselistorder i32 %ip.2.reload, { 5, 1, 3, 2, 4, 0 }
  uselistorder i1 %90, { 1, 0, 2 }
  uselistorder i32 %r0.8.reload, { 1, 2, 3, 0 }
  uselistorder i32 %ip.1.reload, { 1, 2, 0 }
  uselistorder i32 %storemerge1.in.reload, { 2, 0, 1 }
  uselistorder i32 %79, { 2, 1, 0 }
  uselistorder i32 %50, { 1, 2, 0, 3 }
  uselistorder i32 %r1.2.reload, { 1, 0 }
  uselistorder i32 %r3.2.reload, { 1, 0, 5, 2, 4, 3 }
  uselistorder i32 %r5.1.reload, { 2, 5, 4, 3, 0, 1 }
  uselistorder i32 %r3.1.reload, { 1, 0 }
  uselistorder i32 %41, { 1, 2, 0 }
  uselistorder i32 %r1.1.reload, { 2, 1, 0 }
  uselistorder i32 %spec.select21, { 1, 0 }
  uselistorder i32 %32, { 1, 2, 0 }
  uselistorder i32 %spec.select19, { 1, 0 }
  uselistorder i32 %r0.2.reload, { 1, 0 }
  uselistorder i32 %spec.select3, { 1, 2, 3, 0, 7, 4, 5, 6 }
  uselistorder i32 %17, { 2, 1, 0 }
  uselistorder i32 %15, { 3, 2, 1, 0 }
  uselistorder i1 %13, { 1, 0, 2 }
  uselistorder i1 %12, { 1, 0 }
  uselistorder i32 %1, { 1, 2, 0 }
  uselistorder i32 %0, { 1, 4, 7, 2, 6, 3, 5, 0 }
  uselistorder i32* %r0.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %merge.reg2mem, { 5, 2, 6, 1, 8, 7, 9, 11, 10, 3, 0, 4 }
  uselistorder i32* %r0.6.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r1.2.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r3.2.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r4.1.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r5.1.reg2mem, { 1, 0, 2 }
  uselistorder i32* %r0.7.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.8.reg2mem, { 0, 2, 1 }
  uselistorder i32* %ip.1.reg2mem, { 0, 2, 1 }
  uselistorder i32* %storemerge1.in.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.9.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r1.3.reg2mem, { 0, 2, 1 }
  uselistorder i32* %ip.2.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.10.reg2mem, { 3, 0, 1, 2 }
  uselistorder i32* %ip.3.reg2mem, { 3, 0, 1, 2 }
  uselistorder i32* %r0.11.reg2mem, { 0, 2, 1 }
  uselistorder i32* %.reg2mem, { 0, 2, 1 }
  uselistorder i32* %spec.select528.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.14.reg2mem, { 0, 2, 1 }
  uselistorder i32* %.reg2mem63, { 0, 2, 1 }
  uselistorder i32* %r0.16.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.19.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.2156.reg2mem, { 0, 2, 1 }
  uselistorder i32* %r0.22.reg2mem, { 0, 2, 1 }
  uselistorder i32 ()* @__asm_itte, { 2, 1, 0 }
  uselistorder i32 12, { 24, 34, 35, 1, 2, 25, 38, 18, 39, 36, 40, 8, 9, 26, 27, 28, 3, 45, 42, 43, 46, 4, 37, 29, 30, 41, 44, 47, 70, 68, 69, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 79, 77, 78, 71, 5, 72, 73, 74, 6, 75, 76, 80, 81, 31, 32, 10, 11, 12, 14, 13, 15, 16, 7, 17, 33, 0, 23, 82, 83, 84, 85, 86, 87, 88, 19, 20, 21, 22 }
  uselistorder i32 ()* @__asm_ittt, { 1, 0 }
  uselistorder i32 -2, { 36, 37, 34, 33, 32, 35, 0, 39, 38, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 40, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 43, 42, 44, 45 }
  uselistorder i32 43, { 1, 0 }
  uselistorder i32 -31, { 2, 1, 0 }
  uselistorder i32 2097152, { 2, 0, 1 }
  uselistorder i32 33, { 2, 3, 0, 1 }
  uselistorder i32 -32, { 5, 4, 1, 2, 3, 0 }
  uselistorder i32 -2147483648, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 31, { 35, 64, 34, 36, 65, 37, 38, 39, 9, 63, 1, 2, 3, 4, 5, 6, 7, 8, 40, 10, 11, 12, 41, 13, 14, 42, 15, 16, 43, 17, 18, 44, 19, 20, 45, 21, 22, 46, 23, 24, 47, 25, 26, 48, 27, 49, 50, 28, 51, 29, 52, 53, 30, 54, 31, 55, 56, 32, 57, 33, 58, 59, 60, 61, 62, 0, 66, 67 }
  uselistorder i32 ptrtoint (i1* @global_var_100000 to i32), { 3, 4, 6, 5, 0, 1, 2 }
  uselistorder i32 54, { 1, 2, 0 }
  uselistorder i32 1048576, { 116, 117, 118, 119, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115 }
  uselistorder i32 -2097153, { 1, 0 }
  uselistorder i1 false, { 18, 19, 20, 21, 0, 11, 22, 1, 2, 3, 10, 4, 6, 5, 7, 8, 9, 12, 13, 14, 15, 16, 17 }
  uselistorder i1 true, { 3, 11, 443, 15, 16, 17, 18, 19, 0, 444, 20, 21, 445, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 4, 5, 89, 90, 91, 6, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 7, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 8, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 1, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 2, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 9, 433, 434, 10, 435, 436, 12, 437, 438, 439, 440, 441, 442, 13, 14 }
  uselistorder i32 %arg4, { 0, 5, 3, 4, 2, 1 }
  uselistorder i32 %arg3, { 1, 3, 6, 7, 4, 5, 2, 0, 8 }
  uselistorder i32 %arg2, { 0, 1, 5, 4, 8, 6, 7, 3, 2 }
  uselistorder label %250, { 1, 0 }
  uselistorder label %248, { 1, 0 }
  uselistorder label %228, { 1, 0 }
  uselistorder label %dec_label_pc_2809a, { 1, 0 }
  uselistorder label %214, { 1, 0 }
  uselistorder label %187, { 1, 0 }
  uselistorder label %160, { 1, 0 }
  uselistorder label %133, { 1, 0 }
  uselistorder label %dec_label_pc_27fa0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_27f7a, { 1, 0 }
  uselistorder label %74, { 1, 0 }
  uselistorder label %dec_label_pc_280d4, { 7, 1, 3, 0, 8, 9, 4, 10, 5, 2, 6 }
  uselistorder label %dec_label_pc_27ee6, { 1, 0 }
  uselistorder label %7, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2810c:
  %r0.0.reg2mem = alloca i32, !insn.addr !12448
  %0 = icmp eq i32 %arg1, 0, !insn.addr !12448
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !12449
  br i1 %0, label %1, label %3, !insn.addr !12449

; <label>:1:                                      ; preds = %dec_label_pc_2810c
  %2 = call i32 @__asm_itt(), !insn.addr !12449
  store i32 %2, i32* %r0.0.reg2mem, !insn.addr !12449
  br label %3, !insn.addr !12449

; <label>:3:                                      ; preds = %dec_label_pc_2810c, %1
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !12450

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1 }
  uselistorder label %3, { 1, 0 }
}

define i32 @__aeabi_i2d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2812c:
  %r0.1.reg2mem = alloca i32, !insn.addr !12451
  %merge.reg2mem = alloca i32, !insn.addr !12451
  %0 = icmp eq i32 %arg1, 0, !insn.addr !12451
  br i1 %0, label %.thread, label %dec_label_pc_28136, !insn.addr !12452

.thread:                                          ; preds = %dec_label_pc_2812c
  %1 = call i32 @__asm_itt(), !insn.addr !12452
  store i32 %1, i32* %merge.reg2mem
  br label %2

; <label>:2:                                      ; preds = %.thread, %6
  %merge.reload = load i32, i32* %merge.reg2mem
  ret i32 %merge.reload, !insn.addr !12453

dec_label_pc_28136:                               ; preds = %dec_label_pc_2812c
  %3 = icmp slt i32 %arg1, 0, !insn.addr !12454
  store i32 %arg1, i32* %r0.1.reg2mem, !insn.addr !12455
  br i1 %3, label %4, label %6, !insn.addr !12455

; <label>:4:                                      ; preds = %dec_label_pc_28136
  %5 = call i32 @__asm_it(), !insn.addr !12455
  store i32 %5, i32* %r0.1.reg2mem, !insn.addr !12455
  br label %6, !insn.addr !12455

; <label>:6:                                      ; preds = %dec_label_pc_28136, %4
  %r0.1.reload = load i32, i32* %r0.1.reg2mem
  %7 = sub i32 0, %r0.1.reload
  %spec.select = select i1 %3, i32 %7, i32 %r0.1.reload
  store i32 %spec.select, i32* %merge.reg2mem
  br label %2

; uselistorder directives
  uselistorder i32 %r0.1.reload, { 1, 0 }
  uselistorder i32* %merge.reg2mem, { 2, 0, 1 }
  uselistorder i32* %r0.1.reg2mem, { 0, 2, 1 }
  uselistorder i32 ()* @__asm_itt, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %6, { 1, 0 }
  uselistorder label %2, { 1, 0 }
}

define i32 @__aeabi_f2d(i32 %arg1) local_unnamed_addr {
dec_label_pc_28150:
  %merge.reg2mem = alloca i32, !insn.addr !12456
  %0 = mul i32 %arg1, 2, !insn.addr !12456
  %1 = icmp eq i32 %0, 0, !insn.addr !12456
  %2 = mul i32 %arg1, 536870912, !insn.addr !12457
  store i32 %2, i32* %merge.reg2mem, !insn.addr !12458
  br i1 %1, label %.thread, label %3, !insn.addr !12458

; <label>:3:                                      ; preds = %dec_label_pc_28150
  %4 = call i32 @__asm_itttt(), !insn.addr !12458
  %5 = and i32 %arg1, 2139095040
  %6 = icmp ne i32 %5, 0
  %7 = icmp ult i32 %0, -16777216
  %spec.select.not = icmp eq i1 %6, %7
  store i32 %4, i32* %merge.reg2mem, !insn.addr !12459
  br i1 %spec.select.not, label %.thread, label %8, !insn.addr !12459

.thread:                                          ; preds = %dec_label_pc_28150, %3, %8
  %merge.reload = load i32, i32* %merge.reg2mem
  ret i32 %merge.reload, !insn.addr !12459

; <label>:8:                                      ; preds = %3
  %9 = call i32 @__asm_ite(), !insn.addr !12460
  store i32 %9, i32* %merge.reg2mem, !insn.addr !12460
  br label %.thread, !insn.addr !12460

; uselistorder directives
  uselistorder i32 %0, { 1, 0 }
  uselistorder i32* %merge.reg2mem, { 2, 0, 3, 1 }
  uselistorder i32 ()* @__asm_ite, { 12, 3, 11, 10, 9, 2, 1, 8, 7, 4, 6, 5, 0 }
  uselistorder i32 ()* @__asm_itttt, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread, { 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2818c:
  %r0.0.reg2mem = alloca i32, !insn.addr !12461
  %0 = or i32 %arg2, %arg1, !insn.addr !12461
  %1 = icmp eq i32 %0, 0, !insn.addr !12461
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !12462
  br i1 %1, label %2, label %4, !insn.addr !12462

; <label>:2:                                      ; preds = %dec_label_pc_2818c
  %3 = call i32 @__asm_it(), !insn.addr !12462
  store i32 %3, i32* %r0.0.reg2mem, !insn.addr !12462
  br label %4, !insn.addr !12462

; <label>:4:                                      ; preds = %dec_label_pc_2818c, %2
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !12463

; uselistorder directives
  uselistorder i32* %r0.0.reg2mem, { 0, 2, 1 }
  uselistorder label %4, { 1, 0 }
}

define i32 @__aeabi_l2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2819c:
  %.reg2mem = alloca i32, !insn.addr !12464
  %r0.37.reg2mem = alloca i32, !insn.addr !12464
  %0 = or i32 %arg2, %arg1, !insn.addr !12464
  %1 = icmp eq i32 %0, 0, !insn.addr !12464
  br i1 %1, label %2, label %dec_label_pc_281a4, !insn.addr !12465

; <label>:2:                                      ; preds = %dec_label_pc_2819c
  %3 = call i32 @__asm_it(), !insn.addr !12465
  ret i32 %3, !insn.addr !12466

dec_label_pc_281a4:                               ; preds = %dec_label_pc_2819c
  %4 = icmp slt i32 %arg2, 0, !insn.addr !12467
  %5 = sub i32 0, %arg1
  %6 = mul i32 %arg2, -1
  %r0.1 = select i1 %4, i32 %5, i32 %arg1
  %r1.0 = select i1 %4, i32 %6, i32 %arg2
  %7 = icmp ult i32 %r1.0, 33554432, !insn.addr !12468
  store i32 %r0.1, i32* %r0.37.reg2mem, !insn.addr !12469
  store i32 3, i32* %.reg2mem, !insn.addr !12469
  br i1 %7, label %12, label %8, !insn.addr !12469

; <label>:8:                                      ; preds = %dec_label_pc_281a4
  %9 = call i32 @__asm_it(), !insn.addr !12469
  %10 = icmp ult i32 %r1.0, 268435456, !insn.addr !12470
  store i32 %9, i32* %r0.37.reg2mem, !insn.addr !12471
  store i32 6, i32* %.reg2mem, !insn.addr !12471
  br i1 %10, label %12, label %.thread3, !insn.addr !12471

.thread3:                                         ; preds = %8
  %11 = call i32 @__asm_it(), !insn.addr !12471
  store i32 %11, i32* %r0.37.reg2mem
  store i32 9, i32* %.reg2mem
  br label %12

; <label>:12:                                     ; preds = %dec_label_pc_281a4, %8, %.thread3
  %.reload = load i32, i32* %.reg2mem
  %r0.37.reload = load i32, i32* %r0.37.reg2mem
  %13 = icmp slt i32 %r1.0, 0
  %14 = zext i1 %13 to i32, !insn.addr !12472
  %15 = add nuw nsw i32 %.reload, %14, !insn.addr !12472
  %16 = sub nsw i32 32, %15, !insn.addr !12473
  %17 = lshr i32 %r0.37.reload, %15, !insn.addr !12474
  %18 = shl i32 %r1.0, %16, !insn.addr !12475
  %19 = or i32 %18, %17, !insn.addr !12476
  ret i32 %19, !insn.addr !12477

; uselistorder directives
  uselistorder i32 %15, { 1, 0 }
  uselistorder i32 %r1.0, { 1, 0, 3, 2 }
  uselistorder i32* %r0.37.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32* %.reg2mem, { 0, 3, 1, 2 }
  uselistorder i32 32, { 75, 8, 9, 3, 72, 7, 73, 74, 70, 11, 71, 4, 83, 5, 10, 84, 85, 6, 2, 86, 87, 76, 15, 16, 17, 18, 12, 77, 19, 82, 20, 78, 79, 80, 81, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 89, 0, 90, 91, 59, 60, 92, 93, 1, 94, 95, 13, 61, 62, 63, 96, 14, 64, 65, 66, 67, 68, 69 }
  uselistorder i32 9, { 0, 1, 4, 3, 7, 10, 11, 8, 9, 12, 13, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 5, 6 }
  uselistorder i32 6, { 0, 1, 2, 21, 3, 6, 7, 8, 5, 27, 9, 10, 11, 25, 4, 13, 14, 15, 16, 17, 18, 12, 26, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 23, 24, 19, 20 }
  uselistorder i32 3, { 0, 3, 7, 4, 8, 5, 9, 6, 10, 13, 14, 19, 35, 11, 1, 36, 20, 24, 2, 37, 38, 39, 40, 41, 42, 43, 44, 16, 12, 17, 15, 18, 21, 25, 34, 26, 27, 28, 22, 23, 29, 30, 31, 32, 33, 45, 46 }
  uselistorder i32 33554432, { 113, 114, 112, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111 }
  uselistorder i32 -1, { 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 199, 200, 0, 1, 2, 3, 5, 201, 4, 6, 7, 202, 8, 9, 10, 133, 160, 11, 12, 14, 15, 16, 13, 18, 19, 17, 21, 22, 20, 119, 120, 121, 122, 123, 124, 23, 203, 125, 161, 229, 224, 136, 225, 24, 25, 26, 27, 137, 162, 28, 30, 29, 144, 31, 231, 138, 32, 33, 34, 35, 134, 233, 204, 36, 205, 206, 207, 139, 43, 42, 41, 40, 39, 142, 38, 37, 208, 143, 140, 135, 209, 164, 163, 165, 166, 44, 210, 234, 45, 46, 167, 235, 232, 47, 48, 49, 50, 168, 51, 169, 230, 52, 53, 126, 54, 127, 128, 141, 211, 226, 55, 56, 57, 58, 59, 60, 61, 62, 145, 146, 147, 148, 63, 170, 236, 64, 65, 66, 67, 212, 68, 69, 70, 71, 72, 73, 76, 74, 75, 77, 78, 129, 213, 130, 214, 171, 172, 173, 81, 80, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 131, 132, 94, 95, 96, 97, 215, 216, 217, 227, 228, 218, 219, 220, 221, 174, 222, 175, 238, 237, 100, 99, 98, 101, 102, 103, 104, 105, 176, 106, 177, 109, 108, 107, 178, 110, 179, 180, 181, 182, 183, 184, 185, 111, 186, 114, 113, 112, 188, 187, 115, 117, 116, 189, 190, 118, 191, 192, 193, 194, 195, 196, 197, 198, 223 }
  uselistorder i32 ()* @__asm_it, { 16, 15, 14, 28, 27, 26, 25, 24, 19, 18, 17, 23, 22, 21, 20, 11, 10, 9, 8, 7, 6, 5, 4, 13, 3, 2, 1, 0, 12 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %12, { 2, 1, 0 }
}

define i32 @__aeabi_idiv0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_281f8:
  %0 = call i32 @raise(i32 8), !insn.addr !12478
  ret i32 %0, !insn.addr !12479

; uselistorder directives
  uselistorder i32 8, { 62, 88, 89, 79, 92, 90, 93, 94, 63, 95, 91, 99, 100, 101, 102, 80, 104, 103, 41, 42, 43, 105, 49, 50, 3, 4, 5, 6, 7, 8, 98, 9, 10, 11, 96, 51, 81, 12, 97, 64, 106, 52, 107, 109, 110, 108, 123, 38, 122, 115, 116, 117, 118, 119, 40, 120, 121, 124, 111, 112, 113, 39, 114, 125, 54, 53, 55, 82, 13, 14, 56, 37, 57, 126, 58, 59, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 60, 31, 32, 83, 33, 87, 65, 66, 67, 68, 69, 70, 71, 72, 48, 127, 73, 45, 44, 34, 35, 36, 0, 46, 84, 47, 85, 86, 128, 129, 1, 130, 131, 132, 137, 138, 133, 134, 2, 135, 136, 139, 140, 74, 141, 142, 76, 77, 143, 144, 145, 146, 78, 61, 75 }
}

define i32 @__libc_csu_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_28204:
  %0 = call i32 @_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4), !insn.addr !12480
  %spec.select = select i1 icmp eq (i32 ashr (i32 sub (i32 ptrtoint (i32* @global_var_50464 to i32), i32 ptrtoint (i32* @global_var_35324 to i32)), i32 2), i32 0), i32 %0, i32 %arg1
  ret i32 %spec.select, !insn.addr !12481

; uselistorder directives
  uselistorder i32 2, { 94, 12, 13, 14, 15, 16, 53, 54, 135, 17, 18, 65, 69, 66, 70, 67, 71, 80, 81, 107, 19, 20, 95, 151, 72, 0, 152, 153, 108, 106, 136, 21, 154, 55, 78, 1, 109, 110, 111, 112, 113, 114, 73, 115, 116, 155, 156, 97, 96, 99, 79, 98, 100, 101, 102, 22, 82, 117, 2, 68, 118, 52, 56, 57, 119, 137, 150, 3, 103, 4, 104, 5, 138, 139, 23, 24, 25, 58, 157, 105, 142, 143, 83, 74, 84, 6, 85, 158, 159, 86, 87, 7, 88, 160, 161, 75, 89, 90, 8, 91, 140, 141, 92, 9, 93, 162, 59, 60, 26, 27, 28, 120, 121, 61, 122, 123, 62, 144, 145, 146, 147, 148, 149, 163, 164, 165, 10, 76, 29, 166, 11, 77, 63, 30, 124, 31, 125, 126, 32, 33, 34, 35, 127, 36, 128, 37, 38, 167, 168, 64, 39, 129, 40, 130, 131, 41, 42, 43, 44, 132, 45, 133, 46, 47, 169, 170, 48, 49, 50, 51, 134 }
  uselistorder i32 0, { 655, 455, 2401, 2402, 2403, 2377, 476, 2378, 2379, 2380, 2381, 2382, 2383, 0, 656, 2, 2384, 2385, 612, 613, 1862, 581, 582, 611, 614, 2394, 2395, 2396, 2397, 658, 2398, 1, 2399, 2400, 662, 663, 2386, 659, 2387, 657, 2388, 583, 660, 2389, 661, 2390, 2391, 2392, 2393, 2557, 1863, 2558, 2559, 591, 2560, 2561, 416, 2562, 2563, 2564, 2565, 2567, 2566, 2568, 588, 479, 480, 2569, 590, 589, 2570, 1864, 3, 2571, 4, 5, 648, 2427, 6, 7, 8, 2404, 2405, 9, 10, 11, 2406, 12, 2407, 13, 2408, 14, 15, 2572, 2425, 2409, 2410, 16, 2411, 649, 17, 19, 2412, 18, 2413, 22, 2573, 20, 2574, 21, 2575, 23, 532, 2419, 24, 533, 2414, 25, 2426, 27, 509, 26, 28, 1865, 29, 30, 534, 2415, 31, 1866, 32, 535, 33, 415, 34, 1867, 1868, 2416, 1869, 2417, 35, 2578, 2579, 1870, 1871, 2576, 36, 2577, 37, 2418, 38, 39, 40, 41, 536, 1872, 43, 2580, 1873, 42, 2581, 2420, 537, 2421, 2422, 2423, 538, 2424, 2429, 664, 44, 2428, 539, 45, 650, 2430, 46, 2431, 47, 2432, 417, 418, 419, 2433, 2434, 2591, 420, 421, 1874, 1875, 49, 2596, 1876, 48, 2597, 2582, 50, 2583, 2435, 51, 2436, 1877, 52, 53, 2437, 54, 510, 55, 2446, 56, 1878, 2598, 61, 60, 59, 62, 57, 58, 2599, 63, 66, 64, 65, 2600, 2601, 70, 69, 68, 67, 2602, 71, 665, 666, 422, 667, 668, 669, 670, 671, 672, 1879, 72, 2603, 73, 2604, 2605, 1880, 1881, 1882, 1883, 1884, 74, 2606, 1885, 75, 2607, 76, 481, 482, 2608, 77, 2609, 78, 2438, 79, 1886, 2439, 673, 674, 1887, 592, 1888, 80, 1889, 675, 676, 677, 678, 81, 483, 1890, 2649, 82, 2644, 83, 484, 1891, 2645, 679, 680, 681, 682, 84, 2440, 85, 485, 1892, 2441, 683, 684, 86, 2442, 87, 486, 1893, 685, 686, 2443, 687, 688, 2638, 90, 689, 690, 2639, 2640, 88, 2641, 89, 691, 692, 2642, 92, 695, 696, 91, 693, 694, 423, 93, 2621, 2622, 95, 488, 487, 697, 698, 97, 540, 96, 2612, 2610, 2611, 94, 2613, 100, 699, 700, 2615, 2616, 701, 702, 703, 704, 2617, 98, 2619, 705, 706, 2618, 99, 2620, 101, 2643, 1894, 102, 2633, 707, 708, 2634, 709, 710, 2635, 711, 712, 1895, 1896, 104, 713, 714, 2623, 103, 715, 716, 717, 718, 719, 720, 721, 722, 1897, 492, 491, 490, 737, 738, 2624, 489, 731, 732, 2625, 733, 734, 735, 736, 2626, 723, 724, 105, 725, 726, 727, 728, 729, 730, 1898, 457, 458, 106, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 2627, 107, 2628, 753, 754, 493, 635, 494, 495, 636, 496, 2629, 1899, 2630, 1900, 755, 756, 757, 758, 759, 760, 2631, 1901, 2632, 1902, 1903, 1904, 1905, 761, 762, 763, 764, 2646, 109, 2647, 108, 2648, 2636, 110, 2637, 2614, 593, 651, 2444, 1906, 111, 541, 112, 2594, 114, 2588, 113, 2589, 2590, 115, 116, 117, 542, 2595, 1907, 1908, 118, 119, 120, 543, 2584, 121, 2445, 123, 2592, 124, 122, 2593, 2585, 125, 2586, 126, 2587, 1909, 2651, 459, 460, 128, 2652, 127, 2653, 2650, 594, 595, 2447, 2448, 129, 2654, 130, 132, 131, 765, 766, 767, 768, 2655, 1910, 769, 770, 133, 2656, 771, 772, 2657, 773, 774, 775, 776, 2658, 134, 777, 778, 779, 780, 135, 2659, 781, 782, 783, 784, 785, 786, 136, 2660, 137, 424, 2664, 2661, 2662, 2663, 138, 2672, 2673, 2670, 2671, 1911, 2669, 1912, 1913, 1914, 2665, 2666, 1915, 1916, 1917, 1918, 2667, 2668, 1919, 139, 2678, 2679, 2676, 2677, 478, 1920, 2680, 140, 2682, 2681, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 141, 2674, 2675, 1931, 1932, 2449, 142, 2450, 2451, 143, 2683, 144, 2684, 145, 2685, 147, 146, 2686, 2687, 2688, 148, 2689, 2690, 596, 2691, 149, 150, 151, 2488, 152, 2487, 153, 2452, 154, 2453, 155, 2454, 156, 2455, 157, 2456, 2457, 2458, 2459, 2460, 158, 801, 802, 2694, 803, 804, 805, 806, 2695, 809, 810, 2696, 811, 812, 813, 814, 2699, 815, 816, 793, 794, 795, 796, 799, 800, 2697, 2698, 817, 818, 159, 511, 2702, 819, 820, 807, 808, 787, 788, 789, 790, 797, 798, 791, 792, 2700, 2701, 821, 822, 160, 512, 2703, 823, 824, 825, 826, 1933, 827, 828, 829, 830, 831, 832, 833, 834, 2704, 2705, 1934, 2692, 161, 2693, 162, 835, 836, 2706, 837, 838, 2707, 163, 839, 840, 2708, 841, 842, 2709, 2710, 2711, 164, 513, 1935, 2712, 843, 844, 845, 846, 2713, 2714, 2715, 165, 514, 1936, 2716, 847, 848, 849, 850, 2717, 851, 852, 2718, 166, 515, 1937, 853, 854, 2719, 855, 856, 857, 858, 2722, 2723, 859, 860, 2724, 167, 516, 1938, 861, 862, 2725, 168, 584, 863, 2720, 169, 1939, 170, 585, 864, 2721, 171, 1940, 497, 1941, 1942, 867, 868, 498, 2726, 865, 866, 869, 870, 871, 872, 873, 874, 2727, 1943, 1944, 1945, 2728, 875, 876, 877, 878, 879, 880, 2729, 1946, 881, 882, 883, 884, 173, 2461, 172, 2462, 174, 1947, 1948, 2730, 885, 886, 2731, 425, 175, 2732, 887, 888, 176, 2733, 889, 890, 2734, 891, 892, 2735, 893, 894, 895, 896, 897, 898, 2736, 177, 2737, 899, 900, 2738, 903, 904, 901, 902, 2739, 905, 906, 2740, 178, 907, 908, 1949, 909, 910, 179, 2741, 911, 912, 180, 2742, 913, 914, 181, 2743, 1950, 1951, 1952, 182, 183, 915, 916, 917, 918, 919, 920, 2463, 921, 922, 1953, 597, 923, 924, 2542, 925, 926, 927, 928, 929, 930, 2543, 499, 500, 931, 932, 933, 934, 2464, 2465, 501, 502, 935, 936, 937, 938, 939, 940, 2535, 2536, 503, 504, 941, 942, 943, 944, 2537, 1954, 1955, 2517, 185, 1956, 1957, 1958, 186, 945, 946, 947, 948, 2751, 184, 2752, 2466, 949, 950, 951, 952, 953, 954, 187, 598, 188, 426, 2470, 472, 2467, 2468, 2469, 544, 427, 428, 429, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 2758, 965, 966, 967, 968, 969, 970, 189, 2759, 1959, 1960, 1961, 1962, 971, 972, 1963, 1964, 2471, 2472, 652, 2473, 973, 974, 975, 976, 2760, 2761, 190, 615, 637, 638, 193, 192, 456, 191, 977, 978, 979, 980, 2763, 1965, 1966, 1967, 1968, 1969, 195, 194, 467, 468, 981, 982, 545, 983, 984, 985, 986, 987, 988, 196, 2764, 989, 990, 2754, 198, 199, 2755, 197, 991, 992, 993, 994, 2756, 1970, 1971, 1972, 430, 995, 996, 2757, 997, 998, 999, 1000, 2753, 1001, 1002, 1003, 1004, 1005, 1006, 2762, 200, 1007, 1008, 2474, 2475, 1009, 1010, 203, 202, 2239, 2240, 201, 2241, 2242, 2765, 1011, 1012, 1973, 1975, 1974, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 2766, 1022, 1023, 2767, 1024, 1025, 2768, 1026, 1027, 2769, 1028, 1029, 2770, 505, 1030, 1031, 1032, 1033, 2771, 1034, 1035, 2772, 1036, 1037, 2773, 1038, 1039, 1040, 1041, 2774, 1976, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 2775, 204, 1050, 1051, 2538, 2539, 1052, 1053, 2540, 1054, 1055, 2541, 205, 1056, 1057, 2480, 1058, 1059, 2481, 1977, 1060, 1061, 1062, 1063, 2482, 1978, 206, 1064, 1065, 1066, 1067, 2476, 2477, 1068, 1069, 2478, 1070, 1071, 1072, 1073, 2479, 208, 1074, 1075, 1076, 1077, 2511, 1078, 1079, 2512, 1080, 1081, 207, 1082, 1083, 2513, 1979, 1084, 1085, 2514, 209, 1086, 1087, 1088, 1089, 2744, 1090, 1091, 1092, 1093, 2745, 1094, 1095, 210, 1096, 1097, 1098, 1099, 2746, 1980, 1100, 1101, 1102, 1103, 2747, 211, 1104, 1105, 1106, 1107, 2515, 1108, 1109, 2516, 212, 1110, 1111, 1112, 1113, 2748, 1114, 1115, 2749, 1116, 1117, 1118, 1119, 2750, 214, 215, 1981, 1982, 213, 2776, 431, 1983, 1984, 1120, 1121, 1122, 1123, 2777, 432, 2486, 2483, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 474, 2484, 2485, 546, 433, 434, 506, 1985, 1132, 1133, 2778, 2779, 217, 1134, 1135, 1136, 1137, 1986, 1138, 1139, 1140, 1141, 2781, 1142, 1143, 216, 2782, 1144, 1145, 1146, 1147, 1148, 1149, 2780, 1150, 1151, 2489, 218, 1987, 1152, 1153, 1154, 1155, 1156, 1157, 219, 2783, 2490, 220, 1158, 1159, 2491, 1988, 2492, 2493, 221, 1160, 1161, 2494, 1989, 223, 222, 2495, 2496, 1162, 1163, 2497, 1990, 225, 224, 2498, 2499, 1164, 1165, 2500, 1991, 227, 226, 2501, 599, 2502, 1166, 1167, 2503, 1992, 2504, 2505, 1168, 1169, 1170, 1171, 2506, 1993, 2784, 2785, 1994, 2786, 2787, 1995, 2507, 1172, 1173, 1996, 2508, 228, 1174, 1175, 229, 2509, 1176, 1177, 1178, 1179, 2510, 1997, 230, 1998, 2518, 232, 2788, 1188, 1189, 2790, 1182, 1183, 2789, 233, 547, 1184, 1185, 1999, 1186, 1187, 1190, 1191, 2791, 2000, 1192, 1193, 2792, 1194, 1195, 1180, 1181, 1196, 1197, 1198, 1199, 1200, 1201, 2001, 1202, 1203, 2793, 1204, 1205, 1206, 1207, 2794, 231, 2795, 1212, 1213, 1208, 1209, 234, 517, 1210, 1211, 235, 518, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 236, 519, 642, 641, 2010, 2011, 640, 639, 2012, 1222, 2519, 616, 2520, 2521, 237, 238, 1224, 1223, 2013, 2014, 2015, 239, 520, 2016, 2017, 2018, 2552, 617, 2553, 2554, 240, 241, 549, 548, 2019, 647, 2020, 2522, 2523, 244, 521, 1225, 1226, 242, 243, 2524, 2021, 246, 1227, 1228, 1229, 1230, 245, 248, 522, 247, 1231, 1232, 2525, 2022, 2023, 2024, 1233, 1234, 1235, 1236, 2025, 618, 1237, 1238, 249, 2526, 2026, 1239, 1240, 435, 619, 1241, 1242, 2527, 2027, 620, 1243, 1244, 250, 2528, 2028, 621, 1245, 1246, 251, 2529, 2029, 1251, 1252, 2530, 1247, 1248, 1249, 1250, 2030, 252, 2031, 523, 524, 254, 255, 1253, 1254, 253, 1255, 1256, 257, 525, 1257, 1258, 256, 1259, 1260, 1262, 1263, 1264, 1265, 1261, 1266, 1267, 2032, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 2033, 1276, 1277, 2796, 2034, 2035, 2797, 1278, 1279, 1280, 1281, 258, 1282, 1283, 600, 1284, 1285, 2798, 1286, 1287, 1288, 1289, 1290, 1291, 436, 622, 1292, 1293, 1294, 1295, 437, 1296, 1297, 259, 2531, 1298, 1299, 264, 1300, 1301, 260, 1302, 1303, 265, 2532, 2036, 261, 1304, 1305, 2533, 262, 1306, 1307, 2534, 266, 1308, 1309, 2037, 2038, 2039, 263, 1310, 1311, 1312, 1313, 461, 462, 1314, 1315, 1316, 1317, 2040, 1318, 2041, 267, 1319, 1320, 1321, 1322, 2042, 438, 623, 624, 1323, 1324, 1325, 1326, 439, 1327, 1328, 440, 625, 1329, 1330, 441, 626, 1331, 1332, 1333, 1334, 1369, 1370, 268, 1335, 1336, 442, 1337, 1338, 443, 627, 628, 629, 1339, 1340, 1341, 1342, 444, 1343, 1344, 445, 1345, 1346, 1347, 1348, 446, 1349, 1350, 447, 1351, 1352, 448, 1353, 1354, 449, 1355, 1356, 450, 1357, 1358, 630, 631, 632, 633, 1359, 1360, 1361, 1362, 451, 634, 1363, 1364, 1365, 1366, 452, 1367, 1368, 453, 1371, 1372, 1373, 1374, 1381, 1382, 269, 270, 271, 272, 526, 1375, 1376, 2801, 463, 464, 1377, 1378, 1379, 1380, 274, 275, 551, 276, 273, 550, 1383, 1384, 1385, 1386, 2043, 1387, 1388, 2044, 279, 1389, 1390, 278, 280, 473, 277, 2045, 284, 553, 283, 1391, 1392, 282, 552, 1399, 1400, 1395, 1396, 1393, 1394, 287, 1397, 1398, 288, 555, 286, 289, 554, 477, 281, 285, 1401, 1402, 1403, 1404, 2046, 2799, 1405, 1406, 653, 2800, 1407, 1408, 2047, 1411, 1412, 1409, 1410, 601, 2048, 1413, 1414, 2049, 1415, 1416, 1417, 1418, 454, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 290, 2803, 292, 1431, 1432, 291, 1433, 1434, 1430, 1435, 1436, 1437, 1438, 2802, 1439, 1440, 293, 1441, 1442, 1457, 1458, 1459, 1460, 602, 603, 1449, 1450, 1451, 1452, 2050, 2051, 296, 2052, 295, 2053, 294, 1447, 1448, 1443, 1444, 1445, 1446, 1453, 1454, 604, 1455, 1456, 2054, 2055, 299, 2056, 298, 2057, 297, 2058, 2059, 2545, 300, 1461, 1462, 1463, 1464, 1465, 1466, 2060, 2061, 303, 2062, 302, 2063, 301, 2064, 2065, 306, 2066, 305, 2067, 304, 2068, 2069, 307, 2804, 308, 1478, 1479, 309, 1467, 1472, 1473, 605, 1470, 1471, 1474, 1475, 2070, 2071, 312, 2072, 311, 2073, 310, 1468, 1469, 1476, 1477, 2074, 2075, 315, 2076, 314, 2077, 313, 2078, 2079, 2805, 316, 317, 318, 1480, 1481, 1482, 1483, 1484, 1485, 2080, 2081, 321, 2082, 320, 2083, 319, 2084, 2085, 2544, 322, 1486, 1487, 2086, 2087, 1496, 1497, 1498, 1499, 2806, 1494, 1495, 1500, 1501, 2807, 2808, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 2809, 324, 565, 1490, 1491, 325, 326, 564, 1492, 1493, 327, 328, 323, 563, 465, 466, 332, 606, 2810, 330, 331, 562, 329, 561, 333, 560, 1514, 1515, 338, 336, 337, 559, 335, 558, 339, 340, 334, 557, 1516, 1517, 1488, 1489, 342, 343, 341, 556, 1518, 1519, 1520, 1521, 1528, 1529, 1530, 1531, 2812, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 607, 2811, 345, 346, 344, 572, 347, 571, 1542, 1543, 349, 350, 348, 570, 351, 569, 1544, 1545, 1522, 1523, 2813, 352, 568, 1524, 1525, 353, 567, 1546, 1547, 1526, 1527, 354, 566, 1548, 1549, 1550, 1551, 2814, 1552, 1553, 1554, 1555, 2815, 1556, 1557, 2816, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 358, 360, 575, 469, 359, 357, 356, 574, 361, 355, 573, 2088, 2546, 1572, 1573, 362, 363, 364, 586, 365, 366, 527, 528, 576, 1574, 1575, 1576, 1577, 1578, 1579, 608, 2089, 2090, 654, 2547, 609, 1580, 1581, 1582, 1583, 368, 2091, 367, 610, 373, 1584, 1585, 374, 370, 508, 507, 2548, 2092, 375, 369, 372, 371, 2549, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 376, 377, 378, 2550, 2093, 2094, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 2095, 2096, 643, 587, 2817, 645, 644, 1606, 1607, 2097, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 379, 2098, 646, 1616, 1617, 1618, 1619, 1622, 1623, 1620, 1621, 381, 1624, 1625, 1626, 1627, 1628, 1629, 2551, 380, 2099, 2100, 470, 471, 2555, 2101, 383, 579, 2102, 384, 382, 578, 385, 577, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 386, 2118, 2119, 2120, 2121, 2122, 2123, 1630, 1631, 1632, 1633, 1634, 1635, 2124, 387, 1636, 1637, 389, 390, 388, 529, 1638, 1639, 1640, 1641, 2125, 2126, 2127, 2128, 2129, 2130, 1642, 1643, 1644, 1645, 2131, 391, 2827, 2132, 392, 2133, 393, 2134, 1646, 1647, 2135, 2136, 1648, 1649, 394, 2828, 2137, 1650, 1651, 1652, 1653, 1654, 1655, 2556, 2829, 475, 530, 1656, 1657, 1658, 1659, 1660, 1661, 395, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 403, 402, 401, 400, 399, 398, 397, 396, 404, 2138, 1682, 1683, 2139, 2140, 1685, 2830, 2141, 1684, 2142, 2143, 2144, 2145, 2146, 2147, 1686, 2148, 2149, 2150, 2151, 1687, 2152, 2153, 2154, 1688, 2155, 1689, 1690, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 406, 2167, 2168, 2169, 2170, 405, 2831, 2832, 2171, 2172, 407, 2173, 2174, 531, 2833, 2175, 2176, 1692, 2834, 1693, 1694, 2177, 1691, 2178, 2179, 2180, 2181, 1695, 2182, 2183, 2184, 2185, 1696, 2186, 2187, 2188, 1697, 1698, 2189, 1699, 1700, 1701, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 409, 2199, 2200, 2201, 2202, 408, 2835, 2836, 2203, 2204, 2205, 2206, 2838, 410, 580, 2207, 2208, 411, 412, 2375, 2374, 2376, 2837, 414, 413, 2839, 2840, 2209, 2841, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373 }
}

define i32 @function_28244(i32 %arg1) local_unnamed_addr {
dec_label_pc_28244:
  %0 = alloca i1
  %r0.0.reg2mem = alloca i32, !insn.addr !12482
  %1 = load i1, i1* %0
  store i32 %arg1, i32* %r0.0.reg2mem, !insn.addr !12482
  br i1 %1, label %dec_label_pc_28246, label %2, !insn.addr !12482

; <label>:2:                                      ; preds = %dec_label_pc_28244
  %3 = call i32 @"$d.76"(), !insn.addr !12482
  store i32 %3, i32* %r0.0.reg2mem, !insn.addr !12482
  br label %dec_label_pc_28246, !insn.addr !12482

dec_label_pc_28246:                               ; preds = %dec_label_pc_28244, %2
  %r0.0.reload = load i32, i32* %r0.0.reg2mem
  ret i32 %r0.0.reload, !insn.addr !12483

; uselistorder directives
  uselistorder label %dec_label_pc_28246, { 1, 0 }
}

define i32 @__libc_csu_fini() local_unnamed_addr {
dec_label_pc_28248:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @_fini(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2824c:
  %0 = call i32 @__asm_nop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4), !insn.addr !12484
  ret i32 %0, !insn.addr !12485

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__asm_nop, { 70, 46, 45, 44, 69, 68, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 43, 29, 28, 27, 67, 26, 25, 24, 52, 66, 55, 54, 53, 65, 23, 64, 20, 19, 63, 18, 16, 15, 62, 21, 22, 17, 61, 14, 60, 13, 12, 59, 11, 57, 58, 10, 56, 9, 8, 7, 6, 51, 50, 49, 48, 47, 5, 4, 3, 2, 1, 0 }
}

define i32 @"$d.76"() local_unnamed_addr {
dec_label_pc_2825c:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_2f2c0() local_unnamed_addr {
dec_label_pc_2f2c0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_44958() local_unnamed_addr {
dec_label_pc_44958:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_4495c() local_unnamed_addr {
dec_label_pc_4495c:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_46268() local_unnamed_addr {
dec_label_pc_46268:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_4626c() local_unnamed_addr {
dec_label_pc_4626c:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_4b824() local_unnamed_addr {
dec_label_pc_4b824:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_4bb34() local_unnamed_addr {
dec_label_pc_4bb34:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1499e0() local_unnamed_addr {
dec_label_pc_1499e0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_149a18() local_unnamed_addr {
dec_label_pc_149a18:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_149a78() local_unnamed_addr {
dec_label_pc_149a78:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_18bc54() local_unnamed_addr {
dec_label_pc_18bc54:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_209c48() local_unnamed_addr {
dec_label_pc_209c48:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_209c80() local_unnamed_addr {
dec_label_pc_209c80:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_209dd0() local_unnamed_addr {
dec_label_pc_209dd0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_209e08() local_unnamed_addr {
dec_label_pc_209e08:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_28b944() local_unnamed_addr {
dec_label_pc_28b944:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_30b968() local_unnamed_addr {
dec_label_pc_30b968:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_5cb350() local_unnamed_addr {
dec_label_pc_5cb350:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_5cb660() local_unnamed_addr {
dec_label_pc_5cb660:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_5cbc78() local_unnamed_addr {
dec_label_pc_5cbc78:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

declare i32 @unknown_449fd0() local_unnamed_addr

declare i32 @unknown_449fe8() local_unnamed_addr

declare i32 @unknown_463042() local_unnamed_addr

define i32 @function_604434() local_unnamed_addr {
dec_label_pc_604434:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_605d44() local_unnamed_addr {
dec_label_pc_605d44:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_90b9b6() local_unnamed_addr {
dec_label_pc_90b9b6:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_d49a68() local_unnamed_addr {
dec_label_pc_d49a68:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_dc7064() local_unnamed_addr {
dec_label_pc_dc7064:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_e49a70() local_unnamed_addr {
dec_label_pc_e49a70:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ec9a60() local_unnamed_addr {
dec_label_pc_ec9a60:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_102f2c0() local_unnamed_addr {
dec_label_pc_102f2c0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1061830() local_unnamed_addr {
dec_label_pc_1061830:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1062f2c() local_unnamed_addr {
dec_label_pc_1062f2c:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1062f36() local_unnamed_addr {
dec_label_pc_1062f36:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1062f66() local_unnamed_addr {
dec_label_pc_1062f66:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_10c9a28() local_unnamed_addr {
dec_label_pc_10c9a28:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_10c9a30() local_unnamed_addr {
dec_label_pc_10c9a30:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_10c9a38() local_unnamed_addr {
dec_label_pc_10c9a38:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1209c98() local_unnamed_addr {
dec_label_pc_1209c98:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1209cd0() local_unnamed_addr {
dec_label_pc_1209cd0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1220ecc() local_unnamed_addr {
dec_label_pc_1220ecc:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1220ef0() local_unnamed_addr {
dec_label_pc_1220ef0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1222e9e() local_unnamed_addr {
dec_label_pc_1222e9e:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1222f4a() local_unnamed_addr {
dec_label_pc_1222f4a:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1222f6a() local_unnamed_addr {
dec_label_pc_1222f6a:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1222fd4() local_unnamed_addr {
dec_label_pc_1222fd4:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_145e726() local_unnamed_addr {
dec_label_pc_145e726:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1a09e88() local_unnamed_addr {
dec_label_pc_1a09e88:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1a09ec0() local_unnamed_addr {
dec_label_pc_1a09ec0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_1b4b890() local_unnamed_addr {
dec_label_pc_1b4b890:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_20cf107() local_unnamed_addr {
dec_label_pc_20cf107:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_303f2c0() local_unnamed_addr {
dec_label_pc_303f2c0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_30cf107() local_unnamed_addr {
dec_label_pc_30cf107:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_18d368fa() local_unnamed_addr {
dec_label_pc_18d368fa:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_21000303() local_unnamed_addr {
dec_label_pc_21000303:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_230060fb() local_unnamed_addr {
dec_label_pc_230060fb:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_230071fb() local_unnamed_addr {
dec_label_pc_230071fb:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_2300ff7f() local_unnamed_addr {
dec_label_pc_2300ff7f:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_23e0f645() local_unnamed_addr {
dec_label_pc_23e0f645:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_23e8f645() local_unnamed_addr {
dec_label_pc_23e8f645:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_303cf248() local_unnamed_addr {
dec_label_pc_303cf248:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_30ccf8c7() local_unnamed_addr {
dec_label_pc_30ccf8c7:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_429a68bb() local_unnamed_addr {
dec_label_pc_429a68bb:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_4603af00() local_unnamed_addr {
dec_label_pc_4603af00:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_4603af02() local_unnamed_addr {
dec_label_pc_4603af02:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_461023b8() local_unnamed_addr {
dec_label_pc_461023b8:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_461079fa() local_unnamed_addr {
dec_label_pc_461079fa:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_46197080() local_unnamed_addr {
dec_label_pc_46197080:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_461a0102() local_unnamed_addr {
dec_label_pc_461a0102:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_461a2100() local_unnamed_addr {
dec_label_pc_461a2100:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_461a4603() local_unnamed_addr {
dec_label_pc_461a4603:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_46bd0710() local_unnamed_addr {
dec_label_pc_46bd0710:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_54992101() local_unnamed_addr {
dec_label_pc_54992101:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_60bb3301() local_unnamed_addr {
dec_label_pc_60bb3301:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_610cf248() local_unnamed_addr {
dec_label_pc_610cf248:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_681b0303() local_unnamed_addr {
dec_label_pc_681b0303:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_68bbec68() local_unnamed_addr {
dec_label_pc_68bbec68:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_71ba460a() local_unnamed_addr {
dec_label_pc_71ba460a:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_733b2320() local_unnamed_addr {
dec_label_pc_733b2320:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_733b23ff() local_unnamed_addr {
dec_label_pc_733b23ff:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_737b2300() local_unnamed_addr {
dec_label_pc_737b2300:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_79fa5499() local_unnamed_addr {
dec_label_pc_79fa5499:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_79fb60bb() local_unnamed_addr {
dec_label_pc_79fb60bb:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_79fbec16() local_unnamed_addr {
dec_label_pc_79fbec16:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_b084b580() local_unnamed_addr {
dec_label_pc_b084b580:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_b0b6b580() local_unnamed_addr {
dec_label_pc_b0b6b580:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_b2db68fb() local_unnamed_addr {
dec_label_pc_b2db68fb:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_bf00bd80() local_unnamed_addr {
dec_label_pc_bf00bd80:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_e01560bb() local_unnamed_addr {
dec_label_pc_e01560bb:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ebc6f7ff() local_unnamed_addr {
dec_label_pc_ebc6f7ff:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ecb4f7ff() local_unnamed_addr {
dec_label_pc_ecb4f7ff:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f107d8da() local_unnamed_addr {
dec_label_pc_f107d8da:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f24160fb() local_unnamed_addr {
dec_label_pc_f24160fb:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f2480002() local_unnamed_addr {
dec_label_pc_f2480002:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f24879fb() local_unnamed_addr {
dec_label_pc_f24879fb:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f2c023dc() local_unnamed_addr {
dec_label_pc_f2c023dc:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f2c023e8() local_unnamed_addr {
dec_label_pc_f2c023e8:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f2c0303c() local_unnamed_addr {
dec_label_pc_f2c0303c:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f2c051f8() local_unnamed_addr {
dec_label_pc_f2c051f8:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f44f681b() local_unnamed_addr {
dec_label_pc_f44f681b:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f64579fa() local_unnamed_addr {
dec_label_pc_f64579fa:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f645ffaf() local_unnamed_addr {
dec_label_pc_f645ffaf:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f7ff3088() local_unnamed_addr {
dec_label_pc_f7ff3088:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f7ff4618() local_unnamed_addr {
dec_label_pc_f7ff4618:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f7ff4619() local_unnamed_addr {
dec_label_pc_f7ff4619:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_f7ff461a() local_unnamed_addr {
dec_label_pc_f7ff461a:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_fa44f01e() local_unnamed_addr {
dec_label_pc_fa44f01e:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_fe449c96() local_unnamed_addr {
dec_label_pc_fe449c96:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_fe80b7be() local_unnamed_addr {
dec_label_pc_fe80b7be:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_feadea6e() local_unnamed_addr {
dec_label_pc_feadea6e:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ff049ef4() local_unnamed_addr {
dec_label_pc_ff049ef4:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ff209ed8() local_unnamed_addr {
dec_label_pc_ff209ed8:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ff20a02a() local_unnamed_addr {
dec_label_pc_ff20a02a:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ff20bc16() local_unnamed_addr {
dec_label_pc_ff20bc16:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ff20bce8() local_unnamed_addr {
dec_label_pc_ff20bce8:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ff20be0e() local_unnamed_addr {
dec_label_pc_ff20be0e:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ff2dea72() local_unnamed_addr {
dec_label_pc_ff2dea72:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa04db0() local_unnamed_addr {
dec_label_pc_ffa04db0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa04e00() local_unnamed_addr {
dec_label_pc_ffa04e00:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa066c0() local_unnamed_addr {
dec_label_pc_ffa066c0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa06710() local_unnamed_addr {
dec_label_pc_ffa06710:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa0bc1a() local_unnamed_addr {
dec_label_pc_ffa0bc1a:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa0bcc0() local_unnamed_addr {
dec_label_pc_ffa0bcc0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa0bcc8() local_unnamed_addr {
dec_label_pc_ffa0bcc8:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa0bcec() local_unnamed_addr {
dec_label_pc_ffa0bcec:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa0be12() local_unnamed_addr {
dec_label_pc_ffa0be12:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa0bfd0() local_unnamed_addr {
dec_label_pc_ffa0bfd0:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa0bfd8() local_unnamed_addr {
dec_label_pc_ffa0bfd8:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffa0bffc() local_unnamed_addr {
dec_label_pc_ffa0bffc:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffb5ea76() local_unnamed_addr {
dec_label_pc_ffb5ea76:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_ffe6b02e() local_unnamed_addr {
dec_label_pc_ffe6b02e:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1
}

define i32 @function_fffccc36() local_unnamed_addr {
dec_label_pc_fffccc36:
  %0 = alloca i32
  %1 = load i32, i32* %0
  ret i32 %1

; uselistorder directives
  uselistorder i32 1, {}
}

declare i32 @__asm_nop(i32, i32, i32, i32) local_unnamed_addr

declare float @__asm_vldr(i32) local_unnamed_addr

declare float @__asm_vcvt.f32.u32(float) local_unnamed_addr

declare float @__asm_vmov.f32(float) local_unnamed_addr

declare void @__asm_vstr(float, i32) local_unnamed_addr

declare i32 @__asm_ite() local_unnamed_addr

declare i32 @__asm_adr(i32) local_unnamed_addr

declare double @__asm_vldr.70(i32) local_unnamed_addr

declare i32 @__asm_sxtb(i32) local_unnamed_addr

declare i32 @__asm_it() local_unnamed_addr

declare i32 @__asm_ubfx(i32, i32, i32) local_unnamed_addr

declare void @__asm_vstr.71(double, i32) local_unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1) #0

declare i32 @__asm_itt() local_unnamed_addr

declare i32 @__asm_orn(i32, i32) local_unnamed_addr

declare void @__asm_vcmpe.f32(float, float) local_unnamed_addr

declare void @__asm_vmrs(i32, i32) local_unnamed_addr

declare float @__asm_vsub.f32(float, float) local_unnamed_addr

declare float @__asm_vdiv.f32(float, float) local_unnamed_addr

declare float @__asm_vcvt.u32.f32(float) local_unnamed_addr

declare i32 @__asm_vmov(float) local_unnamed_addr

declare float @__asm_vmov.72(i32) local_unnamed_addr

declare float @__asm_vcvt.f32.s32(float) local_unnamed_addr

declare float @__asm_vmul.f32(float, float) local_unnamed_addr

declare double @__asm_vpush(double) local_unnamed_addr

declare double @__asm_vmov.73(i32, i32) local_unnamed_addr

declare i32 @__asm_vmov.74(double) local_unnamed_addr

declare i32 @__asm_ittt() local_unnamed_addr

declare i32 @__asm_itttt() local_unnamed_addr

declare i32 @__asm_itte() local_unnamed_addr

declare i32 @__asm_smlabteq(i32, i32, i32) local_unnamed_addr

declare void @__asm_stcl(i32, i32, i32, i32) local_unnamed_addr

declare void @__asm_ldc(i32, i32, i32, i32) local_unnamed_addr

declare void @__asm_mrc2(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare double @__asm_vpop(double) local_unnamed_addr

declare double @__asm_vmax.u16(double, double) local_unnamed_addr

declare void @__asm_stclt(i32, i32, i32) local_unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #0

attributes #0 = { nounwind readnone speculatable }
attributes #1 = { cold noreturn nounwind }

!0 = !{i64 35942}
!1 = !{i64 35946}
!2 = !{i64 35948}
!3 = !{i64 36368}
!4 = !{i64 36754}
!5 = !{i64 36758}
!6 = !{i64 36764}
!7 = !{i64 36766}
!8 = !{i64 36782}
!9 = !{i64 36784}
!10 = !{i64 36786}
!11 = !{i64 36790}
!12 = !{i64 36812}
!13 = !{i64 36854}
!14 = !{i64 36880}
!15 = !{i64 36884}
!16 = !{i64 36886}
!17 = !{i64 36888}
!18 = !{i64 36894}
!19 = !{i64 36896}
!20 = !{i64 36922}
!21 = !{i64 36936}
!22 = !{i64 36952}
!23 = !{i64 36956}
!24 = !{i64 36964}
!25 = !{i64 36966}
!26 = !{i64 36972}
!27 = !{i64 36980}
!28 = !{i64 36982}
!29 = !{i64 36988}
!30 = !{i64 37000}
!31 = !{i64 37004}
!32 = !{i64 37006}
!33 = !{i64 37012}
!34 = !{i64 37026}
!35 = !{i64 37028}
!36 = !{i64 37030}
!37 = !{i64 37036}
!38 = !{i64 37038}
!39 = !{i64 37040}
!40 = !{i64 37042}
!41 = !{i64 37052}
!42 = !{i64 37062}
!43 = !{i64 37066}
!44 = !{i64 37086}
!45 = !{i64 37090}
!46 = !{i64 37112}
!47 = !{i64 37116}
!48 = !{i64 37122}
!49 = !{i64 37124}
!50 = !{i64 37126}
!51 = !{i64 37128}
!52 = !{i64 37138}
!53 = !{i64 37148}
!54 = !{i64 37150}
!55 = !{i64 37164}
!56 = !{i64 37152}
!57 = !{i64 37176}
!58 = !{i64 37178}
!59 = !{i64 37180}
!60 = !{i64 37182}
!61 = !{i64 37186}
!62 = !{i64 37196}
!63 = !{i64 37198}
!64 = !{i64 37200}
!65 = !{i64 37202}
!66 = !{i64 37206}
!67 = !{i64 37224}
!68 = !{i64 37236}
!69 = !{i64 37246}
!70 = !{i64 37248}
!71 = !{i64 37250}
!72 = !{i64 37262}
!73 = !{i64 37264}
!74 = !{i64 37274}
!75 = !{i64 37328}
!76 = !{i64 37350}
!77 = !{i64 37358}
!78 = !{i64 37370}
!79 = !{i64 37380}
!80 = !{i64 37450}
!81 = !{i64 37452}
!82 = !{i64 37504}
!83 = !{i64 37524}
!84 = !{i64 37534}
!85 = !{i64 37542}
!86 = !{i64 37576}
!87 = !{i64 37580}
!88 = !{i64 37584}
!89 = !{i64 37592}
!90 = !{i64 37596}
!91 = !{i64 37600}
!92 = !{i64 37604}
!93 = !{i64 37630}
!94 = !{i64 37634}
!95 = !{i64 37636}
!96 = !{i64 37638}
!97 = !{i64 37642}
!98 = !{i64 37644}
!99 = !{i64 37650}
!100 = !{i64 37656}
!101 = !{i64 37660}
!102 = !{i64 37664}
!103 = !{i64 37668}
!104 = !{i64 37676}
!105 = !{i64 37680}
!106 = !{i64 37684}
!107 = !{i64 37696}
!108 = !{i64 37688}
!109 = !{i64 37692}
!110 = !{i64 37704}
!111 = !{i64 37712}
!112 = !{i64 37716}
!113 = !{i64 37720}
!114 = !{i64 37722}
!115 = !{i64 37724}
!116 = !{i64 37734}
!117 = !{i64 37742}
!118 = !{i64 37746}
!119 = !{i64 37748}
!120 = !{i64 37750}
!121 = !{i64 37752}
!122 = !{i64 37762}
!123 = !{i64 37772}
!124 = !{i64 37822}
!125 = !{i64 37828}
!126 = !{i64 37850}
!127 = !{i64 37858}
!128 = !{i64 37870}
!129 = !{i64 37878}
!130 = !{i64 37888}
!131 = !{i64 37928}
!132 = !{i64 37950}
!133 = !{i64 37958}
!134 = !{i64 37970}
!135 = !{i64 37980}
!136 = !{i64 37984}
!137 = !{i64 38022}
!138 = !{i64 38030}
!139 = !{i64 38092}
!140 = !{i64 38100}
!141 = !{i64 38110}
!142 = !{i64 38112}
!143 = !{i64 38042}
!144 = !{i64 38050}
!145 = !{i64 38062}
!146 = !{i64 38066}
!147 = !{i64 38074}
!148 = !{i64 38080}
!149 = !{i64 38120}
!150 = !{i64 38124}
!151 = !{i64 38152}
!152 = !{i64 38158}
!153 = !{i64 38180}
!154 = !{i64 38196}
!155 = !{i64 38210}
!156 = !{i64 38214}
!157 = !{i64 38232}
!158 = !{i64 38244}
!159 = !{i64 38592}
!160 = !{i64 38598}
!161 = !{i64 38600}
!162 = !{i64 38290}
!163 = !{i64 38292}
!164 = !{i64 38298}
!165 = !{i64 38314}
!166 = !{i64 38338}
!167 = !{i64 38342}
!168 = !{i64 38348}
!169 = !{i64 38350}
!170 = !{i64 38358}
!171 = !{i64 38364}
!172 = !{i64 38380}
!173 = !{i64 38404}
!174 = !{i64 38408}
!175 = !{i64 38414}
!176 = !{i64 38416}
!177 = !{i64 38424}
!178 = !{i64 38430}
!179 = !{i64 38446}
!180 = !{i64 38470}
!181 = !{i64 38474}
!182 = !{i64 38480}
!183 = !{i64 38482}
!184 = !{i64 38490}
!185 = !{i64 38496}
!186 = !{i64 38512}
!187 = !{i64 38536}
!188 = !{i64 38552}
!189 = !{i64 38564}
!190 = !{i64 38570}
!191 = !{i64 38578}
!192 = !{i64 38608}
!193 = !{i64 38624}
!194 = !{i64 38638}
!195 = !{i64 38646}
!196 = !{i64 38648}
!197 = !{i64 38654}
!198 = !{i64 38664}
!199 = !{i64 38708}
!200 = !{i64 38720}
!201 = !{i64 38726}
!202 = !{i64 38728}
!203 = !{i64 38754}
!204 = !{i64 38756}
!205 = !{i64 38762}
!206 = !{i64 38774}
!207 = !{i64 38786}
!208 = !{i64 38788}
!209 = !{i64 38800}
!210 = !{i64 38806}
!211 = !{i64 38808}
!212 = !{i64 38830}
!213 = !{i64 38854}
!214 = !{i64 38862}
!215 = !{i64 38864}
!216 = !{i64 38868}
!217 = !{i64 38872}
!218 = !{i64 38874}
!219 = !{i64 38888}
!220 = !{i64 38890}
!221 = !{i64 38900}
!222 = !{i64 38902}
!223 = !{i64 38904}
!224 = !{i64 38906}
!225 = !{i64 38916}
!226 = !{i64 38918}
!227 = !{i64 38924}
!228 = !{i64 38926}
!229 = !{i64 38940}
!230 = !{i64 38998}
!231 = !{i64 39010}
!232 = !{i64 39014}
!233 = !{i64 39026}
!234 = !{i64 39050}
!235 = !{i64 39058}
!236 = !{i64 39060}
!237 = !{i64 39062}
!238 = !{i64 39068}
!239 = !{i64 39070}
!240 = !{i64 39088}
!241 = !{i64 39116}
!242 = !{i64 39126}
!243 = !{i64 39128}
!244 = !{i64 39130}
!245 = !{i64 39132}
!246 = !{i64 39134}
!247 = !{i64 39148}
!248 = !{i64 39150}
!249 = !{i64 39160}
!250 = !{i64 39162}
!251 = !{i64 39164}
!252 = !{i64 39166}
!253 = !{i64 39176}
!254 = !{i64 39178}
!255 = !{i64 39184}
!256 = !{i64 39186}
!257 = !{i64 39200}
!258 = !{i64 39210}
!259 = !{i64 39272}
!260 = !{i64 39284}
!261 = !{i64 39288}
!262 = !{i64 39294}
!263 = !{i64 39316}
!264 = !{i64 39342}
!265 = !{i64 39364}
!266 = !{i64 39372}
!267 = !{i64 39374}
!268 = !{i64 39376}
!269 = !{i64 39378}
!270 = !{i64 39414}
!271 = !{i64 39416}
!272 = !{i64 39454}
!273 = !{i64 39456}
!274 = !{i64 39494}
!275 = !{i64 39496}
!276 = !{i64 39514}
!277 = !{i64 39516}
!278 = !{i64 39526}
!279 = !{i64 39528}
!280 = !{i64 39530}
!281 = !{i64 39532}
!282 = !{i64 39542}
!283 = !{i64 39544}
!284 = !{i64 39550}
!285 = !{i64 39552}
!286 = !{i64 39566}
!287 = !{i64 39380}
!288 = !{i64 39418}
!289 = !{i64 39420}
!290 = !{i64 39458}
!291 = !{i64 39460}
!292 = !{i64 39498}
!293 = !{i64 39576}
!294 = !{i64 39582}
!295 = !{i64 39590}
!296 = !{i64 39592}
!297 = !{i64 39600}
!298 = !{i64 39606}
!299 = !{i64 39608}
!300 = !{i64 39620}
!301 = !{i64 39642}
!302 = !{i64 39662}
!303 = !{i64 39664}
!304 = !{i64 39666}
!305 = !{i64 39708}
!306 = !{i64 39752}
!307 = !{i64 39756}
!308 = !{i64 39770}
!309 = !{i64 39772}
!310 = !{i64 39806}
!311 = !{i64 39814}
!312 = !{i64 39832}
!313 = !{i64 39844}
!314 = !{i64 39850}
!315 = !{i64 39854}
!316 = !{i64 39866}
!317 = !{i64 39870}
!318 = !{i64 39876}
!319 = !{i64 39888}
!320 = !{i64 39890}
!321 = !{i64 39900}
!322 = !{i64 39914}
!323 = !{i64 39926}
!324 = !{i64 39940}
!325 = !{i64 39950}
!326 = !{i64 39952}
!327 = !{i64 39962}
!328 = !{i64 39976}
!329 = !{i64 39988}
!330 = !{i64 39994}
!331 = !{i64 40006}
!332 = !{i64 40018}
!333 = !{i64 40028}
!334 = !{i64 40040}
!335 = !{i64 40058}
!336 = !{i64 40062}
!337 = !{i64 40074}
!338 = !{i64 40086}
!339 = !{i64 40104}
!340 = !{i64 40108}
!341 = !{i64 40120}
!342 = !{i64 40122}
!343 = !{i64 40124}
!344 = !{i64 40140}
!345 = !{i64 40144}
!346 = !{i64 40160}
!347 = !{i64 40164}
!348 = !{i64 40216}
!349 = !{i64 40232}
!350 = !{i64 40244}
!351 = !{i64 40260}
!352 = !{i64 40314}
!353 = !{i64 40318}
!354 = !{i64 40320}
!355 = !{i64 40332}
!356 = !{i64 40342}
!357 = !{i64 40346}
!358 = !{i64 40352}
!359 = !{i64 40364}
!360 = !{i64 40374}
!361 = !{i64 40378}
!362 = !{i64 40386}
!363 = !{i64 40392}
!364 = !{i64 40404}
!365 = !{i64 40408}
!366 = !{i64 40420}
!367 = !{i64 40430}
!368 = !{i64 40442}
!369 = !{i64 40446}
!370 = !{i64 40448}
!371 = !{i64 40458}
!372 = !{i64 40460}
!373 = !{i64 40462}
!374 = !{i64 40476}
!375 = !{i64 40488}
!376 = !{i64 40492}
!377 = !{i64 40496}
!378 = !{i64 40510}
!379 = !{i64 40522}
!380 = !{i64 40524}
!381 = !{i64 40534}
!382 = !{i64 40548}
!383 = !{i64 40560}
!384 = !{i64 40574}
!385 = !{i64 40586}
!386 = !{i64 40590}
!387 = !{i64 40602}
!388 = !{i64 40614}
!389 = !{i64 40620}
!390 = !{i64 40846}
!391 = !{i64 40858}
!392 = !{i64 40866}
!393 = !{i64 40868}
!394 = !{i64 40660}
!395 = !{i64 40672}
!396 = !{i64 40676}
!397 = !{i64 40678}
!398 = !{i64 40694}
!399 = !{i64 40698}
!400 = !{i64 40716}
!401 = !{i64 40720}
!402 = !{i64 40736}
!403 = !{i64 40740}
!404 = !{i64 40752}
!405 = !{i64 40768}
!406 = !{i64 40784}
!407 = !{i64 40800}
!408 = !{i64 40826}
!409 = !{i64 40828}
!410 = !{i64 40834}
!411 = !{i64 40880}
!412 = !{i64 40890}
!413 = !{i64 40904}
!414 = !{i64 40920}
!415 = !{i64 40926}
!416 = !{i64 40948}
!417 = !{i64 40954}
!418 = !{i64 40974}
!419 = !{i64 40978}
!420 = !{i64 40996}
!421 = !{i64 41000}
!422 = !{i64 41012}
!423 = !{i64 41016}
!424 = !{i64 41030}
!425 = !{i64 41036}
!426 = !{i64 41042}
!427 = !{i64 41052}
!428 = !{i64 41060}
!429 = !{i64 41088}
!430 = !{i64 41096}
!431 = !{i64 41114}
!432 = !{i64 41126}
!433 = !{i64 41132}
!434 = !{i64 41136}
!435 = !{i64 41148}
!436 = !{i64 41152}
!437 = !{i64 41164}
!438 = !{i64 41166}
!439 = !{i64 41176}
!440 = !{i64 41190}
!441 = !{i64 41202}
!442 = !{i64 41206}
!443 = !{i64 41218}
!444 = !{i64 41230}
!445 = !{i64 41248}
!446 = !{i64 41260}
!447 = !{i64 41278}
!448 = !{i64 41290}
!449 = !{i64 41308}
!450 = !{i64 41320}
!451 = !{i64 41340}
!452 = !{i64 41352}
!453 = !{i64 41354}
!454 = !{i64 41364}
!455 = !{i64 41378}
!456 = !{i64 41384}
!457 = !{i64 41396}
!458 = !{i64 41400}
!459 = !{i64 41412}
!460 = !{i64 41418}
!461 = !{i64 41430}
!462 = !{i64 41436}
!463 = !{i64 41448}
!464 = !{i64 41462}
!465 = !{i64 41472}
!466 = !{i64 41474}
!467 = !{i64 41484}
!468 = !{i64 41498}
!469 = !{i64 41506}
!470 = !{i64 41518}
!471 = !{i64 41530}
!472 = !{i64 41540}
!473 = !{i64 41600}
!474 = !{i64 41612}
!475 = !{i64 41630}
!476 = !{i64 41634}
!477 = !{i64 41646}
!478 = !{i64 41648}
!479 = !{i64 41650}
!480 = !{i64 41668}
!481 = !{i64 41672}
!482 = !{i64 41688}
!483 = !{i64 41692}
!484 = !{i64 41704}
!485 = !{i64 41722}
!486 = !{i64 41726}
!487 = !{i64 41738}
!488 = !{i64 41790}
!489 = !{i64 41806}
!490 = !{i64 41818}
!491 = !{i64 41834}
!492 = !{i64 41888}
!493 = !{i64 41900}
!494 = !{i64 41906}
!495 = !{i64 41918}
!496 = !{i64 41938}
!497 = !{i64 41942}
!498 = !{i64 41968}
!499 = !{i64 41980}
!500 = !{i64 41984}
!501 = !{i64 41996}
!502 = !{i64 42002}
!503 = !{i64 42014}
!504 = !{i64 42026}
!505 = !{i64 42036}
!506 = !{i64 42048}
!507 = !{i64 42096}
!508 = !{i64 42108}
!509 = !{i64 42126}
!510 = !{i64 42130}
!511 = !{i64 42142}
!512 = !{i64 42144}
!513 = !{i64 42146}
!514 = !{i64 42164}
!515 = !{i64 42168}
!516 = !{i64 42184}
!517 = !{i64 42188}
!518 = !{i64 42200}
!519 = !{i64 42218}
!520 = !{i64 42222}
!521 = !{i64 42234}
!522 = !{i64 42286}
!523 = !{i64 42302}
!524 = !{i64 42314}
!525 = !{i64 42330}
!526 = !{i64 42384}
!527 = !{i64 42396}
!528 = !{i64 42402}
!529 = !{i64 42414}
!530 = !{i64 42434}
!531 = !{i64 42438}
!532 = !{i64 42440}
!533 = !{i64 42452}
!534 = !{i64 42462}
!535 = !{i64 42466}
!536 = !{i64 42472}
!537 = !{i64 42484}
!538 = !{i64 42494}
!539 = !{i64 42498}
!540 = !{i64 42506}
!541 = !{i64 42512}
!542 = !{i64 42524}
!543 = !{i64 42528}
!544 = !{i64 42540}
!545 = !{i64 42544}
!546 = !{i64 42546}
!547 = !{i64 42556}
!548 = !{i64 42558}
!549 = !{i64 42560}
!550 = !{i64 42574}
!551 = !{i64 42586}
!552 = !{i64 42590}
!553 = !{i64 42594}
!554 = !{i64 42608}
!555 = !{i64 42620}
!556 = !{i64 42622}
!557 = !{i64 42632}
!558 = !{i64 42646}
!559 = !{i64 42658}
!560 = !{i64 42672}
!561 = !{i64 42684}
!562 = !{i64 42688}
!563 = !{i64 42700}
!564 = !{i64 42712}
!565 = !{i64 42726}
!566 = !{i64 42990}
!567 = !{i64 43002}
!568 = !{i64 43010}
!569 = !{i64 43012}
!570 = !{i64 42750}
!571 = !{i64 42762}
!572 = !{i64 42766}
!573 = !{i64 42768}
!574 = !{i64 42784}
!575 = !{i64 42788}
!576 = !{i64 42806}
!577 = !{i64 42810}
!578 = !{i64 42826}
!579 = !{i64 42830}
!580 = !{i64 42848}
!581 = !{i64 42852}
!582 = !{i64 42864}
!583 = !{i64 42880}
!584 = !{i64 42896}
!585 = !{i64 42912}
!586 = !{i64 42938}
!587 = !{i64 42948}
!588 = !{i64 42968}
!589 = !{i64 42972}
!590 = !{i64 42978}
!591 = !{i64 43026}
!592 = !{i64 43036}
!593 = !{i64 43050}
!594 = !{i64 43066}
!595 = !{i64 43072}
!596 = !{i64 43094}
!597 = !{i64 43100}
!598 = !{i64 43120}
!599 = !{i64 43124}
!600 = !{i64 43142}
!601 = !{i64 43146}
!602 = !{i64 43158}
!603 = !{i64 43162}
!604 = !{i64 43170}
!605 = !{i64 43176}
!606 = !{i64 43188}
!607 = !{i64 43192}
!608 = !{i64 43178}
!609 = !{i64 43204}
!610 = !{i64 43222}
!611 = !{i64 43228}
!612 = !{i64 43232}
!613 = !{i64 43234}
!614 = !{i64 43244}
!615 = !{i64 43254}
!616 = !{i64 43256}
!617 = !{i64 43258}
!618 = !{i64 43268}
!619 = !{i64 43288}
!620 = !{i64 43300}
!621 = !{i64 43318}
!622 = !{i64 43322}
!623 = !{i64 43334}
!624 = !{i64 43340}
!625 = !{i64 43350}
!626 = !{i64 43412}
!627 = !{i64 43434}
!628 = !{i64 43442}
!629 = !{i64 43454}
!630 = !{i64 43464}
!631 = !{i64 43534}
!632 = !{i64 43536}
!633 = !{i64 43588}
!634 = !{i64 43608}
!635 = !{i64 43618}
!636 = !{i64 43656}
!637 = !{i64 43678}
!638 = !{i64 43686}
!639 = !{i64 43698}
!640 = !{i64 43708}
!641 = !{i64 43758}
!642 = !{i64 43764}
!643 = !{i64 43786}
!644 = !{i64 43794}
!645 = !{i64 43806}
!646 = !{i64 43814}
!647 = !{i64 43824}
!648 = !{i64 43828}
!649 = !{i64 43866}
!650 = !{i64 43874}
!651 = !{i64 43938}
!652 = !{i64 43940}
!653 = !{i64 43942}
!654 = !{i64 43886}
!655 = !{i64 43892}
!656 = !{i64 43904}
!657 = !{i64 43912}
!658 = !{i64 43918}
!659 = !{i64 43924}
!660 = !{i64 43928}
!661 = !{i64 43950}
!662 = !{i64 43958}
!663 = !{i64 43992}
!664 = !{i64 43996}
!665 = !{i64 44000}
!666 = !{i64 44028}
!667 = !{i64 44046}
!668 = !{i64 44050}
!669 = !{i64 44052}
!670 = !{i64 44054}
!671 = !{i64 44058}
!672 = !{i64 44060}
!673 = !{i64 44066}
!674 = !{i64 44072}
!675 = !{i64 44076}
!676 = !{i64 44080}
!677 = !{i64 44084}
!678 = !{i64 44104}
!679 = !{i64 44108}
!680 = !{i64 44112}
!681 = !{i64 44120}
!682 = !{i64 44128}
!683 = !{i64 44132}
!684 = !{i64 44136}
!685 = !{i64 44138}
!686 = !{i64 44140}
!687 = !{i64 44150}
!688 = !{i64 44158}
!689 = !{i64 44162}
!690 = !{i64 44164}
!691 = !{i64 44166}
!692 = !{i64 44168}
!693 = !{i64 44178}
!694 = !{i64 44188}
!695 = !{i64 44192}
!696 = !{i64 44220}
!697 = !{i64 44226}
!698 = !{i64 44248}
!699 = !{i64 44264}
!700 = !{i64 44278}
!701 = !{i64 44282}
!702 = !{i64 44300}
!703 = !{i64 44312}
!704 = !{i64 44358}
!705 = !{i64 44364}
!706 = !{i64 44388}
!707 = !{i64 44394}
!708 = !{i64 44410}
!709 = !{i64 44422}
!710 = !{i64 44428}
!711 = !{i64 44436}
!712 = !{i64 44450}
!713 = !{i64 44452}
!714 = !{i64 44458}
!715 = !{i64 44474}
!716 = !{i64 44488}
!717 = !{i64 44496}
!718 = !{i64 44500}
!719 = !{i64 44508}
!720 = !{i64 44518}
!721 = !{i64 44542}
!722 = !{i64 44554}
!723 = !{i64 44560}
!724 = !{i64 44562}
!725 = !{i64 44588}
!726 = !{i64 44590}
!727 = !{i64 44596}
!728 = !{i64 44608}
!729 = !{i64 44620}
!730 = !{i64 44622}
!731 = !{i64 44634}
!732 = !{i64 44640}
!733 = !{i64 44642}
!734 = !{i64 44664}
!735 = !{i64 44688}
!736 = !{i64 44696}
!737 = !{i64 44698}
!738 = !{i64 44702}
!739 = !{i64 44706}
!740 = !{i64 44708}
!741 = !{i64 44722}
!742 = !{i64 44724}
!743 = !{i64 44734}
!744 = !{i64 44736}
!745 = !{i64 44738}
!746 = !{i64 44740}
!747 = !{i64 44750}
!748 = !{i64 44752}
!749 = !{i64 44758}
!750 = !{i64 44760}
!751 = !{i64 44774}
!752 = !{i64 44832}
!753 = !{i64 44844}
!754 = !{i64 44848}
!755 = !{i64 44860}
!756 = !{i64 44884}
!757 = !{i64 44892}
!758 = !{i64 44894}
!759 = !{i64 44896}
!760 = !{i64 44902}
!761 = !{i64 44906}
!762 = !{i64 44916}
!763 = !{i64 44944}
!764 = !{i64 44954}
!765 = !{i64 44956}
!766 = !{i64 44958}
!767 = !{i64 44960}
!768 = !{i64 44962}
!769 = !{i64 44976}
!770 = !{i64 44978}
!771 = !{i64 44988}
!772 = !{i64 44990}
!773 = !{i64 44992}
!774 = !{i64 44994}
!775 = !{i64 45004}
!776 = !{i64 45006}
!777 = !{i64 45012}
!778 = !{i64 45014}
!779 = !{i64 45028}
!780 = !{i64 45038}
!781 = !{i64 45100}
!782 = !{i64 45112}
!783 = !{i64 45116}
!784 = !{i64 45122}
!785 = !{i64 45146}
!786 = !{i64 45172}
!787 = !{i64 45542}
!788 = !{i64 45566}
!789 = !{i64 45574}
!790 = !{i64 45576}
!791 = !{i64 45578}
!792 = !{i64 45580}
!793 = !{i64 45616}
!794 = !{i64 45618}
!795 = !{i64 45656}
!796 = !{i64 45658}
!797 = !{i64 45696}
!798 = !{i64 45698}
!799 = !{i64 45716}
!800 = !{i64 45718}
!801 = !{i64 45728}
!802 = !{i64 45730}
!803 = !{i64 45732}
!804 = !{i64 45734}
!805 = !{i64 45744}
!806 = !{i64 45746}
!807 = !{i64 45752}
!808 = !{i64 45754}
!809 = !{i64 45768}
!810 = !{i64 45582}
!811 = !{i64 45620}
!812 = !{i64 45622}
!813 = !{i64 45660}
!814 = !{i64 45662}
!815 = !{i64 45700}
!816 = !{i64 45778}
!817 = !{i64 45784}
!818 = !{i64 45792}
!819 = !{i64 45794}
!820 = !{i64 45802}
!821 = !{i64 45808}
!822 = !{i64 45810}
!823 = !{i64 45822}
!824 = !{i64 45844}
!825 = !{i64 45864}
!826 = !{i64 45866}
!827 = !{i64 45868}
!828 = !{i64 45910}
!829 = !{i64 45954}
!830 = !{i64 45958}
!831 = !{i64 45972}
!832 = !{i64 45976}
!833 = !{i64 46010}
!834 = !{i64 46018}
!835 = !{i64 46036}
!836 = !{i64 46048}
!837 = !{i64 46054}
!838 = !{i64 46058}
!839 = !{i64 46070}
!840 = !{i64 46074}
!841 = !{i64 46080}
!842 = !{i64 46092}
!843 = !{i64 46094}
!844 = !{i64 46104}
!845 = !{i64 46118}
!846 = !{i64 46130}
!847 = !{i64 46144}
!848 = !{i64 46154}
!849 = !{i64 46156}
!850 = !{i64 46166}
!851 = !{i64 46180}
!852 = !{i64 46192}
!853 = !{i64 46198}
!854 = !{i64 46210}
!855 = !{i64 46222}
!856 = !{i64 46232}
!857 = !{i64 46244}
!858 = !{i64 46262}
!859 = !{i64 46266}
!860 = !{i64 46278}
!861 = !{i64 46290}
!862 = !{i64 46308}
!863 = !{i64 46312}
!864 = !{i64 46324}
!865 = !{i64 46326}
!866 = !{i64 46328}
!867 = !{i64 46344}
!868 = !{i64 46348}
!869 = !{i64 46364}
!870 = !{i64 46368}
!871 = !{i64 46420}
!872 = !{i64 46436}
!873 = !{i64 46448}
!874 = !{i64 46464}
!875 = !{i64 46518}
!876 = !{i64 46522}
!877 = !{i64 46524}
!878 = !{i64 46536}
!879 = !{i64 46546}
!880 = !{i64 46550}
!881 = !{i64 46556}
!882 = !{i64 46568}
!883 = !{i64 46578}
!884 = !{i64 46582}
!885 = !{i64 46590}
!886 = !{i64 46596}
!887 = !{i64 46608}
!888 = !{i64 46612}
!889 = !{i64 46624}
!890 = !{i64 46634}
!891 = !{i64 46646}
!892 = !{i64 46650}
!893 = !{i64 46652}
!894 = !{i64 46662}
!895 = !{i64 46676}
!896 = !{i64 46688}
!897 = !{i64 46690}
!898 = !{i64 46692}
!899 = !{i64 46706}
!900 = !{i64 46718}
!901 = !{i64 46722}
!902 = !{i64 46726}
!903 = !{i64 46740}
!904 = !{i64 46752}
!905 = !{i64 46754}
!906 = !{i64 46764}
!907 = !{i64 46778}
!908 = !{i64 46790}
!909 = !{i64 46804}
!910 = !{i64 46816}
!911 = !{i64 46820}
!912 = !{i64 46832}
!913 = !{i64 46844}
!914 = !{i64 46850}
!915 = !{i64 47074}
!916 = !{i64 47086}
!917 = !{i64 47094}
!918 = !{i64 47096}
!919 = !{i64 46888}
!920 = !{i64 46900}
!921 = !{i64 46904}
!922 = !{i64 46906}
!923 = !{i64 46922}
!924 = !{i64 46926}
!925 = !{i64 46944}
!926 = !{i64 46948}
!927 = !{i64 46964}
!928 = !{i64 46968}
!929 = !{i64 46980}
!930 = !{i64 46996}
!931 = !{i64 47012}
!932 = !{i64 47028}
!933 = !{i64 47054}
!934 = !{i64 47056}
!935 = !{i64 47062}
!936 = !{i64 47108}
!937 = !{i64 47118}
!938 = !{i64 47132}
!939 = !{i64 47148}
!940 = !{i64 47154}
!941 = !{i64 47176}
!942 = !{i64 47182}
!943 = !{i64 47202}
!944 = !{i64 47206}
!945 = !{i64 47224}
!946 = !{i64 47228}
!947 = !{i64 47240}
!948 = !{i64 47244}
!949 = !{i64 47258}
!950 = !{i64 47264}
!951 = !{i64 47270}
!952 = !{i64 47280}
!953 = !{i64 47288}
!954 = !{i64 47316}
!955 = !{i64 47324}
!956 = !{i64 47342}
!957 = !{i64 47354}
!958 = !{i64 47360}
!959 = !{i64 47364}
!960 = !{i64 47376}
!961 = !{i64 47380}
!962 = !{i64 47392}
!963 = !{i64 47394}
!964 = !{i64 47404}
!965 = !{i64 47418}
!966 = !{i64 47430}
!967 = !{i64 47434}
!968 = !{i64 47446}
!969 = !{i64 47450}
!970 = !{i64 47462}
!971 = !{i64 47480}
!972 = !{i64 47492}
!973 = !{i64 47510}
!974 = !{i64 47522}
!975 = !{i64 47524}
!976 = !{i64 47534}
!977 = !{i64 47548}
!978 = !{i64 47554}
!979 = !{i64 47566}
!980 = !{i64 47574}
!981 = !{i64 47586}
!982 = !{i64 47606}
!983 = !{i64 47618}
!984 = !{i64 47622}
!985 = !{i64 47634}
!986 = !{i64 47640}
!987 = !{i64 47652}
!988 = !{i64 47658}
!989 = !{i64 47670}
!990 = !{i64 47684}
!991 = !{i64 47694}
!992 = !{i64 47696}
!993 = !{i64 47706}
!994 = !{i64 47720}
!995 = !{i64 47728}
!996 = !{i64 47740}
!997 = !{i64 47752}
!998 = !{i64 47762}
!999 = !{i64 47822}
!1000 = !{i64 47834}
!1001 = !{i64 47852}
!1002 = !{i64 47856}
!1003 = !{i64 47868}
!1004 = !{i64 47870}
!1005 = !{i64 47872}
!1006 = !{i64 47890}
!1007 = !{i64 47894}
!1008 = !{i64 47910}
!1009 = !{i64 47914}
!1010 = !{i64 47926}
!1011 = !{i64 47944}
!1012 = !{i64 47948}
!1013 = !{i64 47960}
!1014 = !{i64 48012}
!1015 = !{i64 48028}
!1016 = !{i64 48040}
!1017 = !{i64 48056}
!1018 = !{i64 48110}
!1019 = !{i64 48122}
!1020 = !{i64 48128}
!1021 = !{i64 48140}
!1022 = !{i64 48160}
!1023 = !{i64 48164}
!1024 = !{i64 48168}
!1025 = !{i64 48196}
!1026 = !{i64 48208}
!1027 = !{i64 48212}
!1028 = !{i64 48224}
!1029 = !{i64 48230}
!1030 = !{i64 48242}
!1031 = !{i64 48254}
!1032 = !{i64 48264}
!1033 = !{i64 48276}
!1034 = !{i64 48324}
!1035 = !{i64 48336}
!1036 = !{i64 48354}
!1037 = !{i64 48358}
!1038 = !{i64 48370}
!1039 = !{i64 48372}
!1040 = !{i64 48374}
!1041 = !{i64 48392}
!1042 = !{i64 48396}
!1043 = !{i64 48412}
!1044 = !{i64 48416}
!1045 = !{i64 48428}
!1046 = !{i64 48446}
!1047 = !{i64 48450}
!1048 = !{i64 48462}
!1049 = !{i64 48514}
!1050 = !{i64 48530}
!1051 = !{i64 48542}
!1052 = !{i64 48558}
!1053 = !{i64 48612}
!1054 = !{i64 48624}
!1055 = !{i64 48630}
!1056 = !{i64 48642}
!1057 = !{i64 48662}
!1058 = !{i64 48666}
!1059 = !{i64 48670}
!1060 = !{i64 48672}
!1061 = !{i64 48684}
!1062 = !{i64 48694}
!1063 = !{i64 48698}
!1064 = !{i64 48704}
!1065 = !{i64 48716}
!1066 = !{i64 48726}
!1067 = !{i64 48730}
!1068 = !{i64 48738}
!1069 = !{i64 48744}
!1070 = !{i64 48756}
!1071 = !{i64 48760}
!1072 = !{i64 48772}
!1073 = !{i64 48782}
!1074 = !{i64 48794}
!1075 = !{i64 48798}
!1076 = !{i64 48800}
!1077 = !{i64 48810}
!1078 = !{i64 48812}
!1079 = !{i64 48814}
!1080 = !{i64 48828}
!1081 = !{i64 48840}
!1082 = !{i64 48844}
!1083 = !{i64 48848}
!1084 = !{i64 48862}
!1085 = !{i64 48874}
!1086 = !{i64 48876}
!1087 = !{i64 48886}
!1088 = !{i64 48900}
!1089 = !{i64 48912}
!1090 = !{i64 48926}
!1091 = !{i64 48938}
!1092 = !{i64 48942}
!1093 = !{i64 48954}
!1094 = !{i64 49224}
!1095 = !{i64 49236}
!1096 = !{i64 49244}
!1097 = !{i64 49246}
!1098 = !{i64 48980}
!1099 = !{i64 48992}
!1100 = !{i64 48996}
!1101 = !{i64 48998}
!1102 = !{i64 49014}
!1103 = !{i64 49018}
!1104 = !{i64 49036}
!1105 = !{i64 49040}
!1106 = !{i64 49056}
!1107 = !{i64 49060}
!1108 = !{i64 49078}
!1109 = !{i64 49082}
!1110 = !{i64 49094}
!1111 = !{i64 49110}
!1112 = !{i64 49126}
!1113 = !{i64 49142}
!1114 = !{i64 49168}
!1115 = !{i64 49178}
!1116 = !{i64 49198}
!1117 = !{i64 49202}
!1118 = !{i64 49206}
!1119 = !{i64 49212}
!1120 = !{i64 49260}
!1121 = !{i64 49270}
!1122 = !{i64 49284}
!1123 = !{i64 49300}
!1124 = !{i64 49306}
!1125 = !{i64 49328}
!1126 = !{i64 49334}
!1127 = !{i64 49354}
!1128 = !{i64 49358}
!1129 = !{i64 49376}
!1130 = !{i64 49380}
!1131 = !{i64 49392}
!1132 = !{i64 49396}
!1133 = !{i64 49404}
!1134 = !{i64 49406}
!1135 = !{i64 49416}
!1136 = !{i64 49426}
!1137 = !{i64 49434}
!1138 = !{i64 49450}
!1139 = !{i64 49460}
!1140 = !{i64 49468}
!1141 = !{i64 49470}
!1142 = !{i64 49480}
!1143 = !{i64 49490}
!1144 = !{i64 49498}
!1145 = !{i64 49514}
!1146 = !{i64 49518}
!1147 = !{i64 49524}
!1148 = !{i64 49528}
!1149 = !{i64 49530}
!1150 = !{i64 49540}
!1151 = !{i64 49550}
!1152 = !{i64 49552}
!1153 = !{i64 49554}
!1154 = !{i64 49564}
!1155 = !{i64 49584}
!1156 = !{i64 49588}
!1157 = !{i64 49594}
!1158 = !{i64 49618}
!1159 = !{i64 49630}
!1160 = !{i64 49648}
!1161 = !{i64 49652}
!1162 = !{i64 49664}
!1163 = !{i64 49674}
!1164 = !{i64 49684}
!1165 = !{i64 49718}
!1166 = !{i64 49722}
!1167 = !{i64 49724}
!1168 = !{i64 49730}
!1169 = !{i64 49742}
!1170 = !{i64 49746}
!1171 = !{i64 49748}
!1172 = !{i64 49758}
!1173 = !{i64 49760}
!1174 = !{i64 49764}
!1175 = !{i64 49766}
!1176 = !{i64 49776}
!1177 = !{i64 49778}
!1178 = !{i64 49782}
!1179 = !{i64 49784}
!1180 = !{i64 49794}
!1181 = !{i64 49796}
!1182 = !{i64 49800}
!1183 = !{i64 49802}
!1184 = !{i64 49812}
!1185 = !{i64 49814}
!1186 = !{i64 49818}
!1187 = !{i64 49820}
!1188 = !{i64 49838}
!1189 = !{i64 49846}
!1190 = !{i64 49858}
!1191 = !{i64 49860}
!1192 = !{i64 49894}
!1193 = !{i64 49920}
!1194 = !{i64 53632}
!1195 = !{i64 53638}
!1196 = !{i64 53640}
!1197 = !{i64 53628}
!1198 = !{i64 49946}
!1199 = !{i64 49934}
!1200 = !{i64 49936}
!1201 = !{i64 49938}
!1202 = !{i64 49964}
!1203 = !{i64 49976}
!1204 = !{i64 49978}
!1205 = !{i64 49986}
!1206 = !{i64 49988}
!1207 = !{i64 50004}
!1208 = !{i64 50014}
!1209 = !{i64 50016}
!1210 = !{i64 50018}
!1211 = !{i64 50022}
!1212 = !{i64 50024}
!1213 = !{i64 50032}
!1214 = !{i64 50052}
!1215 = !{i64 50064}
!1216 = !{i64 50070}
!1217 = !{i64 50088}
!1218 = !{i64 50098}
!1219 = !{i64 50102}
!1220 = !{i64 50114}
!1221 = !{i64 50126}
!1222 = !{i64 50132}
!1223 = !{i64 50134}
!1224 = !{i64 50142}
!1225 = !{i64 50144}
!1226 = !{i64 50152}
!1227 = !{i64 50154}
!1228 = !{i64 50162}
!1229 = !{i64 50164}
!1230 = !{i64 50172}
!1231 = !{i64 50174}
!1232 = !{i64 50182}
!1233 = !{i64 50184}
!1234 = !{i64 50192}
!1235 = !{i64 50194}
!1236 = !{i64 50202}
!1237 = !{i64 50204}
!1238 = !{i64 50136}
!1239 = !{i64 50218}
!1240 = !{i64 50236}
!1241 = !{i64 50240}
!1242 = !{i64 50248}
!1243 = !{i64 50252}
!1244 = !{i64 50260}
!1245 = !{i64 50264}
!1246 = !{i64 50272}
!1247 = !{i64 50276}
!1248 = !{i64 50284}
!1249 = !{i64 50286}
!1250 = !{i64 50288}
!1251 = !{i64 50296}
!1252 = !{i64 50298}
!1253 = !{i64 50300}
!1254 = !{i64 50308}
!1255 = !{i64 50312}
!1256 = !{i64 50320}
!1257 = !{i64 50324}
!1258 = !{i64 50332}
!1259 = !{i64 50336}
!1260 = !{i64 50350}
!1261 = !{i64 50368}
!1262 = !{i64 50372}
!1263 = !{i64 50388}
!1264 = !{i64 50400}
!1265 = !{i64 50402}
!1266 = !{i64 50404}
!1267 = !{i64 50408}
!1268 = !{i64 50434}
!1269 = !{i64 50438}
!1270 = !{i64 50454}
!1271 = !{i64 50466}
!1272 = !{i64 50468}
!1273 = !{i64 50470}
!1274 = !{i64 50474}
!1275 = !{i64 50500}
!1276 = !{i64 50504}
!1277 = !{i64 50520}
!1278 = !{i64 50532}
!1279 = !{i64 50534}
!1280 = !{i64 50536}
!1281 = !{i64 50540}
!1282 = !{i64 50566}
!1283 = !{i64 50570}
!1284 = !{i64 50586}
!1285 = !{i64 50598}
!1286 = !{i64 50600}
!1287 = !{i64 50602}
!1288 = !{i64 50606}
!1289 = !{i64 50632}
!1290 = !{i64 50636}
!1291 = !{i64 50652}
!1292 = !{i64 50664}
!1293 = !{i64 50666}
!1294 = !{i64 50668}
!1295 = !{i64 50672}
!1296 = !{i64 50698}
!1297 = !{i64 50702}
!1298 = !{i64 50718}
!1299 = !{i64 50730}
!1300 = !{i64 50732}
!1301 = !{i64 50734}
!1302 = !{i64 50738}
!1303 = !{i64 50764}
!1304 = !{i64 50768}
!1305 = !{i64 50784}
!1306 = !{i64 50796}
!1307 = !{i64 50798}
!1308 = !{i64 50800}
!1309 = !{i64 50804}
!1310 = !{i64 50830}
!1311 = !{i64 50834}
!1312 = !{i64 50850}
!1313 = !{i64 50862}
!1314 = !{i64 50864}
!1315 = !{i64 50866}
!1316 = !{i64 50870}
!1317 = !{i64 50896}
!1318 = !{i64 50900}
!1319 = !{i64 50916}
!1320 = !{i64 50928}
!1321 = !{i64 50930}
!1322 = !{i64 50932}
!1323 = !{i64 50936}
!1324 = !{i64 50962}
!1325 = !{i64 50966}
!1326 = !{i64 50982}
!1327 = !{i64 50994}
!1328 = !{i64 50996}
!1329 = !{i64 50998}
!1330 = !{i64 51002}
!1331 = !{i64 51028}
!1332 = !{i64 51032}
!1333 = !{i64 51048}
!1334 = !{i64 51060}
!1335 = !{i64 51062}
!1336 = !{i64 51064}
!1337 = !{i64 51068}
!1338 = !{i64 51094}
!1339 = !{i64 51098}
!1340 = !{i64 51114}
!1341 = !{i64 51126}
!1342 = !{i64 51128}
!1343 = !{i64 51130}
!1344 = !{i64 51134}
!1345 = !{i64 51160}
!1346 = !{i64 51164}
!1347 = !{i64 51180}
!1348 = !{i64 51192}
!1349 = !{i64 51194}
!1350 = !{i64 51196}
!1351 = !{i64 51200}
!1352 = !{i64 51226}
!1353 = !{i64 51230}
!1354 = !{i64 51246}
!1355 = !{i64 51258}
!1356 = !{i64 51260}
!1357 = !{i64 51262}
!1358 = !{i64 51266}
!1359 = !{i64 51292}
!1360 = !{i64 51300}
!1361 = !{i64 51304}
!1362 = !{i64 51306}
!1363 = !{i64 51332}
!1364 = !{i64 51334}
!1365 = !{i64 51350}
!1366 = !{i64 51362}
!1367 = !{i64 51364}
!1368 = !{i64 51366}
!1369 = !{i64 51370}
!1370 = !{i64 51396}
!1371 = !{i64 51404}
!1372 = !{i64 51408}
!1373 = !{i64 51410}
!1374 = !{i64 51436}
!1375 = !{i64 51438}
!1376 = !{i64 51454}
!1377 = !{i64 51466}
!1378 = !{i64 51468}
!1379 = !{i64 51470}
!1380 = !{i64 51474}
!1381 = !{i64 51500}
!1382 = !{i64 51508}
!1383 = !{i64 51512}
!1384 = !{i64 51514}
!1385 = !{i64 51540}
!1386 = !{i64 51542}
!1387 = !{i64 51558}
!1388 = !{i64 51570}
!1389 = !{i64 51572}
!1390 = !{i64 51574}
!1391 = !{i64 51578}
!1392 = !{i64 51604}
!1393 = !{i64 51612}
!1394 = !{i64 51616}
!1395 = !{i64 51618}
!1396 = !{i64 51644}
!1397 = !{i64 51646}
!1398 = !{i64 51660}
!1399 = !{i64 51672}
!1400 = !{i64 51674}
!1401 = !{i64 51676}
!1402 = !{i64 51680}
!1403 = !{i64 51706}
!1404 = !{i64 51714}
!1405 = !{i64 51718}
!1406 = !{i64 51720}
!1407 = !{i64 51746}
!1408 = !{i64 51748}
!1409 = !{i64 51762}
!1410 = !{i64 51774}
!1411 = !{i64 51776}
!1412 = !{i64 51778}
!1413 = !{i64 51782}
!1414 = !{i64 51808}
!1415 = !{i64 51816}
!1416 = !{i64 51820}
!1417 = !{i64 51822}
!1418 = !{i64 51848}
!1419 = !{i64 51850}
!1420 = !{i64 51864}
!1421 = !{i64 51876}
!1422 = !{i64 51878}
!1423 = !{i64 51880}
!1424 = !{i64 51884}
!1425 = !{i64 51910}
!1426 = !{i64 51918}
!1427 = !{i64 51922}
!1428 = !{i64 51924}
!1429 = !{i64 51950}
!1430 = !{i64 51952}
!1431 = !{i64 51966}
!1432 = !{i64 51978}
!1433 = !{i64 51980}
!1434 = !{i64 51982}
!1435 = !{i64 51986}
!1436 = !{i64 52012}
!1437 = !{i64 52020}
!1438 = !{i64 52024}
!1439 = !{i64 52026}
!1440 = !{i64 52052}
!1441 = !{i64 52054}
!1442 = !{i64 52068}
!1443 = !{i64 52080}
!1444 = !{i64 52082}
!1445 = !{i64 52084}
!1446 = !{i64 52088}
!1447 = !{i64 52114}
!1448 = !{i64 52122}
!1449 = !{i64 52126}
!1450 = !{i64 52128}
!1451 = !{i64 52154}
!1452 = !{i64 52156}
!1453 = !{i64 52170}
!1454 = !{i64 52182}
!1455 = !{i64 52184}
!1456 = !{i64 52186}
!1457 = !{i64 52190}
!1458 = !{i64 52216}
!1459 = !{i64 52220}
!1460 = !{i64 52234}
!1461 = !{i64 52246}
!1462 = !{i64 52248}
!1463 = !{i64 52250}
!1464 = !{i64 52254}
!1465 = !{i64 52280}
!1466 = !{i64 52284}
!1467 = !{i64 52298}
!1468 = !{i64 52310}
!1469 = !{i64 52312}
!1470 = !{i64 52314}
!1471 = !{i64 52318}
!1472 = !{i64 52344}
!1473 = !{i64 52348}
!1474 = !{i64 52362}
!1475 = !{i64 52374}
!1476 = !{i64 52376}
!1477 = !{i64 52378}
!1478 = !{i64 52382}
!1479 = !{i64 52410}
!1480 = !{i64 52414}
!1481 = !{i64 52428}
!1482 = !{i64 52440}
!1483 = !{i64 52442}
!1484 = !{i64 52444}
!1485 = !{i64 52448}
!1486 = !{i64 52474}
!1487 = !{i64 52482}
!1488 = !{i64 52486}
!1489 = !{i64 52488}
!1490 = !{i64 52500}
!1491 = !{i64 52502}
!1492 = !{i64 52512}
!1493 = !{i64 52514}
!1494 = !{i64 52528}
!1495 = !{i64 52540}
!1496 = !{i64 52542}
!1497 = !{i64 52544}
!1498 = !{i64 52548}
!1499 = !{i64 52574}
!1500 = !{i64 52582}
!1501 = !{i64 52586}
!1502 = !{i64 52588}
!1503 = !{i64 52600}
!1504 = !{i64 52602}
!1505 = !{i64 52612}
!1506 = !{i64 52614}
!1507 = !{i64 52628}
!1508 = !{i64 52640}
!1509 = !{i64 52642}
!1510 = !{i64 52644}
!1511 = !{i64 52648}
!1512 = !{i64 52674}
!1513 = !{i64 52682}
!1514 = !{i64 52686}
!1515 = !{i64 52688}
!1516 = !{i64 52700}
!1517 = !{i64 52702}
!1518 = !{i64 52712}
!1519 = !{i64 52714}
!1520 = !{i64 52728}
!1521 = !{i64 52740}
!1522 = !{i64 52742}
!1523 = !{i64 52744}
!1524 = !{i64 52748}
!1525 = !{i64 52774}
!1526 = !{i64 52778}
!1527 = !{i64 52792}
!1528 = !{i64 52804}
!1529 = !{i64 52806}
!1530 = !{i64 52808}
!1531 = !{i64 52812}
!1532 = !{i64 52838}
!1533 = !{i64 52842}
!1534 = !{i64 52856}
!1535 = !{i64 52868}
!1536 = !{i64 52870}
!1537 = !{i64 52872}
!1538 = !{i64 52876}
!1539 = !{i64 52902}
!1540 = !{i64 52906}
!1541 = !{i64 52920}
!1542 = !{i64 52932}
!1543 = !{i64 52934}
!1544 = !{i64 52936}
!1545 = !{i64 52940}
!1546 = !{i64 52966}
!1547 = !{i64 52970}
!1548 = !{i64 52984}
!1549 = !{i64 52996}
!1550 = !{i64 52998}
!1551 = !{i64 53000}
!1552 = !{i64 53004}
!1553 = !{i64 53030}
!1554 = !{i64 53034}
!1555 = !{i64 53048}
!1556 = !{i64 53060}
!1557 = !{i64 53062}
!1558 = !{i64 53064}
!1559 = !{i64 53068}
!1560 = !{i64 53094}
!1561 = !{i64 53098}
!1562 = !{i64 53112}
!1563 = !{i64 53124}
!1564 = !{i64 53126}
!1565 = !{i64 53128}
!1566 = !{i64 53132}
!1567 = !{i64 53158}
!1568 = !{i64 53162}
!1569 = !{i64 53176}
!1570 = !{i64 53188}
!1571 = !{i64 53190}
!1572 = !{i64 53192}
!1573 = !{i64 53196}
!1574 = !{i64 53222}
!1575 = !{i64 53226}
!1576 = !{i64 53240}
!1577 = !{i64 53252}
!1578 = !{i64 53254}
!1579 = !{i64 53256}
!1580 = !{i64 53260}
!1581 = !{i64 53286}
!1582 = !{i64 53290}
!1583 = !{i64 53304}
!1584 = !{i64 53316}
!1585 = !{i64 53318}
!1586 = !{i64 53320}
!1587 = !{i64 53324}
!1588 = !{i64 53350}
!1589 = !{i64 53354}
!1590 = !{i64 53368}
!1591 = !{i64 53380}
!1592 = !{i64 53382}
!1593 = !{i64 53384}
!1594 = !{i64 53388}
!1595 = !{i64 53414}
!1596 = !{i64 53418}
!1597 = !{i64 53432}
!1598 = !{i64 53444}
!1599 = !{i64 53446}
!1600 = !{i64 53448}
!1601 = !{i64 53452}
!1602 = !{i64 53478}
!1603 = !{i64 53482}
!1604 = !{i64 53496}
!1605 = !{i64 53508}
!1606 = !{i64 53510}
!1607 = !{i64 53512}
!1608 = !{i64 53516}
!1609 = !{i64 53542}
!1610 = !{i64 53546}
!1611 = !{i64 53560}
!1612 = !{i64 53572}
!1613 = !{i64 53574}
!1614 = !{i64 53576}
!1615 = !{i64 53580}
!1616 = !{i64 53608}
!1617 = !{i64 53612}
!1618 = !{i64 53614}
!1619 = !{i64 53616}
!1620 = !{i64 53618}
!1621 = !{i64 53648}
!1622 = !{i64 53650}
!1623 = !{i64 53652}
!1624 = !{i64 53666}
!1625 = !{i64 53672}
!1626 = !{i64 53690}
!1627 = !{i64 53696}
!1628 = !{i64 53708}
!1629 = !{i64 53714}
!1630 = !{i64 53724}
!1631 = !{i64 53726}
!1632 = !{i64 53752}
!1633 = !{i64 53758}
!1634 = !{i64 53770}
!1635 = !{i64 53776}
!1636 = !{i64 53788}
!1637 = !{i64 53790}
!1638 = !{i64 53800}
!1639 = !{i64 53814}
!1640 = !{i64 53804}
!1641 = !{i64 53824}
!1642 = !{i64 53842}
!1643 = !{i64 53848}
!1644 = !{i64 53860}
!1645 = !{i64 53866}
!1646 = !{i64 53876}
!1647 = !{i64 53886}
!1648 = !{i64 53896}
!1649 = !{i64 53900}
!1650 = !{i64 53912}
!1651 = !{i64 53928}
!1652 = !{i64 53930}
!1653 = !{i64 53954}
!1654 = !{i64 53960}
!1655 = !{i64 53972}
!1656 = !{i64 53978}
!1657 = !{i64 53990}
!1658 = !{i64 54000}
!1659 = !{i64 54010}
!1660 = !{i64 54014}
!1661 = !{i64 54026}
!1662 = !{i64 54042}
!1663 = !{i64 54056}
!1664 = !{i64 54068}
!1665 = !{i64 54264}
!1666 = !{i64 54266}
!1667 = !{i64 54212}
!1668 = !{i64 54218}
!1669 = !{i64 54220}
!1670 = !{i64 54230}
!1671 = !{i64 54232}
!1672 = !{i64 54234}
!1673 = !{i64 54256}
!1674 = !{i64 54260}
!1675 = !{i64 54144}
!1676 = !{i64 54152}
!1677 = !{i64 54288}
!1678 = !{i64 54302}
!1679 = !{i64 54316}
!1680 = !{i64 54342}
!1681 = !{i64 54354}
!1682 = !{i64 54370}
!1683 = !{i64 54376}
!1684 = !{i64 54380}
!1685 = !{i64 54384}
!1686 = !{i64 54386}
!1687 = !{i64 54398}
!1688 = !{i64 54408}
!1689 = !{i64 54420}
!1690 = !{i64 54424}
!1691 = !{i64 54468}
!1692 = !{i64 54470}
!1693 = !{i64 54480}
!1694 = !{i64 54444}
!1695 = !{i64 54448}
!1696 = !{i64 54458}
!1697 = !{i64 54498}
!1698 = !{i64 54518}
!1699 = !{i64 54522}
!1700 = !{i64 54524}
!1701 = !{i64 54542}
!1702 = !{i64 54554}
!1703 = !{i64 54564}
!1704 = !{i64 54566}
!1705 = !{i64 54576}
!1706 = !{i64 54586}
!1707 = !{i64 54596}
!1708 = !{i64 54598}
!1709 = !{i64 54608}
!1710 = !{i64 54620}
!1711 = !{i64 54622}
!1712 = !{i64 54634}
!1713 = !{i64 54644}
!1714 = !{i64 54672}
!1715 = !{i64 54682}
!1716 = !{i64 54696}
!1717 = !{i64 54706}
!1718 = !{i64 54708}
!1719 = !{i64 54738}
!1720 = !{i64 54760}
!1721 = !{i64 54764}
!1722 = !{i64 54772}
!1723 = !{i64 54774}
!1724 = !{i64 54792}
!1725 = !{i64 54798}
!1726 = !{i64 54800}
!1727 = !{i64 54810}
!1728 = !{i64 54828}
!1729 = !{i64 54832}
!1730 = !{i64 54840}
!1731 = !{i64 54842}
!1732 = !{i64 54852}
!1733 = !{i64 54870}
!1734 = !{i64 54874}
!1735 = !{i64 54878}
!1736 = !{i64 54886}
!1737 = !{i64 54900}
!1738 = !{i64 54916}
!1739 = !{i64 54922}
!1740 = !{i64 54924}
!1741 = !{i64 54936}
!1742 = !{i64 54952}
!1743 = !{i64 54966}
!1744 = !{i64 54968}
!1745 = !{i64 54976}
!1746 = !{i64 54992}
!1747 = !{i64 55004}
!1748 = !{i64 55006}
!1749 = !{i64 55024}
!1750 = !{i64 55028}
!1751 = !{i64 55048}
!1752 = !{i64 55052}
!1753 = !{i64 55056}
!1754 = !{i64 55062}
!1755 = !{i64 55066}
!1756 = !{i64 55074}
!1757 = !{i64 55076}
!1758 = !{i64 55084}
!1759 = !{i64 55088}
!1760 = !{i64 55098}
!1761 = !{i64 55116}
!1762 = !{i64 55128}
!1763 = !{i64 55140}
!1764 = !{i64 55156}
!1765 = !{i64 55194}
!1766 = !{i64 55206}
!1767 = !{i64 55216}
!1768 = !{i64 55232}
!1769 = !{i64 55244}
!1770 = !{i64 55264}
!1771 = !{i64 55272}
!1772 = !{i64 55276}
!1773 = !{i64 55286}
!1774 = !{i64 55300}
!1775 = !{i64 55312}
!1776 = !{i64 55316}
!1777 = !{i64 55326}
!1778 = !{i64 55330}
!1779 = !{i64 55340}
!1780 = !{i64 55344}
!1781 = !{i64 55354}
!1782 = !{i64 55358}
!1783 = !{i64 55368}
!1784 = !{i64 55380}
!1785 = !{i64 55382}
!1786 = !{i64 55392}
!1787 = !{i64 55396}
!1788 = !{i64 55400}
!1789 = !{i64 55434}
!1790 = !{i64 55438}
!1791 = !{i64 55440}
!1792 = !{i64 55446}
!1793 = !{i64 55458}
!1794 = !{i64 55462}
!1795 = !{i64 55464}
!1796 = !{i64 55474}
!1797 = !{i64 55476}
!1798 = !{i64 55480}
!1799 = !{i64 55482}
!1800 = !{i64 55492}
!1801 = !{i64 55494}
!1802 = !{i64 55498}
!1803 = !{i64 55500}
!1804 = !{i64 55510}
!1805 = !{i64 55512}
!1806 = !{i64 55516}
!1807 = !{i64 55518}
!1808 = !{i64 55528}
!1809 = !{i64 55530}
!1810 = !{i64 55534}
!1811 = !{i64 55536}
!1812 = !{i64 55546}
!1813 = !{i64 55548}
!1814 = !{i64 55552}
!1815 = !{i64 55556}
!1816 = !{i64 55568}
!1817 = !{i64 55572}
!1818 = !{i64 55576}
!1819 = !{i64 55580}
!1820 = !{i64 55608}
!1821 = !{i64 55616}
!1822 = !{i64 55628}
!1823 = !{i64 55632}
!1824 = !{i64 55704}
!1825 = !{i64 55706}
!1826 = !{i64 55676}
!1827 = !{i64 55678}
!1828 = !{i64 55682}
!1829 = !{i64 55684}
!1830 = !{i64 55690}
!1831 = !{i64 55696}
!1832 = !{i64 55720}
!1833 = !{i64 55724}
!1834 = !{i64 55742}
!1835 = !{i64 55774}
!1836 = !{i64 55790}
!1837 = !{i64 55794}
!1838 = !{i64 55796}
!1839 = !{i64 55806}
!1840 = !{i64 55810}
!1841 = !{i64 55816}
!1842 = !{i64 55818}
!1843 = !{i64 55832}
!1844 = !{i64 55858}
!1845 = !{i64 55868}
!1846 = !{i64 55872}
!1847 = !{i64 55910}
!1848 = !{i64 55926}
!1849 = !{i64 55942}
!1850 = !{i64 55958}
!1851 = !{i64 55974}
!1852 = !{i64 55990}
!1853 = !{i64 56002}
!1854 = !{i64 56012}
!1855 = !{i64 56030}
!1856 = !{i64 56044}
!1857 = !{i64 56066}
!1858 = !{i64 56080}
!1859 = !{i64 56084}
!1860 = !{i64 56096}
!1861 = !{i64 56100}
!1862 = !{i64 56112}
!1863 = !{i64 56116}
!1864 = !{i64 56126}
!1865 = !{i64 56128}
!1866 = !{i64 56130}
!1867 = !{i64 56142}
!1868 = !{i64 56146}
!1869 = !{i64 56158}
!1870 = !{i64 56162}
!1871 = !{i64 56174}
!1872 = !{i64 56178}
!1873 = !{i64 56190}
!1874 = !{i64 56194}
!1875 = !{i64 56206}
!1876 = !{i64 56210}
!1877 = !{i64 56222}
!1878 = !{i64 56226}
!1879 = !{i64 56240}
!1880 = !{i64 56256}
!1881 = !{i64 56272}
!1882 = !{i64 56288}
!1883 = !{i64 56304}
!1884 = !{i64 56320}
!1885 = !{i64 56336}
!1886 = !{i64 56352}
!1887 = !{i64 56368}
!1888 = !{i64 56384}
!1889 = !{i64 56398}
!1890 = !{i64 56402}
!1891 = !{i64 56414}
!1892 = !{i64 56418}
!1893 = !{i64 56432}
!1894 = !{i64 56446}
!1895 = !{i64 56450}
!1896 = !{i64 56462}
!1897 = !{i64 56466}
!1898 = !{i64 56478}
!1899 = !{i64 56482}
!1900 = !{i64 56492}
!1901 = !{i64 56502}
!1902 = !{i64 56508}
!1903 = !{i64 56528}
!1904 = !{i64 56534}
!1905 = !{i64 56548}
!1906 = !{i64 56564}
!1907 = !{i64 56580}
!1908 = !{i64 56756}
!1909 = !{i64 56760}
!1910 = !{i64 56762}
!1911 = !{i64 56734}
!1912 = !{i64 56738}
!1913 = !{i64 56740}
!1914 = !{i64 56604}
!1915 = !{i64 56606}
!1916 = !{i64 56632}
!1917 = !{i64 56634}
!1918 = !{i64 56638}
!1919 = !{i64 56642}
!1920 = !{i64 56712}
!1921 = !{i64 56716}
!1922 = !{i64 56718}
!1923 = !{i64 56664}
!1924 = !{i64 56670}
!1925 = !{i64 56674}
!1926 = !{i64 56696}
!1927 = !{i64 56700}
!1928 = !{i64 56722}
!1929 = !{i64 56744}
!1930 = !{i64 56766}
!1931 = !{i64 56772}
!1932 = !{i64 56774}
!1933 = !{i64 56778}
!1934 = !{i64 56788}
!1935 = !{i64 56792}
!1936 = !{i64 56868}
!1937 = !{i64 56870}
!1938 = !{i64 56816}
!1939 = !{i64 56820}
!1940 = !{i64 56822}
!1941 = !{i64 56832}
!1942 = !{i64 56836}
!1943 = !{i64 56838}
!1944 = !{i64 56840}
!1945 = !{i64 56850}
!1946 = !{i64 56854}
!1947 = !{i64 56880}
!1948 = !{i64 56884}
!1949 = !{i64 56928}
!1950 = !{i64 56930}
!1951 = !{i64 56934}
!1952 = !{i64 56940}
!1953 = !{i64 56952}
!1954 = !{i64 56954}
!1955 = !{i64 56958}
!1956 = !{i64 56964}
!1957 = !{i64 56966}
!1958 = !{i64 56910}
!1959 = !{i64 56914}
!1960 = !{i64 56916}
!1961 = !{i64 56980}
!1962 = !{i64 57000}
!1963 = !{i64 57014}
!1964 = !{i64 57026}
!1965 = !{i64 57036}
!1966 = !{i64 57040}
!1967 = !{i64 57072}
!1968 = !{i64 57086}
!1969 = !{i64 57108}
!1970 = !{i64 57186}
!1971 = !{i64 57196}
!1972 = !{i64 57206}
!1973 = !{i64 57210}
!1974 = !{i64 57212}
!1975 = !{i64 57220}
!1976 = !{i64 57222}
!1977 = !{i64 57240}
!1978 = !{i64 57252}
!1979 = !{i64 57272}
!1980 = !{i64 57274}
!1981 = !{i64 57286}
!1982 = !{i64 57294}
!1983 = !{i64 57304}
!1984 = !{i64 57306}
!1985 = !{i64 57310}
!1986 = !{i64 57324}
!1987 = !{i64 57338}
!1988 = !{i64 57374}
!1989 = !{i64 57386}
!1990 = !{i64 57390}
!1991 = !{i64 57406}
!1992 = !{i64 57408}
!1993 = !{i64 57410}
!1994 = !{i64 57412}
!1995 = !{i64 57414}
!1996 = !{i64 57590}
!1997 = !{i64 57610}
!1998 = !{i64 57614}
!1999 = !{i64 57626}
!2000 = !{i64 57638}
!2001 = !{i64 57648}
!2002 = !{i64 57652}
!2003 = !{i64 57666}
!2004 = !{i64 57682}
!2005 = !{i64 57698}
!2006 = !{i64 57712}
!2007 = !{i64 57734}
!2008 = !{i64 57748}
!2009 = !{i64 57764}
!2010 = !{i64 57778}
!2011 = !{i64 57794}
!2012 = !{i64 57808}
!2013 = !{i64 57810}
!2014 = !{i64 57812}
!2015 = !{i64 57824}
!2016 = !{i64 57826}
!2017 = !{i64 57828}
!2018 = !{i64 57840}
!2019 = !{i64 57856}
!2020 = !{i64 57872}
!2021 = !{i64 57884}
!2022 = !{i64 57898}
!2023 = !{i64 57902}
!2024 = !{i64 57916}
!2025 = !{i64 57978}
!2026 = !{i64 57980}
!2027 = !{i64 57982}
!2028 = !{i64 57984}
!2029 = !{i64 57986}
!2030 = !{i64 58180}
!2031 = !{i64 58194}
!2032 = !{i64 58206}
!2033 = !{i64 58210}
!2034 = !{i64 58222}
!2035 = !{i64 58228}
!2036 = !{i64 58258}
!2037 = !{i64 58268}
!2038 = !{i64 58324}
!2039 = !{i64 58360}
!2040 = !{i64 58364}
!2041 = !{i64 58368}
!2042 = !{i64 58372}
!2043 = !{i64 58388}
!2044 = !{i64 58392}
!2045 = !{i64 58396}
!2046 = !{i64 58400}
!2047 = !{i64 58410}
!2048 = !{i64 58414}
!2049 = !{i64 58418}
!2050 = !{i64 58422}
!2051 = !{i64 58426}
!2052 = !{i64 58430}
!2053 = !{i64 58456}
!2054 = !{i64 58458}
!2055 = !{i64 58470}
!2056 = !{i64 58480}
!2057 = !{i64 58482}
!2058 = !{i64 58484}
!2059 = !{i64 58492}
!2060 = !{i64 58496}
!2061 = !{i64 58516}
!2062 = !{i64 58520}
!2063 = !{i64 58532}
!2064 = !{i64 58542}
!2065 = !{i64 58544}
!2066 = !{i64 58556}
!2067 = !{i64 58562}
!2068 = !{i64 58566}
!2069 = !{i64 58570}
!2070 = !{i64 58582}
!2071 = !{i64 58586}
!2072 = !{i64 58592}
!2073 = !{i64 58602}
!2074 = !{i64 58606}
!2075 = !{i64 58626}
!2076 = !{i64 58638}
!2077 = !{i64 58750}
!2078 = !{i64 58650}
!2079 = !{i64 58662}
!2080 = !{i64 58680}
!2081 = !{i64 58684}
!2082 = !{i64 58706}
!2083 = !{i64 58718}
!2084 = !{i64 58736}
!2085 = !{i64 58744}
!2086 = !{i64 58756}
!2087 = !{i64 58766}
!2088 = !{i64 58778}
!2089 = !{i64 58780}
!2090 = !{i64 58782}
!2091 = !{i64 58802}
!2092 = !{i64 58804}
!2093 = !{i64 58864}
!2094 = !{i64 58876}
!2095 = !{i64 58882}
!2096 = !{i64 58884}
!2097 = !{i64 58886}
!2098 = !{i64 58888}
!2099 = !{i64 58892}
!2100 = !{i64 58894}
!2101 = !{i64 58896}
!2102 = !{i64 58898}
!2103 = !{i64 58902}
!2104 = !{i64 58904}
!2105 = !{i64 58906}
!2106 = !{i64 58908}
!2107 = !{i64 58928}
!2108 = !{i64 58934}
!2109 = !{i64 58946}
!2110 = !{i64 58954}
!2111 = !{i64 58956}
!2112 = !{i64 58968}
!2113 = !{i64 58990}
!2114 = !{i64 58996}
!2115 = !{i64 58998}
!2116 = !{i64 59000}
!2117 = !{i64 59002}
!2118 = !{i64 59006}
!2119 = !{i64 59008}
!2120 = !{i64 59010}
!2121 = !{i64 59012}
!2122 = !{i64 59016}
!2123 = !{i64 59018}
!2124 = !{i64 59020}
!2125 = !{i64 59022}
!2126 = !{i64 59028}
!2127 = !{i64 59030}
!2128 = !{i64 59042}
!2129 = !{i64 59048}
!2130 = !{i64 59062}
!2131 = !{i64 59066}
!2132 = !{i64 59074}
!2133 = !{i64 59080}
!2134 = !{i64 59082}
!2135 = !{i64 59092}
!2136 = !{i64 59102}
!2137 = !{i64 59106}
!2138 = !{i64 59108}
!2139 = !{i64 59128}
!2140 = !{i64 59134}
!2141 = !{i64 59140}
!2142 = !{i64 59142}
!2143 = !{i64 59148}
!2144 = !{i64 59150}
!2145 = !{i64 59154}
!2146 = !{i64 59156}
!2147 = !{i64 59162}
!2148 = !{i64 59164}
!2149 = !{i64 59178}
!2150 = !{i64 59186}
!2151 = !{i64 59196}
!2152 = !{i64 59200}
!2153 = !{i64 59202}
!2154 = !{i64 59222}
!2155 = !{i64 59228}
!2156 = !{i64 59234}
!2157 = !{i64 59236}
!2158 = !{i64 59242}
!2159 = !{i64 59244}
!2160 = !{i64 59248}
!2161 = !{i64 59250}
!2162 = !{i64 59256}
!2163 = !{i64 59258}
!2164 = !{i64 59264}
!2165 = !{i64 59266}
!2166 = !{i64 59282}
!2167 = !{i64 59290}
!2168 = !{i64 59300}
!2169 = !{i64 59304}
!2170 = !{i64 59306}
!2171 = !{i64 59326}
!2172 = !{i64 59332}
!2173 = !{i64 59338}
!2174 = !{i64 59340}
!2175 = !{i64 59346}
!2176 = !{i64 59348}
!2177 = !{i64 59352}
!2178 = !{i64 59354}
!2179 = !{i64 59360}
!2180 = !{i64 59362}
!2181 = !{i64 59368}
!2182 = !{i64 59370}
!2183 = !{i64 59386}
!2184 = !{i64 59394}
!2185 = !{i64 59794}
!2186 = !{i64 59410}
!2187 = !{i64 59412}
!2188 = !{i64 59430}
!2189 = !{i64 59436}
!2190 = !{i64 59440}
!2191 = !{i64 59446}
!2192 = !{i64 59452}
!2193 = !{i64 59466}
!2194 = !{i64 59470}
!2195 = !{i64 59480}
!2196 = !{i64 59488}
!2197 = !{i64 59490}
!2198 = !{i64 59502}
!2199 = !{i64 59504}
!2200 = !{i64 59506}
!2201 = !{i64 59518}
!2202 = !{i64 59522}
!2203 = !{i64 59532}
!2204 = !{i64 59548}
!2205 = !{i64 59550}
!2206 = !{i64 59562}
!2207 = !{i64 59564}
!2208 = !{i64 59592}
!2209 = !{i64 59604}
!2210 = !{i64 59608}
!2211 = !{i64 59618}
!2212 = !{i64 59636}
!2213 = !{i64 59638}
!2214 = !{i64 59642}
!2215 = !{i64 59644}
!2216 = !{i64 59648}
!2217 = !{i64 59670}
!2218 = !{i64 59674}
!2219 = !{i64 59684}
!2220 = !{i64 59694}
!2221 = !{i64 59698}
!2222 = !{i64 59782}
!2223 = !{i64 59790}
!2224 = !{i64 59818}
!2225 = !{i64 59716}
!2226 = !{i64 59728}
!2227 = !{i64 59742}
!2228 = !{i64 59744}
!2229 = !{i64 59724}
!2230 = !{i64 59738}
!2231 = !{i64 59754}
!2232 = !{i64 59762}
!2233 = !{i64 59764}
!2234 = !{i64 59768}
!2235 = !{i64 59826}
!2236 = !{i64 59842}
!2237 = !{i64 59846}
!2238 = !{i64 59856}
!2239 = !{i64 59890}
!2240 = !{i64 59904}
!2241 = !{i64 59908}
!2242 = !{i64 59978}
!2243 = !{i64 59980}
!2244 = !{i64 59986}
!2245 = !{i64 59988}
!2246 = !{i64 59932}
!2247 = !{i64 60010}
!2248 = !{i64 60018}
!2249 = !{i64 60020}
!2250 = !{i64 60022}
!2251 = !{i64 60030}
!2252 = !{i64 60054}
!2253 = !{i64 60058}
!2254 = !{i64 60062}
!2255 = !{i64 60064}
!2256 = !{i64 60078}
!2257 = !{i64 60080}
!2258 = !{i64 60082}
!2259 = !{i64 60086}
!2260 = !{i64 60108}
!2261 = !{i64 60116}
!2262 = !{i64 60124}
!2263 = !{i64 60118}
!2264 = !{i64 60134}
!2265 = !{i64 60136}
!2266 = !{i64 60138}
!2267 = !{i64 60140}
!2268 = !{i64 60150}
!2269 = !{i64 60152}
!2270 = !{i64 60154}
!2271 = !{i64 60156}
!2272 = !{i64 60166}
!2273 = !{i64 60168}
!2274 = !{i64 60170}
!2275 = !{i64 60174}
!2276 = !{i64 60188}
!2277 = !{i64 60210}
!2278 = !{i64 60214}
!2279 = !{i64 60226}
!2280 = !{i64 60242}
!2281 = !{i64 60254}
!2282 = !{i64 60272}
!2283 = !{i64 60288}
!2284 = !{i64 60312}
!2285 = !{i64 60328}
!2286 = !{i64 60332}
!2287 = !{i64 60334}
!2288 = !{i64 60354}
!2289 = !{i64 60356}
!2290 = !{i64 60378}
!2291 = !{i64 60394}
!2292 = !{i64 60398}
!2293 = !{i64 60428}
!2294 = !{i64 60470}
!2295 = !{i64 60476}
!2296 = !{i64 60486}
!2297 = !{i64 60488}
!2298 = !{i64 60506}
!2299 = !{i64 60510}
!2300 = !{i64 60516}
!2301 = !{i64 60522}
!2302 = !{i64 60532}
!2303 = !{i64 60534}
!2304 = !{i64 60552}
!2305 = !{i64 60558}
!2306 = !{i64 60562}
!2307 = !{i64 60566}
!2308 = !{i64 60576}
!2309 = !{i64 60578}
!2310 = !{i64 60596}
!2311 = !{i64 60602}
!2312 = !{i64 60608}
!2313 = !{i64 60612}
!2314 = !{i64 60624}
!2315 = !{i64 60628}
!2316 = !{i64 60648}
!2317 = !{i64 60658}
!2318 = !{i64 61218}
!2319 = !{i64 61220}
!2320 = !{i64 61222}
!2321 = !{i64 60668}
!2322 = !{i64 60688}
!2323 = !{i64 60690}
!2324 = !{i64 60692}
!2325 = !{i64 60674}
!2326 = !{i64 60698}
!2327 = !{i64 60712}
!2328 = !{i64 60764}
!2329 = !{i64 60766}
!2330 = !{i64 60726}
!2331 = !{i64 60730}
!2332 = !{i64 60736}
!2333 = !{i64 60738}
!2334 = !{i64 60740}
!2335 = !{i64 60750}
!2336 = !{i64 60756}
!2337 = !{i64 61204}
!2338 = !{i64 60768}
!2339 = !{i64 60770}
!2340 = !{i64 60772}
!2341 = !{i64 60774}
!2342 = !{i64 60782}
!2343 = !{i64 61196}
!2344 = !{i64 61198}
!2345 = !{i64 60814}
!2346 = !{i64 60818}
!2347 = !{i64 60820}
!2348 = !{i64 60822}
!2349 = !{i64 60824}
!2350 = !{i64 60832}
!2351 = !{i64 60840}
!2352 = !{i64 60842}
!2353 = !{i64 60844}
!2354 = !{i64 60846}
!2355 = !{i64 60894}
!2356 = !{i64 60858}
!2357 = !{i64 60860}
!2358 = !{i64 60864}
!2359 = !{i64 60866}
!2360 = !{i64 60868}
!2361 = !{i64 60878}
!2362 = !{i64 60884}
!2363 = !{i64 60892}
!2364 = !{i64 61048}
!2365 = !{i64 60904}
!2366 = !{i64 60908}
!2367 = !{i64 60910}
!2368 = !{i64 60912}
!2369 = !{i64 60914}
!2370 = !{i64 60922}
!2371 = !{i64 60930}
!2372 = !{i64 60932}
!2373 = !{i64 60934}
!2374 = !{i64 60936}
!2375 = !{i64 60946}
!2376 = !{i64 60950}
!2377 = !{i64 60960}
!2378 = !{i64 60968}
!2379 = !{i64 60970}
!2380 = !{i64 60978}
!2381 = !{i64 60980}
!2382 = !{i64 60990}
!2383 = !{i64 60998}
!2384 = !{i64 61000}
!2385 = !{i64 61004}
!2386 = !{i64 61030}
!2387 = !{i64 61036}
!2388 = !{i64 61046}
!2389 = !{i64 61054}
!2390 = !{i64 61058}
!2391 = !{i64 61064}
!2392 = !{i64 61076}
!2393 = !{i64 61080}
!2394 = !{i64 61086}
!2395 = !{i64 61088}
!2396 = !{i64 61102}
!2397 = !{i64 61104}
!2398 = !{i64 61106}
!2399 = !{i64 61120}
!2400 = !{i64 61122}
!2401 = !{i64 61124}
!2402 = !{i64 61138}
!2403 = !{i64 61172}
!2404 = !{i64 61234}
!2405 = !{i64 61246}
!2406 = !{i64 61258}
!2407 = !{i64 61270}
!2408 = !{i64 61272}
!2409 = !{i64 61342}
!2410 = !{i64 62020}
!2411 = !{i64 62026}
!2412 = !{i64 62028}
!2413 = !{i64 62032}
!2414 = !{i64 62044}
!2415 = !{i64 61990}
!2416 = !{i64 61370}
!2417 = !{i64 61372}
!2418 = !{i64 61996}
!2419 = !{i64 61998}
!2420 = !{i64 61438}
!2421 = !{i64 61448}
!2422 = !{i64 61482}
!2423 = !{i64 61456}
!2424 = !{i64 61490}
!2425 = !{i64 61492}
!2426 = !{i64 61498}
!2427 = !{i64 61410}
!2428 = !{i64 61418}
!2429 = !{i64 61422}
!2430 = !{i64 61430}
!2431 = !{i64 61522}
!2432 = !{i64 61524}
!2433 = !{i64 61526}
!2434 = !{i64 61534}
!2435 = !{i64 61542}
!2436 = !{i64 61554}
!2437 = !{i64 61576}
!2438 = !{i64 61624}
!2439 = !{i64 61652}
!2440 = !{i64 61684}
!2441 = !{i64 61688}
!2442 = !{i64 61702}
!2443 = !{i64 61738}
!2444 = !{i64 61746}
!2445 = !{i64 61754}
!2446 = !{i64 61764}
!2447 = !{i64 61766}
!2448 = !{i64 61780}
!2449 = !{i64 61810}
!2450 = !{i64 61812}
!2451 = !{i64 61862}
!2452 = !{i64 61890}
!2453 = !{i64 61906}
!2454 = !{i64 61910}
!2455 = !{i64 61920}
!2456 = !{i64 61932}
!2457 = !{i64 61938}
!2458 = !{i64 61946}
!2459 = !{i64 61960}
!2460 = !{i64 61966}
!2461 = !{i64 61968}
!2462 = !{i64 61976}
!2463 = !{i64 62006}
!2464 = !{i64 62066}
!2465 = !{i64 62080}
!2466 = !{i64 62056}
!2467 = !{i64 62068}
!2468 = !{i64 62082}
!2469 = !{i64 62086}
!2470 = !{i64 62088}
!2471 = !{i64 62126}
!2472 = !{i64 62130}
!2473 = !{i64 62140}
!2474 = !{i64 62152}
!2475 = !{i64 62158}
!2476 = !{i64 62176}
!2477 = !{i64 62186}
!2478 = !{i64 62278}
!2479 = !{i64 62232}
!2480 = !{i64 62240}
!2481 = !{i64 62264}
!2482 = !{i64 62298}
!2483 = !{i64 62308}
!2484 = !{i64 62296}
!2485 = !{i64 62310}
!2486 = !{i64 62312}
!2487 = !{i64 62324}
!2488 = !{i64 62326}
!2489 = !{i64 62328}
!2490 = !{i64 62342}
!2491 = !{i64 62352}
!2492 = !{i64 62360}
!2493 = !{i64 62364}
!2494 = !{i64 62376}
!2495 = !{i64 62380}
!2496 = !{i64 62382}
!2497 = !{i64 62388}
!2498 = !{i64 62392}
!2499 = !{i64 62410}
!2500 = !{i64 62424}
!2501 = !{i64 62432}
!2502 = !{i64 62434}
!2503 = !{i64 62440}
!2504 = !{i64 62456}
!2505 = !{i64 62466}
!2506 = !{i64 62470}
!2507 = !{i64 62504}
!2508 = !{i64 62506}
!2509 = !{i64 62512}
!2510 = !{i64 62516}
!2511 = !{i64 62518}
!2512 = !{i64 62532}
!2513 = !{i64 62536}
!2514 = !{i64 62550}
!2515 = !{i64 62562}
!2516 = !{i64 62574}
!2517 = !{i64 62596}
!2518 = !{i64 62610}
!2519 = !{i64 62620}
!2520 = !{i64 62624}
!2521 = !{i64 62632}
!2522 = !{i64 62638}
!2523 = !{i64 62642}
!2524 = !{i64 62644}
!2525 = !{i64 62658}
!2526 = !{i64 62674}
!2527 = !{i64 62688}
!2528 = !{i64 62714}
!2529 = !{i64 62724}
!2530 = !{i64 62726}
!2531 = !{i64 62728}
!2532 = !{i64 62738}
!2533 = !{i64 62754}
!2534 = !{i64 62758}
!2535 = !{i64 62768}
!2536 = !{i64 62784}
!2537 = !{i64 62790}
!2538 = !{i64 62794}
!2539 = !{i64 62796}
!2540 = !{i64 62810}
!2541 = !{i64 62814}
!2542 = !{i64 62828}
!2543 = !{i64 62838}
!2544 = !{i64 62840}
!2545 = !{i64 62874}
!2546 = !{i64 62886}
!2547 = !{i64 62898}
!2548 = !{i64 62910}
!2549 = !{i64 62928}
!2550 = !{i64 63030}
!2551 = !{i64 63034}
!2552 = !{i64 63036}
!2553 = !{i64 62948}
!2554 = !{i64 62952}
!2555 = !{i64 62956}
!2556 = !{i64 62958}
!2557 = !{i64 62960}
!2558 = !{i64 62964}
!2559 = !{i64 62966}
!2560 = !{i64 62970}
!2561 = !{i64 62994}
!2562 = !{i64 62996}
!2563 = !{i64 63012}
!2564 = !{i64 63018}
!2565 = !{i64 63020}
!2566 = !{i64 63046}
!2567 = !{i64 63256}
!2568 = !{i64 63260}
!2569 = !{i64 63262}
!2570 = !{i64 63076}
!2571 = !{i64 63078}
!2572 = !{i64 63090}
!2573 = !{i64 63092}
!2574 = !{i64 63094}
!2575 = !{i64 63142}
!2576 = !{i64 63228}
!2577 = !{i64 63232}
!2578 = !{i64 63234}
!2579 = !{i64 63164}
!2580 = !{i64 63170}
!2581 = !{i64 63174}
!2582 = !{i64 63194}
!2583 = !{i64 63196}
!2584 = !{i64 63198}
!2585 = !{i64 63210}
!2586 = !{i64 63216}
!2587 = !{i64 63098}
!2588 = !{i64 63238}
!2589 = !{i64 63244}
!2590 = !{i64 63272}
!2591 = !{i64 63430}
!2592 = !{i64 63434}
!2593 = !{i64 63436}
!2594 = !{i64 63296}
!2595 = !{i64 63300}
!2596 = !{i64 63304}
!2597 = !{i64 63306}
!2598 = !{i64 63308}
!2599 = !{i64 63312}
!2600 = !{i64 63314}
!2601 = !{i64 63318}
!2602 = !{i64 63392}
!2603 = !{i64 63396}
!2604 = !{i64 63398}
!2605 = !{i64 63340}
!2606 = !{i64 63346}
!2607 = !{i64 63350}
!2608 = !{i64 63370}
!2609 = !{i64 63374}
!2610 = !{i64 63380}
!2611 = !{i64 63412}
!2612 = !{i64 63418}
!2613 = !{i64 63420}
!2614 = !{i64 63446}
!2615 = !{i64 63626}
!2616 = !{i64 63630}
!2617 = !{i64 63632}
!2618 = !{i64 63470}
!2619 = !{i64 63474}
!2620 = !{i64 63478}
!2621 = !{i64 63480}
!2622 = !{i64 63482}
!2623 = !{i64 63486}
!2624 = !{i64 63488}
!2625 = !{i64 63492}
!2626 = !{i64 63588}
!2627 = !{i64 63592}
!2628 = !{i64 63594}
!2629 = !{i64 63514}
!2630 = !{i64 63520}
!2631 = !{i64 63524}
!2632 = !{i64 63544}
!2633 = !{i64 63546}
!2634 = !{i64 63570}
!2635 = !{i64 63576}
!2636 = !{i64 63608}
!2637 = !{i64 63614}
!2638 = !{i64 63616}
!2639 = !{i64 63642}
!2640 = !{i64 63658}
!2641 = !{i64 63674}
!2642 = !{i64 63690}
!2643 = !{i64 63706}
!2644 = !{i64 63722}
!2645 = !{i64 63738}
!2646 = !{i64 63754}
!2647 = !{i64 63770}
!2648 = !{i64 63776}
!2649 = !{i64 63780}
!2650 = !{i64 63782}
!2651 = !{i64 63792}
!2652 = !{i64 63796}
!2653 = !{i64 63806}
!2654 = !{i64 63820}
!2655 = !{i64 63824}
!2656 = !{i64 63832}
!2657 = !{i64 63874}
!2658 = !{i64 63886}
!2659 = !{i64 63896}
!2660 = !{i64 63898}
!2661 = !{i64 63912}
!2662 = !{i64 63924}
!2663 = !{i64 63934}
!2664 = !{i64 63948}
!2665 = !{i64 63964}
!2666 = !{i64 64128}
!2667 = !{i64 64132}
!2668 = !{i64 64134}
!2669 = !{i64 63984}
!2670 = !{i64 63988}
!2671 = !{i64 63992}
!2672 = !{i64 63994}
!2673 = !{i64 63998}
!2674 = !{i64 64000}
!2675 = !{i64 64004}
!2676 = !{i64 64010}
!2677 = !{i64 64020}
!2678 = !{i64 64030}
!2679 = !{i64 64048}
!2680 = !{i64 64060}
!2681 = !{i64 64070}
!2682 = !{i64 64072}
!2683 = !{i64 64078}
!2684 = !{i64 64080}
!2685 = !{i64 64084}
!2686 = !{i64 64096}
!2687 = !{i64 64102}
!2688 = !{i64 64116}
!2689 = !{i64 64118}
!2690 = !{i64 64144}
!2691 = !{i64 64362}
!2692 = !{i64 64366}
!2693 = !{i64 64368}
!2694 = !{i64 64168}
!2695 = !{i64 64172}
!2696 = !{i64 64176}
!2697 = !{i64 64178}
!2698 = !{i64 64182}
!2699 = !{i64 64184}
!2700 = !{i64 64188}
!2701 = !{i64 64316}
!2702 = !{i64 64320}
!2703 = !{i64 64322}
!2704 = !{i64 64210}
!2705 = !{i64 64212}
!2706 = !{i64 64298}
!2707 = !{i64 64248}
!2708 = !{i64 64252}
!2709 = !{i64 64272}
!2710 = !{i64 64276}
!2711 = !{i64 64282}
!2712 = !{i64 64300}
!2713 = !{i64 64304}
!2714 = !{i64 64242}
!2715 = !{i64 64336}
!2716 = !{i64 64344}
!2717 = !{i64 64350}
!2718 = !{i64 64352}
!2719 = !{i64 64378}
!2720 = !{i64 64606}
!2721 = !{i64 64610}
!2722 = !{i64 64612}
!2723 = !{i64 64398}
!2724 = !{i64 64402}
!2725 = !{i64 64406}
!2726 = !{i64 64408}
!2727 = !{i64 64412}
!2728 = !{i64 64414}
!2729 = !{i64 64418}
!2730 = !{i64 64568}
!2731 = !{i64 64572}
!2732 = !{i64 64574}
!2733 = !{i64 64440}
!2734 = !{i64 64442}
!2735 = !{i64 64550}
!2736 = !{i64 64478}
!2737 = !{i64 64482}
!2738 = !{i64 64502}
!2739 = !{i64 64504}
!2740 = !{i64 64528}
!2741 = !{i64 64534}
!2742 = !{i64 64552}
!2743 = !{i64 64556}
!2744 = !{i64 64472}
!2745 = !{i64 64588}
!2746 = !{i64 64594}
!2747 = !{i64 64596}
!2748 = !{i64 64622}
!2749 = !{i64 65058}
!2750 = !{i64 65062}
!2751 = !{i64 65064}
!2752 = !{i64 64646}
!2753 = !{i64 64634}
!2754 = !{i64 64644}
!2755 = !{i64 64654}
!2756 = !{i64 64668}
!2757 = !{i64 64678}
!2758 = !{i64 64680}
!2759 = !{i64 64686}
!2760 = !{i64 64688}
!2761 = !{i64 64704}
!2762 = !{i64 65022}
!2763 = !{i64 65026}
!2764 = !{i64 65028}
!2765 = !{i64 64722}
!2766 = !{i64 64724}
!2767 = !{i64 64754}
!2768 = !{i64 64756}
!2769 = !{i64 64760}
!2770 = !{i64 64762}
!2771 = !{i64 64774}
!2772 = !{i64 64776}
!2773 = !{i64 64778}
!2774 = !{i64 64802}
!2775 = !{i64 64854}
!2776 = !{i64 64908}
!2777 = !{i64 64994}
!2778 = !{i64 64998}
!2779 = !{i64 65000}
!2780 = !{i64 64930}
!2781 = !{i64 64936}
!2782 = !{i64 64940}
!2783 = !{i64 64960}
!2784 = !{i64 64962}
!2785 = !{i64 64964}
!2786 = !{i64 64976}
!2787 = !{i64 64982}
!2788 = !{i64 64782}
!2789 = !{i64 64790}
!2790 = !{i64 64808}
!2791 = !{i64 64858}
!2792 = !{i64 65004}
!2793 = !{i64 65010}
!2794 = !{i64 65040}
!2795 = !{i64 65046}
!2796 = !{i64 65078}
!2797 = !{i64 65090}
!2798 = !{i64 65094}
!2799 = !{i64 65096}
!2800 = !{i64 65100}
!2801 = !{i64 65116}
!2802 = !{i64 63936}
!2803 = !{i64 63950}
!2804 = !{i64 65130}
!2805 = !{i64 65136}
!2806 = !{i64 65146}
!2807 = !{i64 65150}
!2808 = !{i64 65152}
!2809 = !{i64 65156}
!2810 = !{i64 65172}
!2811 = !{i64 65184}
!2812 = !{i64 65188}
!2813 = !{i64 65198}
!2814 = !{i64 65200}
!2815 = !{i64 65224}
!2816 = !{i64 65240}
!2817 = !{i64 65258}
!2818 = !{i64 65274}
!2819 = !{i64 65290}
!2820 = !{i64 65306}
!2821 = !{i64 65322}
!2822 = !{i64 65336}
!2823 = !{i64 65350}
!2824 = !{i64 65364}
!2825 = !{i64 65370}
!2826 = !{i64 65380}
!2827 = !{i64 65394}
!2828 = !{i64 65400}
!2829 = !{i64 65404}
!2830 = !{i64 65406}
!2831 = !{i64 65416}
!2832 = !{i64 65420}
!2833 = !{i64 65430}
!2834 = !{i64 65436}
!2835 = !{i64 65440}
!2836 = !{i64 65442}
!2837 = !{i64 65452}
!2838 = !{i64 65456}
!2839 = !{i64 65466}
!2840 = !{i64 65472}
!2841 = !{i64 65476}
!2842 = !{i64 65478}
!2843 = !{i64 65488}
!2844 = !{i64 65492}
!2845 = !{i64 65502}
!2846 = !{i64 65516}
!2847 = !{i64 65526}
!2848 = !{i64 65592}
!2849 = !{i64 65594}
!2850 = !{i64 65598}
!2851 = !{i64 65602}
!2852 = !{i64 65606}
!2853 = !{i64 65674}
!2854 = !{i64 65678}
!2855 = !{i64 65682}
!2856 = !{i64 65686}
!2857 = !{i64 65690}
!2858 = !{i64 65698}
!2859 = !{i64 65702}
!2860 = !{i64 65706}
!2861 = !{i64 65710}
!2862 = !{i64 65714}
!2863 = !{i64 65718}
!2864 = !{i64 65722}
!2865 = !{i64 65726}
!2866 = !{i64 65730}
!2867 = !{i64 65738}
!2868 = !{i64 65742}
!2869 = !{i64 65746}
!2870 = !{i64 65750}
!2871 = !{i64 65754}
!2872 = !{i64 65758}
!2873 = !{i64 65762}
!2874 = !{i64 65766}
!2875 = !{i64 65770}
!2876 = !{i64 65774}
!2877 = !{i64 65778}
!2878 = !{i64 65782}
!2879 = !{i64 65786}
!2880 = !{i64 65790}
!2881 = !{i64 65794}
!2882 = !{i64 65798}
!2883 = !{i64 65864}
!2884 = !{i64 65868}
!2885 = !{i64 65872}
!2886 = !{i64 65876}
!2887 = !{i64 65880}
!2888 = !{i64 65884}
!2889 = !{i64 65888}
!2890 = !{i64 65892}
!2891 = !{i64 66920}
!2892 = !{i64 66930}
!2893 = !{i64 66932}
!2894 = !{i64 66946}
!2895 = !{i64 66964}
!2896 = !{i64 66968}
!2897 = !{i64 66978}
!2898 = !{i64 66982}
!2899 = !{i64 66984}
!2900 = !{i64 66998}
!2901 = !{i64 67002}
!2902 = !{i64 67030}
!2903 = !{i64 67034}
!2904 = !{i64 67044}
!2905 = !{i64 67048}
!2906 = !{i64 67050}
!2907 = !{i64 67064}
!2908 = !{i64 67074}
!2909 = !{i64 67076}
!2910 = !{i64 67150}
!2911 = !{i64 67162}
!2912 = !{i64 67182}
!2913 = !{i64 67222}
!2914 = !{i64 67224}
!2915 = !{i64 67232}
!2916 = !{i64 67242}
!2917 = !{i64 67244}
!2918 = !{i64 67246}
!2919 = !{i64 67250}
!2920 = !{i64 67258}
!2921 = !{i64 67270}
!2922 = !{i64 67294}
!2923 = !{i64 67296}
!2924 = !{i64 67308}
!2925 = !{i64 67316}
!2926 = !{i64 67350}
!2927 = !{i64 67352}
!2928 = !{i64 67364}
!2929 = !{i64 67370}
!2930 = !{i64 67384}
!2931 = !{i64 67400}
!2932 = !{i64 67386}
!2933 = !{i64 67414}
!2934 = !{i64 67416}
!2935 = !{i64 67452}
!2936 = !{i64 67454}
!2937 = !{i64 67476}
!2938 = !{i64 67480}
!2939 = !{i64 67514}
!2940 = !{i64 67516}
!2941 = !{i64 67538}
!2942 = !{i64 67550}
!2943 = !{i64 67574}
!2944 = !{i64 67576}
!2945 = !{i64 67588}
!2946 = !{i64 67596}
!2947 = !{i64 67630}
!2948 = !{i64 67632}
!2949 = !{i64 67644}
!2950 = !{i64 67650}
!2951 = !{i64 67654}
!2952 = !{i64 67664}
!2953 = !{i64 67680}
!2954 = !{i64 67666}
!2955 = !{i64 67694}
!2956 = !{i64 67696}
!2957 = !{i64 67710}
!2958 = !{i64 67730}
!2959 = !{i64 67734}
!2960 = !{i64 67748}
!2961 = !{i64 67768}
!2962 = !{i64 67774}
!2963 = !{i64 67780}
!2964 = !{i64 67782}
!2965 = !{i64 67792}
!2966 = !{i64 67796}
!2967 = !{i64 67818}
!2968 = !{i64 67876}
!2969 = !{i64 67888}
!2970 = !{i64 67908}
!2971 = !{i64 67948}
!2972 = !{i64 67950}
!2973 = !{i64 67958}
!2974 = !{i64 67968}
!2975 = !{i64 67970}
!2976 = !{i64 67972}
!2977 = !{i64 67976}
!2978 = !{i64 67984}
!2979 = !{i64 67996}
!2980 = !{i64 68020}
!2981 = !{i64 68022}
!2982 = !{i64 68034}
!2983 = !{i64 68042}
!2984 = !{i64 68076}
!2985 = !{i64 68078}
!2986 = !{i64 68090}
!2987 = !{i64 68096}
!2988 = !{i64 68110}
!2989 = !{i64 68126}
!2990 = !{i64 68112}
!2991 = !{i64 68166}
!2992 = !{i64 68168}
!2993 = !{i64 68190}
!2994 = !{i64 68194}
!2995 = !{i64 68228}
!2996 = !{i64 68230}
!2997 = !{i64 68252}
!2998 = !{i64 68264}
!2999 = !{i64 68288}
!3000 = !{i64 68290}
!3001 = !{i64 68302}
!3002 = !{i64 68310}
!3003 = !{i64 68344}
!3004 = !{i64 68346}
!3005 = !{i64 68358}
!3006 = !{i64 68364}
!3007 = !{i64 68368}
!3008 = !{i64 68378}
!3009 = !{i64 68394}
!3010 = !{i64 68380}
!3011 = !{i64 68408}
!3012 = !{i64 68410}
!3013 = !{i64 68414}
!3014 = !{i64 68428}
!3015 = !{i64 68432}
!3016 = !{i64 68446}
!3017 = !{i64 68466}
!3018 = !{i64 68508}
!3019 = !{i64 68510}
!3020 = !{i64 68528}
!3021 = !{i64 68532}
!3022 = !{i64 68566}
!3023 = !{i64 68568}
!3024 = !{i64 68586}
!3025 = !{i64 68598}
!3026 = !{i64 68622}
!3027 = !{i64 68624}
!3028 = !{i64 68636}
!3029 = !{i64 68644}
!3030 = !{i64 68678}
!3031 = !{i64 68680}
!3032 = !{i64 68692}
!3033 = !{i64 68698}
!3034 = !{i64 68702}
!3035 = !{i64 68712}
!3036 = !{i64 68728}
!3037 = !{i64 68714}
!3038 = !{i64 68742}
!3039 = !{i64 68744}
!3040 = !{i64 68748}
!3041 = !{i64 68762}
!3042 = !{i64 68766}
!3043 = !{i64 68780}
!3044 = !{i64 68800}
!3045 = !{i64 68814}
!3046 = !{i64 68816}
!3047 = !{i64 68864}
!3048 = !{i64 68880}
!3049 = !{i64 68906}
!3050 = !{i64 68916}
!3051 = !{i64 68932}
!3052 = !{i64 68958}
!3053 = !{i64 68974}
!3054 = !{i64 69000}
!3055 = !{i64 69010}
!3056 = !{i64 69026}
!3057 = !{i64 69052}
!3058 = !{i64 69068}
!3059 = !{i64 69094}
!3060 = !{i64 69104}
!3061 = !{i64 69120}
!3062 = !{i64 69122}
!3063 = !{i64 69136}
!3064 = !{i64 69142}
!3065 = !{i64 69148}
!3066 = !{i64 69150}
!3067 = !{i64 69200}
!3068 = !{i64 69202}
!3069 = !{i64 69204}
!3070 = !{i64 69208}
!3071 = !{i64 69218}
!3072 = !{i64 69224}
!3073 = !{i64 69226}
!3074 = !{i64 69228}
!3075 = !{i64 69242}
!3076 = !{i64 69248}
!3077 = !{i64 69254}
!3078 = !{i64 69256}
!3079 = !{i64 69264}
!3080 = !{i64 69268}
!3081 = !{i64 69322}
!3082 = !{i64 69338}
!3083 = !{i64 69340}
!3084 = !{i64 69350}
!3085 = !{i64 69380}
!3086 = !{i64 69382}
!3087 = !{i64 69384}
!3088 = !{i64 69398}
!3089 = !{i64 69404}
!3090 = !{i64 69406}
!3091 = !{i64 69416}
!3092 = !{i64 69446}
!3093 = !{i64 69448}
!3094 = !{i64 69450}
!3095 = !{i64 69464}
!3096 = !{i64 69466}
!3097 = !{i64 69472}
!3098 = !{i64 69482}
!3099 = !{i64 69512}
!3100 = !{i64 69514}
!3101 = !{i64 69516}
!3102 = !{i64 69530}
!3103 = !{i64 69532}
!3104 = !{i64 69536}
!3105 = !{i64 69538}
!3106 = !{i64 69546}
!3107 = !{i64 69556}
!3108 = !{i64 69558}
!3109 = !{i64 69560}
!3110 = !{i64 69564}
!3111 = !{i64 69572}
!3112 = !{i64 69584}
!3113 = !{i64 69608}
!3114 = !{i64 69610}
!3115 = !{i64 69622}
!3116 = !{i64 69628}
!3117 = !{i64 69630}
!3118 = !{i64 69664}
!3119 = !{i64 69666}
!3120 = !{i64 69678}
!3121 = !{i64 69684}
!3122 = !{i64 69714}
!3123 = !{i64 69700}
!3124 = !{i64 69754}
!3125 = !{i64 69756}
!3126 = !{i64 69772}
!3127 = !{i64 69776}
!3128 = !{i64 69810}
!3129 = !{i64 69812}
!3130 = !{i64 69828}
!3131 = !{i64 69840}
!3132 = !{i64 69864}
!3133 = !{i64 69866}
!3134 = !{i64 69878}
!3135 = !{i64 69884}
!3136 = !{i64 69886}
!3137 = !{i64 69920}
!3138 = !{i64 69922}
!3139 = !{i64 69934}
!3140 = !{i64 69940}
!3141 = !{i64 69944}
!3142 = !{i64 69970}
!3143 = !{i64 69956}
!3144 = !{i64 70010}
!3145 = !{i64 70012}
!3146 = !{i64 70034}
!3147 = !{i64 70038}
!3148 = !{i64 70072}
!3149 = !{i64 70074}
!3150 = !{i64 70096}
!3151 = !{i64 70108}
!3152 = !{i64 70132}
!3153 = !{i64 70134}
!3154 = !{i64 70146}
!3155 = !{i64 70152}
!3156 = !{i64 70154}
!3157 = !{i64 70188}
!3158 = !{i64 70190}
!3159 = !{i64 70202}
!3160 = !{i64 70208}
!3161 = !{i64 70212}
!3162 = !{i64 70238}
!3163 = !{i64 70224}
!3164 = !{i64 70258}
!3165 = !{i64 70260}
!3166 = !{i64 70266}
!3167 = !{i64 70280}
!3168 = !{i64 70290}
!3169 = !{i64 70298}
!3170 = !{i64 70312}
!3171 = !{i64 70322}
!3172 = !{i64 70330}
!3173 = !{i64 70344}
!3174 = !{i64 70354}
!3175 = !{i64 70360}
!3176 = !{i64 70366}
!3177 = !{i64 70368}
!3178 = !{i64 70378}
!3179 = !{i64 70380}
!3180 = !{i64 70432}
!3181 = !{i64 70442}
!3182 = !{i64 70462}
!3183 = !{i64 70502}
!3184 = !{i64 70504}
!3185 = !{i64 70512}
!3186 = !{i64 70522}
!3187 = !{i64 70524}
!3188 = !{i64 70526}
!3189 = !{i64 70530}
!3190 = !{i64 70538}
!3191 = !{i64 70550}
!3192 = !{i64 70574}
!3193 = !{i64 70576}
!3194 = !{i64 70588}
!3195 = !{i64 70596}
!3196 = !{i64 70630}
!3197 = !{i64 70632}
!3198 = !{i64 70644}
!3199 = !{i64 70650}
!3200 = !{i64 70664}
!3201 = !{i64 70680}
!3202 = !{i64 70666}
!3203 = !{i64 70720}
!3204 = !{i64 70722}
!3205 = !{i64 70744}
!3206 = !{i64 70748}
!3207 = !{i64 70782}
!3208 = !{i64 70784}
!3209 = !{i64 70806}
!3210 = !{i64 70818}
!3211 = !{i64 70842}
!3212 = !{i64 70844}
!3213 = !{i64 70856}
!3214 = !{i64 70864}
!3215 = !{i64 70898}
!3216 = !{i64 70900}
!3217 = !{i64 70912}
!3218 = !{i64 70918}
!3219 = !{i64 70922}
!3220 = !{i64 70932}
!3221 = !{i64 70948}
!3222 = !{i64 70934}
!3223 = !{i64 70962}
!3224 = !{i64 70964}
!3225 = !{i64 70968}
!3226 = !{i64 70984}
!3227 = !{i64 71006}
!3228 = !{i64 71028}
!3229 = !{i64 71050}
!3230 = !{i64 71062}
!3231 = !{i64 71070}
!3232 = !{i64 71072}
!3233 = !{i64 71082}
!3234 = !{i64 71092}
!3235 = !{i64 71114}
!3236 = !{i64 71128}
!3237 = !{i64 71144}
!3238 = !{i64 71146}
!3239 = !{i64 71168}
!3240 = !{i64 71194}
!3241 = !{i64 71198}
!3242 = !{i64 71218}
!3243 = !{i64 71234}
!3244 = !{i64 71268}
!3245 = !{i64 71270}
!3246 = !{i64 71288}
!3247 = !{i64 71292}
!3248 = !{i64 71326}
!3249 = !{i64 71328}
!3250 = !{i64 71346}
!3251 = !{i64 71358}
!3252 = !{i64 71382}
!3253 = !{i64 71384}
!3254 = !{i64 71396}
!3255 = !{i64 71404}
!3256 = !{i64 71438}
!3257 = !{i64 71440}
!3258 = !{i64 71452}
!3259 = !{i64 71458}
!3260 = !{i64 71462}
!3261 = !{i64 71472}
!3262 = !{i64 71488}
!3263 = !{i64 71474}
!3264 = !{i64 71502}
!3265 = !{i64 71504}
!3266 = !{i64 71508}
!3267 = !{i64 71538}
!3268 = !{i64 71542}
!3269 = !{i64 71562}
!3270 = !{i64 71578}
!3271 = !{i64 71582}
!3272 = !{i64 71588}
!3273 = !{i64 71590}
!3274 = !{i64 71606}
!3275 = !{i64 71620}
!3276 = !{i64 71624}
!3277 = !{i64 71636}
!3278 = !{i64 71640}
!3279 = !{i64 71652}
!3280 = !{i64 71656}
!3281 = !{i64 71668}
!3282 = !{i64 71672}
!3283 = !{i64 71684}
!3284 = !{i64 71688}
!3285 = !{i64 71700}
!3286 = !{i64 71706}
!3287 = !{i64 71722}
!3288 = !{i64 71742}
!3289 = !{i64 71774}
!3290 = !{i64 71786}
!3291 = !{i64 71802}
!3292 = !{i64 71814}
!3293 = !{i64 71830}
!3294 = !{i64 71842}
!3295 = !{i64 71858}
!3296 = !{i64 71870}
!3297 = !{i64 71884}
!3298 = !{i64 71904}
!3299 = !{i64 71944}
!3300 = !{i64 71964}
!3301 = !{i64 72006}
!3302 = !{i64 72018}
!3303 = !{i64 72032}
!3304 = !{i64 72052}
!3305 = !{i64 72068}
!3306 = !{i64 72110}
!3307 = !{i64 72130}
!3308 = !{i64 72146}
!3309 = !{i64 72188}
!3310 = !{i64 72202}
!3311 = !{i64 72208}
!3312 = !{i64 72234}
!3313 = !{i64 72248}
!3314 = !{i64 72262}
!3315 = !{i64 72276}
!3316 = !{i64 72288}
!3317 = !{i64 72294}
!3318 = !{i64 72308}
!3319 = !{i64 72320}
!3320 = !{i64 72334}
!3321 = !{i64 72338}
!3322 = !{i64 72352}
!3323 = !{i64 72356}
!3324 = !{i64 72358}
!3325 = !{i64 72372}
!3326 = !{i64 72384}
!3327 = !{i64 72392}
!3328 = !{i64 72406}
!3329 = !{i64 72434}
!3330 = !{i64 72444}
!3331 = !{i64 72448}
!3332 = !{i64 72456}
!3333 = !{i64 72460}
!3334 = !{i64 72464}
!3335 = !{i64 72482}
!3336 = !{i64 72494}
!3337 = !{i64 72510}
!3338 = !{i64 72522}
!3339 = !{i64 72534}
!3340 = !{i64 72550}
!3341 = !{i64 72558}
!3342 = !{i64 72560}
!3343 = !{i64 72562}
!3344 = !{i64 72574}
!3345 = !{i64 72578}
!3346 = !{i64 72580}
!3347 = !{i64 72582}
!3348 = !{i64 72588}
!3349 = !{i64 72604}
!3350 = !{i64 72618}
!3351 = !{i64 72624}
!3352 = !{i64 72634}
!3353 = !{i64 72652}
!3354 = !{i64 72662}
!3355 = !{i64 72674}
!3356 = !{i64 72688}
!3357 = !{i64 72704}
!3358 = !{i64 72712}
!3359 = !{i64 72730}
!3360 = !{i64 72732}
!3361 = !{i64 72750}
!3362 = !{i64 72752}
!3363 = !{i64 72758}
!3364 = !{i64 72770}
!3365 = !{i64 72784}
!3366 = !{i64 72790}
!3367 = !{i64 72792}
!3368 = !{i64 72744}
!3369 = !{i64 72794}
!3370 = !{i64 72806}
!3371 = !{i64 72810}
!3372 = !{i64 72822}
!3373 = !{i64 72826}
!3374 = !{i64 72830}
!3375 = !{i64 72832}
!3376 = !{i64 72842}
!3377 = !{i64 72850}
!3378 = !{i64 72860}
!3379 = !{i64 72866}
!3380 = !{i64 72878}
!3381 = !{i64 72880}
!3382 = !{i64 72912}
!3383 = !{i64 72970}
!3384 = !{i64 72980}
!3385 = !{i64 72986}
!3386 = !{i64 72988}
!3387 = !{i64 73004}
!3388 = !{i64 73000}
!3389 = !{i64 73010}
!3390 = !{i64 73012}
!3391 = !{i64 73018}
!3392 = !{i64 73026}
!3393 = !{i64 73034}
!3394 = !{i64 73036}
!3395 = !{i64 73024}
!3396 = !{i64 73046}
!3397 = !{i64 73050}
!3398 = !{i64 73054}
!3399 = !{i64 73062}
!3400 = !{i64 73064}
!3401 = !{i64 73074}
!3402 = !{i64 73076}
!3403 = !{i64 73094}
!3404 = !{i64 73096}
!3405 = !{i64 73140}
!3406 = !{i64 73150}
!3407 = !{i64 73164}
!3408 = !{i64 73174}
!3409 = !{i64 73176}
!3410 = !{i64 73212}
!3411 = !{i64 73222}
!3412 = !{i64 73236}
!3413 = !{i64 73246}
!3414 = !{i64 73248}
!3415 = !{i64 73292}
!3416 = !{i64 73300}
!3417 = !{i64 73314}
!3418 = !{i64 73324}
!3419 = !{i64 73334}
!3420 = !{i64 73356}
!3421 = !{i64 73368}
!3422 = !{i64 73372}
!3423 = !{i64 73384}
!3424 = !{i64 73388}
!3425 = !{i64 73400}
!3426 = !{i64 73404}
!3427 = !{i64 73412}
!3428 = !{i64 73434}
!3429 = !{i64 73442}
!3430 = !{i64 73456}
!3431 = !{i64 73478}
!3432 = !{i64 73486}
!3433 = !{i64 73500}
!3434 = !{i64 73516}
!3435 = !{i64 73526}
!3436 = !{i64 73544}
!3437 = !{i64 73558}
!3438 = !{i64 73572}
!3439 = !{i64 73582}
!3440 = !{i64 73600}
!3441 = !{i64 73614}
!3442 = !{i64 73616}
!3443 = !{i64 73654}
!3444 = !{i64 73656}
!3445 = !{i64 73674}
!3446 = !{i64 73682}
!3447 = !{i64 73700}
!3448 = !{i64 73710}
!3449 = !{i64 73738}
!3450 = !{i64 73752}
!3451 = !{i64 73764}
!3452 = !{i64 73768}
!3453 = !{i64 73778}
!3454 = !{i64 73788}
!3455 = !{i64 73804}
!3456 = !{i64 73808}
!3457 = !{i64 73820}
!3458 = !{i64 73830}
!3459 = !{i64 73832}
!3460 = !{i64 73858}
!3461 = !{i64 73876}
!3462 = !{i64 73882}
!3463 = !{i64 73886}
!3464 = !{i64 73888}
!3465 = !{i64 73902}
!3466 = !{i64 73916}
!3467 = !{i64 73918}
!3468 = !{i64 73922}
!3469 = !{i64 73928}
!3470 = !{i64 73932}
!3471 = !{i64 73934}
!3472 = !{i64 73948}
!3473 = !{i64 73962}
!3474 = !{i64 73964}
!3475 = !{i64 73850}
!3476 = !{i64 73966}
!3477 = !{i64 73970}
!3478 = !{i64 73974}
!3479 = !{i64 73976}
!3480 = !{i64 73980}
!3481 = !{i64 73990}
!3482 = !{i64 74004}
!3483 = !{i64 74012}
!3484 = !{i64 74028}
!3485 = !{i64 74032}
!3486 = !{i64 74034}
!3487 = !{i64 74052}
!3488 = !{i64 74058}
!3489 = !{i64 74072}
!3490 = !{i64 74088}
!3491 = !{i64 74100}
!3492 = !{i64 74110}
!3493 = !{i64 74132}
!3494 = !{i64 74142}
!3495 = !{i64 74144}
!3496 = !{i64 74152}
!3497 = !{i64 74158}
!3498 = !{i64 74160}
!3499 = !{i64 74162}
!3500 = !{i64 74164}
!3501 = !{i64 74166}
!3502 = !{i64 74168}
!3503 = !{i64 74178}
!3504 = !{i64 74214}
!3505 = !{i64 74232}
!3506 = !{i64 74250}
!3507 = !{i64 74268}
!3508 = !{i64 74286}
!3509 = !{i64 74300}
!3510 = !{i64 74314}
!3511 = !{i64 74334}
!3512 = !{i64 74338}
!3513 = !{i64 74346}
!3514 = !{i64 74350}
!3515 = !{i64 74358}
!3516 = !{i64 74364}
!3517 = !{i64 74366}
!3518 = !{i64 74368}
!3519 = !{i64 74382}
!3520 = !{i64 74384}
!3521 = !{i64 74410}
!3522 = !{i64 74418}
!3523 = !{i64 74422}
!3524 = !{i64 74412}
!3525 = !{i64 74440}
!3526 = !{i64 74448}
!3527 = !{i64 74542}
!3528 = !{i64 74472}
!3529 = !{i64 74546}
!3530 = !{i64 74548}
!3531 = !{i64 74558}
!3532 = !{i64 74574}
!3533 = !{i64 74580}
!3534 = !{i64 74586}
!3535 = !{i64 74596}
!3536 = !{i64 74600}
!3537 = !{i64 74634}
!3538 = !{i64 74646}
!3539 = !{i64 74818}
!3540 = !{i64 74822}
!3541 = !{i64 74824}
!3542 = !{i64 74672}
!3543 = !{i64 74674}
!3544 = !{i64 74790}
!3545 = !{i64 74794}
!3546 = !{i64 74796}
!3547 = !{i64 74690}
!3548 = !{i64 74696}
!3549 = !{i64 74712}
!3550 = !{i64 74726}
!3551 = !{i64 74728}
!3552 = !{i64 74730}
!3553 = !{i64 74742}
!3554 = !{i64 74748}
!3555 = !{i64 74756}
!3556 = !{i64 74760}
!3557 = !{i64 74772}
!3558 = !{i64 74778}
!3559 = !{i64 74800}
!3560 = !{i64 74806}
!3561 = !{i64 74842}
!3562 = !{i64 74846}
!3563 = !{i64 74868}
!3564 = !{i64 74870}
!3565 = !{i64 75040}
!3566 = !{i64 75044}
!3567 = !{i64 75046}
!3568 = !{i64 74900}
!3569 = !{i64 74906}
!3570 = !{i64 74910}
!3571 = !{i64 74916}
!3572 = !{i64 74934}
!3573 = !{i64 74948}
!3574 = !{i64 74950}
!3575 = !{i64 74952}
!3576 = !{i64 74964}
!3577 = !{i64 74970}
!3578 = !{i64 74978}
!3579 = !{i64 74982}
!3580 = !{i64 74994}
!3581 = !{i64 75000}
!3582 = !{i64 75012}
!3583 = !{i64 75016}
!3584 = !{i64 75018}
!3585 = !{i64 75022}
!3586 = !{i64 75028}
!3587 = !{i64 75050}
!3588 = !{i64 75056}
!3589 = !{i64 75068}
!3590 = !{i64 75072}
!3591 = !{i64 75074}
!3592 = !{i64 75092}
!3593 = !{i64 75104}
!3594 = !{i64 75108}
!3595 = !{i64 75152}
!3596 = !{i64 75482}
!3597 = !{i64 75488}
!3598 = !{i64 75490}
!3599 = !{i64 75178}
!3600 = !{i64 75180}
!3601 = !{i64 75204}
!3602 = !{i64 75228}
!3603 = !{i64 75232}
!3604 = !{i64 75236}
!3605 = !{i64 75256}
!3606 = !{i64 75268}
!3607 = !{i64 75270}
!3608 = !{i64 75276}
!3609 = !{i64 75282}
!3610 = !{i64 75298}
!3611 = !{i64 75300}
!3612 = !{i64 75288}
!3613 = !{i64 75302}
!3614 = !{i64 75308}
!3615 = !{i64 75318}
!3616 = !{i64 75336}
!3617 = !{i64 75348}
!3618 = !{i64 75350}
!3619 = !{i64 75356}
!3620 = !{i64 75362}
!3621 = !{i64 75378}
!3622 = !{i64 75380}
!3623 = !{i64 75368}
!3624 = !{i64 75382}
!3625 = !{i64 75388}
!3626 = !{i64 75400}
!3627 = !{i64 75424}
!3628 = !{i64 75420}
!3629 = !{i64 75428}
!3630 = !{i64 75434}
!3631 = !{i64 75446}
!3632 = !{i64 75456}
!3633 = !{i64 75462}
!3634 = !{i64 75496}
!3635 = !{i64 75504}
!3636 = !{i64 75506}
!3637 = !{i64 75508}
!3638 = !{i64 75514}
!3639 = !{i64 75526}
!3640 = !{i64 75530}
!3641 = !{i64 75546}
!3642 = !{i64 75548}
!3643 = !{i64 75564}
!3644 = !{i64 75588}
!3645 = !{i64 75598}
!3646 = !{i64 75616}
!3647 = !{i64 76054}
!3648 = !{i64 76058}
!3649 = !{i64 76060}
!3650 = !{i64 75644}
!3651 = !{i64 75634}
!3652 = !{i64 75646}
!3653 = !{i64 75652}
!3654 = !{i64 75658}
!3655 = !{i64 75680}
!3656 = !{i64 75682}
!3657 = !{i64 75706}
!3658 = !{i64 75708}
!3659 = !{i64 76030}
!3660 = !{i64 76034}
!3661 = !{i64 76036}
!3662 = !{i64 75726}
!3663 = !{i64 75734}
!3664 = !{i64 75766}
!3665 = !{i64 75778}
!3666 = !{i64 75782}
!3667 = !{i64 75788}
!3668 = !{i64 75802}
!3669 = !{i64 75816}
!3670 = !{i64 75828}
!3671 = !{i64 75832}
!3672 = !{i64 75838}
!3673 = !{i64 75848}
!3674 = !{i64 75852}
!3675 = !{i64 75854}
!3676 = !{i64 75876}
!3677 = !{i64 75884}
!3678 = !{i64 75950}
!3679 = !{i64 75952}
!3680 = !{i64 75974}
!3681 = !{i64 75986}
!3682 = !{i64 75990}
!3683 = !{i64 75996}
!3684 = !{i64 76006}
!3685 = !{i64 76012}
!3686 = !{i64 76018}
!3687 = !{i64 76042}
!3688 = !{i64 76214}
!3689 = !{i64 76224}
!3690 = !{i64 76080}
!3691 = !{i64 76098}
!3692 = !{i64 76230}
!3693 = !{i64 76232}
!3694 = !{i64 76126}
!3695 = !{i64 76142}
!3696 = !{i64 76146}
!3697 = !{i64 76152}
!3698 = !{i64 76192}
!3699 = !{i64 76196}
!3700 = !{i64 76200}
!3701 = !{i64 76260}
!3702 = !{i64 76242}
!3703 = !{i64 76262}
!3704 = !{i64 76264}
!3705 = !{i64 76278}
!3706 = !{i64 76298}
!3707 = !{i64 76318}
!3708 = !{i64 76326}
!3709 = !{i64 76338}
!3710 = !{i64 76364}
!3711 = !{i64 76372}
!3712 = !{i64 76382}
!3713 = !{i64 76400}
!3714 = !{i64 76410}
!3715 = !{i64 76414}
!3716 = !{i64 76426}
!3717 = !{i64 76428}
!3718 = !{i64 76554}
!3719 = !{i64 76574}
!3720 = !{i64 76568}
!3721 = !{i64 76576}
!3722 = !{i64 76588}
!3723 = !{i64 76594}
!3724 = !{i64 76600}
!3725 = !{i64 76602}
!3726 = !{i64 76612}
!3727 = !{i64 76622}
!3728 = !{i64 76634}
!3729 = !{i64 76648}
!3730 = !{i64 76654}
!3731 = !{i64 76660}
!3732 = !{i64 76662}
!3733 = !{i64 76672}
!3734 = !{i64 76692}
!3735 = !{i64 76710}
!3736 = !{i64 76748}
!3737 = !{i64 76752}
!3738 = !{i64 76852}
!3739 = !{i64 76886}
!3740 = !{i64 76888}
!3741 = !{i64 76876}
!3742 = !{i64 76956}
!3743 = !{i64 76936}
!3744 = !{i64 76948}
!3745 = !{i64 76950}
!3746 = !{i64 76958}
!3747 = !{i64 76966}
!3748 = !{i64 76976}
!3749 = !{i64 76978}
!3750 = !{i64 77004}
!3751 = !{i64 77028}
!3752 = !{i64 77020}
!3753 = !{i64 77030}
!3754 = !{i64 77042}
!3755 = !{i64 77050}
!3756 = !{i64 77060}
!3757 = !{i64 77062}
!3758 = !{i64 77072}
!3759 = !{i64 77084}
!3760 = !{i64 77098}
!3761 = !{i64 77112}
!3762 = !{i64 77120}
!3763 = !{i64 77130}
!3764 = !{i64 77132}
!3765 = !{i64 77142}
!3766 = !{i64 77168}
!3767 = !{i64 77188}
!3768 = !{i64 77226}
!3769 = !{i64 77228}
!3770 = !{i64 77352}
!3771 = !{i64 77376}
!3772 = !{i64 77368}
!3773 = !{i64 77378}
!3774 = !{i64 77390}
!3775 = !{i64 77398}
!3776 = !{i64 77408}
!3777 = !{i64 77410}
!3778 = !{i64 77420}
!3779 = !{i64 77432}
!3780 = !{i64 77446}
!3781 = !{i64 77460}
!3782 = !{i64 77468}
!3783 = !{i64 77478}
!3784 = !{i64 77480}
!3785 = !{i64 77490}
!3786 = !{i64 77510}
!3787 = !{i64 77516}
!3788 = !{i64 77524}
!3789 = !{i64 77550}
!3790 = !{i64 77708}
!3791 = !{i64 77712}
!3792 = !{i64 77888}
!3793 = !{i64 77912}
!3794 = !{i64 77904}
!3795 = !{i64 77914}
!3796 = !{i64 77928}
!3797 = !{i64 77936}
!3798 = !{i64 77946}
!3799 = !{i64 77948}
!3800 = !{i64 77958}
!3801 = !{i64 77970}
!3802 = !{i64 77986}
!3803 = !{i64 78000}
!3804 = !{i64 78008}
!3805 = !{i64 78018}
!3806 = !{i64 78020}
!3807 = !{i64 78030}
!3808 = !{i64 78040}
!3809 = !{i64 78052}
!3810 = !{i64 78064}
!3811 = !{i64 78070}
!3812 = !{i64 78076}
!3813 = !{i64 78088}
!3814 = !{i64 78094}
!3815 = !{i64 78100}
!3816 = !{i64 78112}
!3817 = !{i64 78118}
!3818 = !{i64 78124}
!3819 = !{i64 78136}
!3820 = !{i64 78142}
!3821 = !{i64 78148}
!3822 = !{i64 78230}
!3823 = !{i64 78242}
!3824 = !{i64 78278}
!3825 = !{i64 78574}
!3826 = !{i64 78580}
!3827 = !{i64 78680}
!3828 = !{i64 78700}
!3829 = !{i64 78694}
!3830 = !{i64 78702}
!3831 = !{i64 78714}
!3832 = !{i64 78720}
!3833 = !{i64 78726}
!3834 = !{i64 78728}
!3835 = !{i64 78738}
!3836 = !{i64 78748}
!3837 = !{i64 78760}
!3838 = !{i64 78774}
!3839 = !{i64 78780}
!3840 = !{i64 78786}
!3841 = !{i64 78788}
!3842 = !{i64 78798}
!3843 = !{i64 78810}
!3844 = !{i64 78830}
!3845 = !{i64 78848}
!3846 = !{i64 78886}
!3847 = !{i64 78888}
!3848 = !{i64 78988}
!3849 = !{i64 79008}
!3850 = !{i64 79002}
!3851 = !{i64 79010}
!3852 = !{i64 79022}
!3853 = !{i64 79028}
!3854 = !{i64 79034}
!3855 = !{i64 79036}
!3856 = !{i64 79046}
!3857 = !{i64 79056}
!3858 = !{i64 79068}
!3859 = !{i64 79082}
!3860 = !{i64 79088}
!3861 = !{i64 79094}
!3862 = !{i64 79096}
!3863 = !{i64 79106}
!3864 = !{i64 79118}
!3865 = !{i64 79138}
!3866 = !{i64 79156}
!3867 = !{i64 79194}
!3868 = !{i64 79196}
!3869 = !{i64 79296}
!3870 = !{i64 79316}
!3871 = !{i64 79310}
!3872 = !{i64 79318}
!3873 = !{i64 79330}
!3874 = !{i64 79336}
!3875 = !{i64 79342}
!3876 = !{i64 79344}
!3877 = !{i64 79354}
!3878 = !{i64 79364}
!3879 = !{i64 79376}
!3880 = !{i64 79390}
!3881 = !{i64 79396}
!3882 = !{i64 79402}
!3883 = !{i64 79404}
!3884 = !{i64 79414}
!3885 = !{i64 79426}
!3886 = !{i64 79446}
!3887 = !{i64 79464}
!3888 = !{i64 79502}
!3889 = !{i64 79504}
!3890 = !{i64 79604}
!3891 = !{i64 79624}
!3892 = !{i64 79618}
!3893 = !{i64 79626}
!3894 = !{i64 79638}
!3895 = !{i64 79644}
!3896 = !{i64 79650}
!3897 = !{i64 79652}
!3898 = !{i64 79662}
!3899 = !{i64 79672}
!3900 = !{i64 79684}
!3901 = !{i64 79698}
!3902 = !{i64 79704}
!3903 = !{i64 79710}
!3904 = !{i64 79712}
!3905 = !{i64 79722}
!3906 = !{i64 79734}
!3907 = !{i64 79754}
!3908 = !{i64 79772}
!3909 = !{i64 79810}
!3910 = !{i64 79812}
!3911 = !{i64 79890}
!3912 = !{i64 79962}
!3913 = !{i64 79982}
!3914 = !{i64 79976}
!3915 = !{i64 79984}
!3916 = !{i64 79996}
!3917 = !{i64 80002}
!3918 = !{i64 80008}
!3919 = !{i64 80010}
!3920 = !{i64 80020}
!3921 = !{i64 80030}
!3922 = !{i64 80042}
!3923 = !{i64 80056}
!3924 = !{i64 80062}
!3925 = !{i64 80068}
!3926 = !{i64 80070}
!3927 = !{i64 80080}
!3928 = !{i64 80092}
!3929 = !{i64 80112}
!3930 = !{i64 80130}
!3931 = !{i64 80168}
!3932 = !{i64 80172}
!3933 = !{i64 80266}
!3934 = !{i64 80300}
!3935 = !{i64 80302}
!3936 = !{i64 80290}
!3937 = !{i64 80370}
!3938 = !{i64 80350}
!3939 = !{i64 80362}
!3940 = !{i64 80364}
!3941 = !{i64 80372}
!3942 = !{i64 80380}
!3943 = !{i64 80390}
!3944 = !{i64 80392}
!3945 = !{i64 80418}
!3946 = !{i64 80442}
!3947 = !{i64 80434}
!3948 = !{i64 80444}
!3949 = !{i64 80456}
!3950 = !{i64 80464}
!3951 = !{i64 80474}
!3952 = !{i64 80476}
!3953 = !{i64 80486}
!3954 = !{i64 80498}
!3955 = !{i64 80512}
!3956 = !{i64 80526}
!3957 = !{i64 80534}
!3958 = !{i64 80544}
!3959 = !{i64 80546}
!3960 = !{i64 80556}
!3961 = !{i64 80568}
!3962 = !{i64 80594}
!3963 = !{i64 80614}
!3964 = !{i64 80652}
!3965 = !{i64 80656}
!3966 = !{i64 80802}
!3967 = !{i64 80826}
!3968 = !{i64 80818}
!3969 = !{i64 80828}
!3970 = !{i64 80840}
!3971 = !{i64 80848}
!3972 = !{i64 80858}
!3973 = !{i64 80860}
!3974 = !{i64 80870}
!3975 = !{i64 80882}
!3976 = !{i64 80896}
!3977 = !{i64 80910}
!3978 = !{i64 80918}
!3979 = !{i64 80928}
!3980 = !{i64 80930}
!3981 = !{i64 80940}
!3982 = !{i64 80950}
!3983 = !{i64 80962}
!3984 = !{i64 80974}
!3985 = !{i64 80986}
!3986 = !{i64 80998}
!3987 = !{i64 81004}
!3988 = !{i64 81010}
!3989 = !{i64 81022}
!3990 = !{i64 81028}
!3991 = !{i64 81034}
!3992 = !{i64 81050}
!3993 = !{i64 81104}
!3994 = !{i64 81140}
!3995 = !{i64 81396}
!3996 = !{i64 81400}
!3997 = !{i64 81478}
!3998 = !{i64 81550}
!3999 = !{i64 81570}
!4000 = !{i64 81564}
!4001 = !{i64 81572}
!4002 = !{i64 81584}
!4003 = !{i64 81590}
!4004 = !{i64 81596}
!4005 = !{i64 81598}
!4006 = !{i64 81608}
!4007 = !{i64 81618}
!4008 = !{i64 81630}
!4009 = !{i64 81644}
!4010 = !{i64 81650}
!4011 = !{i64 81656}
!4012 = !{i64 81658}
!4013 = !{i64 81668}
!4014 = !{i64 81688}
!4015 = !{i64 81706}
!4016 = !{i64 81756}
!4017 = !{i64 81760}
!4018 = !{i64 81864}
!4019 = !{i64 81884}
!4020 = !{i64 81878}
!4021 = !{i64 81886}
!4022 = !{i64 81898}
!4023 = !{i64 81904}
!4024 = !{i64 81910}
!4025 = !{i64 81912}
!4026 = !{i64 81922}
!4027 = !{i64 81932}
!4028 = !{i64 81944}
!4029 = !{i64 81958}
!4030 = !{i64 81964}
!4031 = !{i64 81970}
!4032 = !{i64 81972}
!4033 = !{i64 81982}
!4034 = !{i64 81988}
!4035 = !{i64 81994}
!4036 = !{i64 81990}
!4037 = !{i64 82014}
!4038 = !{i64 82020}
!4039 = !{i64 82038}
!4040 = !{i64 82042}
!4041 = !{i64 82052}
!4042 = !{i64 82076}
!4043 = !{i64 82080}
!4044 = !{i64 82082}
!4045 = !{i64 82078}
!4046 = !{i64 82088}
!4047 = !{i64 82094}
!4048 = !{i64 82098}
!4049 = !{i64 82100}
!4050 = !{i64 82222}
!4051 = !{i64 82246}
!4052 = !{i64 82238}
!4053 = !{i64 82248}
!4054 = !{i64 82260}
!4055 = !{i64 82268}
!4056 = !{i64 82278}
!4057 = !{i64 82280}
!4058 = !{i64 82290}
!4059 = !{i64 82302}
!4060 = !{i64 82316}
!4061 = !{i64 82330}
!4062 = !{i64 82338}
!4063 = !{i64 82348}
!4064 = !{i64 82350}
!4065 = !{i64 82360}
!4066 = !{i64 82372}
!4067 = !{i64 82380}
!4068 = !{i64 82386}
!4069 = !{i64 82414}
!4070 = !{i64 82446}
!4071 = !{i64 82564}
!4072 = !{i64 82568}
!4073 = !{i64 82690}
!4074 = !{i64 82714}
!4075 = !{i64 82706}
!4076 = !{i64 82716}
!4077 = !{i64 82728}
!4078 = !{i64 82736}
!4079 = !{i64 82746}
!4080 = !{i64 82748}
!4081 = !{i64 82758}
!4082 = !{i64 82770}
!4083 = !{i64 82784}
!4084 = !{i64 82798}
!4085 = !{i64 82806}
!4086 = !{i64 82816}
!4087 = !{i64 82818}
!4088 = !{i64 82828}
!4089 = !{i64 82836}
!4090 = !{i64 82842}
!4091 = !{i64 82870}
!4092 = !{i64 82902}
!4093 = !{i64 83020}
!4094 = !{i64 83024}
!4095 = !{i64 83112}
!4096 = !{i64 83146}
!4097 = !{i64 83148}
!4098 = !{i64 83136}
!4099 = !{i64 83216}
!4100 = !{i64 83196}
!4101 = !{i64 83208}
!4102 = !{i64 83210}
!4103 = !{i64 83218}
!4104 = !{i64 83226}
!4105 = !{i64 83236}
!4106 = !{i64 83238}
!4107 = !{i64 83264}
!4108 = !{i64 83288}
!4109 = !{i64 83280}
!4110 = !{i64 83290}
!4111 = !{i64 83302}
!4112 = !{i64 83310}
!4113 = !{i64 83320}
!4114 = !{i64 83322}
!4115 = !{i64 83332}
!4116 = !{i64 83344}
!4117 = !{i64 83358}
!4118 = !{i64 83372}
!4119 = !{i64 83380}
!4120 = !{i64 83390}
!4121 = !{i64 83392}
!4122 = !{i64 83402}
!4123 = !{i64 83414}
!4124 = !{i64 83440}
!4125 = !{i64 83460}
!4126 = !{i64 83498}
!4127 = !{i64 83500}
!4128 = !{i64 83644}
!4129 = !{i64 83668}
!4130 = !{i64 83660}
!4131 = !{i64 83670}
!4132 = !{i64 83682}
!4133 = !{i64 83690}
!4134 = !{i64 83700}
!4135 = !{i64 83702}
!4136 = !{i64 83712}
!4137 = !{i64 83724}
!4138 = !{i64 83738}
!4139 = !{i64 83752}
!4140 = !{i64 83760}
!4141 = !{i64 83770}
!4142 = !{i64 83772}
!4143 = !{i64 83782}
!4144 = !{i64 83790}
!4145 = !{i64 83796}
!4146 = !{i64 83806}
!4147 = !{i64 83812}
!4148 = !{i64 83818}
!4149 = !{i64 83830}
!4150 = !{i64 83836}
!4151 = !{i64 83842}
!4152 = !{i64 83892}
!4153 = !{i64 83924}
!4154 = !{i64 84140}
!4155 = !{i64 84144}
!4156 = !{i64 84198}
!4157 = !{i64 84248}
!4158 = !{i64 84264}
!4159 = !{i64 84270}
!4160 = !{i64 84278}
!4161 = !{i64 84280}
!4162 = !{i64 84290}
!4163 = !{i64 84292}
!4164 = !{i64 84338}
!4165 = !{i64 84374}
!4166 = !{i64 84422}
!4167 = !{i64 84536}
!4168 = !{i64 84556}
!4169 = !{i64 84572}
!4170 = !{i64 84574}
!4171 = !{i64 84592}
!4172 = !{i64 84596}
!4173 = !{i64 84608}
!4174 = !{i64 84626}
!4175 = !{i64 84710}
!4176 = !{i64 84746}
!4177 = !{i64 84762}
!4178 = !{i64 84786}
!4179 = !{i64 84798}
!4180 = !{i64 84808}
!4181 = !{i64 84822}
!4182 = !{i64 84842}
!4183 = !{i64 84854}
!4184 = !{i64 84886}
!4185 = !{i64 84888}
!4186 = !{i64 84896}
!4187 = !{i64 84918}
!4188 = !{i64 84942}
!4189 = !{i64 84944}
!4190 = !{i64 84962}
!4191 = !{i64 84968}
!4192 = !{i64 84988}
!4193 = !{i64 85014}
!4194 = !{i64 85016}
!4195 = !{i64 85034}
!4196 = !{i64 85040}
!4197 = !{i64 85064}
!4198 = !{i64 85088}
!4199 = !{i64 85090}
!4200 = !{i64 85108}
!4201 = !{i64 85114}
!4202 = !{i64 85140}
!4203 = !{i64 85148}
!4204 = !{i64 85156}
!4205 = !{i64 85164}
!4206 = !{i64 85184}
!4207 = !{i64 85216}
!4208 = !{i64 85218}
!4209 = !{i64 85240}
!4210 = !{i64 85254}
!4211 = !{i64 85276}
!4212 = !{i64 85278}
!4213 = !{i64 85282}
!4214 = !{i64 85306}
!4215 = !{i64 85328}
!4216 = !{i64 85342}
!4217 = !{i64 85378}
!4218 = !{i64 85380}
!4219 = !{i64 85400}
!4220 = !{i64 85424}
!4221 = !{i64 85426}
!4222 = !{i64 85444}
!4223 = !{i64 85450}
!4224 = !{i64 85466}
!4225 = !{i64 85468}
!4226 = !{i64 85608}
!4227 = !{i64 85628}
!4228 = !{i64 85622}
!4229 = !{i64 85630}
!4230 = !{i64 85642}
!4231 = !{i64 85648}
!4232 = !{i64 85654}
!4233 = !{i64 85656}
!4234 = !{i64 85666}
!4235 = !{i64 85676}
!4236 = !{i64 85688}
!4237 = !{i64 85702}
!4238 = !{i64 85708}
!4239 = !{i64 85714}
!4240 = !{i64 85716}
!4241 = !{i64 85726}
!4242 = !{i64 85738}
!4243 = !{i64 85758}
!4244 = !{i64 85776}
!4245 = !{i64 85814}
!4246 = !{i64 85816}
!4247 = !{i64 85938}
!4248 = !{i64 85962}
!4249 = !{i64 85954}
!4250 = !{i64 85964}
!4251 = !{i64 85976}
!4252 = !{i64 85984}
!4253 = !{i64 85994}
!4254 = !{i64 85996}
!4255 = !{i64 86006}
!4256 = !{i64 86018}
!4257 = !{i64 86032}
!4258 = !{i64 86046}
!4259 = !{i64 86054}
!4260 = !{i64 86064}
!4261 = !{i64 86066}
!4262 = !{i64 86076}
!4263 = !{i64 86088}
!4264 = !{i64 86096}
!4265 = !{i64 86102}
!4266 = !{i64 86110}
!4267 = !{i64 86136}
!4268 = !{i64 86168}
!4269 = !{i64 86304}
!4270 = !{i64 86338}
!4271 = !{i64 86342}
!4272 = !{i64 86350}
!4273 = !{i64 86362}
!4274 = !{i64 86372}
!4275 = !{i64 86436}
!4276 = !{i64 86448}
!4277 = !{i64 86452}
!4278 = !{i64 86530}
!4279 = !{i64 86542}
!4280 = !{i64 86552}
!4281 = !{i64 86556}
!4282 = !{i64 86578}
!4283 = !{i64 86582}
!4284 = !{i64 86588}
!4285 = !{i64 86590}
!4286 = !{i64 86600}
!4287 = !{i64 86608}
!4288 = !{i64 86614}
!4289 = !{i64 86620}
!4290 = !{i64 86640}
!4291 = !{i64 86650}
!4292 = !{i64 86672}
!4293 = !{i64 86684}
!4294 = !{i64 86694}
!4295 = !{i64 86700}
!4296 = !{i64 86710}
!4297 = !{i64 86722}
!4298 = !{i64 86728}
!4299 = !{i64 86746}
!4300 = !{i64 86754}
!4301 = !{i64 86764}
!4302 = !{i64 86768}
!4303 = !{i64 86780}
!4304 = !{i64 86802}
!4305 = !{i64 86804}
!4306 = !{i64 86806}
!4307 = !{i64 86812}
!4308 = !{i64 86826}
!4309 = !{i64 86844}
!4310 = !{i64 86856}
!4311 = !{i64 86864}
!4312 = !{i64 86874}
!4313 = !{i64 86876}
!4314 = !{i64 86888}
!4315 = !{i64 86900}
!4316 = !{i64 86912}
!4317 = !{i64 86918}
!4318 = !{i64 86922}
!4319 = !{i64 86926}
!4320 = !{i64 86954}
!4321 = !{i64 86958}
!4322 = !{i64 86962}
!4323 = !{i64 86996}
!4324 = !{i64 87002}
!4325 = !{i64 87006}
!4326 = !{i64 87010}
!4327 = !{i64 87042}
!4328 = !{i64 87044}
!4329 = !{i64 87060}
!4330 = !{i64 87066}
!4331 = !{i64 87074}
!4332 = !{i64 87076}
!4333 = !{i64 87080}
!4334 = !{i64 87084}
!4335 = !{i64 87088}
!4336 = !{i64 87102}
!4337 = !{i64 87104}
!4338 = !{i64 87106}
!4339 = !{i64 87120}
!4340 = !{i64 87124}
!4341 = !{i64 87126}
!4342 = !{i64 87140}
!4343 = !{i64 87146}
!4344 = !{i64 87156}
!4345 = !{i64 87174}
!4346 = !{i64 87180}
!4347 = !{i64 87184}
!4348 = !{i64 87194}
!4349 = !{i64 87206}
!4350 = !{i64 87218}
!4351 = !{i64 87230}
!4352 = !{i64 87236}
!4353 = !{i64 87240}
!4354 = !{i64 87258}
!4355 = !{i64 87264}
!4356 = !{i64 87268}
!4357 = !{i64 87278}
!4358 = !{i64 87290}
!4359 = !{i64 87302}
!4360 = !{i64 87314}
!4361 = !{i64 87320}
!4362 = !{i64 87324}
!4363 = !{i64 87328}
!4364 = !{i64 87346}
!4365 = !{i64 87358}
!4366 = !{i64 87368}
!4367 = !{i64 87386}
!4368 = !{i64 87394}
!4369 = !{i64 87396}
!4370 = !{i64 87398}
!4371 = !{i64 87412}
!4372 = !{i64 87428}
!4373 = !{i64 87442}
!4374 = !{i64 87456}
!4375 = !{i64 87466}
!4376 = !{i64 87476}
!4377 = !{i64 87492}
!4378 = !{i64 87496}
!4379 = !{i64 87500}
!4380 = !{i64 87504}
!4381 = !{i64 87508}
!4382 = !{i64 87520}
!4383 = !{i64 87550}
!4384 = !{i64 87552}
!4385 = !{i64 87556}
!4386 = !{i64 87558}
!4387 = !{i64 87562}
!4388 = !{i64 87564}
!4389 = !{i64 87566}
!4390 = !{i64 87568}
!4391 = !{i64 87572}
!4392 = !{i64 87574}
!4393 = !{i64 87578}
!4394 = !{i64 87580}
!4395 = !{i64 87582}
!4396 = !{i64 87584}
!4397 = !{i64 87536}
!4398 = !{i64 87538}
!4399 = !{i64 87586}
!4400 = !{i64 87588}
!4401 = !{i64 87590}
!4402 = !{i64 87592}
!4403 = !{i64 87594}
!4404 = !{i64 87698}
!4405 = !{i64 87604}
!4406 = !{i64 87642}
!4407 = !{i64 87648}
!4408 = !{i64 87650}
!4409 = !{i64 87618}
!4410 = !{i64 87620}
!4411 = !{i64 87632}
!4412 = !{i64 87638}
!4413 = !{i64 87646}
!4414 = !{i64 87654}
!4415 = !{i64 87660}
!4416 = !{i64 87672}
!4417 = !{i64 87674}
!4418 = !{i64 87680}
!4419 = !{i64 87686}
!4420 = !{i64 87690}
!4421 = !{i64 87702}
!4422 = !{i64 87706}
!4423 = !{i64 87708}
!4424 = !{i64 87710}
!4425 = !{i64 87720}
!4426 = !{i64 87722}
!4427 = !{i64 87724}
!4428 = !{i64 87732}
!4429 = !{i64 87734}
!4430 = !{i64 87752}
!4431 = !{i64 87766}
!4432 = !{i64 87768}
!4433 = !{i64 87780}
!4434 = !{i64 87786}
!4435 = !{i64 87794}
!4436 = !{i64 87796}
!4437 = !{i64 87798}
!4438 = !{i64 87802}
!4439 = !{i64 87808}
!4440 = !{i64 87820}
!4441 = !{i64 87824}
!4442 = !{i64 87868}
!4443 = !{i64 87920}
!4444 = !{i64 87906}
!4445 = !{i64 87912}
!4446 = !{i64 87916}
!4447 = !{i64 87922}
!4448 = !{i64 87932}
!4449 = !{i64 88018}
!4450 = !{i64 87946}
!4451 = !{i64 87968}
!4452 = !{i64 87974}
!4453 = !{i64 87984}
!4454 = !{i64 88002}
!4455 = !{i64 88008}
!4456 = !{i64 88012}
!4457 = !{i64 88016}
!4458 = !{i64 88028}
!4459 = !{i64 88034}
!4460 = !{i64 88036}
!4461 = !{i64 88040}
!4462 = !{i64 88048}
!4463 = !{i64 88052}
!4464 = !{i64 88066}
!4465 = !{i64 88072}
!4466 = !{i64 88074}
!4467 = !{i64 88078}
!4468 = !{i64 88088}
!4469 = !{i64 88096}
!4470 = !{i64 88112}
!4471 = !{i64 88116}
!4472 = !{i64 88136}
!4473 = !{i64 88146}
!4474 = !{i64 88206}
!4475 = !{i64 88212}
!4476 = !{i64 88214}
!4477 = !{i64 88216}
!4478 = !{i64 88234}
!4479 = !{i64 88244}
!4480 = !{i64 88248}
!4481 = !{i64 88268}
!4482 = !{i64 88278}
!4483 = !{i64 88338}
!4484 = !{i64 88344}
!4485 = !{i64 88346}
!4486 = !{i64 88348}
!4487 = !{i64 88366}
!4488 = !{i64 88376}
!4489 = !{i64 88400}
!4490 = !{i64 88410}
!4491 = !{i64 88470}
!4492 = !{i64 88476}
!4493 = !{i64 88478}
!4494 = !{i64 88492}
!4495 = !{i64 88498}
!4496 = !{i64 88508}
!4497 = !{i64 88530}
!4498 = !{i64 88542}
!4499 = !{i64 88552}
!4500 = !{i64 88570}
!4501 = !{i64 88578}
!4502 = !{i64 88590}
!4503 = !{i64 88602}
!4504 = !{i64 88616}
!4505 = !{i64 88620}
!4506 = !{i64 88640}
!4507 = !{i64 88650}
!4508 = !{i64 88710}
!4509 = !{i64 88716}
!4510 = !{i64 88718}
!4511 = !{i64 88732}
!4512 = !{i64 88742}
!4513 = !{i64 88744}
!4514 = !{i64 88766}
!4515 = !{i64 88770}
!4516 = !{i64 88778}
!4517 = !{i64 88842}
!4518 = !{i64 88846}
!4519 = !{i64 88848}
!4520 = !{i64 88856}
!4521 = !{i64 88864}
!4522 = !{i64 88868}
!4523 = !{i64 88870}
!4524 = !{i64 88882}
!4525 = !{i64 88892}
!4526 = !{i64 88898}
!4527 = !{i64 88908}
!4528 = !{i64 88920}
!4529 = !{i64 88926}
!4530 = !{i64 88966}
!4531 = !{i64 88986}
!4532 = !{i64 88996}
!4533 = !{i64 89030}
!4534 = !{i64 89042}
!4535 = !{i64 89054}
!4536 = !{i64 89064}
!4537 = !{i64 89082}
!4538 = !{i64 89098}
!4539 = !{i64 89102}
!4540 = !{i64 89112}
!4541 = !{i64 89116}
!4542 = !{i64 89134}
!4543 = !{i64 89152}
!4544 = !{i64 89162}
!4545 = !{i64 89216}
!4546 = !{i64 89228}
!4547 = !{i64 89230}
!4548 = !{i64 89232}
!4549 = !{i64 89238}
!4550 = !{i64 89240}
!4551 = !{i64 89262}
!4552 = !{i64 89268}
!4553 = !{i64 89276}
!4554 = !{i64 89370}
!4555 = !{i64 89372}
!4556 = !{i64 89330}
!4557 = !{i64 89340}
!4558 = !{i64 89342}
!4559 = !{i64 89348}
!4560 = !{i64 89354}
!4561 = !{i64 89366}
!4562 = !{i64 89218}
!4563 = !{i64 89422}
!4564 = !{i64 89390}
!4565 = !{i64 89398}
!4566 = !{i64 89408}
!4567 = !{i64 89414}
!4568 = !{i64 89426}
!4569 = !{i64 89444}
!4570 = !{i64 89450}
!4571 = !{i64 89466}
!4572 = !{i64 89472}
!4573 = !{i64 89490}
!4574 = !{i64 89500}
!4575 = !{i64 89510}
!4576 = !{i64 89512}
!4577 = !{i64 89524}
!4578 = !{i64 89526}
!4579 = !{i64 89536}
!4580 = !{i64 89542}
!4581 = !{i64 89552}
!4582 = !{i64 89556}
!4583 = !{i64 89566}
!4584 = !{i64 89568}
!4585 = !{i64 89586}
!4586 = !{i64 89604}
!4587 = !{i64 89622}
!4588 = !{i64 89636}
!4589 = !{i64 89638}
!4590 = !{i64 89640}
!4591 = !{i64 89646}
!4592 = !{i64 89648}
!4593 = !{i64 89670}
!4594 = !{i64 89676}
!4595 = !{i64 89742}
!4596 = !{i64 89744}
!4597 = !{i64 89732}
!4598 = !{i64 89774}
!4599 = !{i64 89776}
!4600 = !{i64 89790}
!4601 = !{i64 89800}
!4602 = !{i64 89810}
!4603 = !{i64 89812}
!4604 = !{i64 89826}
!4605 = !{i64 89908}
!4606 = !{i64 89910}
!4607 = !{i64 89854}
!4608 = !{i64 89852}
!4609 = !{i64 89846}
!4610 = !{i64 89858}
!4611 = !{i64 89860}
!4612 = !{i64 89872}
!4613 = !{i64 89884}
!4614 = !{i64 89892}
!4615 = !{i64 89904}
!4616 = !{i64 89914}
!4617 = !{i64 89918}
!4618 = !{i64 89928}
!4619 = !{i64 89944}
!4620 = !{i64 89946}
!4621 = !{i64 89948}
!4622 = !{i64 89962}
!4623 = !{i64 89972}
!4624 = !{i64 89978}
!4625 = !{i64 89980}
!4626 = !{i64 89982}
!4627 = !{i64 89992}
!4628 = !{i64 89994}
!4629 = !{i64 89996}
!4630 = !{i64 90006}
!4631 = !{i64 90016}
!4632 = !{i64 90030}
!4633 = !{i64 90036}
!4634 = !{i64 90038}
!4635 = !{i64 90044}
!4636 = !{i64 90048}
!4637 = !{i64 90054}
!4638 = !{i64 90066}
!4639 = !{i64 90104}
!4640 = !{i64 90120}
!4641 = !{i64 90160}
!4642 = !{i64 90328}
!4643 = !{i64 90332}
!4644 = !{i64 90356}
!4645 = !{i64 90362}
!4646 = !{i64 90366}
!4647 = !{i64 90370}
!4648 = !{i64 90374}
!4649 = !{i64 90378}
!4650 = !{i64 90382}
!4651 = !{i64 90386}
!4652 = !{i64 90390}
!4653 = !{i64 90396}
!4654 = !{i64 90406}
!4655 = !{i64 90420}
!4656 = !{i64 90428}
!4657 = !{i64 90436}
!4658 = !{i64 90454}
!4659 = !{i64 90468}
!4660 = !{i64 90490}
!4661 = !{i64 90502}
!4662 = !{i64 90506}
!4663 = !{i64 90512}
!4664 = !{i64 90522}
!4665 = !{i64 90526}
!4666 = !{i64 90532}
!4667 = !{i64 90542}
!4668 = !{i64 90546}
!4669 = !{i64 90562}
!4670 = !{i64 90566}
!4671 = !{i64 90572}
!4672 = !{i64 90588}
!4673 = !{i64 90592}
!4674 = !{i64 90598}
!4675 = !{i64 90614}
!4676 = !{i64 90618}
!4677 = !{i64 90624}
!4678 = !{i64 90634}
!4679 = !{i64 90638}
!4680 = !{i64 90644}
!4681 = !{i64 90656}
!4682 = !{i64 90672}
!4683 = !{i64 90676}
!4684 = !{i64 90686}
!4685 = !{i64 90696}
!4686 = !{i64 90710}
!4687 = !{i64 90718}
!4688 = !{i64 90736}
!4689 = !{i64 90754}
!4690 = !{i64 90762}
!4691 = !{i64 90768}
!4692 = !{i64 90776}
!4693 = !{i64 90784}
!4694 = !{i64 90792}
!4695 = !{i64 90798}
!4696 = !{i64 90806}
!4697 = !{i64 90808}
!4698 = !{i64 90828}
!4699 = !{i64 90838}
!4700 = !{i64 90844}
!4701 = !{i64 90846}
!4702 = !{i64 90856}
!4703 = !{i64 90864}
!4704 = !{i64 90874}
!4705 = !{i64 90888}
!4706 = !{i64 90894}
!4707 = !{i64 90902}
!4708 = !{i64 90910}
!4709 = !{i64 90918}
!4710 = !{i64 90926}
!4711 = !{i64 90934}
!4712 = !{i64 90942}
!4713 = !{i64 90950}
!4714 = !{i64 90958}
!4715 = !{i64 90966}
!4716 = !{i64 90974}
!4717 = !{i64 90982}
!4718 = !{i64 90990}
!4719 = !{i64 90998}
!4720 = !{i64 105512}
!4721 = !{i64 105514}
!4722 = !{i64 91012}
!4723 = !{i64 91026}
!4724 = !{i64 91028}
!4725 = !{i64 91044}
!4726 = !{i64 91054}
!4727 = !{i64 91066}
!4728 = !{i64 91078}
!4729 = !{i64 91088}
!4730 = !{i64 91096}
!4731 = !{i64 91098}
!4732 = !{i64 91106}
!4733 = !{i64 91122}
!4734 = !{i64 91124}
!4735 = !{i64 91270}
!4736 = !{i64 91286}
!4737 = !{i64 91302}
!4738 = !{i64 91318}
!4739 = !{i64 91326}
!4740 = !{i64 91340}
!4741 = !{i64 91354}
!4742 = !{i64 91368}
!4743 = !{i64 91382}
!4744 = !{i64 91396}
!4745 = !{i64 91410}
!4746 = !{i64 91424}
!4747 = !{i64 91438}
!4748 = !{i64 91452}
!4749 = !{i64 91466}
!4750 = !{i64 91480}
!4751 = !{i64 91494}
!4752 = !{i64 91508}
!4753 = !{i64 91522}
!4754 = !{i64 91536}
!4755 = !{i64 91550}
!4756 = !{i64 91562}
!4757 = !{i64 91564}
!4758 = !{i64 91576}
!4759 = !{i64 91578}
!4760 = !{i64 91588}
!4761 = !{i64 91598}
!4762 = !{i64 91600}
!4763 = !{i64 91628}
!4764 = !{i64 91616}
!4765 = !{i64 91630}
!4766 = !{i64 91642}
!4767 = !{i64 91644}
!4768 = !{i64 91654}
!4769 = !{i64 91664}
!4770 = !{i64 91666}
!4771 = !{i64 91680}
!4772 = !{i64 91692}
!4773 = !{i64 91694}
!4774 = !{i64 91706}
!4775 = !{i64 91708}
!4776 = !{i64 91718}
!4777 = !{i64 91726}
!4778 = !{i64 91728}
!4779 = !{i64 91752}
!4780 = !{i64 91740}
!4781 = !{i64 91754}
!4782 = !{i64 91766}
!4783 = !{i64 91768}
!4784 = !{i64 91778}
!4785 = !{i64 91786}
!4786 = !{i64 91788}
!4787 = !{i64 91800}
!4788 = !{i64 91812}
!4789 = !{i64 91814}
!4790 = !{i64 91826}
!4791 = !{i64 91828}
!4792 = !{i64 91838}
!4793 = !{i64 91846}
!4794 = !{i64 91848}
!4795 = !{i64 91872}
!4796 = !{i64 91860}
!4797 = !{i64 91874}
!4798 = !{i64 91886}
!4799 = !{i64 91888}
!4800 = !{i64 91898}
!4801 = !{i64 91906}
!4802 = !{i64 91908}
!4803 = !{i64 91920}
!4804 = !{i64 91932}
!4805 = !{i64 91934}
!4806 = !{i64 91946}
!4807 = !{i64 91948}
!4808 = !{i64 91958}
!4809 = !{i64 91966}
!4810 = !{i64 91968}
!4811 = !{i64 91992}
!4812 = !{i64 91980}
!4813 = !{i64 91994}
!4814 = !{i64 92006}
!4815 = !{i64 92008}
!4816 = !{i64 92018}
!4817 = !{i64 92026}
!4818 = !{i64 92028}
!4819 = !{i64 92052}
!4820 = !{i64 92040}
!4821 = !{i64 92054}
!4822 = !{i64 92066}
!4823 = !{i64 92068}
!4824 = !{i64 92078}
!4825 = !{i64 92086}
!4826 = !{i64 92088}
!4827 = !{i64 92112}
!4828 = !{i64 92100}
!4829 = !{i64 92114}
!4830 = !{i64 92126}
!4831 = !{i64 92128}
!4832 = !{i64 92138}
!4833 = !{i64 92146}
!4834 = !{i64 92148}
!4835 = !{i64 92172}
!4836 = !{i64 92160}
!4837 = !{i64 92174}
!4838 = !{i64 92186}
!4839 = !{i64 92188}
!4840 = !{i64 92198}
!4841 = !{i64 92206}
!4842 = !{i64 92208}
!4843 = !{i64 92232}
!4844 = !{i64 92220}
!4845 = !{i64 92234}
!4846 = !{i64 92246}
!4847 = !{i64 92248}
!4848 = !{i64 92258}
!4849 = !{i64 92266}
!4850 = !{i64 92268}
!4851 = !{i64 92292}
!4852 = !{i64 92280}
!4853 = !{i64 92294}
!4854 = !{i64 92306}
!4855 = !{i64 92308}
!4856 = !{i64 92318}
!4857 = !{i64 92326}
!4858 = !{i64 92328}
!4859 = !{i64 92352}
!4860 = !{i64 92340}
!4861 = !{i64 92354}
!4862 = !{i64 92366}
!4863 = !{i64 92368}
!4864 = !{i64 92378}
!4865 = !{i64 92386}
!4866 = !{i64 92388}
!4867 = !{i64 92414}
!4868 = !{i64 92402}
!4869 = !{i64 92416}
!4870 = !{i64 92428}
!4871 = !{i64 92430}
!4872 = !{i64 92440}
!4873 = !{i64 92450}
!4874 = !{i64 92452}
!4875 = !{i64 92480}
!4876 = !{i64 92468}
!4877 = !{i64 92482}
!4878 = !{i64 92494}
!4879 = !{i64 92496}
!4880 = !{i64 92506}
!4881 = !{i64 92516}
!4882 = !{i64 92518}
!4883 = !{i64 92546}
!4884 = !{i64 92534}
!4885 = !{i64 92548}
!4886 = !{i64 92560}
!4887 = !{i64 92562}
!4888 = !{i64 92572}
!4889 = !{i64 92582}
!4890 = !{i64 92584}
!4891 = !{i64 92612}
!4892 = !{i64 92600}
!4893 = !{i64 92614}
!4894 = !{i64 92626}
!4895 = !{i64 92628}
!4896 = !{i64 92638}
!4897 = !{i64 92648}
!4898 = !{i64 92650}
!4899 = !{i64 92676}
!4900 = !{i64 92664}
!4901 = !{i64 92678}
!4902 = !{i64 92690}
!4903 = !{i64 92692}
!4904 = !{i64 92702}
!4905 = !{i64 92710}
!4906 = !{i64 92712}
!4907 = !{i64 92736}
!4908 = !{i64 92724}
!4909 = !{i64 92738}
!4910 = !{i64 92750}
!4911 = !{i64 92752}
!4912 = !{i64 92762}
!4913 = !{i64 92770}
!4914 = !{i64 92772}
!4915 = !{i64 92796}
!4916 = !{i64 92784}
!4917 = !{i64 92798}
!4918 = !{i64 92810}
!4919 = !{i64 92812}
!4920 = !{i64 92822}
!4921 = !{i64 92830}
!4922 = !{i64 92832}
!4923 = !{i64 92856}
!4924 = !{i64 92844}
!4925 = !{i64 92858}
!4926 = !{i64 92870}
!4927 = !{i64 92872}
!4928 = !{i64 92882}
!4929 = !{i64 92890}
!4930 = !{i64 92892}
!4931 = !{i64 92916}
!4932 = !{i64 92904}
!4933 = !{i64 92918}
!4934 = !{i64 92930}
!4935 = !{i64 92932}
!4936 = !{i64 92942}
!4937 = !{i64 92950}
!4938 = !{i64 92952}
!4939 = !{i64 92976}
!4940 = !{i64 92964}
!4941 = !{i64 92978}
!4942 = !{i64 92990}
!4943 = !{i64 92992}
!4944 = !{i64 93002}
!4945 = !{i64 93010}
!4946 = !{i64 93012}
!4947 = !{i64 93036}
!4948 = !{i64 93024}
!4949 = !{i64 93038}
!4950 = !{i64 93050}
!4951 = !{i64 93052}
!4952 = !{i64 93062}
!4953 = !{i64 93070}
!4954 = !{i64 93072}
!4955 = !{i64 93096}
!4956 = !{i64 93084}
!4957 = !{i64 93098}
!4958 = !{i64 93110}
!4959 = !{i64 93112}
!4960 = !{i64 93122}
!4961 = !{i64 93130}
!4962 = !{i64 93132}
!4963 = !{i64 93156}
!4964 = !{i64 93144}
!4965 = !{i64 93158}
!4966 = !{i64 93170}
!4967 = !{i64 93172}
!4968 = !{i64 93182}
!4969 = !{i64 93190}
!4970 = !{i64 93192}
!4971 = !{i64 93216}
!4972 = !{i64 93204}
!4973 = !{i64 93218}
!4974 = !{i64 93230}
!4975 = !{i64 93232}
!4976 = !{i64 93242}
!4977 = !{i64 93250}
!4978 = !{i64 93252}
!4979 = !{i64 93276}
!4980 = !{i64 93264}
!4981 = !{i64 93278}
!4982 = !{i64 93290}
!4983 = !{i64 93292}
!4984 = !{i64 93302}
!4985 = !{i64 93310}
!4986 = !{i64 93312}
!4987 = !{i64 93336}
!4988 = !{i64 93324}
!4989 = !{i64 93338}
!4990 = !{i64 93350}
!4991 = !{i64 93352}
!4992 = !{i64 93362}
!4993 = !{i64 93370}
!4994 = !{i64 93372}
!4995 = !{i64 93398}
!4996 = !{i64 93386}
!4997 = !{i64 93400}
!4998 = !{i64 93412}
!4999 = !{i64 93414}
!5000 = !{i64 93424}
!5001 = !{i64 93434}
!5002 = !{i64 93436}
!5003 = !{i64 93464}
!5004 = !{i64 93452}
!5005 = !{i64 93466}
!5006 = !{i64 93478}
!5007 = !{i64 93480}
!5008 = !{i64 93490}
!5009 = !{i64 93500}
!5010 = !{i64 93502}
!5011 = !{i64 93530}
!5012 = !{i64 93518}
!5013 = !{i64 93532}
!5014 = !{i64 93544}
!5015 = !{i64 93546}
!5016 = !{i64 93556}
!5017 = !{i64 93566}
!5018 = !{i64 93568}
!5019 = !{i64 93596}
!5020 = !{i64 93584}
!5021 = !{i64 93598}
!5022 = !{i64 93610}
!5023 = !{i64 93612}
!5024 = !{i64 93622}
!5025 = !{i64 93632}
!5026 = !{i64 93634}
!5027 = !{i64 93660}
!5028 = !{i64 93648}
!5029 = !{i64 93662}
!5030 = !{i64 93674}
!5031 = !{i64 93676}
!5032 = !{i64 93686}
!5033 = !{i64 93694}
!5034 = !{i64 93696}
!5035 = !{i64 93720}
!5036 = !{i64 93708}
!5037 = !{i64 93722}
!5038 = !{i64 93734}
!5039 = !{i64 93736}
!5040 = !{i64 93746}
!5041 = !{i64 93754}
!5042 = !{i64 93756}
!5043 = !{i64 93780}
!5044 = !{i64 93768}
!5045 = !{i64 93782}
!5046 = !{i64 93794}
!5047 = !{i64 93796}
!5048 = !{i64 93806}
!5049 = !{i64 93814}
!5050 = !{i64 93816}
!5051 = !{i64 93840}
!5052 = !{i64 93828}
!5053 = !{i64 93842}
!5054 = !{i64 93854}
!5055 = !{i64 93856}
!5056 = !{i64 93866}
!5057 = !{i64 93874}
!5058 = !{i64 93876}
!5059 = !{i64 93900}
!5060 = !{i64 93888}
!5061 = !{i64 93902}
!5062 = !{i64 93914}
!5063 = !{i64 93916}
!5064 = !{i64 93926}
!5065 = !{i64 93934}
!5066 = !{i64 93936}
!5067 = !{i64 93960}
!5068 = !{i64 93948}
!5069 = !{i64 93962}
!5070 = !{i64 93974}
!5071 = !{i64 93976}
!5072 = !{i64 93986}
!5073 = !{i64 93994}
!5074 = !{i64 93996}
!5075 = !{i64 94008}
!5076 = !{i64 94022}
!5077 = !{i64 94034}
!5078 = !{i64 94036}
!5079 = !{i64 94046}
!5080 = !{i64 94054}
!5081 = !{i64 94056}
!5082 = !{i64 94068}
!5083 = !{i64 94082}
!5084 = !{i64 94094}
!5085 = !{i64 94096}
!5086 = !{i64 94106}
!5087 = !{i64 94114}
!5088 = !{i64 94116}
!5089 = !{i64 94140}
!5090 = !{i64 94128}
!5091 = !{i64 94142}
!5092 = !{i64 94154}
!5093 = !{i64 94156}
!5094 = !{i64 94166}
!5095 = !{i64 94174}
!5096 = !{i64 94176}
!5097 = !{i64 94200}
!5098 = !{i64 94188}
!5099 = !{i64 94202}
!5100 = !{i64 94214}
!5101 = !{i64 94216}
!5102 = !{i64 94226}
!5103 = !{i64 94234}
!5104 = !{i64 94236}
!5105 = !{i64 94260}
!5106 = !{i64 94248}
!5107 = !{i64 94262}
!5108 = !{i64 94274}
!5109 = !{i64 94276}
!5110 = !{i64 94286}
!5111 = !{i64 94294}
!5112 = !{i64 94296}
!5113 = !{i64 94320}
!5114 = !{i64 94308}
!5115 = !{i64 94322}
!5116 = !{i64 94334}
!5117 = !{i64 94336}
!5118 = !{i64 94346}
!5119 = !{i64 94354}
!5120 = !{i64 94356}
!5121 = !{i64 94382}
!5122 = !{i64 94370}
!5123 = !{i64 94384}
!5124 = !{i64 94396}
!5125 = !{i64 94398}
!5126 = !{i64 94408}
!5127 = !{i64 94418}
!5128 = !{i64 94420}
!5129 = !{i64 94448}
!5130 = !{i64 94436}
!5131 = !{i64 94450}
!5132 = !{i64 94462}
!5133 = !{i64 94464}
!5134 = !{i64 94474}
!5135 = !{i64 94484}
!5136 = !{i64 94486}
!5137 = !{i64 94514}
!5138 = !{i64 94502}
!5139 = !{i64 94516}
!5140 = !{i64 94528}
!5141 = !{i64 94530}
!5142 = !{i64 94540}
!5143 = !{i64 94550}
!5144 = !{i64 94552}
!5145 = !{i64 94580}
!5146 = !{i64 94568}
!5147 = !{i64 94582}
!5148 = !{i64 94594}
!5149 = !{i64 94596}
!5150 = !{i64 94606}
!5151 = !{i64 94616}
!5152 = !{i64 94618}
!5153 = !{i64 94644}
!5154 = !{i64 94632}
!5155 = !{i64 94646}
!5156 = !{i64 94658}
!5157 = !{i64 94660}
!5158 = !{i64 94670}
!5159 = !{i64 94678}
!5160 = !{i64 94680}
!5161 = !{i64 94704}
!5162 = !{i64 94692}
!5163 = !{i64 94706}
!5164 = !{i64 94718}
!5165 = !{i64 94720}
!5166 = !{i64 94730}
!5167 = !{i64 94738}
!5168 = !{i64 94740}
!5169 = !{i64 94752}
!5170 = !{i64 94766}
!5171 = !{i64 94778}
!5172 = !{i64 94780}
!5173 = !{i64 94790}
!5174 = !{i64 94798}
!5175 = !{i64 94800}
!5176 = !{i64 94812}
!5177 = !{i64 94826}
!5178 = !{i64 94838}
!5179 = !{i64 94840}
!5180 = !{i64 94850}
!5181 = !{i64 94858}
!5182 = !{i64 94860}
!5183 = !{i64 94884}
!5184 = !{i64 94872}
!5185 = !{i64 94886}
!5186 = !{i64 94898}
!5187 = !{i64 94900}
!5188 = !{i64 94910}
!5189 = !{i64 94918}
!5190 = !{i64 94920}
!5191 = !{i64 94944}
!5192 = !{i64 94932}
!5193 = !{i64 94946}
!5194 = !{i64 94958}
!5195 = !{i64 94960}
!5196 = !{i64 94970}
!5197 = !{i64 94978}
!5198 = !{i64 94980}
!5199 = !{i64 95004}
!5200 = !{i64 94992}
!5201 = !{i64 95006}
!5202 = !{i64 95018}
!5203 = !{i64 95020}
!5204 = !{i64 95030}
!5205 = !{i64 95038}
!5206 = !{i64 95040}
!5207 = !{i64 95064}
!5208 = !{i64 95052}
!5209 = !{i64 95066}
!5210 = !{i64 95078}
!5211 = !{i64 95080}
!5212 = !{i64 95090}
!5213 = !{i64 95098}
!5214 = !{i64 95100}
!5215 = !{i64 95124}
!5216 = !{i64 95112}
!5217 = !{i64 95126}
!5218 = !{i64 95138}
!5219 = !{i64 95140}
!5220 = !{i64 95150}
!5221 = !{i64 95158}
!5222 = !{i64 95160}
!5223 = !{i64 95184}
!5224 = !{i64 95172}
!5225 = !{i64 95186}
!5226 = !{i64 95198}
!5227 = !{i64 95200}
!5228 = !{i64 95210}
!5229 = !{i64 95218}
!5230 = !{i64 95220}
!5231 = !{i64 95244}
!5232 = !{i64 95232}
!5233 = !{i64 95246}
!5234 = !{i64 95258}
!5235 = !{i64 95260}
!5236 = !{i64 95270}
!5237 = !{i64 95278}
!5238 = !{i64 95280}
!5239 = !{i64 95304}
!5240 = !{i64 95292}
!5241 = !{i64 95306}
!5242 = !{i64 95318}
!5243 = !{i64 95320}
!5244 = !{i64 95330}
!5245 = !{i64 95338}
!5246 = !{i64 95340}
!5247 = !{i64 95366}
!5248 = !{i64 95354}
!5249 = !{i64 95368}
!5250 = !{i64 95380}
!5251 = !{i64 95382}
!5252 = !{i64 95392}
!5253 = !{i64 95402}
!5254 = !{i64 95404}
!5255 = !{i64 95432}
!5256 = !{i64 95420}
!5257 = !{i64 95434}
!5258 = !{i64 95446}
!5259 = !{i64 95448}
!5260 = !{i64 95458}
!5261 = !{i64 95468}
!5262 = !{i64 95470}
!5263 = !{i64 95498}
!5264 = !{i64 95486}
!5265 = !{i64 95500}
!5266 = !{i64 95512}
!5267 = !{i64 95514}
!5268 = !{i64 95524}
!5269 = !{i64 95534}
!5270 = !{i64 95536}
!5271 = !{i64 95564}
!5272 = !{i64 95552}
!5273 = !{i64 95566}
!5274 = !{i64 95578}
!5275 = !{i64 95580}
!5276 = !{i64 95590}
!5277 = !{i64 95600}
!5278 = !{i64 95602}
!5279 = !{i64 95628}
!5280 = !{i64 95616}
!5281 = !{i64 95630}
!5282 = !{i64 95642}
!5283 = !{i64 95644}
!5284 = !{i64 95654}
!5285 = !{i64 95662}
!5286 = !{i64 95664}
!5287 = !{i64 95688}
!5288 = !{i64 95676}
!5289 = !{i64 95690}
!5290 = !{i64 95702}
!5291 = !{i64 95704}
!5292 = !{i64 95714}
!5293 = !{i64 95722}
!5294 = !{i64 95724}
!5295 = !{i64 95748}
!5296 = !{i64 95736}
!5297 = !{i64 95750}
!5298 = !{i64 95762}
!5299 = !{i64 95764}
!5300 = !{i64 95774}
!5301 = !{i64 95782}
!5302 = !{i64 95784}
!5303 = !{i64 95808}
!5304 = !{i64 95796}
!5305 = !{i64 95810}
!5306 = !{i64 95822}
!5307 = !{i64 95824}
!5308 = !{i64 95834}
!5309 = !{i64 95842}
!5310 = !{i64 95844}
!5311 = !{i64 95868}
!5312 = !{i64 95856}
!5313 = !{i64 95870}
!5314 = !{i64 95882}
!5315 = !{i64 95884}
!5316 = !{i64 95894}
!5317 = !{i64 95902}
!5318 = !{i64 95904}
!5319 = !{i64 95928}
!5320 = !{i64 95916}
!5321 = !{i64 95930}
!5322 = !{i64 95942}
!5323 = !{i64 95944}
!5324 = !{i64 95954}
!5325 = !{i64 95962}
!5326 = !{i64 95964}
!5327 = !{i64 95988}
!5328 = !{i64 95976}
!5329 = !{i64 95990}
!5330 = !{i64 96002}
!5331 = !{i64 96004}
!5332 = !{i64 96014}
!5333 = !{i64 96022}
!5334 = !{i64 96024}
!5335 = !{i64 96048}
!5336 = !{i64 96036}
!5337 = !{i64 96050}
!5338 = !{i64 96062}
!5339 = !{i64 96064}
!5340 = !{i64 96074}
!5341 = !{i64 96082}
!5342 = !{i64 96084}
!5343 = !{i64 96108}
!5344 = !{i64 96096}
!5345 = !{i64 96110}
!5346 = !{i64 96122}
!5347 = !{i64 96124}
!5348 = !{i64 96134}
!5349 = !{i64 96142}
!5350 = !{i64 96144}
!5351 = !{i64 96168}
!5352 = !{i64 96156}
!5353 = !{i64 96170}
!5354 = !{i64 96182}
!5355 = !{i64 96184}
!5356 = !{i64 96194}
!5357 = !{i64 96202}
!5358 = !{i64 96204}
!5359 = !{i64 96228}
!5360 = !{i64 96216}
!5361 = !{i64 96230}
!5362 = !{i64 96242}
!5363 = !{i64 96244}
!5364 = !{i64 96254}
!5365 = !{i64 96262}
!5366 = !{i64 96264}
!5367 = !{i64 96288}
!5368 = !{i64 96276}
!5369 = !{i64 96290}
!5370 = !{i64 96302}
!5371 = !{i64 96304}
!5372 = !{i64 96314}
!5373 = !{i64 96322}
!5374 = !{i64 96324}
!5375 = !{i64 96350}
!5376 = !{i64 96338}
!5377 = !{i64 96352}
!5378 = !{i64 96364}
!5379 = !{i64 96366}
!5380 = !{i64 96376}
!5381 = !{i64 96386}
!5382 = !{i64 96388}
!5383 = !{i64 96416}
!5384 = !{i64 96404}
!5385 = !{i64 96418}
!5386 = !{i64 96430}
!5387 = !{i64 96432}
!5388 = !{i64 96442}
!5389 = !{i64 96452}
!5390 = !{i64 96454}
!5391 = !{i64 96482}
!5392 = !{i64 96470}
!5393 = !{i64 96484}
!5394 = !{i64 96496}
!5395 = !{i64 96498}
!5396 = !{i64 96508}
!5397 = !{i64 96518}
!5398 = !{i64 96520}
!5399 = !{i64 96548}
!5400 = !{i64 96536}
!5401 = !{i64 96550}
!5402 = !{i64 96562}
!5403 = !{i64 96564}
!5404 = !{i64 96574}
!5405 = !{i64 96584}
!5406 = !{i64 96586}
!5407 = !{i64 96612}
!5408 = !{i64 96600}
!5409 = !{i64 96614}
!5410 = !{i64 96626}
!5411 = !{i64 96628}
!5412 = !{i64 96638}
!5413 = !{i64 96646}
!5414 = !{i64 96648}
!5415 = !{i64 96672}
!5416 = !{i64 96660}
!5417 = !{i64 96674}
!5418 = !{i64 96686}
!5419 = !{i64 96688}
!5420 = !{i64 96698}
!5421 = !{i64 96706}
!5422 = !{i64 96708}
!5423 = !{i64 96732}
!5424 = !{i64 96720}
!5425 = !{i64 96734}
!5426 = !{i64 96746}
!5427 = !{i64 96748}
!5428 = !{i64 96758}
!5429 = !{i64 96766}
!5430 = !{i64 96768}
!5431 = !{i64 96792}
!5432 = !{i64 96780}
!5433 = !{i64 96794}
!5434 = !{i64 96806}
!5435 = !{i64 96808}
!5436 = !{i64 96818}
!5437 = !{i64 96826}
!5438 = !{i64 96828}
!5439 = !{i64 96852}
!5440 = !{i64 96840}
!5441 = !{i64 96854}
!5442 = !{i64 96866}
!5443 = !{i64 96868}
!5444 = !{i64 96878}
!5445 = !{i64 96886}
!5446 = !{i64 96888}
!5447 = !{i64 96912}
!5448 = !{i64 96900}
!5449 = !{i64 96914}
!5450 = !{i64 96926}
!5451 = !{i64 96928}
!5452 = !{i64 96938}
!5453 = !{i64 96946}
!5454 = !{i64 96948}
!5455 = !{i64 96972}
!5456 = !{i64 96960}
!5457 = !{i64 96974}
!5458 = !{i64 96986}
!5459 = !{i64 96988}
!5460 = !{i64 96998}
!5461 = !{i64 97006}
!5462 = !{i64 97008}
!5463 = !{i64 97032}
!5464 = !{i64 97020}
!5465 = !{i64 97034}
!5466 = !{i64 97046}
!5467 = !{i64 97048}
!5468 = !{i64 97058}
!5469 = !{i64 97066}
!5470 = !{i64 97068}
!5471 = !{i64 97080}
!5472 = !{i64 97094}
!5473 = !{i64 97106}
!5474 = !{i64 97108}
!5475 = !{i64 97118}
!5476 = !{i64 97126}
!5477 = !{i64 97128}
!5478 = !{i64 97140}
!5479 = !{i64 97154}
!5480 = !{i64 97166}
!5481 = !{i64 97168}
!5482 = !{i64 97178}
!5483 = !{i64 97186}
!5484 = !{i64 97188}
!5485 = !{i64 97200}
!5486 = !{i64 97214}
!5487 = !{i64 97226}
!5488 = !{i64 97228}
!5489 = !{i64 97238}
!5490 = !{i64 97246}
!5491 = !{i64 97248}
!5492 = !{i64 97260}
!5493 = !{i64 97274}
!5494 = !{i64 97286}
!5495 = !{i64 97288}
!5496 = !{i64 97298}
!5497 = !{i64 97306}
!5498 = !{i64 97308}
!5499 = !{i64 97334}
!5500 = !{i64 97322}
!5501 = !{i64 97336}
!5502 = !{i64 97348}
!5503 = !{i64 97350}
!5504 = !{i64 97360}
!5505 = !{i64 97370}
!5506 = !{i64 97372}
!5507 = !{i64 97400}
!5508 = !{i64 97388}
!5509 = !{i64 97402}
!5510 = !{i64 97414}
!5511 = !{i64 97416}
!5512 = !{i64 97426}
!5513 = !{i64 97436}
!5514 = !{i64 97438}
!5515 = !{i64 97466}
!5516 = !{i64 97454}
!5517 = !{i64 97468}
!5518 = !{i64 97480}
!5519 = !{i64 97482}
!5520 = !{i64 97492}
!5521 = !{i64 97502}
!5522 = !{i64 97504}
!5523 = !{i64 97532}
!5524 = !{i64 97520}
!5525 = !{i64 97534}
!5526 = !{i64 97546}
!5527 = !{i64 97548}
!5528 = !{i64 97558}
!5529 = !{i64 97568}
!5530 = !{i64 97570}
!5531 = !{i64 97596}
!5532 = !{i64 97584}
!5533 = !{i64 97598}
!5534 = !{i64 97610}
!5535 = !{i64 97612}
!5536 = !{i64 97622}
!5537 = !{i64 97630}
!5538 = !{i64 97632}
!5539 = !{i64 97656}
!5540 = !{i64 97644}
!5541 = !{i64 97658}
!5542 = !{i64 97670}
!5543 = !{i64 97672}
!5544 = !{i64 97682}
!5545 = !{i64 97690}
!5546 = !{i64 97692}
!5547 = !{i64 97716}
!5548 = !{i64 97704}
!5549 = !{i64 97718}
!5550 = !{i64 97730}
!5551 = !{i64 97732}
!5552 = !{i64 97742}
!5553 = !{i64 97750}
!5554 = !{i64 97752}
!5555 = !{i64 97776}
!5556 = !{i64 97764}
!5557 = !{i64 97778}
!5558 = !{i64 97790}
!5559 = !{i64 97792}
!5560 = !{i64 97802}
!5561 = !{i64 97810}
!5562 = !{i64 97812}
!5563 = !{i64 97836}
!5564 = !{i64 97824}
!5565 = !{i64 97838}
!5566 = !{i64 97850}
!5567 = !{i64 97852}
!5568 = !{i64 97862}
!5569 = !{i64 97870}
!5570 = !{i64 97872}
!5571 = !{i64 97896}
!5572 = !{i64 97884}
!5573 = !{i64 97898}
!5574 = !{i64 97910}
!5575 = !{i64 97912}
!5576 = !{i64 97922}
!5577 = !{i64 97930}
!5578 = !{i64 97932}
!5579 = !{i64 97956}
!5580 = !{i64 97944}
!5581 = !{i64 97958}
!5582 = !{i64 97970}
!5583 = !{i64 97972}
!5584 = !{i64 97982}
!5585 = !{i64 97990}
!5586 = !{i64 97992}
!5587 = !{i64 98016}
!5588 = !{i64 98004}
!5589 = !{i64 98018}
!5590 = !{i64 98030}
!5591 = !{i64 98032}
!5592 = !{i64 98042}
!5593 = !{i64 98050}
!5594 = !{i64 98052}
!5595 = !{i64 98064}
!5596 = !{i64 98078}
!5597 = !{i64 98090}
!5598 = !{i64 98092}
!5599 = !{i64 98102}
!5600 = !{i64 98110}
!5601 = !{i64 98112}
!5602 = !{i64 98124}
!5603 = !{i64 98138}
!5604 = !{i64 98150}
!5605 = !{i64 98152}
!5606 = !{i64 98162}
!5607 = !{i64 98170}
!5608 = !{i64 98172}
!5609 = !{i64 98196}
!5610 = !{i64 98184}
!5611 = !{i64 98198}
!5612 = !{i64 98210}
!5613 = !{i64 98212}
!5614 = !{i64 98222}
!5615 = !{i64 98230}
!5616 = !{i64 98232}
!5617 = !{i64 98256}
!5618 = !{i64 98244}
!5619 = !{i64 98258}
!5620 = !{i64 98270}
!5621 = !{i64 98272}
!5622 = !{i64 98282}
!5623 = !{i64 98290}
!5624 = !{i64 98292}
!5625 = !{i64 98306}
!5626 = !{i64 98320}
!5627 = !{i64 98332}
!5628 = !{i64 98334}
!5629 = !{i64 98344}
!5630 = !{i64 98354}
!5631 = !{i64 98356}
!5632 = !{i64 98372}
!5633 = !{i64 98386}
!5634 = !{i64 98398}
!5635 = !{i64 98400}
!5636 = !{i64 98410}
!5637 = !{i64 98420}
!5638 = !{i64 98422}
!5639 = !{i64 98450}
!5640 = !{i64 98438}
!5641 = !{i64 98452}
!5642 = !{i64 98464}
!5643 = !{i64 98466}
!5644 = !{i64 98476}
!5645 = !{i64 98486}
!5646 = !{i64 98488}
!5647 = !{i64 98516}
!5648 = !{i64 98504}
!5649 = !{i64 98518}
!5650 = !{i64 98530}
!5651 = !{i64 98532}
!5652 = !{i64 98542}
!5653 = !{i64 98552}
!5654 = !{i64 98554}
!5655 = !{i64 98580}
!5656 = !{i64 98568}
!5657 = !{i64 98582}
!5658 = !{i64 98594}
!5659 = !{i64 98596}
!5660 = !{i64 98606}
!5661 = !{i64 98614}
!5662 = !{i64 98616}
!5663 = !{i64 98640}
!5664 = !{i64 98628}
!5665 = !{i64 98642}
!5666 = !{i64 98654}
!5667 = !{i64 98656}
!5668 = !{i64 98666}
!5669 = !{i64 98674}
!5670 = !{i64 98676}
!5671 = !{i64 98688}
!5672 = !{i64 98702}
!5673 = !{i64 98714}
!5674 = !{i64 98716}
!5675 = !{i64 98726}
!5676 = !{i64 98734}
!5677 = !{i64 98736}
!5678 = !{i64 98748}
!5679 = !{i64 98762}
!5680 = !{i64 98774}
!5681 = !{i64 98776}
!5682 = !{i64 98786}
!5683 = !{i64 98794}
!5684 = !{i64 98796}
!5685 = !{i64 98820}
!5686 = !{i64 98808}
!5687 = !{i64 98822}
!5688 = !{i64 98834}
!5689 = !{i64 98836}
!5690 = !{i64 98846}
!5691 = !{i64 98854}
!5692 = !{i64 98856}
!5693 = !{i64 98880}
!5694 = !{i64 98868}
!5695 = !{i64 98882}
!5696 = !{i64 98894}
!5697 = !{i64 98896}
!5698 = !{i64 98906}
!5699 = !{i64 98914}
!5700 = !{i64 98916}
!5701 = !{i64 98940}
!5702 = !{i64 98928}
!5703 = !{i64 98942}
!5704 = !{i64 98954}
!5705 = !{i64 98956}
!5706 = !{i64 98966}
!5707 = !{i64 98974}
!5708 = !{i64 98976}
!5709 = !{i64 99000}
!5710 = !{i64 98988}
!5711 = !{i64 99002}
!5712 = !{i64 99014}
!5713 = !{i64 99016}
!5714 = !{i64 99026}
!5715 = !{i64 99034}
!5716 = !{i64 99036}
!5717 = !{i64 99060}
!5718 = !{i64 99048}
!5719 = !{i64 99062}
!5720 = !{i64 99074}
!5721 = !{i64 99076}
!5722 = !{i64 99086}
!5723 = !{i64 99094}
!5724 = !{i64 99096}
!5725 = !{i64 99120}
!5726 = !{i64 99108}
!5727 = !{i64 99122}
!5728 = !{i64 99134}
!5729 = !{i64 99136}
!5730 = !{i64 99146}
!5731 = !{i64 99154}
!5732 = !{i64 99156}
!5733 = !{i64 99168}
!5734 = !{i64 99182}
!5735 = !{i64 99194}
!5736 = !{i64 99196}
!5737 = !{i64 99206}
!5738 = !{i64 99214}
!5739 = !{i64 99216}
!5740 = !{i64 99228}
!5741 = !{i64 99242}
!5742 = !{i64 99254}
!5743 = !{i64 99256}
!5744 = !{i64 99266}
!5745 = !{i64 99274}
!5746 = !{i64 99276}
!5747 = !{i64 99302}
!5748 = !{i64 99290}
!5749 = !{i64 99304}
!5750 = !{i64 99316}
!5751 = !{i64 99318}
!5752 = !{i64 99328}
!5753 = !{i64 99338}
!5754 = !{i64 99340}
!5755 = !{i64 99368}
!5756 = !{i64 99356}
!5757 = !{i64 99370}
!5758 = !{i64 99382}
!5759 = !{i64 99384}
!5760 = !{i64 99394}
!5761 = !{i64 99404}
!5762 = !{i64 99406}
!5763 = !{i64 99434}
!5764 = !{i64 99422}
!5765 = !{i64 99436}
!5766 = !{i64 99448}
!5767 = !{i64 99450}
!5768 = !{i64 99460}
!5769 = !{i64 99470}
!5770 = !{i64 99472}
!5771 = !{i64 99500}
!5772 = !{i64 99488}
!5773 = !{i64 99502}
!5774 = !{i64 99514}
!5775 = !{i64 99516}
!5776 = !{i64 99526}
!5777 = !{i64 99536}
!5778 = !{i64 99538}
!5779 = !{i64 99564}
!5780 = !{i64 99552}
!5781 = !{i64 99566}
!5782 = !{i64 99578}
!5783 = !{i64 99580}
!5784 = !{i64 99590}
!5785 = !{i64 99598}
!5786 = !{i64 99600}
!5787 = !{i64 99624}
!5788 = !{i64 99612}
!5789 = !{i64 99626}
!5790 = !{i64 99638}
!5791 = !{i64 99640}
!5792 = !{i64 99650}
!5793 = !{i64 99658}
!5794 = !{i64 99660}
!5795 = !{i64 99684}
!5796 = !{i64 99672}
!5797 = !{i64 99686}
!5798 = !{i64 99698}
!5799 = !{i64 99700}
!5800 = !{i64 99710}
!5801 = !{i64 99718}
!5802 = !{i64 99720}
!5803 = !{i64 99744}
!5804 = !{i64 99732}
!5805 = !{i64 99746}
!5806 = !{i64 99758}
!5807 = !{i64 99760}
!5808 = !{i64 99770}
!5809 = !{i64 99778}
!5810 = !{i64 99780}
!5811 = !{i64 99804}
!5812 = !{i64 99792}
!5813 = !{i64 99806}
!5814 = !{i64 99818}
!5815 = !{i64 99820}
!5816 = !{i64 99830}
!5817 = !{i64 99838}
!5818 = !{i64 99840}
!5819 = !{i64 99864}
!5820 = !{i64 99852}
!5821 = !{i64 99866}
!5822 = !{i64 99878}
!5823 = !{i64 99880}
!5824 = !{i64 99890}
!5825 = !{i64 99898}
!5826 = !{i64 99900}
!5827 = !{i64 99912}
!5828 = !{i64 99926}
!5829 = !{i64 99938}
!5830 = !{i64 99940}
!5831 = !{i64 99950}
!5832 = !{i64 99958}
!5833 = !{i64 99960}
!5834 = !{i64 99972}
!5835 = !{i64 99986}
!5836 = !{i64 99998}
!5837 = !{i64 100000}
!5838 = !{i64 100010}
!5839 = !{i64 100018}
!5840 = !{i64 100020}
!5841 = !{i64 100044}
!5842 = !{i64 100032}
!5843 = !{i64 100046}
!5844 = !{i64 100058}
!5845 = !{i64 100060}
!5846 = !{i64 100070}
!5847 = !{i64 100078}
!5848 = !{i64 100080}
!5849 = !{i64 100104}
!5850 = !{i64 100092}
!5851 = !{i64 100106}
!5852 = !{i64 100118}
!5853 = !{i64 100120}
!5854 = !{i64 100130}
!5855 = !{i64 100138}
!5856 = !{i64 100140}
!5857 = !{i64 100164}
!5858 = !{i64 100152}
!5859 = !{i64 100166}
!5860 = !{i64 100178}
!5861 = !{i64 100180}
!5862 = !{i64 100190}
!5863 = !{i64 100198}
!5864 = !{i64 100200}
!5865 = !{i64 100224}
!5866 = !{i64 100212}
!5867 = !{i64 100226}
!5868 = !{i64 100238}
!5869 = !{i64 100240}
!5870 = !{i64 100250}
!5871 = !{i64 100258}
!5872 = !{i64 100260}
!5873 = !{i64 100274}
!5874 = !{i64 100288}
!5875 = !{i64 100300}
!5876 = !{i64 100302}
!5877 = !{i64 100312}
!5878 = !{i64 100322}
!5879 = !{i64 100324}
!5880 = !{i64 100340}
!5881 = !{i64 100354}
!5882 = !{i64 100366}
!5883 = !{i64 100368}
!5884 = !{i64 100378}
!5885 = !{i64 100388}
!5886 = !{i64 100390}
!5887 = !{i64 100406}
!5888 = !{i64 100420}
!5889 = !{i64 100432}
!5890 = !{i64 100434}
!5891 = !{i64 100444}
!5892 = !{i64 100454}
!5893 = !{i64 100456}
!5894 = !{i64 100472}
!5895 = !{i64 100486}
!5896 = !{i64 100498}
!5897 = !{i64 100500}
!5898 = !{i64 100510}
!5899 = !{i64 100520}
!5900 = !{i64 100522}
!5901 = !{i64 100536}
!5902 = !{i64 100550}
!5903 = !{i64 100562}
!5904 = !{i64 100564}
!5905 = !{i64 100574}
!5906 = !{i64 100582}
!5907 = !{i64 100584}
!5908 = !{i64 100596}
!5909 = !{i64 100610}
!5910 = !{i64 100622}
!5911 = !{i64 100624}
!5912 = !{i64 100634}
!5913 = !{i64 100642}
!5914 = !{i64 100644}
!5915 = !{i64 100656}
!5916 = !{i64 100670}
!5917 = !{i64 100682}
!5918 = !{i64 100684}
!5919 = !{i64 100694}
!5920 = !{i64 100702}
!5921 = !{i64 100704}
!5922 = !{i64 100716}
!5923 = !{i64 100730}
!5924 = !{i64 100742}
!5925 = !{i64 100744}
!5926 = !{i64 100754}
!5927 = !{i64 100762}
!5928 = !{i64 100764}
!5929 = !{i64 100788}
!5930 = !{i64 100776}
!5931 = !{i64 100790}
!5932 = !{i64 100802}
!5933 = !{i64 100804}
!5934 = !{i64 100814}
!5935 = !{i64 100822}
!5936 = !{i64 100824}
!5937 = !{i64 100848}
!5938 = !{i64 100836}
!5939 = !{i64 100850}
!5940 = !{i64 100862}
!5941 = !{i64 100864}
!5942 = !{i64 100874}
!5943 = !{i64 100882}
!5944 = !{i64 100884}
!5945 = !{i64 100908}
!5946 = !{i64 100896}
!5947 = !{i64 100910}
!5948 = !{i64 100922}
!5949 = !{i64 100924}
!5950 = !{i64 100934}
!5951 = !{i64 100942}
!5952 = !{i64 100944}
!5953 = !{i64 100968}
!5954 = !{i64 100956}
!5955 = !{i64 100970}
!5956 = !{i64 100982}
!5957 = !{i64 100984}
!5958 = !{i64 100994}
!5959 = !{i64 101002}
!5960 = !{i64 101004}
!5961 = !{i64 101016}
!5962 = !{i64 101030}
!5963 = !{i64 101042}
!5964 = !{i64 101044}
!5965 = !{i64 101054}
!5966 = !{i64 101062}
!5967 = !{i64 101064}
!5968 = !{i64 101076}
!5969 = !{i64 101090}
!5970 = !{i64 101102}
!5971 = !{i64 101104}
!5972 = !{i64 101114}
!5973 = !{i64 101122}
!5974 = !{i64 101124}
!5975 = !{i64 101148}
!5976 = !{i64 101136}
!5977 = !{i64 101150}
!5978 = !{i64 101162}
!5979 = !{i64 101164}
!5980 = !{i64 101174}
!5981 = !{i64 101182}
!5982 = !{i64 101184}
!5983 = !{i64 101208}
!5984 = !{i64 101196}
!5985 = !{i64 101210}
!5986 = !{i64 101222}
!5987 = !{i64 101224}
!5988 = !{i64 101234}
!5989 = !{i64 101242}
!5990 = !{i64 101244}
!5991 = !{i64 101270}
!5992 = !{i64 101258}
!5993 = !{i64 101272}
!5994 = !{i64 101284}
!5995 = !{i64 101286}
!5996 = !{i64 101296}
!5997 = !{i64 101306}
!5998 = !{i64 101308}
!5999 = !{i64 101336}
!6000 = !{i64 101324}
!6001 = !{i64 101338}
!6002 = !{i64 101350}
!6003 = !{i64 101352}
!6004 = !{i64 101362}
!6005 = !{i64 101372}
!6006 = !{i64 101374}
!6007 = !{i64 101390}
!6008 = !{i64 101404}
!6009 = !{i64 101416}
!6010 = !{i64 101418}
!6011 = !{i64 101428}
!6012 = !{i64 101438}
!6013 = !{i64 101440}
!6014 = !{i64 101456}
!6015 = !{i64 101470}
!6016 = !{i64 101482}
!6017 = !{i64 101484}
!6018 = !{i64 101494}
!6019 = !{i64 101504}
!6020 = !{i64 101506}
!6021 = !{i64 101520}
!6022 = !{i64 101534}
!6023 = !{i64 101546}
!6024 = !{i64 101548}
!6025 = !{i64 101558}
!6026 = !{i64 101566}
!6027 = !{i64 101568}
!6028 = !{i64 101580}
!6029 = !{i64 101594}
!6030 = !{i64 101606}
!6031 = !{i64 101608}
!6032 = !{i64 101618}
!6033 = !{i64 101626}
!6034 = !{i64 101628}
!6035 = !{i64 101640}
!6036 = !{i64 101654}
!6037 = !{i64 101666}
!6038 = !{i64 101668}
!6039 = !{i64 101678}
!6040 = !{i64 101686}
!6041 = !{i64 101688}
!6042 = !{i64 101700}
!6043 = !{i64 101714}
!6044 = !{i64 101726}
!6045 = !{i64 101728}
!6046 = !{i64 101738}
!6047 = !{i64 101746}
!6048 = !{i64 101748}
!6049 = !{i64 101760}
!6050 = !{i64 101774}
!6051 = !{i64 101786}
!6052 = !{i64 101788}
!6053 = !{i64 101798}
!6054 = !{i64 101806}
!6055 = !{i64 101808}
!6056 = !{i64 101820}
!6057 = !{i64 101834}
!6058 = !{i64 101846}
!6059 = !{i64 101848}
!6060 = !{i64 101858}
!6061 = !{i64 101866}
!6062 = !{i64 101868}
!6063 = !{i64 101880}
!6064 = !{i64 101894}
!6065 = !{i64 101906}
!6066 = !{i64 101908}
!6067 = !{i64 101918}
!6068 = !{i64 101926}
!6069 = !{i64 101928}
!6070 = !{i64 101940}
!6071 = !{i64 101954}
!6072 = !{i64 101966}
!6073 = !{i64 101968}
!6074 = !{i64 101978}
!6075 = !{i64 101986}
!6076 = !{i64 101988}
!6077 = !{i64 102000}
!6078 = !{i64 102014}
!6079 = !{i64 102026}
!6080 = !{i64 102028}
!6081 = !{i64 102038}
!6082 = !{i64 102046}
!6083 = !{i64 102048}
!6084 = !{i64 102060}
!6085 = !{i64 102074}
!6086 = !{i64 102086}
!6087 = !{i64 102088}
!6088 = !{i64 102098}
!6089 = !{i64 102106}
!6090 = !{i64 102108}
!6091 = !{i64 102120}
!6092 = !{i64 102134}
!6093 = !{i64 102146}
!6094 = !{i64 102148}
!6095 = !{i64 102158}
!6096 = !{i64 102166}
!6097 = !{i64 102168}
!6098 = !{i64 102180}
!6099 = !{i64 102194}
!6100 = !{i64 102206}
!6101 = !{i64 102208}
!6102 = !{i64 102218}
!6103 = !{i64 102226}
!6104 = !{i64 102228}
!6105 = !{i64 102242}
!6106 = !{i64 102256}
!6107 = !{i64 102268}
!6108 = !{i64 102270}
!6109 = !{i64 102280}
!6110 = !{i64 102290}
!6111 = !{i64 102292}
!6112 = !{i64 102308}
!6113 = !{i64 102322}
!6114 = !{i64 102334}
!6115 = !{i64 102336}
!6116 = !{i64 102346}
!6117 = !{i64 102356}
!6118 = !{i64 102358}
!6119 = !{i64 102374}
!6120 = !{i64 102388}
!6121 = !{i64 102400}
!6122 = !{i64 102402}
!6123 = !{i64 102412}
!6124 = !{i64 102422}
!6125 = !{i64 102424}
!6126 = !{i64 102440}
!6127 = !{i64 102454}
!6128 = !{i64 102466}
!6129 = !{i64 102468}
!6130 = !{i64 102478}
!6131 = !{i64 102488}
!6132 = !{i64 102490}
!6133 = !{i64 102504}
!6134 = !{i64 102518}
!6135 = !{i64 102530}
!6136 = !{i64 102532}
!6137 = !{i64 102542}
!6138 = !{i64 102550}
!6139 = !{i64 102552}
!6140 = !{i64 102564}
!6141 = !{i64 102578}
!6142 = !{i64 102590}
!6143 = !{i64 102592}
!6144 = !{i64 102602}
!6145 = !{i64 102610}
!6146 = !{i64 102612}
!6147 = !{i64 102624}
!6148 = !{i64 102638}
!6149 = !{i64 102650}
!6150 = !{i64 102652}
!6151 = !{i64 102662}
!6152 = !{i64 102670}
!6153 = !{i64 102672}
!6154 = !{i64 102684}
!6155 = !{i64 102698}
!6156 = !{i64 102710}
!6157 = !{i64 102712}
!6158 = !{i64 102722}
!6159 = !{i64 102730}
!6160 = !{i64 102732}
!6161 = !{i64 102744}
!6162 = !{i64 102758}
!6163 = !{i64 102770}
!6164 = !{i64 102772}
!6165 = !{i64 102782}
!6166 = !{i64 102790}
!6167 = !{i64 102792}
!6168 = !{i64 102804}
!6169 = !{i64 102818}
!6170 = !{i64 102830}
!6171 = !{i64 102832}
!6172 = !{i64 102842}
!6173 = !{i64 102850}
!6174 = !{i64 102852}
!6175 = !{i64 102864}
!6176 = !{i64 102878}
!6177 = !{i64 102890}
!6178 = !{i64 102892}
!6179 = !{i64 102902}
!6180 = !{i64 102910}
!6181 = !{i64 102912}
!6182 = !{i64 102924}
!6183 = !{i64 102938}
!6184 = !{i64 102950}
!6185 = !{i64 102952}
!6186 = !{i64 102962}
!6187 = !{i64 102970}
!6188 = !{i64 102972}
!6189 = !{i64 102984}
!6190 = !{i64 102998}
!6191 = !{i64 103010}
!6192 = !{i64 103012}
!6193 = !{i64 103022}
!6194 = !{i64 103030}
!6195 = !{i64 103032}
!6196 = !{i64 103044}
!6197 = !{i64 103058}
!6198 = !{i64 103070}
!6199 = !{i64 103072}
!6200 = !{i64 103082}
!6201 = !{i64 103090}
!6202 = !{i64 103092}
!6203 = !{i64 103104}
!6204 = !{i64 103118}
!6205 = !{i64 103130}
!6206 = !{i64 103132}
!6207 = !{i64 103142}
!6208 = !{i64 103150}
!6209 = !{i64 103152}
!6210 = !{i64 103164}
!6211 = !{i64 103178}
!6212 = !{i64 103190}
!6213 = !{i64 103192}
!6214 = !{i64 103202}
!6215 = !{i64 103210}
!6216 = !{i64 103212}
!6217 = !{i64 103226}
!6218 = !{i64 103240}
!6219 = !{i64 103252}
!6220 = !{i64 103254}
!6221 = !{i64 103264}
!6222 = !{i64 103274}
!6223 = !{i64 103276}
!6224 = !{i64 103292}
!6225 = !{i64 103306}
!6226 = !{i64 103318}
!6227 = !{i64 103320}
!6228 = !{i64 103330}
!6229 = !{i64 103340}
!6230 = !{i64 103342}
!6231 = !{i64 103358}
!6232 = !{i64 103372}
!6233 = !{i64 103384}
!6234 = !{i64 103386}
!6235 = !{i64 103396}
!6236 = !{i64 103406}
!6237 = !{i64 103408}
!6238 = !{i64 103424}
!6239 = !{i64 103438}
!6240 = !{i64 103450}
!6241 = !{i64 103452}
!6242 = !{i64 103462}
!6243 = !{i64 103472}
!6244 = !{i64 103474}
!6245 = !{i64 103488}
!6246 = !{i64 103502}
!6247 = !{i64 103514}
!6248 = !{i64 103516}
!6249 = !{i64 103526}
!6250 = !{i64 103534}
!6251 = !{i64 103536}
!6252 = !{i64 103548}
!6253 = !{i64 103562}
!6254 = !{i64 103574}
!6255 = !{i64 103576}
!6256 = !{i64 103586}
!6257 = !{i64 103594}
!6258 = !{i64 103596}
!6259 = !{i64 103608}
!6260 = !{i64 103622}
!6261 = !{i64 103634}
!6262 = !{i64 103636}
!6263 = !{i64 103646}
!6264 = !{i64 103654}
!6265 = !{i64 103656}
!6266 = !{i64 103668}
!6267 = !{i64 103682}
!6268 = !{i64 103694}
!6269 = !{i64 103696}
!6270 = !{i64 103706}
!6271 = !{i64 103714}
!6272 = !{i64 103716}
!6273 = !{i64 103728}
!6274 = !{i64 103742}
!6275 = !{i64 103754}
!6276 = !{i64 103756}
!6277 = !{i64 103766}
!6278 = !{i64 103774}
!6279 = !{i64 103776}
!6280 = !{i64 103788}
!6281 = !{i64 103802}
!6282 = !{i64 103814}
!6283 = !{i64 103816}
!6284 = !{i64 103826}
!6285 = !{i64 103834}
!6286 = !{i64 103836}
!6287 = !{i64 103848}
!6288 = !{i64 103862}
!6289 = !{i64 103874}
!6290 = !{i64 103876}
!6291 = !{i64 103886}
!6292 = !{i64 103894}
!6293 = !{i64 103896}
!6294 = !{i64 103908}
!6295 = !{i64 103922}
!6296 = !{i64 103934}
!6297 = !{i64 103936}
!6298 = !{i64 103946}
!6299 = !{i64 103954}
!6300 = !{i64 103956}
!6301 = !{i64 103968}
!6302 = !{i64 103982}
!6303 = !{i64 103994}
!6304 = !{i64 103996}
!6305 = !{i64 104006}
!6306 = !{i64 104014}
!6307 = !{i64 104016}
!6308 = !{i64 104028}
!6309 = !{i64 104042}
!6310 = !{i64 104054}
!6311 = !{i64 104056}
!6312 = !{i64 104066}
!6313 = !{i64 104074}
!6314 = !{i64 104076}
!6315 = !{i64 104088}
!6316 = !{i64 104102}
!6317 = !{i64 104114}
!6318 = !{i64 104116}
!6319 = !{i64 104126}
!6320 = !{i64 104134}
!6321 = !{i64 104136}
!6322 = !{i64 104148}
!6323 = !{i64 104162}
!6324 = !{i64 104174}
!6325 = !{i64 104176}
!6326 = !{i64 104186}
!6327 = !{i64 104194}
!6328 = !{i64 104196}
!6329 = !{i64 104210}
!6330 = !{i64 104224}
!6331 = !{i64 104236}
!6332 = !{i64 104238}
!6333 = !{i64 104248}
!6334 = !{i64 104258}
!6335 = !{i64 104260}
!6336 = !{i64 104276}
!6337 = !{i64 104290}
!6338 = !{i64 104302}
!6339 = !{i64 104304}
!6340 = !{i64 104314}
!6341 = !{i64 104324}
!6342 = !{i64 104326}
!6343 = !{i64 104342}
!6344 = !{i64 104356}
!6345 = !{i64 104368}
!6346 = !{i64 104370}
!6347 = !{i64 104380}
!6348 = !{i64 104390}
!6349 = !{i64 104392}
!6350 = !{i64 104408}
!6351 = !{i64 104422}
!6352 = !{i64 104434}
!6353 = !{i64 104436}
!6354 = !{i64 104446}
!6355 = !{i64 104456}
!6356 = !{i64 104458}
!6357 = !{i64 104472}
!6358 = !{i64 104486}
!6359 = !{i64 104498}
!6360 = !{i64 104500}
!6361 = !{i64 104510}
!6362 = !{i64 104518}
!6363 = !{i64 104520}
!6364 = !{i64 104532}
!6365 = !{i64 104546}
!6366 = !{i64 104558}
!6367 = !{i64 104560}
!6368 = !{i64 104570}
!6369 = !{i64 104578}
!6370 = !{i64 104580}
!6371 = !{i64 104592}
!6372 = !{i64 104606}
!6373 = !{i64 104618}
!6374 = !{i64 104620}
!6375 = !{i64 104630}
!6376 = !{i64 104638}
!6377 = !{i64 104640}
!6378 = !{i64 104652}
!6379 = !{i64 104666}
!6380 = !{i64 104678}
!6381 = !{i64 104680}
!6382 = !{i64 104690}
!6383 = !{i64 104698}
!6384 = !{i64 104700}
!6385 = !{i64 104712}
!6386 = !{i64 104726}
!6387 = !{i64 104738}
!6388 = !{i64 104740}
!6389 = !{i64 104750}
!6390 = !{i64 104758}
!6391 = !{i64 104760}
!6392 = !{i64 104772}
!6393 = !{i64 104786}
!6394 = !{i64 104798}
!6395 = !{i64 104800}
!6396 = !{i64 104810}
!6397 = !{i64 104818}
!6398 = !{i64 104820}
!6399 = !{i64 104832}
!6400 = !{i64 104846}
!6401 = !{i64 104858}
!6402 = !{i64 104860}
!6403 = !{i64 104870}
!6404 = !{i64 104878}
!6405 = !{i64 104880}
!6406 = !{i64 104892}
!6407 = !{i64 104906}
!6408 = !{i64 104918}
!6409 = !{i64 104920}
!6410 = !{i64 104930}
!6411 = !{i64 104938}
!6412 = !{i64 104940}
!6413 = !{i64 104952}
!6414 = !{i64 104966}
!6415 = !{i64 104978}
!6416 = !{i64 104980}
!6417 = !{i64 104990}
!6418 = !{i64 104998}
!6419 = !{i64 105000}
!6420 = !{i64 105012}
!6421 = !{i64 105026}
!6422 = !{i64 105038}
!6423 = !{i64 105040}
!6424 = !{i64 105050}
!6425 = !{i64 105058}
!6426 = !{i64 105060}
!6427 = !{i64 105072}
!6428 = !{i64 105086}
!6429 = !{i64 105098}
!6430 = !{i64 105100}
!6431 = !{i64 105110}
!6432 = !{i64 105118}
!6433 = !{i64 105120}
!6434 = !{i64 105132}
!6435 = !{i64 105146}
!6436 = !{i64 105158}
!6437 = !{i64 105160}
!6438 = !{i64 105170}
!6439 = !{i64 105178}
!6440 = !{i64 105180}
!6441 = !{i64 105194}
!6442 = !{i64 105208}
!6443 = !{i64 105220}
!6444 = !{i64 105222}
!6445 = !{i64 105232}
!6446 = !{i64 105242}
!6447 = !{i64 105244}
!6448 = !{i64 105260}
!6449 = !{i64 105274}
!6450 = !{i64 105286}
!6451 = !{i64 105288}
!6452 = !{i64 105298}
!6453 = !{i64 105308}
!6454 = !{i64 105310}
!6455 = !{i64 105326}
!6456 = !{i64 105330}
!6457 = !{i64 105336}
!6458 = !{i64 105350}
!6459 = !{i64 105354}
!6460 = !{i64 105360}
!6461 = !{i64 105374}
!6462 = !{i64 105378}
!6463 = !{i64 105384}
!6464 = !{i64 105398}
!6465 = !{i64 105402}
!6466 = !{i64 105408}
!6467 = !{i64 105422}
!6468 = !{i64 105426}
!6469 = !{i64 105432}
!6470 = !{i64 105444}
!6471 = !{i64 105448}
!6472 = !{i64 105454}
!6473 = !{i64 105466}
!6474 = !{i64 105470}
!6475 = !{i64 105476}
!6476 = !{i64 105488}
!6477 = !{i64 105492}
!6478 = !{i64 105498}
!6479 = !{i64 105524}
!6480 = !{i64 105532}
!6481 = !{i64 105540}
!6482 = !{i64 105548}
!6483 = !{i64 105556}
!6484 = !{i64 105564}
!6485 = !{i64 105572}
!6486 = !{i64 105580}
!6487 = !{i64 105588}
!6488 = !{i64 105596}
!6489 = !{i64 105604}
!6490 = !{i64 105612}
!6491 = !{i64 105620}
!6492 = !{i64 105628}
!6493 = !{i64 105636}
!6494 = !{i64 105644}
!6495 = !{i64 105648}
!6496 = !{i64 105664}
!6497 = !{i64 105670}
!6498 = !{i64 105674}
!6499 = !{i64 105682}
!6500 = !{i64 105692}
!6501 = !{i64 105700}
!6502 = !{i64 105708}
!6503 = !{i64 105712}
!6504 = !{i64 105720}
!6505 = !{i64 105724}
!6506 = !{i64 105728}
!6507 = !{i64 105734}
!6508 = !{i64 105742}
!6509 = !{i64 105760}
!6510 = !{i64 105768}
!6511 = !{i64 105770}
!6512 = !{i64 105776}
!6513 = !{i64 105778}
!6514 = !{i64 105782}
!6515 = !{i64 105788}
!6516 = !{i64 105792}
!6517 = !{i64 105794}
!6518 = !{i64 105798}
!6519 = !{i64 105800}
!6520 = !{i64 105810}
!6521 = !{i64 105816}
!6522 = !{i64 105820}
!6523 = !{i64 105824}
!6524 = !{i64 105838}
!6525 = !{i64 105848}
!6526 = !{i64 105882}
!6527 = !{i64 105896}
!6528 = !{i64 105910}
!6529 = !{i64 105920}
!6530 = !{i64 105924}
!6531 = !{i64 105938}
!6532 = !{i64 105948}
!6533 = !{i64 105962}
!6534 = !{i64 105972}
!6535 = !{i64 105986}
!6536 = !{i64 105994}
!6537 = !{i64 106006}
!6538 = !{i64 106032}
!6539 = !{i64 106046}
!6540 = !{i64 106060}
!6541 = !{i64 106112}
!6542 = !{i64 106114}
!6543 = !{i64 106090}
!6544 = !{i64 106076}
!6545 = !{i64 106080}
!6546 = !{i64 106092}
!6547 = !{i64 106098}
!6548 = !{i64 106104}
!6549 = !{i64 106122}
!6550 = !{i64 106138}
!6551 = !{i64 106146}
!6552 = !{i64 106152}
!6553 = !{i64 106160}
!6554 = !{i64 106174}
!6555 = !{i64 106180}
!6556 = !{i64 106186}
!6557 = !{i64 106194}
!6558 = !{i64 106204}
!6559 = !{i64 106208}
!6560 = !{i64 106252}
!6561 = !{i64 106264}
!6562 = !{i64 106274}
!6563 = !{i64 106276}
!6564 = !{i64 106286}
!6565 = !{i64 106302}
!6566 = !{i64 106316}
!6567 = !{i64 106336}
!6568 = !{i64 106346}
!6569 = !{i64 106354}
!6570 = !{i64 106364}
!6571 = !{i64 106372}
!6572 = !{i64 106382}
!6573 = !{i64 106390}
!6574 = !{i64 106400}
!6575 = !{i64 106408}
!6576 = !{i64 106418}
!6577 = !{i64 106426}
!6578 = !{i64 106436}
!6579 = !{i64 106444}
!6580 = !{i64 106454}
!6581 = !{i64 106462}
!6582 = !{i64 106472}
!6583 = !{i64 106480}
!6584 = !{i64 106490}
!6585 = !{i64 106498}
!6586 = !{i64 106508}
!6587 = !{i64 106516}
!6588 = !{i64 106530}
!6589 = !{i64 106534}
!6590 = !{i64 106548}
!6591 = !{i64 106552}
!6592 = !{i64 106562}
!6593 = !{i64 106570}
!6594 = !{i64 106580}
!6595 = !{i64 106588}
!6596 = !{i64 106592}
!6597 = !{i64 106600}
!6598 = !{i64 106618}
!6599 = !{i64 106620}
!6600 = !{i64 106640}
!6601 = !{i64 106654}
!6602 = !{i64 106666}
!6603 = !{i64 106686}
!6604 = !{i64 106704}
!6605 = !{i64 106712}
!6606 = !{i64 106714}
!6607 = !{i64 106726}
!6608 = !{i64 106758}
!6609 = !{i64 106760}
!6610 = !{i64 106764}
!6611 = !{i64 106770}
!6612 = !{i64 106774}
!6613 = !{i64 106784}
!6614 = !{i64 106738}
!6615 = !{i64 106800}
!6616 = !{i64 106816}
!6617 = !{i64 106832}
!6618 = !{i64 106848}
!6619 = !{i64 106864}
!6620 = !{i64 106880}
!6621 = !{i64 106896}
!6622 = !{i64 106912}
!6623 = !{i64 106924}
!6624 = !{i64 106926}
!6625 = !{i64 106942}
!6626 = !{i64 106954}
!6627 = !{i64 106956}
!6628 = !{i64 106972}
!6629 = !{i64 106984}
!6630 = !{i64 106986}
!6631 = !{i64 107002}
!6632 = !{i64 107014}
!6633 = !{i64 107016}
!6634 = !{i64 107032}
!6635 = !{i64 107044}
!6636 = !{i64 107046}
!6637 = !{i64 107074}
!6638 = !{i64 107076}
!6639 = !{i64 107100}
!6640 = !{i64 107104}
!6641 = !{i64 107106}
!6642 = !{i64 107130}
!6643 = !{i64 107134}
!6644 = !{i64 107136}
!6645 = !{i64 107160}
!6646 = !{i64 107168}
!6647 = !{i64 107180}
!6648 = !{i64 107200}
!6649 = !{i64 107220}
!6650 = !{i64 107240}
!6651 = !{i64 107260}
!6652 = !{i64 107280}
!6653 = !{i64 107300}
!6654 = !{i64 107320}
!6655 = !{i64 107340}
!6656 = !{i64 107360}
!6657 = !{i64 107380}
!6658 = !{i64 107400}
!6659 = !{i64 107420}
!6660 = !{i64 107440}
!6661 = !{i64 107460}
!6662 = !{i64 107568}
!6663 = !{i64 107586}
!6664 = !{i64 107588}
!6665 = !{i64 107590}
!6666 = !{i64 107596}
!6667 = !{i64 107598}
!6668 = !{i64 107600}
!6669 = !{i64 107620}
!6670 = !{i64 107622}
!6671 = !{i64 107632}
!6672 = !{i64 107634}
!6673 = !{i64 107636}
!6674 = !{i64 107640}
!6675 = !{i64 107648}
!6676 = !{i64 107682}
!6677 = !{i64 107722}
!6678 = !{i64 107756}
!6679 = !{i64 107770}
!6680 = !{i64 107840}
!6681 = !{i64 107842}
!6682 = !{i64 107874}
!6683 = !{i64 107876}
!6684 = !{i64 107880}
!6685 = !{i64 107808}
!6686 = !{i64 107888}
!6687 = !{i64 107922}
!6688 = !{i64 107936}
!6689 = !{i64 107974}
!6690 = !{i64 108008}
!6691 = !{i64 108060}
!6692 = !{i64 108082}
!6693 = !{i64 108084}
!6694 = !{i64 108090}
!6695 = !{i64 108092}
!6696 = !{i64 108094}
!6697 = !{i64 108114}
!6698 = !{i64 108116}
!6699 = !{i64 108126}
!6700 = !{i64 108128}
!6701 = !{i64 108130}
!6702 = !{i64 108134}
!6703 = !{i64 108142}
!6704 = !{i64 108176}
!6705 = !{i64 108216}
!6706 = !{i64 108250}
!6707 = !{i64 108264}
!6708 = !{i64 108334}
!6709 = !{i64 108336}
!6710 = !{i64 108370}
!6711 = !{i64 108372}
!6712 = !{i64 108376}
!6713 = !{i64 108302}
!6714 = !{i64 108384}
!6715 = !{i64 108418}
!6716 = !{i64 108432}
!6717 = !{i64 108470}
!6718 = !{i64 108504}
!6719 = !{i64 108556}
!6720 = !{i64 108578}
!6721 = !{i64 108580}
!6722 = !{i64 108586}
!6723 = !{i64 108588}
!6724 = !{i64 108590}
!6725 = !{i64 108610}
!6726 = !{i64 108612}
!6727 = !{i64 108622}
!6728 = !{i64 108624}
!6729 = !{i64 108626}
!6730 = !{i64 108630}
!6731 = !{i64 108638}
!6732 = !{i64 108672}
!6733 = !{i64 108712}
!6734 = !{i64 108746}
!6735 = !{i64 108760}
!6736 = !{i64 108830}
!6737 = !{i64 108832}
!6738 = !{i64 108866}
!6739 = !{i64 108868}
!6740 = !{i64 108872}
!6741 = !{i64 108798}
!6742 = !{i64 108880}
!6743 = !{i64 108914}
!6744 = !{i64 108928}
!6745 = !{i64 108966}
!6746 = !{i64 109000}
!6747 = !{i64 109052}
!6748 = !{i64 109074}
!6749 = !{i64 109076}
!6750 = !{i64 109082}
!6751 = !{i64 109084}
!6752 = !{i64 109086}
!6753 = !{i64 109106}
!6754 = !{i64 109108}
!6755 = !{i64 109118}
!6756 = !{i64 109120}
!6757 = !{i64 109122}
!6758 = !{i64 109126}
!6759 = !{i64 109134}
!6760 = !{i64 109168}
!6761 = !{i64 109208}
!6762 = !{i64 109242}
!6763 = !{i64 109256}
!6764 = !{i64 109326}
!6765 = !{i64 109328}
!6766 = !{i64 109362}
!6767 = !{i64 109364}
!6768 = !{i64 109368}
!6769 = !{i64 109294}
!6770 = !{i64 109376}
!6771 = !{i64 109410}
!6772 = !{i64 109422}
!6773 = !{i64 109458}
!6774 = !{i64 109492}
!6775 = !{i64 109540}
!6776 = !{i64 109562}
!6777 = !{i64 109564}
!6778 = !{i64 109570}
!6779 = !{i64 109572}
!6780 = !{i64 109574}
!6781 = !{i64 109594}
!6782 = !{i64 109596}
!6783 = !{i64 109606}
!6784 = !{i64 109608}
!6785 = !{i64 109610}
!6786 = !{i64 109614}
!6787 = !{i64 109622}
!6788 = !{i64 109656}
!6789 = !{i64 109692}
!6790 = !{i64 109726}
!6791 = !{i64 109806}
!6792 = !{i64 109808}
!6793 = !{i64 109842}
!6794 = !{i64 109844}
!6795 = !{i64 109848}
!6796 = !{i64 109774}
!6797 = !{i64 109856}
!6798 = !{i64 109890}
!6799 = !{i64 109902}
!6800 = !{i64 109938}
!6801 = !{i64 109972}
!6802 = !{i64 110020}
!6803 = !{i64 110042}
!6804 = !{i64 110044}
!6805 = !{i64 110050}
!6806 = !{i64 110052}
!6807 = !{i64 110054}
!6808 = !{i64 110074}
!6809 = !{i64 110076}
!6810 = !{i64 110086}
!6811 = !{i64 110088}
!6812 = !{i64 110090}
!6813 = !{i64 110094}
!6814 = !{i64 110102}
!6815 = !{i64 110136}
!6816 = !{i64 110172}
!6817 = !{i64 110206}
!6818 = !{i64 110286}
!6819 = !{i64 110288}
!6820 = !{i64 110322}
!6821 = !{i64 110324}
!6822 = !{i64 110328}
!6823 = !{i64 110254}
!6824 = !{i64 110336}
!6825 = !{i64 110370}
!6826 = !{i64 110382}
!6827 = !{i64 110418}
!6828 = !{i64 110452}
!6829 = !{i64 110500}
!6830 = !{i64 110522}
!6831 = !{i64 110524}
!6832 = !{i64 110530}
!6833 = !{i64 110532}
!6834 = !{i64 110534}
!6835 = !{i64 110554}
!6836 = !{i64 110556}
!6837 = !{i64 110566}
!6838 = !{i64 110568}
!6839 = !{i64 110570}
!6840 = !{i64 110574}
!6841 = !{i64 110582}
!6842 = !{i64 110616}
!6843 = !{i64 110652}
!6844 = !{i64 110686}
!6845 = !{i64 110766}
!6846 = !{i64 110768}
!6847 = !{i64 110802}
!6848 = !{i64 110804}
!6849 = !{i64 110808}
!6850 = !{i64 110734}
!6851 = !{i64 110816}
!6852 = !{i64 110850}
!6853 = !{i64 110862}
!6854 = !{i64 110898}
!6855 = !{i64 110932}
!6856 = !{i64 110980}
!6857 = !{i64 111002}
!6858 = !{i64 111004}
!6859 = !{i64 111010}
!6860 = !{i64 111012}
!6861 = !{i64 111014}
!6862 = !{i64 111034}
!6863 = !{i64 111036}
!6864 = !{i64 111046}
!6865 = !{i64 111048}
!6866 = !{i64 111050}
!6867 = !{i64 111054}
!6868 = !{i64 111062}
!6869 = !{i64 111096}
!6870 = !{i64 111132}
!6871 = !{i64 111166}
!6872 = !{i64 111246}
!6873 = !{i64 111248}
!6874 = !{i64 111282}
!6875 = !{i64 111284}
!6876 = !{i64 111288}
!6877 = !{i64 111214}
!6878 = !{i64 111296}
!6879 = !{i64 111342}
!6880 = !{i64 111374}
!6881 = !{i64 111420}
!6882 = !{i64 111440}
!6883 = !{i64 111450}
!6884 = !{i64 111452}
!6885 = !{i64 111516}
!6886 = !{i64 111580}
!6887 = !{i64 111644}
!6888 = !{i64 111708}
!6889 = !{i64 111772}
!6890 = !{i64 111836}
!6891 = !{i64 111900}
!6892 = !{i64 111964}
!6893 = !{i64 111970}
!6894 = !{i64 111980}
!6895 = !{i64 111982}
!6896 = !{i64 111996}
!6897 = !{i64 112000}
!6898 = !{i64 112014}
!6899 = !{i64 112018}
!6900 = !{i64 112032}
!6901 = !{i64 112036}
!6902 = !{i64 112050}
!6903 = !{i64 112054}
!6904 = !{i64 112068}
!6905 = !{i64 112072}
!6906 = !{i64 112086}
!6907 = !{i64 112090}
!6908 = !{i64 112104}
!6909 = !{i64 112108}
!6910 = !{i64 112122}
!6911 = !{i64 112126}
!6912 = !{i64 112140}
!6913 = !{i64 112144}
!6914 = !{i64 112158}
!6915 = !{i64 112162}
!6916 = !{i64 112176}
!6917 = !{i64 112180}
!6918 = !{i64 112194}
!6919 = !{i64 112198}
!6920 = !{i64 112216}
!6921 = !{i64 112226}
!6922 = !{i64 112230}
!6923 = !{i64 112234}
!6924 = !{i64 112248}
!6925 = !{i64 112258}
!6926 = !{i64 112264}
!6927 = !{i64 112280}
!6928 = !{i64 112292}
!6929 = !{i64 112296}
!6930 = !{i64 112306}
!6931 = !{i64 112320}
!6932 = !{i64 112328}
!6933 = !{i64 112338}
!6934 = !{i64 112342}
!6935 = !{i64 112352}
!6936 = !{i64 112356}
!6937 = !{i64 112380}
!6938 = !{i64 112394}
!6939 = !{i64 112416}
!6940 = !{i64 112430}
!6941 = !{i64 112434}
!6942 = !{i64 112442}
!6943 = !{i64 112446}
!6944 = !{i64 112456}
!6945 = !{i64 112460}
!6946 = !{i64 112466}
!6947 = !{i64 112472}
!6948 = !{i64 112476}
!6949 = !{i64 112480}
!6950 = !{i64 112486}
!6951 = !{i64 112490}
!6952 = !{i64 112494}
!6953 = !{i64 112502}
!6954 = !{i64 112510}
!6955 = !{i64 112512}
!6956 = !{i64 112518}
!6957 = !{i64 112368}
!6958 = !{i64 112374}
!6959 = !{i64 112384}
!6960 = !{i64 112530}
!6961 = !{i64 112532}
!6962 = !{i64 112550}
!6963 = !{i64 112560}
!6964 = !{i64 112594}
!6965 = !{i64 112598}
!6966 = !{i64 112614}
!6967 = !{i64 112632}
!6968 = !{i64 112642}
!6969 = !{i64 112646}
!6970 = !{i64 112664}
!6971 = !{i64 112674}
!6972 = !{i64 112692}
!6973 = !{i64 112702}
!6974 = !{i64 112720}
!6975 = !{i64 112734}
!6976 = !{i64 112748}
!6977 = !{i64 112774}
!6978 = !{i64 112778}
!6979 = !{i64 112794}
!6980 = !{i64 112808}
!6981 = !{i64 112878}
!6982 = !{i64 112880}
!6983 = !{i64 112846}
!6984 = !{i64 112830}
!6985 = !{i64 112836}
!6986 = !{i64 112848}
!6987 = !{i64 112850}
!6988 = !{i64 112856}
!6989 = !{i64 112864}
!6990 = !{i64 112888}
!6991 = !{i64 112918}
!6992 = !{i64 112928}
!6993 = !{i64 112950}
!6994 = !{i64 112960}
!6995 = !{i64 112982}
!6996 = !{i64 112992}
!6997 = !{i64 113022}
!6998 = !{i64 113028}
!6999 = !{i64 113038}
!7000 = !{i64 113066}
!7001 = !{i64 113076}
!7002 = !{i64 113098}
!7003 = !{i64 113108}
!7004 = !{i64 113130}
!7005 = !{i64 113140}
!7006 = !{i64 113170}
!7007 = !{i64 113176}
!7008 = !{i64 113186}
!7009 = !{i64 113214}
!7010 = !{i64 113224}
!7011 = !{i64 113246}
!7012 = !{i64 113256}
!7013 = !{i64 113278}
!7014 = !{i64 113288}
!7015 = !{i64 113318}
!7016 = !{i64 113324}
!7017 = !{i64 113334}
!7018 = !{i64 113362}
!7019 = !{i64 113372}
!7020 = !{i64 113394}
!7021 = !{i64 113404}
!7022 = !{i64 113426}
!7023 = !{i64 113436}
!7024 = !{i64 113466}
!7025 = !{i64 113472}
!7026 = !{i64 113482}
!7027 = !{i64 113484}
!7028 = !{i64 113488}
!7029 = !{i64 113498}
!7030 = !{i64 113500}
!7031 = !{i64 113522}
!7032 = !{i64 113534}
!7033 = !{i64 113556}
!7034 = !{i64 113574}
!7035 = !{i64 113764}
!7036 = !{i64 113766}
!7037 = !{i64 113602}
!7038 = !{i64 113616}
!7039 = !{i64 113618}
!7040 = !{i64 113620}
!7041 = !{i64 113622}
!7042 = !{i64 113638}
!7043 = !{i64 113640}
!7044 = !{i64 113652}
!7045 = !{i64 113746}
!7046 = !{i64 113748}
!7047 = !{i64 113750}
!7048 = !{i64 113680}
!7049 = !{i64 113698}
!7050 = !{i64 113700}
!7051 = !{i64 113706}
!7052 = !{i64 113718}
!7053 = !{i64 113724}
!7054 = !{i64 113754}
!7055 = !{i64 113786}
!7056 = !{i64 113798}
!7057 = !{i64 113808}
!7058 = !{i64 113812}
!7059 = !{i64 113828}
!7060 = !{i64 113830}
!7061 = !{i64 113832}
!7062 = !{i64 113838}
!7063 = !{i64 113844}
!7064 = !{i64 113846}
!7065 = !{i64 113866}
!7066 = !{i64 113878}
!7067 = !{i64 113886}
!7068 = !{i64 113888}
!7069 = !{i64 113894}
!7070 = !{i64 113896}
!7071 = !{i64 113916}
!7072 = !{i64 113928}
!7073 = !{i64 113936}
!7074 = !{i64 113952}
!7075 = !{i64 113964}
!7076 = !{i64 113976}
!7077 = !{i64 113978}
!7078 = !{i64 114006}
!7079 = !{i64 114010}
!7080 = !{i64 114044}
!7081 = !{i64 114066}
!7082 = !{i64 114084}
!7083 = !{i64 114094}
!7084 = !{i64 114100}
!7085 = !{i64 114102}
!7086 = !{i64 114104}
!7087 = !{i64 114108}
!7088 = !{i64 114130}
!7089 = !{i64 114142}
!7090 = !{i64 114150}
!7091 = !{i64 114156}
!7092 = !{i64 114170}
!7093 = !{i64 114176}
!7094 = !{i64 114178}
!7095 = !{i64 114180}
!7096 = !{i64 114200}
!7097 = !{i64 114212}
!7098 = !{i64 114216}
!7099 = !{i64 114226}
!7100 = !{i64 114228}
!7101 = !{i64 114240}
!7102 = !{i64 114246}
!7103 = !{i64 114250}
!7104 = !{i64 114270}
!7105 = !{i64 114276}
!7106 = !{i64 114288}
!7107 = !{i64 114292}
!7108 = !{i64 114304}
!7109 = !{i64 114310}
!7110 = !{i64 114314}
!7111 = !{i64 114334}
!7112 = !{i64 114340}
!7113 = !{i64 114352}
!7114 = !{i64 114618}
!7115 = !{i64 114620}
!7116 = !{i64 114362}
!7117 = !{i64 114366}
!7118 = !{i64 114368}
!7119 = !{i64 114388}
!7120 = !{i64 114404}
!7121 = !{i64 114416}
!7122 = !{i64 114432}
!7123 = !{i64 114436}
!7124 = !{i64 114442}
!7125 = !{i64 114478}
!7126 = !{i64 114482}
!7127 = !{i64 114484}
!7128 = !{i64 114500}
!7129 = !{i64 114502}
!7130 = !{i64 114504}
!7131 = !{i64 114514}
!7132 = !{i64 114524}
!7133 = !{i64 114540}
!7134 = !{i64 114544}
!7135 = !{i64 114546}
!7136 = !{i64 114548}
!7137 = !{i64 114570}
!7138 = !{i64 114580}
!7139 = !{i64 114582}
!7140 = !{i64 114592}
!7141 = !{i64 114596}
!7142 = !{i64 114598}
!7143 = !{i64 114602}
!7144 = !{i64 114608}
!7145 = !{i64 114632}
!7146 = !{i64 114634}
!7147 = !{i64 114636}
!7148 = !{i64 114646}
!7149 = !{i64 114654}
!7150 = !{i64 114658}
!7151 = !{i64 114668}
!7152 = !{i64 114676}
!7153 = !{i64 114682}
!7154 = !{i64 114684}
!7155 = !{i64 114690}
!7156 = !{i64 114710}
!7157 = !{i64 114716}
!7158 = !{i64 114728}
!7159 = !{i64 114740}
!7160 = !{i64 114742}
!7161 = !{i64 114744}
!7162 = !{i64 114754}
!7163 = !{i64 114758}
!7164 = !{i64 114764}
!7165 = !{i64 114768}
!7166 = !{i64 114778}
!7167 = !{i64 114782}
!7168 = !{i64 114788}
!7169 = !{i64 114800}
!7170 = !{i64 114814}
!7171 = !{i64 114816}
!7172 = !{i64 114820}
!7173 = !{i64 114824}
!7174 = !{i64 114828}
!7175 = !{i64 114838}
!7176 = !{i64 114840}
!7177 = !{i64 114852}
!7178 = !{i64 114854}
!7179 = !{i64 114856}
!7180 = !{i64 114858}
!7181 = !{i64 114862}
!7182 = !{i64 114866}
!7183 = !{i64 114870}
!7184 = !{i64 114874}
!7185 = !{i64 114888}
!7186 = !{i64 114890}
!7187 = !{i64 114892}
!7188 = !{i64 114902}
!7189 = !{i64 114904}
!7190 = !{i64 114920}
!7191 = !{i64 114930}
!7192 = !{i64 114932}
!7193 = !{i64 114952}
!7194 = !{i64 114960}
!7195 = !{i64 114962}
!7196 = !{i64 114982}
!7197 = !{i64 114994}
!7198 = !{i64 115002}
!7199 = !{i64 115012}
!7200 = !{i64 115028}
!7201 = !{i64 115034}
!7202 = !{i64 115036}
!7203 = !{i64 115096}
!7204 = !{i64 115102}
!7205 = !{i64 115056}
!7206 = !{i64 115068}
!7207 = !{i64 115074}
!7208 = !{i64 115082}
!7209 = !{i64 115094}
!7210 = !{i64 115104}
!7211 = !{i64 115106}
!7212 = !{i64 115110}
!7213 = !{i64 115118}
!7214 = !{i64 115122}
!7215 = !{i64 115126}
!7216 = !{i64 115136}
!7217 = !{i64 115140}
!7218 = !{i64 115150}
!7219 = !{i64 115152}
!7220 = !{i64 115162}
!7221 = !{i64 115178}
!7222 = !{i64 115184}
!7223 = !{i64 115198}
!7224 = !{i64 115200}
!7225 = !{i64 115210}
!7226 = !{i64 115212}
!7227 = !{i64 115226}
!7228 = !{i64 115232}
!7229 = !{i64 115246}
!7230 = !{i64 115258}
!7231 = !{i64 115270}
!7232 = !{i64 115276}
!7233 = !{i64 115280}
!7234 = !{i64 115288}
!7235 = !{i64 115292}
!7236 = !{i64 115302}
!7237 = !{i64 115312}
!7238 = !{i64 115314}
!7239 = !{i64 115316}
!7240 = !{i64 115326}
!7241 = !{i64 115336}
!7242 = !{i64 115340}
!7243 = !{i64 115350}
!7244 = !{i64 115360}
!7245 = !{i64 115368}
!7246 = !{i64 115374}
!7247 = !{i64 115376}
!7248 = !{i64 115378}
!7249 = !{i64 115388}
!7250 = !{i64 115390}
!7251 = !{i64 115392}
!7252 = !{i64 115402}
!7253 = !{i64 115410}
!7254 = !{i64 115414}
!7255 = !{i64 115424}
!7256 = !{i64 115432}
!7257 = !{i64 115442}
!7258 = !{i64 115444}
!7259 = !{i64 115454}
!7260 = !{i64 115464}
!7261 = !{i64 115466}
!7262 = !{i64 115468}
!7263 = !{i64 115478}
!7264 = !{i64 115488}
!7265 = !{i64 115492}
!7266 = !{i64 115502}
!7267 = !{i64 115512}
!7268 = !{i64 115524}
!7269 = !{i64 115528}
!7270 = !{i64 115530}
!7271 = !{i64 115532}
!7272 = !{i64 115542}
!7273 = !{i64 115544}
!7274 = !{i64 115546}
!7275 = !{i64 115556}
!7276 = !{i64 115564}
!7277 = !{i64 115568}
!7278 = !{i64 115578}
!7279 = !{i64 115586}
!7280 = !{i64 115596}
!7281 = !{i64 115610}
!7282 = !{i64 115622}
!7283 = !{i64 115628}
!7284 = !{i64 115638}
!7285 = !{i64 115656}
!7286 = !{i64 115676}
!7287 = !{i64 115680}
!7288 = !{i64 115688}
!7289 = !{i64 115698}
!7290 = !{i64 115700}
!7291 = !{i64 115702}
!7292 = !{i64 115722}
!7293 = !{i64 115734}
!7294 = !{i64 115740}
!7295 = !{i64 115750}
!7296 = !{i64 115752}
!7297 = !{i64 115754}
!7298 = !{i64 115764}
!7299 = !{i64 115772}
!7300 = !{i64 115776}
!7301 = !{i64 115786}
!7302 = !{i64 115794}
!7303 = !{i64 115798}
!7304 = !{i64 115800}
!7305 = !{i64 115806}
!7306 = !{i64 115818}
!7307 = !{i64 115820}
!7308 = !{i64 115830}
!7309 = !{i64 115840}
!7310 = !{i64 115842}
!7311 = !{i64 115844}
!7312 = !{i64 115864}
!7313 = !{i64 115876}
!7314 = !{i64 115884}
!7315 = !{i64 115894}
!7316 = !{i64 115896}
!7317 = !{i64 115898}
!7318 = !{i64 115908}
!7319 = !{i64 115918}
!7320 = !{i64 115922}
!7321 = !{i64 115932}
!7322 = !{i64 115942}
!7323 = !{i64 115956}
!7324 = !{i64 115958}
!7325 = !{i64 115962}
!7326 = !{i64 115964}
!7327 = !{i64 115966}
!7328 = !{i64 115968}
!7329 = !{i64 115972}
!7330 = !{i64 115974}
!7331 = !{i64 115976}
!7332 = !{i64 115986}
!7333 = !{i64 115988}
!7334 = !{i64 115990}
!7335 = !{i64 116000}
!7336 = !{i64 116002}
!7337 = !{i64 116008}
!7338 = !{i64 116012}
!7339 = !{i64 116022}
!7340 = !{i64 116024}
!7341 = !{i64 116030}
!7342 = !{i64 116044}
!7343 = !{i64 116048}
!7344 = !{i64 116056}
!7345 = !{i64 116066}
!7346 = !{i64 116068}
!7347 = !{i64 116070}
!7348 = !{i64 116092}
!7349 = !{i64 116104}
!7350 = !{i64 116112}
!7351 = !{i64 116122}
!7352 = !{i64 116124}
!7353 = !{i64 116126}
!7354 = !{i64 116136}
!7355 = !{i64 116144}
!7356 = !{i64 116148}
!7357 = !{i64 116158}
!7358 = !{i64 116166}
!7359 = !{i64 116170}
!7360 = !{i64 116172}
!7361 = !{i64 116176}
!7362 = !{i64 116186}
!7363 = !{i64 116188}
!7364 = !{i64 116190}
!7365 = !{i64 116200}
!7366 = !{i64 116208}
!7367 = !{i64 116212}
!7368 = !{i64 116222}
!7369 = !{i64 116230}
!7370 = !{i64 116244}
!7371 = !{i64 116248}
!7372 = !{i64 116256}
!7373 = !{i64 116266}
!7374 = !{i64 116268}
!7375 = !{i64 116270}
!7376 = !{i64 116292}
!7377 = !{i64 116304}
!7378 = !{i64 116312}
!7379 = !{i64 116322}
!7380 = !{i64 116324}
!7381 = !{i64 116326}
!7382 = !{i64 116336}
!7383 = !{i64 116344}
!7384 = !{i64 116348}
!7385 = !{i64 116358}
!7386 = !{i64 116366}
!7387 = !{i64 116370}
!7388 = !{i64 116372}
!7389 = !{i64 116376}
!7390 = !{i64 116386}
!7391 = !{i64 116388}
!7392 = !{i64 116390}
!7393 = !{i64 116400}
!7394 = !{i64 116408}
!7395 = !{i64 116412}
!7396 = !{i64 116422}
!7397 = !{i64 116430}
!7398 = !{i64 116444}
!7399 = !{i64 116448}
!7400 = !{i64 116456}
!7401 = !{i64 116466}
!7402 = !{i64 116468}
!7403 = !{i64 116470}
!7404 = !{i64 116492}
!7405 = !{i64 116504}
!7406 = !{i64 116510}
!7407 = !{i64 116520}
!7408 = !{i64 116522}
!7409 = !{i64 116524}
!7410 = !{i64 116534}
!7411 = !{i64 116542}
!7412 = !{i64 116546}
!7413 = !{i64 116556}
!7414 = !{i64 116564}
!7415 = !{i64 116568}
!7416 = !{i64 116570}
!7417 = !{i64 116574}
!7418 = !{i64 116578}
!7419 = !{i64 116580}
!7420 = !{i64 116586}
!7421 = !{i64 116596}
!7422 = !{i64 116600}
!7423 = !{i64 116608}
!7424 = !{i64 116618}
!7425 = !{i64 116620}
!7426 = !{i64 116622}
!7427 = !{i64 116644}
!7428 = !{i64 116656}
!7429 = !{i64 116662}
!7430 = !{i64 116672}
!7431 = !{i64 116674}
!7432 = !{i64 116676}
!7433 = !{i64 116686}
!7434 = !{i64 116694}
!7435 = !{i64 116698}
!7436 = !{i64 116708}
!7437 = !{i64 116716}
!7438 = !{i64 116720}
!7439 = !{i64 116722}
!7440 = !{i64 116732}
!7441 = !{i64 116736}
!7442 = !{i64 116748}
!7443 = !{i64 116750}
!7444 = !{i64 116752}
!7445 = !{i64 116772}
!7446 = !{i64 116784}
!7447 = !{i64 116792}
!7448 = !{i64 116798}
!7449 = !{i64 116804}
!7450 = !{i64 116810}
!7451 = !{i64 116812}
!7452 = !{i64 116822}
!7453 = !{i64 116838}
!7454 = !{i64 116840}
!7455 = !{i64 116842}
!7456 = !{i64 116852}
!7457 = !{i64 116862}
!7458 = !{i64 116866}
!7459 = !{i64 116876}
!7460 = !{i64 116886}
!7461 = !{i64 116908}
!7462 = !{i64 116912}
!7463 = !{i64 116924}
!7464 = !{i64 116928}
!7465 = !{i64 116930}
!7466 = !{i64 116932}
!7467 = !{i64 116938}
!7468 = !{i64 116940}
!7469 = !{i64 116944}
!7470 = !{i64 116952}
!7471 = !{i64 116954}
!7472 = !{i64 116960}
!7473 = !{i64 116966}
!7474 = !{i64 116974}
!7475 = !{i64 116988}
!7476 = !{i64 116996}
!7477 = !{i64 117004}
!7478 = !{i64 117018}
!7479 = !{i64 117032}
!7480 = !{i64 117046}
!7481 = !{i64 117054}
!7482 = !{i64 117066}
!7483 = !{i64 117076}
!7484 = !{i64 117080}
!7485 = !{i64 117082}
!7486 = !{i64 117084}
!7487 = !{i64 117106}
!7488 = !{i64 117118}
!7489 = !{i64 117128}
!7490 = !{i64 117132}
!7491 = !{i64 117146}
!7492 = !{i64 117148}
!7493 = !{i64 117150}
!7494 = !{i64 117166}
!7495 = !{i64 117180}
!7496 = !{i64 117192}
!7497 = !{i64 117194}
!7498 = !{i64 117216}
!7499 = !{i64 117228}
!7500 = !{i64 117240}
!7501 = !{i64 117248}
!7502 = !{i64 117276}
!7503 = !{i64 117290}
!7504 = !{i64 117302}
!7505 = !{i64 117304}
!7506 = !{i64 117326}
!7507 = !{i64 117338}
!7508 = !{i64 117350}
!7509 = !{i64 117362}
!7510 = !{i64 117366}
!7511 = !{i64 117374}
!7512 = !{i64 117396}
!7513 = !{i64 117408}
!7514 = !{i64 117420}
!7515 = !{i64 117424}
!7516 = !{i64 117438}
!7517 = !{i64 117440}
!7518 = !{i64 117446}
!7519 = !{i64 117448}
!7520 = !{i64 117462}
!7521 = !{i64 117464}
!7522 = !{i64 117466}
!7523 = !{i64 117476}
!7524 = !{i64 117484}
!7525 = !{i64 117492}
!7526 = !{i64 117494}
!7527 = !{i64 117516}
!7528 = !{i64 117528}
!7529 = !{i64 117542}
!7530 = !{i64 117552}
!7531 = !{i64 117556}
!7532 = !{i64 117560}
!7533 = !{i64 117562}
!7534 = !{i64 117570}
!7535 = !{i64 117590}
!7536 = !{i64 117594}
!7537 = !{i64 117596}
!7538 = !{i64 117598}
!7539 = !{i64 117602}
!7540 = !{i64 117616}
!7541 = !{i64 117638}
!7542 = !{i64 117642}
!7543 = !{i64 117644}
!7544 = !{i64 117648}
!7545 = !{i64 117662}
!7546 = !{i64 117682}
!7547 = !{i64 117694}
!7548 = !{i64 117696}
!7549 = !{i64 118026}
!7550 = !{i64 118028}
!7551 = !{i64 118030}
!7552 = !{i64 117718}
!7553 = !{i64 117724}
!7554 = !{i64 117726}
!7555 = !{i64 117738}
!7556 = !{i64 117742}
!7557 = !{i64 117968}
!7558 = !{i64 117970}
!7559 = !{i64 117762}
!7560 = !{i64 117778}
!7561 = !{i64 117780}
!7562 = !{i64 117782}
!7563 = !{i64 117788}
!7564 = !{i64 117798}
!7565 = !{i64 117806}
!7566 = !{i64 117808}
!7567 = !{i64 117828}
!7568 = !{i64 117842}
!7569 = !{i64 117848}
!7570 = !{i64 117852}
!7571 = !{i64 117856}
!7572 = !{i64 117858}
!7573 = !{i64 117860}
!7574 = !{i64 117862}
!7575 = !{i64 117882}
!7576 = !{i64 117888}
!7577 = !{i64 117890}
!7578 = !{i64 117892}
!7579 = !{i64 117896}
!7580 = !{i64 117898}
!7581 = !{i64 117908}
!7582 = !{i64 117948}
!7583 = !{i64 117952}
!7584 = !{i64 117974}
!7585 = !{i64 117986}
!7586 = !{i64 117990}
!7587 = !{i64 117992}
!7588 = !{i64 118014}
!7589 = !{i64 118044}
!7590 = !{i64 118060}
!7591 = !{i64 118062}
!7592 = !{i64 118064}
!7593 = !{i64 118084}
!7594 = !{i64 118096}
!7595 = !{i64 118102}
!7596 = !{i64 118114}
!7597 = !{i64 118130}
!7598 = !{i64 118144}
!7599 = !{i64 118156}
!7600 = !{i64 118170}
!7601 = !{i64 118192}
!7602 = !{i64 118206}
!7603 = !{i64 118208}
!7604 = !{i64 118212}
!7605 = !{i64 118216}
!7606 = !{i64 118228}
!7607 = !{i64 118230}
!7608 = !{i64 118232}
!7609 = !{i64 118244}
!7610 = !{i64 118254}
!7611 = !{i64 118260}
!7612 = !{i64 118272}
!7613 = !{i64 118284}
!7614 = !{i64 118288}
!7615 = !{i64 118302}
!7616 = !{i64 118312}
!7617 = !{i64 118316}
!7618 = !{i64 118318}
!7619 = !{i64 118320}
!7620 = !{i64 118326}
!7621 = !{i64 118332}
!7622 = !{i64 118334}
!7623 = !{i64 118354}
!7624 = !{i64 118366}
!7625 = !{i64 118374}
!7626 = !{i64 118384}
!7627 = !{i64 118390}
!7628 = !{i64 118392}
!7629 = !{i64 118412}
!7630 = !{i64 118424}
!7631 = !{i64 118432}
!7632 = !{i64 118442}
!7633 = !{i64 118450}
!7634 = !{i64 118456}
!7635 = !{i64 118458}
!7636 = !{i64 118478}
!7637 = !{i64 118482}
!7638 = !{i64 118494}
!7639 = !{i64 118500}
!7640 = !{i64 118516}
!7641 = !{i64 118534}
!7642 = !{i64 118538}
!7643 = !{i64 118558}
!7644 = !{i64 118562}
!7645 = !{i64 118574}
!7646 = !{i64 118586}
!7647 = !{i64 118590}
!7648 = !{i64 118600}
!7649 = !{i64 118604}
!7650 = !{i64 118610}
!7651 = !{i64 118616}
!7652 = !{i64 118618}
!7653 = !{i64 118638}
!7654 = !{i64 118650}
!7655 = !{i64 118658}
!7656 = !{i64 118668}
!7657 = !{i64 118674}
!7658 = !{i64 118676}
!7659 = !{i64 118696}
!7660 = !{i64 118708}
!7661 = !{i64 118716}
!7662 = !{i64 118726}
!7663 = !{i64 118734}
!7664 = !{i64 118740}
!7665 = !{i64 118742}
!7666 = !{i64 118762}
!7667 = !{i64 118766}
!7668 = !{i64 118778}
!7669 = !{i64 118790}
!7670 = !{i64 118798}
!7671 = !{i64 118802}
!7672 = !{i64 118822}
!7673 = !{i64 118834}
!7674 = !{i64 118846}
!7675 = !{i64 118850}
!7676 = !{i64 118860}
!7677 = !{i64 118864}
!7678 = !{i64 118880}
!7679 = !{i64 118886}
!7680 = !{i64 118888}
!7681 = !{i64 118908}
!7682 = !{i64 118920}
!7683 = !{i64 118928}
!7684 = !{i64 118948}
!7685 = !{i64 118960}
!7686 = !{i64 118966}
!7687 = !{i64 118968}
!7688 = !{i64 118988}
!7689 = !{i64 119002}
!7690 = !{i64 119014}
!7691 = !{i64 119026}
!7692 = !{i64 119032}
!7693 = !{i64 119044}
!7694 = !{i64 119052}
!7695 = !{i64 119054}
!7696 = !{i64 119074}
!7697 = !{i64 119086}
!7698 = !{i64 119098}
!7699 = !{i64 119106}
!7700 = !{i64 119126}
!7701 = !{i64 119144}
!7702 = !{i64 119150}
!7703 = !{i64 119152}
!7704 = !{i64 119172}
!7705 = !{i64 119186}
!7706 = !{i64 119192}
!7707 = !{i64 119204}
!7708 = !{i64 119212}
!7709 = !{i64 119232}
!7710 = !{i64 119246}
!7711 = !{i64 119252}
!7712 = !{i64 119264}
!7713 = !{i64 119268}
!7714 = !{i64 119278}
!7715 = !{i64 119280}
!7716 = !{i64 119296}
!7717 = !{i64 119302}
!7718 = !{i64 119304}
!7719 = !{i64 119324}
!7720 = !{i64 119336}
!7721 = !{i64 119344}
!7722 = !{i64 119364}
!7723 = !{i64 119376}
!7724 = !{i64 119384}
!7725 = !{i64 119386}
!7726 = !{i64 119406}
!7727 = !{i64 119422}
!7728 = !{i64 119434}
!7729 = !{i64 119446}
!7730 = !{i64 119452}
!7731 = !{i64 119464}
!7732 = !{i64 119472}
!7733 = !{i64 119474}
!7734 = !{i64 119494}
!7735 = !{i64 119506}
!7736 = !{i64 119518}
!7737 = !{i64 119526}
!7738 = !{i64 119546}
!7739 = !{i64 119564}
!7740 = !{i64 119570}
!7741 = !{i64 119572}
!7742 = !{i64 119592}
!7743 = !{i64 119606}
!7744 = !{i64 119612}
!7745 = !{i64 119624}
!7746 = !{i64 119632}
!7747 = !{i64 119652}
!7748 = !{i64 119666}
!7749 = !{i64 119672}
!7750 = !{i64 119684}
!7751 = !{i64 119688}
!7752 = !{i64 119698}
!7753 = !{i64 119700}
!7754 = !{i64 119718}
!7755 = !{i64 119724}
!7756 = !{i64 119726}
!7757 = !{i64 119748}
!7758 = !{i64 119760}
!7759 = !{i64 119768}
!7760 = !{i64 119788}
!7761 = !{i64 119800}
!7762 = !{i64 119808}
!7763 = !{i64 119810}
!7764 = !{i64 119832}
!7765 = !{i64 119846}
!7766 = !{i64 119858}
!7767 = !{i64 119866}
!7768 = !{i64 119870}
!7769 = !{i64 119908}
!7770 = !{i64 119914}
!7771 = !{i64 119916}
!7772 = !{i64 119938}
!7773 = !{i64 119976}
!7774 = !{i64 119982}
!7775 = !{i64 119994}
!7776 = !{i64 120002}
!7777 = !{i64 120024}
!7778 = !{i64 120062}
!7779 = !{i64 120068}
!7780 = !{i64 120080}
!7781 = !{i64 120084}
!7782 = !{i64 120094}
!7783 = !{i64 120096}
!7784 = !{i64 120108}
!7785 = !{i64 120118}
!7786 = !{i64 120124}
!7787 = !{i64 120126}
!7788 = !{i64 120148}
!7789 = !{i64 120160}
!7790 = !{i64 120168}
!7791 = !{i64 120188}
!7792 = !{i64 120200}
!7793 = !{i64 120208}
!7794 = !{i64 120210}
!7795 = !{i64 120232}
!7796 = !{i64 120246}
!7797 = !{i64 120258}
!7798 = !{i64 120266}
!7799 = !{i64 120278}
!7800 = !{i64 120284}
!7801 = !{i64 120286}
!7802 = !{i64 120308}
!7803 = !{i64 120320}
!7804 = !{i64 120326}
!7805 = !{i64 120338}
!7806 = !{i64 120346}
!7807 = !{i64 120350}
!7808 = !{i64 120362}
!7809 = !{i64 120372}
!7810 = !{i64 120382}
!7811 = !{i64 120384}
!7812 = !{i64 120394}
!7813 = !{i64 120396}
!7814 = !{i64 120416}
!7815 = !{i64 120422}
!7816 = !{i64 120424}
!7817 = !{i64 120446}
!7818 = !{i64 120458}
!7819 = !{i64 120466}
!7820 = !{i64 120486}
!7821 = !{i64 120498}
!7822 = !{i64 120506}
!7823 = !{i64 120508}
!7824 = !{i64 120530}
!7825 = !{i64 120542}
!7826 = !{i64 120554}
!7827 = !{i64 120562}
!7828 = !{i64 120566}
!7829 = !{i64 120568}
!7830 = !{i64 120586}
!7831 = !{i64 120594}
!7832 = !{i64 120600}
!7833 = !{i64 120602}
!7834 = !{i64 120624}
!7835 = !{i64 120636}
!7836 = !{i64 120642}
!7837 = !{i64 120654}
!7838 = !{i64 120662}
!7839 = !{i64 120666}
!7840 = !{i64 120678}
!7841 = !{i64 120682}
!7842 = !{i64 120692}
!7843 = !{i64 120696}
!7844 = !{i64 120722}
!7845 = !{i64 120728}
!7846 = !{i64 120730}
!7847 = !{i64 120750}
!7848 = !{i64 120762}
!7849 = !{i64 120770}
!7850 = !{i64 120774}
!7851 = !{i64 120776}
!7852 = !{i64 120796}
!7853 = !{i64 120808}
!7854 = !{i64 120818}
!7855 = !{i64 120822}
!7856 = !{i64 120830}
!7857 = !{i64 120832}
!7858 = !{i64 120852}
!7859 = !{i64 120864}
!7860 = !{i64 120874}
!7861 = !{i64 120894}
!7862 = !{i64 120904}
!7863 = !{i64 120910}
!7864 = !{i64 120914}
!7865 = !{i64 120926}
!7866 = !{i64 120932}
!7867 = !{i64 120938}
!7868 = !{i64 120944}
!7869 = !{i64 120946}
!7870 = !{i64 120966}
!7871 = !{i64 120978}
!7872 = !{i64 120988}
!7873 = !{i64 120992}
!7874 = !{i64 120994}
!7875 = !{i64 120998}
!7876 = !{i64 121000}
!7877 = !{i64 121002}
!7878 = !{i64 121012}
!7879 = !{i64 121018}
!7880 = !{i64 121020}
!7881 = !{i64 121040}
!7882 = !{i64 121052}
!7883 = !{i64 121062}
!7884 = !{i64 121072}
!7885 = !{i64 121078}
!7886 = !{i64 121084}
!7887 = !{i64 121088}
!7888 = !{i64 121100}
!7889 = !{i64 121104}
!7890 = !{i64 121114}
!7891 = !{i64 121116}
!7892 = !{i64 121136}
!7893 = !{i64 121142}
!7894 = !{i64 121144}
!7895 = !{i64 121164}
!7896 = !{i64 121176}
!7897 = !{i64 121180}
!7898 = !{i64 121184}
!7899 = !{i64 121196}
!7900 = !{i64 121200}
!7901 = !{i64 121208}
!7902 = !{i64 121212}
!7903 = !{i64 121232}
!7904 = !{i64 121238}
!7905 = !{i64 121240}
!7906 = !{i64 121260}
!7907 = !{i64 121272}
!7908 = !{i64 121280}
!7909 = !{i64 121288}
!7910 = !{i64 121304}
!7911 = !{i64 121308}
!7912 = !{i64 121318}
!7913 = !{i64 121320}
!7914 = !{i64 121340}
!7915 = !{i64 121346}
!7916 = !{i64 121348}
!7917 = !{i64 121368}
!7918 = !{i64 121380}
!7919 = !{i64 121388}
!7920 = !{i64 121396}
!7921 = !{i64 121412}
!7922 = !{i64 121416}
!7923 = !{i64 121426}
!7924 = !{i64 121428}
!7925 = !{i64 121450}
!7926 = !{i64 121456}
!7927 = !{i64 121458}
!7928 = !{i64 121478}
!7929 = !{i64 121490}
!7930 = !{i64 121498}
!7931 = !{i64 121506}
!7932 = !{i64 121510}
!7933 = !{i64 121512}
!7934 = !{i64 121528}
!7935 = !{i64 121532}
!7936 = !{i64 121542}
!7937 = !{i64 121544}
!7938 = !{i64 121566}
!7939 = !{i64 121572}
!7940 = !{i64 121574}
!7941 = !{i64 121594}
!7942 = !{i64 121606}
!7943 = !{i64 121614}
!7944 = !{i64 121622}
!7945 = !{i64 121626}
!7946 = !{i64 121628}
!7947 = !{i64 121644}
!7948 = !{i64 121648}
!7949 = !{i64 121658}
!7950 = !{i64 121660}
!7951 = !{i64 121678}
!7952 = !{i64 121680}
!7953 = !{i64 121682}
!7954 = !{i64 121702}
!7955 = !{i64 121714}
!7956 = !{i64 121722}
!7957 = !{i64 121726}
!7958 = !{i64 121728}
!7959 = !{i64 121748}
!7960 = !{i64 121760}
!7961 = !{i64 121768}
!7962 = !{i64 121782}
!7963 = !{i64 121802}
!7964 = !{i64 121806}
!7965 = !{i64 121816}
!7966 = !{i64 121820}
!7967 = !{i64 121830}
!7968 = !{i64 121834}
!7969 = !{i64 121854}
!7970 = !{i64 121866}
!7971 = !{i64 121870}
!7972 = !{i64 121874}
!7973 = !{i64 121886}
!7974 = !{i64 121908}
!7975 = !{i64 121910}
!7976 = !{i64 121918}
!7977 = !{i64 121920}
!7978 = !{i64 121932}
!7979 = !{i64 121936}
!7980 = !{i64 121956}
!7981 = !{i64 121968}
!7982 = !{i64 121976}
!7983 = !{i64 121982}
!7984 = !{i64 121984}
!7985 = !{i64 121988}
!7986 = !{i64 121990}
!7987 = !{i64 122004}
!7988 = !{i64 122006}
!7989 = !{i64 122008}
!7990 = !{i64 122018}
!7991 = !{i64 122022}
!7992 = !{i64 122026}
!7993 = !{i64 122030}
!7994 = !{i64 122036}
!7995 = !{i64 122040}
!7996 = !{i64 122050}
!7997 = !{i64 122054}
!7998 = !{i64 122058}
!7999 = !{i64 122062}
!8000 = !{i64 122068}
!8001 = !{i64 122072}
!8002 = !{i64 122092}
!8003 = !{i64 122110}
!8004 = !{i64 122114}
!8005 = !{i64 122126}
!8006 = !{i64 122128}
!8007 = !{i64 122146}
!8008 = !{i64 122150}
!8009 = !{i64 122170}
!8010 = !{i64 122182}
!8011 = !{i64 122190}
!8012 = !{i64 122196}
!8013 = !{i64 122198}
!8014 = !{i64 122208}
!8015 = !{i64 122210}
!8016 = !{i64 122212}
!8017 = !{i64 122222}
!8018 = !{i64 122228}
!8019 = !{i64 122232}
!8020 = !{i64 122242}
!8021 = !{i64 122248}
!8022 = !{i64 122256}
!8023 = !{i64 122260}
!8024 = !{i64 122280}
!8025 = !{i64 122298}
!8026 = !{i64 122306}
!8027 = !{i64 122308}
!8028 = !{i64 122320}
!8029 = !{i64 122350}
!8030 = !{i64 122352}
!8031 = !{i64 122354}
!8032 = !{i64 122360}
!8033 = !{i64 122362}
!8034 = !{i64 122366}
!8035 = !{i64 122368}
!8036 = !{i64 123232}
!8037 = !{i64 123254}
!8038 = !{i64 123264}
!8039 = !{i64 123268}
!8040 = !{i64 123270}
!8041 = !{i64 123274}
!8042 = !{i64 123276}
!8043 = !{i64 123898}
!8044 = !{i64 123920}
!8045 = !{i64 123930}
!8046 = !{i64 123942}
!8047 = !{i64 123968}
!8048 = !{i64 123970}
!8049 = !{i64 123972}
!8050 = !{i64 123978}
!8051 = !{i64 123980}
!8052 = !{i64 123984}
!8053 = !{i64 123986}
!8054 = !{i64 124410}
!8055 = !{i64 124432}
!8056 = !{i64 124442}
!8057 = !{i64 124446}
!8058 = !{i64 124448}
!8059 = !{i64 124452}
!8060 = !{i64 124454}
!8061 = !{i64 124860}
!8062 = !{i64 124882}
!8063 = !{i64 124892}
!8064 = !{i64 124904}
!8065 = !{i64 124930}
!8066 = !{i64 124932}
!8067 = !{i64 124934}
!8068 = !{i64 124940}
!8069 = !{i64 124942}
!8070 = !{i64 124946}
!8071 = !{i64 124948}
!8072 = !{i64 125490}
!8073 = !{i64 125514}
!8074 = !{i64 125520}
!8075 = !{i64 125524}
!8076 = !{i64 125526}
!8077 = !{i64 125530}
!8078 = !{i64 125532}
!8079 = !{i64 125926}
!8080 = !{i64 125950}
!8081 = !{i64 125954}
!8082 = !{i64 125964}
!8083 = !{i64 125968}
!8084 = !{i64 125982}
!8085 = !{i64 125986}
!8086 = !{i64 126002}
!8087 = !{i64 126022}
!8088 = !{i64 126028}
!8089 = !{i64 126030}
!8090 = !{i64 126052}
!8091 = !{i64 126066}
!8092 = !{i64 126072}
!8093 = !{i64 126076}
!8094 = !{i64 126080}
!8095 = !{i64 126086}
!8096 = !{i64 126092}
!8097 = !{i64 126098}
!8098 = !{i64 126202}
!8099 = !{i64 126108}
!8100 = !{i64 126118}
!8101 = !{i64 126124}
!8102 = !{i64 126128}
!8103 = !{i64 126130}
!8104 = !{i64 126132}
!8105 = !{i64 126136}
!8106 = !{i64 126142}
!8107 = !{i64 126146}
!8108 = !{i64 126148}
!8109 = !{i64 126150}
!8110 = !{i64 126154}
!8111 = !{i64 126160}
!8112 = !{i64 126164}
!8113 = !{i64 126166}
!8114 = !{i64 126168}
!8115 = !{i64 126172}
!8116 = !{i64 126178}
!8117 = !{i64 126182}
!8118 = !{i64 126184}
!8119 = !{i64 126188}
!8120 = !{i64 126192}
!8121 = !{i64 126200}
!8122 = !{i64 126206}
!8123 = !{i64 126212}
!8124 = !{i64 126220}
!8125 = !{i64 126222}
!8126 = !{i64 126224}
!8127 = !{i64 126234}
!8128 = !{i64 126258}
!8129 = !{i64 126260}
!8130 = !{i64 126262}
!8131 = !{i64 126266}
!8132 = !{i64 126270}
!8133 = !{i64 126274}
!8134 = !{i64 126282}
!8135 = !{i64 126284}
!8136 = !{i64 126286}
!8137 = !{i64 126290}
!8138 = !{i64 126296}
!8139 = !{i64 126300}
!8140 = !{i64 126302}
!8141 = !{i64 126304}
!8142 = !{i64 126308}
!8143 = !{i64 126312}
!8144 = !{i64 126316}
!8145 = !{i64 126324}
!8146 = !{i64 126326}
!8147 = !{i64 126328}
!8148 = !{i64 126332}
!8149 = !{i64 126338}
!8150 = !{i64 126342}
!8151 = !{i64 126344}
!8152 = !{i64 126346}
!8153 = !{i64 126350}
!8154 = !{i64 126356}
!8155 = !{i64 126360}
!8156 = !{i64 126362}
!8157 = !{i64 126364}
!8158 = !{i64 126368}
!8159 = !{i64 126372}
!8160 = !{i64 126376}
!8161 = !{i64 126398}
!8162 = !{i64 126420}
!8163 = !{i64 126424}
!8164 = !{i64 126436}
!8165 = !{i64 126440}
!8166 = !{i64 126452}
!8167 = !{i64 126454}
!8168 = !{i64 126456}
!8169 = !{i64 126478}
!8170 = !{i64 126490}
!8171 = !{i64 126498}
!8172 = !{i64 126504}
!8173 = !{i64 126516}
!8174 = !{i64 126520}
!8175 = !{i64 126550}
!8176 = !{i64 126722}
!8177 = !{i64 126566}
!8178 = !{i64 126568}
!8179 = !{i64 126574}
!8180 = !{i64 126576}
!8181 = !{i64 126588}
!8182 = !{i64 126592}
!8183 = !{i64 126602}
!8184 = !{i64 126608}
!8185 = !{i64 126614}
!8186 = !{i64 126616}
!8187 = !{i64 126628}
!8188 = !{i64 126630}
!8189 = !{i64 126636}
!8190 = !{i64 126638}
!8191 = !{i64 126640}
!8192 = !{i64 126642}
!8193 = !{i64 126652}
!8194 = !{i64 126654}
!8195 = !{i64 126670}
!8196 = !{i64 126674}
!8197 = !{i64 126678}
!8198 = !{i64 126684}
!8199 = !{i64 126690}
!8200 = !{i64 126692}
!8201 = !{i64 126696}
!8202 = !{i64 126710}
!8203 = !{i64 126702}
!8204 = !{i64 126714}
!8205 = !{i64 126726}
!8206 = !{i64 126734}
!8207 = !{i64 126736}
!8208 = !{i64 126792}
!8209 = !{i64 126816}
!8210 = !{i64 126824}
!8211 = !{i64 126840}
!8212 = !{i64 126848}
!8213 = !{i64 126876}
!8214 = !{i64 126904}
!8215 = !{i64 126910}
!8216 = !{i64 126912}
!8217 = !{i64 127012}
!8218 = !{i64 126934}
!8219 = !{i64 126952}
!8220 = !{i64 126982}
!8221 = !{i64 126988}
!8222 = !{i64 127004}
!8223 = !{i64 127014}
!8224 = !{i64 127022}
!8225 = !{i64 127028}
!8226 = !{i64 127030}
!8227 = !{i64 127034}
!8228 = !{i64 127040}
!8229 = !{i64 127052}
!8230 = !{i64 127054}
!8231 = !{i64 127072}
!8232 = !{i64 127082}
!8233 = !{i64 127090}
!8234 = !{i64 127092}
!8235 = !{i64 127096}
!8236 = !{i64 127116}
!8237 = !{i64 127244}
!8238 = !{i64 127124}
!8239 = !{i64 127144}
!8240 = !{i64 127142}
!8241 = !{i64 127148}
!8242 = !{i64 127150}
!8243 = !{i64 127158}
!8244 = !{i64 127164}
!8245 = !{i64 127166}
!8246 = !{i64 127168}
!8247 = !{i64 127176}
!8248 = !{i64 127182}
!8249 = !{i64 127184}
!8250 = !{i64 127186}
!8251 = !{i64 127194}
!8252 = !{i64 127200}
!8253 = !{i64 127202}
!8254 = !{i64 127220}
!8255 = !{i64 127228}
!8256 = !{i64 127288}
!8257 = !{i64 127292}
!8258 = !{i64 127294}
!8259 = !{i64 127300}
!8260 = !{i64 127308}
!8261 = !{i64 127312}
!8262 = !{i64 127314}
!8263 = !{i64 127322}
!8264 = !{i64 127328}
!8265 = !{i64 127330}
!8266 = !{i64 127332}
!8267 = !{i64 127338}
!8268 = !{i64 127346}
!8269 = !{i64 127350}
!8270 = !{i64 127352}
!8271 = !{i64 127360}
!8272 = !{i64 127366}
!8273 = !{i64 127368}
!8274 = !{i64 127370}
!8275 = !{i64 127378}
!8276 = !{i64 127384}
!8277 = !{i64 127386}
!8278 = !{i64 127388}
!8279 = !{i64 127394}
!8280 = !{i64 127436}
!8281 = !{i64 127444}
!8282 = !{i64 127450}
!8283 = !{i64 127458}
!8284 = !{i64 127488}
!8285 = !{i64 127492}
!8286 = !{i64 127504}
!8287 = !{i64 127508}
!8288 = !{i64 127542}
!8289 = !{i64 127552}
!8290 = !{i64 127556}
!8291 = !{i64 127562}
!8292 = !{i64 127566}
!8293 = !{i64 127576}
!8294 = !{i64 127578}
!8295 = !{i64 127588}
!8296 = !{i64 127590}
!8297 = !{i64 127614}
!8298 = !{i64 127650}
!8299 = !{i64 127656}
!8300 = !{i64 127680}
!8301 = !{i64 127684}
!8302 = !{i64 127694}
!8303 = !{i64 127696}
!8304 = !{i64 127718}
!8305 = !{i64 127720}
!8306 = !{i64 127736}
!8307 = !{i64 127746}
!8308 = !{i64 127750}
!8309 = !{i64 127756}
!8310 = !{i64 127758}
!8311 = !{i64 127768}
!8312 = !{i64 127770}
!8313 = !{i64 127772}
!8314 = !{i64 127782}
!8315 = !{i64 127792}
!8316 = !{i64 127798}
!8317 = !{i64 127808}
!8318 = !{i64 127818}
!8319 = !{i64 127824}
!8320 = !{i64 127846}
!8321 = !{i64 127860}
!8322 = !{i64 127864}
!8323 = !{i64 127888}
!8324 = !{i64 127892}
!8325 = !{i64 127902}
!8326 = !{i64 127904}
!8327 = !{i64 127926}
!8328 = !{i64 127932}
!8329 = !{i64 127928}
!8330 = !{i64 127950}
!8331 = !{i64 127960}
!8332 = !{i64 127964}
!8333 = !{i64 127970}
!8334 = !{i64 127972}
!8335 = !{i64 127982}
!8336 = !{i64 127984}
!8337 = !{i64 127986}
!8338 = !{i64 127990}
!8339 = !{i64 128000}
!8340 = !{i64 128010}
!8341 = !{i64 128016}
!8342 = !{i64 128020}
!8343 = !{i64 128032}
!8344 = !{i64 128042}
!8345 = !{i64 128052}
!8346 = !{i64 128058}
!8347 = !{i64 128062}
!8348 = !{i64 128134}
!8349 = !{i64 128148}
!8350 = !{i64 128152}
!8351 = !{i64 128176}
!8352 = !{i64 128180}
!8353 = !{i64 128190}
!8354 = !{i64 128192}
!8355 = !{i64 128202}
!8356 = !{i64 128206}
!8357 = !{i64 128214}
!8358 = !{i64 128218}
!8359 = !{i64 128232}
!8360 = !{i64 128242}
!8361 = !{i64 128246}
!8362 = !{i64 128270}
!8363 = !{i64 128276}
!8364 = !{i64 128278}
!8365 = !{i64 128354}
!8366 = !{i64 128364}
!8367 = !{i64 128368}
!8368 = !{i64 128370}
!8369 = !{i64 128372}
!8370 = !{i64 128376}
!8371 = !{i64 128378}
!8372 = !{i64 128382}
!8373 = !{i64 128384}
!8374 = !{i64 128300}
!8375 = !{i64 128314}
!8376 = !{i64 128340}
!8377 = !{i64 128344}
!8378 = !{i64 128352}
!8379 = !{i64 128408}
!8380 = !{i64 128412}
!8381 = !{i64 128432}
!8382 = !{i64 128440}
!8383 = !{i64 128446}
!8384 = !{i64 128452}
!8385 = !{i64 128454}
!8386 = !{i64 128476}
!8387 = !{i64 128498}
!8388 = !{i64 128524}
!8389 = !{i64 128534}
!8390 = !{i64 128536}
!8391 = !{i64 128564}
!8392 = !{i64 128574}
!8393 = !{i64 128578}
!8394 = !{i64 128584}
!8395 = !{i64 128588}
!8396 = !{i64 128596}
!8397 = !{i64 128598}
!8398 = !{i64 128622}
!8399 = !{i64 128626}
!8400 = !{i64 128630}
!8401 = !{i64 128640}
!8402 = !{i64 128642}
!8403 = !{i64 128664}
!8404 = !{i64 128686}
!8405 = !{i64 128702}
!8406 = !{i64 128728}
!8407 = !{i64 128732}
!8408 = !{i64 128740}
!8409 = !{i64 128750}
!8410 = !{i64 128752}
!8411 = !{i64 128774}
!8412 = !{i64 128802}
!8413 = !{i64 128808}
!8414 = !{i64 128820}
!8415 = !{i64 128846}
!8416 = !{i64 128850}
!8417 = !{i64 128854}
!8418 = !{i64 128866}
!8419 = !{i64 128892}
!8420 = !{i64 128896}
!8421 = !{i64 128904}
!8422 = !{i64 128936}
!8423 = !{i64 128950}
!8424 = !{i64 128956}
!8425 = !{i64 128964}
!8426 = !{i64 128970}
!8427 = !{i64 128984}
!8428 = !{i64 128998}
!8429 = !{i64 129012}
!8430 = !{i64 129026}
!8431 = !{i64 129040}
!8432 = !{i64 129060}
!8433 = !{i64 129070}
!8434 = !{i64 129074}
!8435 = !{i64 129080}
!8436 = !{i64 129084}
!8437 = !{i64 129114}
!8438 = !{i64 129128}
!8439 = !{i64 129132}
!8440 = !{i64 129402}
!8441 = !{i64 129404}
!8442 = !{i64 129406}
!8443 = !{i64 129150}
!8444 = !{i64 129156}
!8445 = !{i64 129158}
!8446 = !{i64 129168}
!8447 = !{i64 129172}
!8448 = !{i64 129344}
!8449 = !{i64 129346}
!8450 = !{i64 129208}
!8451 = !{i64 129210}
!8452 = !{i64 129212}
!8453 = !{i64 129202}
!8454 = !{i64 129216}
!8455 = !{i64 129218}
!8456 = !{i64 129220}
!8457 = !{i64 129224}
!8458 = !{i64 129226}
!8459 = !{i64 129232}
!8460 = !{i64 129238}
!8461 = !{i64 129240}
!8462 = !{i64 129242}
!8463 = !{i64 129254}
!8464 = !{i64 129258}
!8465 = !{i64 129262}
!8466 = !{i64 129266}
!8467 = !{i64 129278}
!8468 = !{i64 129282}
!8469 = !{i64 129328}
!8470 = !{i64 129350}
!8471 = !{i64 129362}
!8472 = !{i64 129366}
!8473 = !{i64 129368}
!8474 = !{i64 129390}
!8475 = !{i64 129420}
!8476 = !{i64 129442}
!8477 = !{i64 129454}
!8478 = !{i64 129456}
!8479 = !{i64 129470}
!8480 = !{i64 129472}
!8481 = !{i64 129474}
!8482 = !{i64 129476}
!8483 = !{i64 129478}
!8484 = !{i64 129480}
!8485 = !{i64 129530}
!8486 = !{i64 129532}
!8487 = !{i64 129546}
!8488 = !{i64 129548}
!8489 = !{i64 129596}
!8490 = !{i64 129598}
!8491 = !{i64 129612}
!8492 = !{i64 129616}
!8493 = !{i64 129630}
!8494 = !{i64 129638}
!8495 = !{i64 129642}
!8496 = !{i64 129722}
!8497 = !{i64 129662}
!8498 = !{i64 129676}
!8499 = !{i64 129680}
!8500 = !{i64 129698}
!8501 = !{i64 129702}
!8502 = !{i64 129704}
!8503 = !{i64 129724}
!8504 = !{i64 129740}
!8505 = !{i64 129748}
!8506 = !{i64 129756}
!8507 = !{i64 129760}
!8508 = !{i64 129778}
!8509 = !{i64 129780}
!8510 = !{i64 129782}
!8511 = !{i64 129788}
!8512 = !{i64 129794}
!8513 = !{i64 129796}
!8514 = !{i64 129816}
!8515 = !{i64 129828}
!8516 = !{i64 129836}
!8517 = !{i64 129840}
!8518 = !{i64 129848}
!8519 = !{i64 129854}
!8520 = !{i64 129862}
!8521 = !{i64 129870}
!8522 = !{i64 129878}
!8523 = !{i64 129886}
!8524 = !{i64 129894}
!8525 = !{i64 129902}
!8526 = !{i64 129918}
!8527 = !{i64 129926}
!8528 = !{i64 129942}
!8529 = !{i64 129956}
!8530 = !{i64 129978}
!8531 = !{i64 129984}
!8532 = !{i64 129992}
!8533 = !{i64 130006}
!8534 = !{i64 130020}
!8535 = !{i64 130032}
!8536 = !{i64 130054}
!8537 = !{i64 130068}
!8538 = !{i64 130070}
!8539 = !{i64 130080}
!8540 = !{i64 130084}
!8541 = !{i64 130096}
!8542 = !{i64 130098}
!8543 = !{i64 130100}
!8544 = !{i64 130112}
!8545 = !{i64 130122}
!8546 = !{i64 130128}
!8547 = !{i64 130140}
!8548 = !{i64 130144}
!8549 = !{i64 130156}
!8550 = !{i64 130164}
!8551 = !{i64 130180}
!8552 = !{i64 130188}
!8553 = !{i64 130204}
!8554 = !{i64 130210}
!8555 = !{i64 130218}
!8556 = !{i64 130224}
!8557 = !{i64 130232}
!8558 = !{i64 130240}
!8559 = !{i64 130248}
!8560 = !{i64 130256}
!8561 = !{i64 130264}
!8562 = !{i64 130268}
!8563 = !{i64 130282}
!8564 = !{i64 130284}
!8565 = !{i64 130288}
!8566 = !{i64 130294}
!8567 = !{i64 130300}
!8568 = !{i64 130302}
!8569 = !{i64 130308}
!8570 = !{i64 130310}
!8571 = !{i64 130316}
!8572 = !{i64 130318}
!8573 = !{i64 130338}
!8574 = !{i64 130342}
!8575 = !{i64 130354}
!8576 = !{i64 130364}
!8577 = !{i64 130368}
!8578 = !{i64 130370}
!8579 = !{i64 130372}
!8580 = !{i64 130374}
!8581 = !{i64 130382}
!8582 = !{i64 130384}
!8583 = !{i64 130390}
!8584 = !{i64 130398}
!8585 = !{i64 130400}
!8586 = !{i64 130410}
!8587 = !{i64 130416}
!8588 = !{i64 130418}
!8589 = !{i64 130438}
!8590 = !{i64 130442}
!8591 = !{i64 130456}
!8592 = !{i64 130462}
!8593 = !{i64 130490}
!8594 = !{i64 130494}
!8595 = !{i64 130514}
!8596 = !{i64 130518}
!8597 = !{i64 130530}
!8598 = !{i64 130534}
!8599 = !{i64 130536}
!8600 = !{i64 130544}
!8601 = !{i64 130548}
!8602 = !{i64 130562}
!8603 = !{i64 130564}
!8604 = !{i64 130568}
!8605 = !{i64 130708}
!8606 = !{i64 130584}
!8607 = !{i64 130588}
!8608 = !{i64 130594}
!8609 = !{i64 130596}
!8610 = !{i64 130598}
!8611 = !{i64 130602}
!8612 = !{i64 130604}
!8613 = !{i64 130662}
!8614 = !{i64 130668}
!8615 = !{i64 130684}
!8616 = !{i64 130690}
!8617 = !{i64 130694}
!8618 = !{i64 130710}
!8619 = !{i64 130714}
!8620 = !{i64 130718}
!8621 = !{i64 130720}
!8622 = !{i64 130728}
!8623 = !{i64 130732}
!8624 = !{i64 130750}
!8625 = !{i64 130758}
!8626 = !{i64 130760}
!8627 = !{i64 130780}
!8628 = !{i64 130792}
!8629 = !{i64 130800}
!8630 = !{i64 130820}
!8631 = !{i64 130838}
!8632 = !{i64 130850}
!8633 = !{i64 130856}
!8634 = !{i64 130858}
!8635 = !{i64 130878}
!8636 = !{i64 130890}
!8637 = !{i64 130898}
!8638 = !{i64 130924}
!8639 = !{i64 130930}
!8640 = !{i64 130938}
!8641 = !{i64 130944}
!8642 = !{i64 130954}
!8643 = !{i64 130960}
!8644 = !{i64 130968}
!8645 = !{i64 130974}
!8646 = !{i64 130994}
!8647 = !{i64 131002}
!8648 = !{i64 131006}
!8649 = !{i64 131026}
!8650 = !{i64 131038}
!8651 = !{i64 131048}
!8652 = !{i64 131058}
!8653 = !{i64 131062}
!8654 = !{i64 131072}
!8655 = !{i64 131076}
!8656 = !{i64 131088}
!8657 = !{i64 131096}
!8658 = !{i64 131098}
!8659 = !{i64 131120}
!8660 = !{i64 131132}
!8661 = !{i64 131140}
!8662 = !{i64 131154}
!8663 = !{i64 131156}
!8664 = !{i64 131178}
!8665 = !{i64 131190}
!8666 = !{i64 131196}
!8667 = !{i64 131206}
!8668 = !{i64 131214}
!8669 = !{i64 131218}
!8670 = !{i64 131228}
!8671 = !{i64 131240}
!8672 = !{i64 131248}
!8673 = !{i64 131260}
!8674 = !{i64 131268}
!8675 = !{i64 131280}
!8676 = !{i64 131288}
!8677 = !{i64 131300}
!8678 = !{i64 131308}
!8679 = !{i64 131320}
!8680 = !{i64 131328}
!8681 = !{i64 131340}
!8682 = !{i64 131348}
!8683 = !{i64 131360}
!8684 = !{i64 131368}
!8685 = !{i64 131380}
!8686 = !{i64 131388}
!8687 = !{i64 131400}
!8688 = !{i64 131408}
!8689 = !{i64 131412}
!8690 = !{i64 131436}
!8691 = !{i64 131442}
!8692 = !{i64 131444}
!8693 = !{i64 131466}
!8694 = !{i64 131478}
!8695 = !{i64 131486}
!8696 = !{i64 131504}
!8697 = !{i64 131508}
!8698 = !{i64 131510}
!8699 = !{i64 131524}
!8700 = !{i64 131532}
!8701 = !{i64 131540}
!8702 = !{i64 131574}
!8703 = !{i64 131586}
!8704 = !{i64 131598}
!8705 = !{i64 131602}
!8706 = !{i64 131612}
!8707 = !{i64 131616}
!8708 = !{i64 131636}
!8709 = !{i64 131642}
!8710 = !{i64 131644}
!8711 = !{i64 131666}
!8712 = !{i64 131678}
!8713 = !{i64 131686}
!8714 = !{i64 131704}
!8715 = !{i64 131710}
!8716 = !{i64 131712}
!8717 = !{i64 131726}
!8718 = !{i64 131734}
!8719 = !{i64 131742}
!8720 = !{i64 131770}
!8721 = !{i64 131782}
!8722 = !{i64 131794}
!8723 = !{i64 131798}
!8724 = !{i64 131808}
!8725 = !{i64 131812}
!8726 = !{i64 131838}
!8727 = !{i64 131844}
!8728 = !{i64 131846}
!8729 = !{i64 131868}
!8730 = !{i64 131880}
!8731 = !{i64 131888}
!8732 = !{i64 131900}
!8733 = !{i64 131902}
!8734 = !{i64 131912}
!8735 = !{i64 131916}
!8736 = !{i64 131930}
!8737 = !{i64 131944}
!8738 = !{i64 131956}
!8739 = !{i64 131960}
!8740 = !{i64 131980}
!8741 = !{i64 131986}
!8742 = !{i64 132008}
!8743 = !{i64 132020}
!8744 = !{i64 132032}
!8745 = !{i64 132040}
!8746 = !{i64 132050}
!8747 = !{i64 132054}
!8748 = !{i64 132064}
!8749 = !{i64 132068}
!8750 = !{i64 132080}
!8751 = !{i64 132086}
!8752 = !{i64 132088}
!8753 = !{i64 132110}
!8754 = !{i64 132122}
!8755 = !{i64 132126}
!8756 = !{i64 132136}
!8757 = !{i64 132140}
!8758 = !{i64 132154}
!8759 = !{i64 132166}
!8760 = !{i64 132170}
!8761 = !{i64 132172}
!8762 = !{i64 132176}
!8763 = !{i64 132192}
!8764 = !{i64 132194}
!8765 = !{i64 132196}
!8766 = !{i64 132204}
!8767 = !{i64 132206}
!8768 = !{i64 132226}
!8769 = !{i64 132238}
!8770 = !{i64 132246}
!8771 = !{i64 132254}
!8772 = !{i64 132268}
!8773 = !{i64 132280}
!8774 = !{i64 132282}
!8775 = !{i64 132302}
!8776 = !{i64 132314}
!8777 = !{i64 132322}
!8778 = !{i64 132334}
!8779 = !{i64 132344}
!8780 = !{i64 132354}
!8781 = !{i64 132356}
!8782 = !{i64 132384}
!8783 = !{i64 132386}
!8784 = !{i64 132388}
!8785 = !{i64 132404}
!8786 = !{i64 132408}
!8787 = !{i64 132410}
!8788 = !{i64 132370}
!8789 = !{i64 132412}
!8790 = !{i64 132414}
!8791 = !{i64 132416}
!8792 = !{i64 132420}
!8793 = !{i64 132422}
!8794 = !{i64 132442}
!8795 = !{i64 132454}
!8796 = !{i64 132462}
!8797 = !{i64 132472}
!8798 = !{i64 132478}
!8799 = !{i64 132480}
!8800 = !{i64 132500}
!8801 = !{i64 132512}
!8802 = !{i64 132520}
!8803 = !{i64 132524}
!8804 = !{i64 132526}
!8805 = !{i64 132532}
!8806 = !{i64 132534}
!8807 = !{i64 132544}
!8808 = !{i64 132556}
!8809 = !{i64 132566}
!8810 = !{i64 132582}
!8811 = !{i64 132588}
!8812 = !{i64 132590}
!8813 = !{i64 132550}
!8814 = !{i64 132574}
!8815 = !{i64 132592}
!8816 = !{i64 132594}
!8817 = !{i64 132596}
!8818 = !{i64 132606}
!8819 = !{i64 132620}
!8820 = !{i64 132632}
!8821 = !{i64 132636}
!8822 = !{i64 132646}
!8823 = !{i64 132668}
!8824 = !{i64 132672}
!8825 = !{i64 132688}
!8826 = !{i64 132690}
!8827 = !{i64 132692}
!8828 = !{i64 132708}
!8829 = !{i64 132712}
!8830 = !{i64 132714}
!8831 = !{i64 132734}
!8832 = !{i64 132746}
!8833 = !{i64 132754}
!8834 = !{i64 132764}
!8835 = !{i64 132770}
!8836 = !{i64 132772}
!8837 = !{i64 132792}
!8838 = !{i64 132804}
!8839 = !{i64 132812}
!8840 = !{i64 132826}
!8841 = !{i64 132838}
!8842 = !{i64 132846}
!8843 = !{i64 132858}
!8844 = !{i64 132872}
!8845 = !{i64 132884}
!8846 = !{i64 132888}
!8847 = !{i64 132898}
!8848 = !{i64 132900}
!8849 = !{i64 132920}
!8850 = !{i64 132922}
!8851 = !{i64 132924}
!8852 = !{i64 132928}
!8853 = !{i64 132934}
!8854 = !{i64 132936}
!8855 = !{i64 132956}
!8856 = !{i64 132968}
!8857 = !{i64 132976}
!8858 = !{i64 132988}
!8859 = !{i64 133000}
!8860 = !{i64 133022}
!8861 = !{i64 133034}
!8862 = !{i64 133036}
!8863 = !{i64 133048}
!8864 = !{i64 133058}
!8865 = !{i64 133060}
!8866 = !{i64 133062}
!8867 = !{i64 133082}
!8868 = !{i64 133094}
!8869 = !{i64 133102}
!8870 = !{i64 133112}
!8871 = !{i64 133114}
!8872 = !{i64 133116}
!8873 = !{i64 133130}
!8874 = !{i64 133144}
!8875 = !{i64 133156}
!8876 = !{i64 133168}
!8877 = !{i64 133170}
!8878 = !{i64 133180}
!8879 = !{i64 133192}
!8880 = !{i64 133196}
!8881 = !{i64 133210}
!8882 = !{i64 133230}
!8883 = !{i64 133234}
!8884 = !{i64 133244}
!8885 = !{i64 133248}
!8886 = !{i64 133254}
!8887 = !{i64 133268}
!8888 = !{i64 133274}
!8889 = !{i64 133276}
!8890 = !{i64 133296}
!8891 = !{i64 133308}
!8892 = !{i64 133312}
!8893 = !{i64 133322}
!8894 = !{i64 133330}
!8895 = !{i64 133336}
!8896 = !{i64 133338}
!8897 = !{i64 133358}
!8898 = !{i64 133362}
!8899 = !{i64 133374}
!8900 = !{i64 133386}
!8901 = !{i64 133394}
!8902 = !{i64 133398}
!8903 = !{i64 133418}
!8904 = !{i64 133422}
!8905 = !{i64 133434}
!8906 = !{i64 133446}
!8907 = !{i64 133450}
!8908 = !{i64 133486}
!8909 = !{i64 133466}
!8910 = !{i64 133488}
!8911 = !{i64 133492}
!8912 = !{i64 133504}
!8913 = !{i64 133532}
!8914 = !{i64 133544}
!8915 = !{i64 133558}
!8916 = !{i64 133568}
!8917 = !{i64 133572}
!8918 = !{i64 133586}
!8919 = !{i64 133626}
!8920 = !{i64 133634}
!8921 = !{i64 133636}
!8922 = !{i64 133644}
!8923 = !{i64 133648}
!8924 = !{i64 133658}
!8925 = !{i64 133660}
!8926 = !{i64 133662}
!8927 = !{i64 133672}
!8928 = !{i64 133680}
!8929 = !{i64 133684}
!8930 = !{i64 133694}
!8931 = !{i64 133702}
!8932 = !{i64 133706}
!8933 = !{i64 133710}
!8934 = !{i64 133712}
!8935 = !{i64 133722}
!8936 = !{i64 133728}
!8937 = !{i64 133730}
!8938 = !{i64 133734}
!8939 = !{i64 133740}
!8940 = !{i64 133744}
!8941 = !{i64 133746}
!8942 = !{i64 133758}
!8943 = !{i64 133760}
!8944 = !{i64 133770}
!8945 = !{i64 133774}
!8946 = !{i64 133784}
!8947 = !{i64 133786}
!8948 = !{i64 133788}
!8949 = !{i64 133798}
!8950 = !{i64 133808}
!8951 = !{i64 133812}
!8952 = !{i64 133822}
!8953 = !{i64 133832}
!8954 = !{i64 133836}
!8955 = !{i64 133840}
!8956 = !{i64 133842}
!8957 = !{i64 133850}
!8958 = !{i64 133854}
!8959 = !{i64 133860}
!8960 = !{i64 133866}
!8961 = !{i64 133868}
!8962 = !{i64 133872}
!8963 = !{i64 133878}
!8964 = !{i64 133882}
!8965 = !{i64 133884}
!8966 = !{i64 133896}
!8967 = !{i64 133900}
!8968 = !{i64 133906}
!8969 = !{i64 133924}
!8970 = !{i64 133930}
!8971 = !{i64 133932}
!8972 = !{i64 133952}
!8973 = !{i64 133964}
!8974 = !{i64 133972}
!8975 = !{i64 133980}
!8976 = !{i64 133990}
!8977 = !{i64 134006}
!8978 = !{i64 134012}
!8979 = !{i64 134014}
!8980 = !{i64 134018}
!8981 = !{i64 134024}
!8982 = !{i64 134026}
!8983 = !{i64 134030}
!8984 = !{i64 134032}
!8985 = !{i64 134034}
!8986 = !{i64 134048}
!8987 = !{i64 134036}
!8988 = !{i64 134050}
!8989 = !{i64 134052}
!8990 = !{i64 134276}
!8991 = !{i64 134278}
!8992 = !{i64 134064}
!8993 = !{i64 134070}
!8994 = !{i64 134072}
!8995 = !{i64 134074}
!8996 = !{i64 134078}
!8997 = !{i64 134100}
!8998 = !{i64 134112}
!8999 = !{i64 134124}
!9000 = !{i64 134132}
!9001 = !{i64 134142}
!9002 = !{i64 134144}
!9003 = !{i64 134146}
!9004 = !{i64 134156}
!9005 = !{i64 134162}
!9006 = !{i64 134166}
!9007 = !{i64 134176}
!9008 = !{i64 134182}
!9009 = !{i64 134190}
!9010 = !{i64 134194}
!9011 = !{i64 134200}
!9012 = !{i64 134202}
!9013 = !{i64 134212}
!9014 = !{i64 134216}
!9015 = !{i64 134238}
!9016 = !{i64 134250}
!9017 = !{i64 134262}
!9018 = !{i64 134270}
!9019 = !{i64 134206}
!9020 = !{i64 134284}
!9021 = !{i64 134296}
!9022 = !{i64 134302}
!9023 = !{i64 134322}
!9024 = !{i64 134326}
!9025 = !{i64 134338}
!9026 = !{i64 134350}
!9027 = !{i64 134354}
!9028 = !{i64 134366}
!9029 = !{i64 134368}
!9030 = !{i64 134374}
!9031 = !{i64 134392}
!9032 = !{i64 134398}
!9033 = !{i64 134400}
!9034 = !{i64 134420}
!9035 = !{i64 134432}
!9036 = !{i64 134440}
!9037 = !{i64 134448}
!9038 = !{i64 134458}
!9039 = !{i64 134474}
!9040 = !{i64 134480}
!9041 = !{i64 134482}
!9042 = !{i64 134484}
!9043 = !{i64 134668}
!9044 = !{i64 134670}
!9045 = !{i64 134496}
!9046 = !{i64 134502}
!9047 = !{i64 134528}
!9048 = !{i64 134530}
!9049 = !{i64 134536}
!9050 = !{i64 134542}
!9051 = !{i64 134544}
!9052 = !{i64 134546}
!9053 = !{i64 134550}
!9054 = !{i64 134572}
!9055 = !{i64 134584}
!9056 = !{i64 134596}
!9057 = !{i64 134604}
!9058 = !{i64 134498}
!9059 = !{i64 134504}
!9060 = !{i64 134506}
!9061 = !{i64 134508}
!9062 = !{i64 134520}
!9063 = !{i64 134522}
!9064 = !{i64 134532}
!9065 = !{i64 134614}
!9066 = !{i64 134616}
!9067 = !{i64 134618}
!9068 = !{i64 134628}
!9069 = !{i64 134634}
!9070 = !{i64 134638}
!9071 = !{i64 134648}
!9072 = !{i64 134654}
!9073 = !{i64 134660}
!9074 = !{i64 134672}
!9075 = !{i64 134676}
!9076 = !{i64 134688}
!9077 = !{i64 134694}
!9078 = !{i64 134714}
!9079 = !{i64 134718}
!9080 = !{i64 134730}
!9081 = !{i64 134742}
!9082 = !{i64 134746}
!9083 = !{i64 134758}
!9084 = !{i64 134760}
!9085 = !{i64 134766}
!9086 = !{i64 134780}
!9087 = !{i64 134782}
!9088 = !{i64 134802}
!9089 = !{i64 134814}
!9090 = !{i64 134822}
!9091 = !{i64 134832}
!9092 = !{i64 134838}
!9093 = !{i64 134840}
!9094 = !{i64 134860}
!9095 = !{i64 134872}
!9096 = !{i64 134880}
!9097 = !{i64 134888}
!9098 = !{i64 134898}
!9099 = !{i64 134914}
!9100 = !{i64 134920}
!9101 = !{i64 134922}
!9102 = !{i64 134926}
!9103 = !{i64 135246}
!9104 = !{i64 135248}
!9105 = !{i64 134938}
!9106 = !{i64 134940}
!9107 = !{i64 134942}
!9108 = !{i64 134974}
!9109 = !{i64 134980}
!9110 = !{i64 135020}
!9111 = !{i64 135022}
!9112 = !{i64 135024}
!9113 = !{i64 135026}
!9114 = !{i64 135030}
!9115 = !{i64 135032}
!9116 = !{i64 135038}
!9117 = !{i64 135040}
!9118 = !{i64 135060}
!9119 = !{i64 135072}
!9120 = !{i64 135076}
!9121 = !{i64 135080}
!9122 = !{i64 135092}
!9123 = !{i64 135100}
!9124 = !{i64 135110}
!9125 = !{i64 135112}
!9126 = !{i64 135114}
!9127 = !{i64 135124}
!9128 = !{i64 135130}
!9129 = !{i64 135134}
!9130 = !{i64 135144}
!9131 = !{i64 135150}
!9132 = !{i64 135158}
!9133 = !{i64 135162}
!9134 = !{i64 135168}
!9135 = !{i64 135170}
!9136 = !{i64 135200}
!9137 = !{i64 135212}
!9138 = !{i64 135216}
!9139 = !{i64 135220}
!9140 = !{i64 135232}
!9141 = !{i64 135240}
!9142 = !{i64 135174}
!9143 = !{i64 135252}
!9144 = !{i64 135256}
!9145 = !{i64 135268}
!9146 = !{i64 135274}
!9147 = !{i64 135296}
!9148 = !{i64 135300}
!9149 = !{i64 135312}
!9150 = !{i64 135324}
!9151 = !{i64 135328}
!9152 = !{i64 135340}
!9153 = !{i64 135344}
!9154 = !{i64 135350}
!9155 = !{i64 135364}
!9156 = !{i64 135366}
!9157 = !{i64 135388}
!9158 = !{i64 135400}
!9159 = !{i64 135408}
!9160 = !{i64 135418}
!9161 = !{i64 135424}
!9162 = !{i64 135426}
!9163 = !{i64 135448}
!9164 = !{i64 135460}
!9165 = !{i64 135468}
!9166 = !{i64 135476}
!9167 = !{i64 135486}
!9168 = !{i64 135502}
!9169 = !{i64 135508}
!9170 = !{i64 135510}
!9171 = !{i64 135512}
!9172 = !{i64 135716}
!9173 = !{i64 135718}
!9174 = !{i64 135524}
!9175 = !{i64 135530}
!9176 = !{i64 135554}
!9177 = !{i64 135570}
!9178 = !{i64 135572}
!9179 = !{i64 135582}
!9180 = !{i64 135588}
!9181 = !{i64 135590}
!9182 = !{i64 135612}
!9183 = !{i64 135624}
!9184 = !{i64 135628}
!9185 = !{i64 135632}
!9186 = !{i64 135644}
!9187 = !{i64 135652}
!9188 = !{i64 135526}
!9189 = !{i64 135532}
!9190 = !{i64 135534}
!9191 = !{i64 135548}
!9192 = !{i64 135560}
!9193 = !{i64 135562}
!9194 = !{i64 135536}
!9195 = !{i64 135550}
!9196 = !{i64 135564}
!9197 = !{i64 135574}
!9198 = !{i64 135576}
!9199 = !{i64 135662}
!9200 = !{i64 135664}
!9201 = !{i64 135666}
!9202 = !{i64 135676}
!9203 = !{i64 135682}
!9204 = !{i64 135686}
!9205 = !{i64 135696}
!9206 = !{i64 135702}
!9207 = !{i64 135708}
!9208 = !{i64 135720}
!9209 = !{i64 135724}
!9210 = !{i64 135736}
!9211 = !{i64 135742}
!9212 = !{i64 135764}
!9213 = !{i64 135768}
!9214 = !{i64 135780}
!9215 = !{i64 135792}
!9216 = !{i64 135796}
!9217 = !{i64 135808}
!9218 = !{i64 135812}
!9219 = !{i64 135834}
!9220 = !{i64 135840}
!9221 = !{i64 135842}
!9222 = !{i64 135864}
!9223 = !{i64 135876}
!9224 = !{i64 135884}
!9225 = !{i64 135894}
!9226 = !{i64 135898}
!9227 = !{i64 136044}
!9228 = !{i64 135914}
!9229 = !{i64 135918}
!9230 = !{i64 135926}
!9231 = !{i64 135928}
!9232 = !{i64 135930}
!9233 = !{i64 135932}
!9234 = !{i64 135934}
!9235 = !{i64 135952}
!9236 = !{i64 135954}
!9237 = !{i64 136002}
!9238 = !{i64 136016}
!9239 = !{i64 136022}
!9240 = !{i64 136026}
!9241 = !{i64 136028}
!9242 = !{i64 136046}
!9243 = !{i64 136050}
!9244 = !{i64 136062}
!9245 = !{i64 136066}
!9246 = !{i64 136076}
!9247 = !{i64 136080}
!9248 = !{i64 136098}
!9249 = !{i64 136104}
!9250 = !{i64 136106}
!9251 = !{i64 136128}
!9252 = !{i64 136140}
!9253 = !{i64 136148}
!9254 = !{i64 136158}
!9255 = !{i64 136162}
!9256 = !{i64 136294}
!9257 = !{i64 136178}
!9258 = !{i64 136182}
!9259 = !{i64 136190}
!9260 = !{i64 136192}
!9261 = !{i64 136194}
!9262 = !{i64 136196}
!9263 = !{i64 136198}
!9264 = !{i64 136256}
!9265 = !{i64 136270}
!9266 = !{i64 136276}
!9267 = !{i64 136280}
!9268 = !{i64 136296}
!9269 = !{i64 136300}
!9270 = !{i64 136312}
!9271 = !{i64 136316}
!9272 = !{i64 136326}
!9273 = !{i64 136328}
!9274 = !{i64 136338}
!9275 = !{i64 136340}
!9276 = !{i64 136344}
!9277 = !{i64 136346}
!9278 = !{i64 136350}
!9279 = !{i64 136356}
!9280 = !{i64 136360}
!9281 = !{i64 136366}
!9282 = !{i64 136368}
!9283 = !{i64 136372}
!9284 = !{i64 136382}
!9285 = !{i64 136384}
!9286 = !{i64 136432}
!9287 = !{i64 136448}
!9288 = !{i64 136464}
!9289 = !{i64 136476}
!9290 = !{i64 136478}
!9291 = !{i64 136484}
!9292 = !{i64 136486}
!9293 = !{i64 136488}
!9294 = !{i64 136508}
!9295 = !{i64 136530}
!9296 = !{i64 136538}
!9297 = !{i64 136546}
!9298 = !{i64 136572}
!9299 = !{i64 136588}
!9300 = !{i64 136596}
!9301 = !{i64 136612}
!9302 = !{i64 136624}
!9303 = !{i64 136626}
!9304 = !{i64 136632}
!9305 = !{i64 136634}
!9306 = !{i64 136636}
!9307 = !{i64 137022}
!9308 = !{i64 137028}
!9309 = !{i64 137030}
!9310 = !{i64 136656}
!9311 = !{i64 136678}
!9312 = !{i64 136686}
!9313 = !{i64 136694}
!9314 = !{i64 136714}
!9315 = !{i64 136726}
!9316 = !{i64 136728}
!9317 = !{i64 136734}
!9318 = !{i64 136736}
!9319 = !{i64 136738}
!9320 = !{i64 136758}
!9321 = !{i64 136780}
!9322 = !{i64 136788}
!9323 = !{i64 136796}
!9324 = !{i64 136810}
!9325 = !{i64 136822}
!9326 = !{i64 136842}
!9327 = !{i64 136844}
!9328 = !{i64 136846}
!9329 = !{i64 136860}
!9330 = !{i64 136872}
!9331 = !{i64 136896}
!9332 = !{i64 136898}
!9333 = !{i64 136912}
!9334 = !{i64 136924}
!9335 = !{i64 136948}
!9336 = !{i64 136950}
!9337 = !{i64 136964}
!9338 = !{i64 136976}
!9339 = !{i64 137000}
!9340 = !{i64 137002}
!9341 = !{i64 137008}
!9342 = !{i64 137038}
!9343 = !{i64 137054}
!9344 = !{i64 137066}
!9345 = !{i64 137068}
!9346 = !{i64 137074}
!9347 = !{i64 137076}
!9348 = !{i64 137078}
!9349 = !{i64 137436}
!9350 = !{i64 137442}
!9351 = !{i64 137444}
!9352 = !{i64 137098}
!9353 = !{i64 137120}
!9354 = !{i64 137128}
!9355 = !{i64 137136}
!9356 = !{i64 137156}
!9357 = !{i64 137168}
!9358 = !{i64 137170}
!9359 = !{i64 137176}
!9360 = !{i64 137178}
!9361 = !{i64 137180}
!9362 = !{i64 137200}
!9363 = !{i64 137222}
!9364 = !{i64 137230}
!9365 = !{i64 137238}
!9366 = !{i64 137252}
!9367 = !{i64 137264}
!9368 = !{i64 137292}
!9369 = !{i64 137294}
!9370 = !{i64 137296}
!9371 = !{i64 137310}
!9372 = !{i64 137322}
!9373 = !{i64 137354}
!9374 = !{i64 137356}
!9375 = !{i64 137370}
!9376 = !{i64 137382}
!9377 = !{i64 137414}
!9378 = !{i64 137416}
!9379 = !{i64 137422}
!9380 = !{i64 137452}
!9381 = !{i64 137468}
!9382 = !{i64 137480}
!9383 = !{i64 137482}
!9384 = !{i64 137488}
!9385 = !{i64 137490}
!9386 = !{i64 137492}
!9387 = !{i64 137512}
!9388 = !{i64 137534}
!9389 = !{i64 137542}
!9390 = !{i64 137550}
!9391 = !{i64 137556}
!9392 = !{i64 137572}
!9393 = !{i64 137586}
!9394 = !{i64 137598}
!9395 = !{i64 137600}
!9396 = !{i64 137606}
!9397 = !{i64 137608}
!9398 = !{i64 137610}
!9399 = !{i64 137630}
!9400 = !{i64 137652}
!9401 = !{i64 137660}
!9402 = !{i64 137668}
!9403 = !{i64 137674}
!9404 = !{i64 137690}
!9405 = !{i64 137704}
!9406 = !{i64 137716}
!9407 = !{i64 137718}
!9408 = !{i64 137724}
!9409 = !{i64 137726}
!9410 = !{i64 137728}
!9411 = !{i64 137748}
!9412 = !{i64 137770}
!9413 = !{i64 137778}
!9414 = !{i64 137786}
!9415 = !{i64 137792}
!9416 = !{i64 137808}
!9417 = !{i64 137822}
!9418 = !{i64 137834}
!9419 = !{i64 137836}
!9420 = !{i64 137842}
!9421 = !{i64 137844}
!9422 = !{i64 137846}
!9423 = !{i64 137866}
!9424 = !{i64 137888}
!9425 = !{i64 137896}
!9426 = !{i64 137904}
!9427 = !{i64 137910}
!9428 = !{i64 137926}
!9429 = !{i64 137932}
!9430 = !{i64 137946}
!9431 = !{i64 137948}
!9432 = !{i64 137958}
!9433 = !{i64 137972}
!9434 = !{i64 137974}
!9435 = !{i64 138000}
!9436 = !{i64 138016}
!9437 = !{i64 138018}
!9438 = !{i64 138044}
!9439 = !{i64 138060}
!9440 = !{i64 138062}
!9441 = !{i64 138088}
!9442 = !{i64 138104}
!9443 = !{i64 138106}
!9444 = !{i64 138132}
!9445 = !{i64 138136}
!9446 = !{i64 138152}
!9447 = !{i64 138154}
!9448 = !{i64 138156}
!9449 = !{i64 138180}
!9450 = !{i64 138182}
!9451 = !{i64 138184}
!9452 = !{i64 138188}
!9453 = !{i64 138190}
!9454 = !{i64 138206}
!9455 = !{i64 138208}
!9456 = !{i64 138210}
!9457 = !{i64 138214}
!9458 = !{i64 138222}
!9459 = !{i64 138238}
!9460 = !{i64 138240}
!9461 = !{i64 138256}
!9462 = !{i64 138258}
!9463 = !{i64 138260}
!9464 = !{i64 138284}
!9465 = !{i64 138286}
!9466 = !{i64 138288}
!9467 = !{i64 138292}
!9468 = !{i64 138294}
!9469 = !{i64 138310}
!9470 = !{i64 138312}
!9471 = !{i64 138314}
!9472 = !{i64 138318}
!9473 = !{i64 138326}
!9474 = !{i64 138342}
!9475 = !{i64 138344}
!9476 = !{i64 138360}
!9477 = !{i64 138362}
!9478 = !{i64 138364}
!9479 = !{i64 138388}
!9480 = !{i64 138390}
!9481 = !{i64 138392}
!9482 = !{i64 138396}
!9483 = !{i64 138398}
!9484 = !{i64 138414}
!9485 = !{i64 138416}
!9486 = !{i64 138418}
!9487 = !{i64 138422}
!9488 = !{i64 138430}
!9489 = !{i64 138446}
!9490 = !{i64 138448}
!9491 = !{i64 138468}
!9492 = !{i64 138470}
!9493 = !{i64 138472}
!9494 = !{i64 138496}
!9495 = !{i64 138498}
!9496 = !{i64 138500}
!9497 = !{i64 138502}
!9498 = !{i64 138504}
!9499 = !{i64 138520}
!9500 = !{i64 138522}
!9501 = !{i64 138524}
!9502 = !{i64 138526}
!9503 = !{i64 138542}
!9504 = !{i64 138544}
!9505 = !{i64 138546}
!9506 = !{i64 138548}
!9507 = !{i64 138564}
!9508 = !{i64 138566}
!9509 = !{i64 138568}
!9510 = !{i64 138570}
!9511 = !{i64 138574}
!9512 = !{i64 138582}
!9513 = !{i64 138586}
!9514 = !{i64 138600}
!9515 = !{i64 138604}
!9516 = !{i64 138620}
!9517 = !{i64 138622}
!9518 = !{i64 138624}
!9519 = !{i64 138654}
!9520 = !{i64 138656}
!9521 = !{i64 138658}
!9522 = !{i64 138662}
!9523 = !{i64 138664}
!9524 = !{i64 138686}
!9525 = !{i64 138688}
!9526 = !{i64 138690}
!9527 = !{i64 138694}
!9528 = !{i64 138702}
!9529 = !{i64 138718}
!9530 = !{i64 138720}
!9531 = !{i64 138736}
!9532 = !{i64 138738}
!9533 = !{i64 138740}
!9534 = !{i64 138770}
!9535 = !{i64 138772}
!9536 = !{i64 138774}
!9537 = !{i64 138778}
!9538 = !{i64 138780}
!9539 = !{i64 138802}
!9540 = !{i64 138804}
!9541 = !{i64 138806}
!9542 = !{i64 138810}
!9543 = !{i64 138818}
!9544 = !{i64 138834}
!9545 = !{i64 138836}
!9546 = !{i64 138854}
!9547 = !{i64 138856}
!9548 = !{i64 138858}
!9549 = !{i64 138888}
!9550 = !{i64 138890}
!9551 = !{i64 138892}
!9552 = !{i64 138894}
!9553 = !{i64 138908}
!9554 = !{i64 138916}
!9555 = !{i64 138930}
!9556 = !{i64 138932}
!9557 = !{i64 138946}
!9558 = !{i64 138956}
!9559 = !{i64 138958}
!9560 = !{i64 138970}
!9561 = !{i64 138978}
!9562 = !{i64 138984}
!9563 = !{i64 138990}
!9564 = !{i64 139002}
!9565 = !{i64 139004}
!9566 = !{i64 139020}
!9567 = !{i64 139022}
!9568 = !{i64 139046}
!9569 = !{i64 139050}
!9570 = !{i64 139060}
!9571 = !{i64 139064}
!9572 = !{i64 139080}
!9573 = !{i64 139082}
!9574 = !{i64 139096}
!9575 = !{i64 139104}
!9576 = !{i64 139112}
!9577 = !{i64 139122}
!9578 = !{i64 139124}
!9579 = !{i64 139140}
!9580 = !{i64 139142}
!9581 = !{i64 139158}
!9582 = !{i64 139166}
!9583 = !{i64 139168}
!9584 = !{i64 139172}
!9585 = !{i64 139182}
!9586 = !{i64 139186}
!9587 = !{i64 139190}
!9588 = !{i64 139196}
!9589 = !{i64 139200}
!9590 = !{i64 139206}
!9591 = !{i64 139216}
!9592 = !{i64 139220}
!9593 = !{i64 139224}
!9594 = !{i64 139230}
!9595 = !{i64 139234}
!9596 = !{i64 139240}
!9597 = !{i64 139254}
!9598 = !{i64 139256}
!9599 = !{i64 139270}
!9600 = !{i64 139272}
!9601 = !{i64 139286}
!9602 = !{i64 139294}
!9603 = !{i64 139296}
!9604 = !{i64 139304}
!9605 = !{i64 139310}
!9606 = !{i64 139314}
!9607 = !{i64 139324}
!9608 = !{i64 139328}
!9609 = !{i64 139342}
!9610 = !{i64 139344}
!9611 = !{i64 139352}
!9612 = !{i64 139360}
!9613 = !{i64 139374}
!9614 = !{i64 139398}
!9615 = !{i64 139412}
!9616 = !{i64 139416}
!9617 = !{i64 139426}
!9618 = !{i64 139428}
!9619 = !{i64 139430}
!9620 = !{i64 139438}
!9621 = !{i64 139448}
!9622 = !{i64 139458}
!9623 = !{i64 139468}
!9624 = !{i64 139476}
!9625 = !{i64 139482}
!9626 = !{i64 139484}
!9627 = !{i64 139494}
!9628 = !{i64 139504}
!9629 = !{i64 139524}
!9630 = !{i64 139528}
!9631 = !{i64 139538}
!9632 = !{i64 139554}
!9633 = !{i64 139560}
!9634 = !{i64 139562}
!9635 = !{i64 139564}
!9636 = !{i64 139566}
!9637 = !{i64 139570}
!9638 = !{i64 139580}
!9639 = !{i64 139594}
!9640 = !{i64 139598}
!9641 = !{i64 139600}
!9642 = !{i64 139608}
!9643 = !{i64 139618}
!9644 = !{i64 139630}
!9645 = !{i64 139648}
!9646 = !{i64 139660}
!9647 = !{i64 139672}
!9648 = !{i64 139678}
!9649 = !{i64 139684}
!9650 = !{i64 139690}
!9651 = !{i64 139702}
!9652 = !{i64 139714}
!9653 = !{i64 139724}
!9654 = !{i64 139740}
!9655 = !{i64 139746}
!9656 = !{i64 139750}
!9657 = !{i64 139754}
!9658 = !{i64 139758}
!9659 = !{i64 139760}
!9660 = !{i64 139762}
!9661 = !{i64 139770}
!9662 = !{i64 139778}
!9663 = !{i64 139780}
!9664 = !{i64 139784}
!9665 = !{i64 139788}
!9666 = !{i64 139792}
!9667 = !{i64 139794}
!9668 = !{i64 139796}
!9669 = !{i64 139802}
!9670 = !{i64 139806}
!9671 = !{i64 139808}
!9672 = !{i64 139816}
!9673 = !{i64 139818}
!9674 = !{i64 139826}
!9675 = !{i64 139828}
!9676 = !{i64 139834}
!9677 = !{i64 139840}
!9678 = !{i64 139848}
!9679 = !{i64 139850}
!9680 = !{i64 139856}
!9681 = !{i64 139866}
!9682 = !{i64 139886}
!9683 = !{i64 139890}
!9684 = !{i64 139894}
!9685 = !{i64 139898}
!9686 = !{i64 139900}
!9687 = !{i64 139902}
!9688 = !{i64 139910}
!9689 = !{i64 139932}
!9690 = !{i64 139934}
!9691 = !{i64 139936}
!9692 = !{i64 139942}
!9693 = !{i64 139946}
!9694 = !{i64 139948}
!9695 = !{i64 139956}
!9696 = !{i64 139958}
!9697 = !{i64 139966}
!9698 = !{i64 139968}
!9699 = !{i64 139974}
!9700 = !{i64 139918}
!9701 = !{i64 139980}
!9702 = !{i64 139990}
!9703 = !{i64 139996}
!9704 = !{i64 140006}
!9705 = !{i64 140008}
!9706 = !{i64 140022}
!9707 = !{i64 140032}
!9708 = !{i64 140034}
!9709 = !{i64 140046}
!9710 = !{i64 140054}
!9711 = !{i64 140060}
!9712 = !{i64 140066}
!9713 = !{i64 140070}
!9714 = !{i64 140074}
!9715 = !{i64 140082}
!9716 = !{i64 140090}
!9717 = !{i64 140096}
!9718 = !{i64 140102}
!9719 = !{i64 140104}
!9720 = !{i64 140114}
!9721 = !{i64 140116}
!9722 = !{i64 140372}
!9723 = !{i64 140374}
!9724 = !{i64 140136}
!9725 = !{i64 140138}
!9726 = !{i64 140140}
!9727 = !{i64 140142}
!9728 = !{i64 140150}
!9729 = !{i64 140156}
!9730 = !{i64 140158}
!9731 = !{i64 140160}
!9732 = !{i64 140168}
!9733 = !{i64 140174}
!9734 = !{i64 140178}
!9735 = !{i64 140180}
!9736 = !{i64 140184}
!9737 = !{i64 140194}
!9738 = !{i64 140200}
!9739 = !{i64 140204}
!9740 = !{i64 140206}
!9741 = !{i64 140218}
!9742 = !{i64 140228}
!9743 = !{i64 140232}
!9744 = !{i64 140234}
!9745 = !{i64 140238}
!9746 = !{i64 140242}
!9747 = !{i64 140244}
!9748 = !{i64 140250}
!9749 = !{i64 140254}
!9750 = !{i64 140268}
!9751 = !{i64 140270}
!9752 = !{i64 140272}
!9753 = !{i64 140280}
!9754 = !{i64 140286}
!9755 = !{i64 140290}
!9756 = !{i64 140292}
!9757 = !{i64 140296}
!9758 = !{i64 140306}
!9759 = !{i64 140312}
!9760 = !{i64 140316}
!9761 = !{i64 140318}
!9762 = !{i64 140330}
!9763 = !{i64 140340}
!9764 = !{i64 140344}
!9765 = !{i64 140346}
!9766 = !{i64 140350}
!9767 = !{i64 140354}
!9768 = !{i64 140356}
!9769 = !{i64 140362}
!9770 = !{i64 140378}
!9771 = !{i64 140380}
!9772 = !{i64 140382}
!9773 = !{i64 140384}
!9774 = !{i64 140394}
!9775 = !{i64 140402}
!9776 = !{i64 140404}
!9777 = !{i64 140490}
!9778 = !{i64 140428}
!9779 = !{i64 140438}
!9780 = !{i64 140456}
!9781 = !{i64 140460}
!9782 = !{i64 140468}
!9783 = !{i64 140494}
!9784 = !{i64 140496}
!9785 = !{i64 140522}
!9786 = !{i64 140524}
!9787 = !{i64 140544}
!9788 = !{i64 140554}
!9789 = !{i64 140556}
!9790 = !{i64 140564}
!9791 = !{i64 140568}
!9792 = !{i64 140576}
!9793 = !{i64 140582}
!9794 = !{i64 140588}
!9795 = !{i64 140596}
!9796 = !{i64 140600}
!9797 = !{i64 140602}
!9798 = !{i64 140608}
!9799 = !{i64 140616}
!9800 = !{i64 140618}
!9801 = !{i64 140624}
!9802 = !{i64 140748}
!9803 = !{i64 140750}
!9804 = !{i64 140756}
!9805 = !{i64 140644}
!9806 = !{i64 140654}
!9807 = !{i64 140660}
!9808 = !{i64 140670}
!9809 = !{i64 140678}
!9810 = !{i64 140690}
!9811 = !{i64 140694}
!9812 = !{i64 140698}
!9813 = !{i64 140702}
!9814 = !{i64 140708}
!9815 = !{i64 140710}
!9816 = !{i64 140724}
!9817 = !{i64 140760}
!9818 = !{i64 140762}
!9819 = !{i64 140770}
!9820 = !{i64 140780}
!9821 = !{i64 140786}
!9822 = !{i64 140796}
!9823 = !{i64 140804}
!9824 = !{i64 140816}
!9825 = !{i64 140820}
!9826 = !{i64 140824}
!9827 = !{i64 140828}
!9828 = !{i64 140834}
!9829 = !{i64 140836}
!9830 = !{i64 140842}
!9831 = !{i64 140844}
!9832 = !{i64 140850}
!9833 = !{i64 140852}
!9834 = !{i64 140858}
!9835 = !{i64 140864}
!9836 = !{i64 140870}
!9837 = !{i64 140874}
!9838 = !{i64 140884}
!9839 = !{i64 140888}
!9840 = !{i64 141256}
!9841 = !{i64 141258}
!9842 = !{i64 140902}
!9843 = !{i64 140904}
!9844 = !{i64 140908}
!9845 = !{i64 140910}
!9846 = !{i64 140916}
!9847 = !{i64 140922}
!9848 = !{i64 140924}
!9849 = !{i64 140926}
!9850 = !{i64 140932}
!9851 = !{i64 140936}
!9852 = !{i64 140940}
!9853 = !{i64 140944}
!9854 = !{i64 140950}
!9855 = !{i64 140956}
!9856 = !{i64 140958}
!9857 = !{i64 140960}
!9858 = !{i64 140964}
!9859 = !{i64 140966}
!9860 = !{i64 140968}
!9861 = !{i64 140970}
!9862 = !{i64 140980}
!9863 = !{i64 140986}
!9864 = !{i64 140994}
!9865 = !{i64 141004}
!9866 = !{i64 141012}
!9867 = !{i64 141018}
!9868 = !{i64 141024}
!9869 = !{i64 141030}
!9870 = !{i64 141032}
!9871 = !{i64 141056}
!9872 = !{i64 141034}
!9873 = !{i64 141038}
!9874 = !{i64 141040}
!9875 = !{i64 141044}
!9876 = !{i64 141048}
!9877 = !{i64 141052}
!9878 = !{i64 141060}
!9879 = !{i64 141064}
!9880 = !{i64 141070}
!9881 = !{i64 141080}
!9882 = !{i64 141092}
!9883 = !{i64 141094}
!9884 = !{i64 141096}
!9885 = !{i64 141102}
!9886 = !{i64 141106}
!9887 = !{i64 141110}
!9888 = !{i64 141114}
!9889 = !{i64 141120}
!9890 = !{i64 141126}
!9891 = !{i64 141128}
!9892 = !{i64 141130}
!9893 = !{i64 141134}
!9894 = !{i64 141136}
!9895 = !{i64 141138}
!9896 = !{i64 141140}
!9897 = !{i64 141150}
!9898 = !{i64 141156}
!9899 = !{i64 141164}
!9900 = !{i64 141174}
!9901 = !{i64 141182}
!9902 = !{i64 141188}
!9903 = !{i64 141194}
!9904 = !{i64 141200}
!9905 = !{i64 141202}
!9906 = !{i64 141226}
!9907 = !{i64 141204}
!9908 = !{i64 141208}
!9909 = !{i64 141210}
!9910 = !{i64 141214}
!9911 = !{i64 141218}
!9912 = !{i64 141222}
!9913 = !{i64 141230}
!9914 = !{i64 141234}
!9915 = !{i64 141240}
!9916 = !{i64 141248}
!9917 = !{i64 141262}
!9918 = !{i64 141264}
!9919 = !{i64 141266}
!9920 = !{i64 141274}
!9921 = !{i64 141282}
!9922 = !{i64 141284}
!9923 = !{i64 141308}
!9924 = !{i64 141310}
!9925 = !{i64 141312}
!9926 = !{i64 141316}
!9927 = !{i64 141322}
!9928 = !{i64 141324}
!9929 = !{i64 141348}
!9930 = !{i64 141354}
!9931 = !{i64 141356}
!9932 = !{i64 141360}
!9933 = !{i64 141366}
!9934 = !{i64 141386}
!9935 = !{i64 141390}
!9936 = !{i64 141394}
!9937 = !{i64 141396}
!9938 = !{i64 141398}
!9939 = !{i64 141404}
!9940 = !{i64 141408}
!9941 = !{i64 141410}
!9942 = !{i64 141418}
!9943 = !{i64 141420}
!9944 = !{i64 141428}
!9945 = !{i64 141430}
!9946 = !{i64 141436}
!9947 = !{i64 141442}
!9948 = !{i64 141444}
!9949 = !{i64 141448}
!9950 = !{i64 141454}
!9951 = !{i64 141458}
!9952 = !{i64 141464}
!9953 = !{i64 141468}
!9954 = !{i64 141474}
!9955 = !{i64 141478}
!9956 = !{i64 141484}
!9957 = !{i64 141488}
!9958 = !{i64 141490}
!9959 = !{i64 141492}
!9960 = !{i64 141498}
!9961 = !{i64 141504}
!9962 = !{i64 141518}
!9963 = !{i64 141520}
!9964 = !{i64 141610}
!9965 = !{i64 141548}
!9966 = !{i64 141558}
!9967 = !{i64 141576}
!9968 = !{i64 141580}
!9969 = !{i64 141588}
!9970 = !{i64 141614}
!9971 = !{i64 141616}
!9972 = !{i64 141636}
!9973 = !{i64 141640}
!9974 = !{i64 141650}
!9975 = !{i64 141652}
!9976 = !{i64 141664}
!9977 = !{i64 141666}
!9978 = !{i64 141668}
!9979 = !{i64 141672}
!9980 = !{i64 141682}
!9981 = !{i64 141694}
!9982 = !{i64 141698}
!9983 = !{i64 141702}
!9984 = !{i64 141708}
!9985 = !{i64 141710}
!9986 = !{i64 141712}
!9987 = !{i64 141716}
!9988 = !{i64 141718}
!9989 = !{i64 141720}
!9990 = !{i64 141734}
!9991 = !{i64 141746}
!9992 = !{i64 141750}
!9993 = !{i64 141754}
!9994 = !{i64 141764}
!9995 = !{i64 141768}
!9996 = !{i64 141928}
!9997 = !{i64 141790}
!9998 = !{i64 141796}
!9999 = !{i64 141798}
!10000 = !{i64 141810}
!10001 = !{i64 141816}
!10002 = !{i64 141818}
!10003 = !{i64 141832}
!10004 = !{i64 141838}
!10005 = !{i64 141840}
!10006 = !{i64 141842}
!10007 = !{i64 141852}
!10008 = !{i64 141858}
!10009 = !{i64 141860}
!10010 = !{i64 141868}
!10011 = !{i64 141878}
!10012 = !{i64 141880}
!10013 = !{i64 141932}
!10014 = !{i64 141934}
!10015 = !{i64 141884}
!10016 = !{i64 141890}
!10017 = !{i64 141892}
!10018 = !{i64 141900}
!10019 = !{i64 141910}
!10020 = !{i64 141912}
!10021 = !{i64 141916}
!10022 = !{i64 141938}
!10023 = !{i64 141952}
!10024 = !{i64 141956}
!10025 = !{i64 141980}
!10026 = !{i64 141966}
!10027 = !{i64 141976}
!10028 = !{i64 141982}
!10029 = !{i64 141984}
!10030 = !{i64 141998}
!10031 = !{i64 142000}
!10032 = !{i64 142024}
!10033 = !{i64 142010}
!10034 = !{i64 142020}
!10035 = !{i64 142026}
!10036 = !{i64 142028}
!10037 = !{i64 142042}
!10038 = !{i64 142080}
!10039 = !{i64 142084}
!10040 = !{i64 142100}
!10041 = !{i64 142104}
!10042 = !{i64 142106}
!10043 = !{i64 142108}
!10044 = !{i64 142118}
!10045 = !{i64 142124}
!10046 = !{i64 142134}
!10047 = !{i64 142142}
!10048 = !{i64 142144}
!10049 = !{i64 142174}
!10050 = !{i64 142176}
!10051 = !{i64 142180}
!10052 = !{i64 142184}
!10053 = !{i64 142186}
!10054 = !{i64 142198}
!10055 = !{i64 142216}
!10056 = !{i64 142228}
!10057 = !{i64 142240}
!10058 = !{i64 142252}
!10059 = !{i64 142262}
!10060 = !{i64 142264}
!10061 = !{i64 142278}
!10062 = !{i64 142284}
!10063 = !{i64 142286}
!10064 = !{i64 142292}
!10065 = !{i64 142298}
!10066 = !{i64 142300}
!10067 = !{i64 142330}
!10068 = !{i64 142336}
!10069 = !{i64 142340}
!10070 = !{i64 142342}
!10071 = !{i64 142352}
!10072 = !{i64 142358}
!10073 = !{i64 142364}
!10074 = !{i64 142368}
!10075 = !{i64 142370}
!10076 = !{i64 142378}
!10077 = !{i64 142380}
!10078 = !{i64 142394}
!10079 = !{i64 142400}
!10080 = !{i64 142402}
!10081 = !{i64 142432}
!10082 = !{i64 142442}
!10083 = !{i64 142444}
!10084 = !{i64 142456}
!10085 = !{i64 142460}
!10086 = !{i64 142462}
!10087 = !{i64 142466}
!10088 = !{i64 142468}
!10089 = !{i64 142482}
!10090 = !{i64 142484}
!10091 = !{i64 142498}
!10092 = !{i64 142504}
!10093 = !{i64 142506}
!10094 = !{i64 142516}
!10095 = !{i64 142522}
!10096 = !{i64 142524}
!10097 = !{i64 142554}
!10098 = !{i64 142560}
!10099 = !{i64 142566}
!10100 = !{i64 142572}
!10101 = !{i64 142574}
!10102 = !{i64 142604}
!10103 = !{i64 142610}
!10104 = !{i64 142616}
!10105 = !{i64 142622}
!10106 = !{i64 142624}
!10107 = !{i64 142654}
!10108 = !{i64 142660}
!10109 = !{i64 142664}
!10110 = !{i64 142666}
!10111 = !{i64 142676}
!10112 = !{i64 142682}
!10113 = !{i64 142688}
!10114 = !{i64 142692}
!10115 = !{i64 142694}
!10116 = !{i64 142702}
!10117 = !{i64 142718}
!10118 = !{i64 142730}
!10119 = !{i64 142740}
!10120 = !{i64 142744}
!10121 = !{i64 142762}
!10122 = !{i64 142768}
!10123 = !{i64 142780}
!10124 = !{i64 142784}
!10125 = !{i64 142786}
!10126 = !{i64 142792}
!10127 = !{i64 142796}
!10128 = !{i64 142802}
!10129 = !{i64 142804}
!10130 = !{i64 142812}
!10131 = !{i64 142814}
!10132 = !{i64 142844}
!10133 = !{i64 142860}
!10134 = !{i64 142866}
!10135 = !{i64 142876}
!10136 = !{i64 142880}
!10137 = !{i64 142882}
!10138 = !{i64 142890}
!10139 = !{i64 142910}
!10140 = !{i64 142920}
!10141 = !{i64 142942}
!10142 = !{i64 142952}
!10143 = !{i64 142956}
!10144 = !{i64 142968}
!10145 = !{i64 142978}
!10146 = !{i64 142980}
!10147 = !{i64 142990}
!10148 = !{i64 142994}
!10149 = !{i64 143004}
!10150 = !{i64 143010}
!10151 = !{i64 143012}
!10152 = !{i64 143016}
!10153 = !{i64 143022}
!10154 = !{i64 143034}
!10155 = !{i64 143038}
!10156 = !{i64 143048}
!10157 = !{i64 143052}
!10158 = !{i64 143064}
!10159 = !{i64 143068}
!10160 = !{i64 143078}
!10161 = !{i64 143084}
!10162 = !{i64 143086}
!10163 = !{i64 143102}
!10164 = !{i64 143110}
!10165 = !{i64 143114}
!10166 = !{i64 143124}
!10167 = !{i64 143146}
!10168 = !{i64 143152}
!10169 = !{i64 143162}
!10170 = !{i64 143174}
!10171 = !{i64 143184}
!10172 = !{i64 143188}
!10173 = !{i64 143198}
!10174 = !{i64 143200}
!10175 = !{i64 143208}
!10176 = !{i64 143214}
!10177 = !{i64 143224}
!10178 = !{i64 143238}
!10179 = !{i64 143252}
!10180 = !{i64 143274}
!10181 = !{i64 143288}
!10182 = !{i64 143316}
!10183 = !{i64 143322}
!10184 = !{i64 143342}
!10185 = !{i64 143360}
!10186 = !{i64 143364}
!10187 = !{i64 143366}
!10188 = !{i64 143458}
!10189 = !{i64 143464}
!10190 = !{i64 143468}
!10191 = !{i64 143502}
!10192 = !{i64 144020}
!10193 = !{i64 144036}
!10194 = !{i64 144040}
!10195 = !{i64 144046}
!10196 = !{i64 144060}
!10197 = !{i64 144064}
!10198 = !{i64 144090}
!10199 = !{i64 144092}
!10200 = !{i64 144098}
!10201 = !{i64 144100}
!10202 = !{i64 144108}
!10203 = !{i64 144124}
!10204 = !{i64 144144}
!10205 = !{i64 144146}
!10206 = !{i64 144158}
!10207 = !{i64 144160}
!10208 = !{i64 144164}
!10209 = !{i64 144166}
!10210 = !{i64 145774}
!10211 = !{i64 145776}
!10212 = !{i64 145792}
!10213 = !{i64 145798}
!10214 = !{i64 145800}
!10215 = !{i64 145824}
!10216 = !{i64 145830}
!10217 = !{i64 145832}
!10218 = !{i64 145846}
!10219 = !{i64 145854}
!10220 = !{i64 145858}
!10221 = !{i64 145866}
!10222 = !{i64 145870}
!10223 = !{i64 145880}
!10224 = !{i64 145910}
!10225 = !{i64 145924}
!10226 = !{i64 145928}
!10227 = !{i64 145950}
!10228 = !{i64 145958}
!10229 = !{i64 145960}
!10230 = !{i64 145970}
!10231 = !{i64 145974}
!10232 = !{i64 145982}
!10233 = !{i64 145986}
!10234 = !{i64 145996}
!10235 = !{i64 146000}
!10236 = !{i64 146016}
!10237 = !{i64 146020}
!10238 = !{i64 146034}
!10239 = !{i64 146022}
!10240 = !{i64 146070}
!10241 = !{i64 146074}
!10242 = !{i64 146084}
!10243 = !{i64 146088}
!10244 = !{i64 146098}
!10245 = !{i64 146100}
!10246 = !{i64 146104}
!10247 = !{i64 146106}
!10248 = !{i64 146110}
!10249 = !{i64 146116}
!10250 = !{i64 146120}
!10251 = !{i64 146126}
!10252 = !{i64 146128}
!10253 = !{i64 146132}
!10254 = !{i64 146142}
!10255 = !{i64 146144}
!10256 = !{i64 146186}
!10257 = !{i64 146192}
!10258 = !{i64 146194}
!10259 = !{i64 146170}
!10260 = !{i64 146174}
!10261 = !{i64 146180}
!10262 = !{i64 146208}
!10263 = !{i64 146224}
!10264 = !{i64 146230}
!10265 = !{i64 146240}
!10266 = !{i64 146258}
!10267 = !{i64 146266}
!10268 = !{i64 146274}
!10269 = !{i64 146280}
!10270 = !{i64 146290}
!10271 = !{i64 146306}
!10272 = !{i64 146318}
!10273 = !{i64 146328}
!10274 = !{i64 146332}
!10275 = !{i64 146348}
!10276 = !{i64 146350}
!10277 = !{i64 146352}
!10278 = !{i64 146360}
!10279 = !{i64 146362}
!10280 = !{i64 146364}
!10281 = !{i64 146370}
!10282 = !{i64 146382}
!10283 = !{i64 146384}
!10284 = !{i64 146400}
!10285 = !{i64 146406}
!10286 = !{i64 146408}
!10287 = !{i64 146412}
!10288 = !{i64 146418}
!10289 = !{i64 146426}
!10290 = !{i64 146434}
!10291 = !{i64 146436}
!10292 = !{i64 146446}
!10293 = !{i64 146454}
!10294 = !{i64 146462}
!10295 = !{i64 146474}
!10296 = !{i64 146484}
!10297 = !{i64 146498}
!10298 = !{i64 146500}
!10299 = !{i64 146518}
!10300 = !{i64 146524}
!10301 = !{i64 146526}
!10302 = !{i64 146540}
!10303 = !{i64 146546}
!10304 = !{i64 146550}
!10305 = !{i64 146552}
!10306 = !{i64 146556}
!10307 = !{i64 146562}
!10308 = !{i64 146568}
!10309 = !{i64 146570}
!10310 = !{i64 146578}
!10311 = !{i64 146582}
!10312 = !{i64 146584}
!10313 = !{i64 146588}
!10314 = !{i64 146592}
!10315 = !{i64 146594}
!10316 = !{i64 146596}
!10317 = !{i64 146606}
!10318 = !{i64 146608}
!10319 = !{i64 146622}
!10320 = !{i64 146634}
!10321 = !{i64 146644}
!10322 = !{i64 146648}
!10323 = !{i64 146650}
!10324 = !{i64 146662}
!10325 = !{i64 146670}
!10326 = !{i64 146672}
!10327 = !{i64 146682}
!10328 = !{i64 146686}
!10329 = !{i64 146690}
!10330 = !{i64 146702}
!10331 = !{i64 146706}
!10332 = !{i64 146712}
!10333 = !{i64 146720}
!10334 = !{i64 146722}
!10335 = !{i64 146738}
!10336 = !{i64 146742}
!10337 = !{i64 146744}
!10338 = !{i64 146756}
!10339 = !{i64 146760}
!10340 = !{i64 146764}
!10341 = !{i64 146772}
!10342 = !{i64 146778}
!10343 = !{i64 146782}
!10344 = !{i64 146788}
!10345 = !{i64 146796}
!10346 = !{i64 146800}
!10347 = !{i64 146802}
!10348 = !{i64 146812}
!10349 = !{i64 146816}
!10350 = !{i64 146826}
!10351 = !{i64 146866}
!10352 = !{i64 146872}
!10353 = !{i64 146874}
!10354 = !{i64 146834}
!10355 = !{i64 146840}
!10356 = !{i64 146846}
!10357 = !{i64 146850}
!10358 = !{i64 146856}
!10359 = !{i64 146882}
!10360 = !{i64 146884}
!10361 = !{i64 146894}
!10362 = !{i64 146898}
!10363 = !{i64 146904}
!10364 = !{i64 146906}
!10365 = !{i64 146910}
!10366 = !{i64 146914}
!10367 = !{i64 146922}
!10368 = !{i64 146926}
!10369 = !{i64 146934}
!10370 = !{i64 146940}
!10371 = !{i64 146942}
!10372 = !{i64 146994}
!10373 = !{i64 147002}
!10374 = !{i64 147004}
!10375 = !{i64 146958}
!10376 = !{i64 146962}
!10377 = !{i64 146964}
!10378 = !{i64 146980}
!10379 = !{i64 146984}
!10380 = !{i64 146988}
!10381 = !{i64 147008}
!10382 = !{i64 147018}
!10383 = !{i64 147088}
!10384 = !{i64 147090}
!10385 = !{i64 147026}
!10386 = !{i64 147032}
!10387 = !{i64 147038}
!10388 = !{i64 147044}
!10389 = !{i64 147054}
!10390 = !{i64 147058}
!10391 = !{i64 147060}
!10392 = !{i64 147072}
!10393 = !{i64 147102}
!10394 = !{i64 147104}
!10395 = !{i64 147116}
!10396 = !{i64 147122}
!10397 = !{i64 147126}
!10398 = !{i64 147132}
!10399 = !{i64 147136}
!10400 = !{i64 147144}
!10401 = !{i64 147150}
!10402 = !{i64 147152}
!10403 = !{i64 147162}
!10404 = !{i64 147166}
!10405 = !{i64 147214}
!10406 = !{i64 147222}
!10407 = !{i64 147224}
!10408 = !{i64 147178}
!10409 = !{i64 147182}
!10410 = !{i64 147184}
!10411 = !{i64 147200}
!10412 = !{i64 147204}
!10413 = !{i64 147208}
!10414 = !{i64 147236}
!10415 = !{i64 147250}
!10416 = !{i64 147256}
!10417 = !{i64 147260}
!10418 = !{i64 147270}
!10419 = !{i64 147272}
!10420 = !{i64 147292}
!10421 = !{i64 147298}
!10422 = !{i64 147300}
!10423 = !{i64 147304}
!10424 = !{i64 147310}
!10425 = !{i64 147312}
!10426 = !{i64 147322}
!10427 = !{i64 147330}
!10428 = !{i64 147342}
!10429 = !{i64 147352}
!10430 = !{i64 147356}
!10431 = !{i64 147358}
!10432 = !{i64 147370}
!10433 = !{i64 147378}
!10434 = !{i64 147380}
!10435 = !{i64 147384}
!10436 = !{i64 147388}
!10437 = !{i64 147396}
!10438 = !{i64 147398}
!10439 = !{i64 147402}
!10440 = !{i64 147408}
!10441 = !{i64 147412}
!10442 = !{i64 147420}
!10443 = !{i64 147422}
!10444 = !{i64 147434}
!10445 = !{i64 147440}
!10446 = !{i64 147444}
!10447 = !{i64 147450}
!10448 = !{i64 147458}
!10449 = !{i64 147462}
!10450 = !{i64 147466}
!10451 = !{i64 147480}
!10452 = !{i64 147488}
!10453 = !{i64 147492}
!10454 = !{i64 147504}
!10455 = !{i64 147508}
!10456 = !{i64 147520}
!10457 = !{i64 147528}
!10458 = !{i64 147532}
!10459 = !{i64 147544}
!10460 = !{i64 147550}
!10461 = !{i64 147552}
!10462 = !{i64 147564}
!10463 = !{i64 147572}
!10464 = !{i64 147574}
!10465 = !{i64 147582}
!10466 = !{i64 147592}
!10467 = !{i64 147608}
!10468 = !{i64 147620}
!10469 = !{i64 147634}
!10470 = !{i64 147636}
!10471 = !{i64 147646}
!10472 = !{i64 147694}
!10473 = !{i64 147702}
!10474 = !{i64 147704}
!10475 = !{i64 147708}
!10476 = !{i64 147658}
!10477 = !{i64 147662}
!10478 = !{i64 147664}
!10479 = !{i64 147680}
!10480 = !{i64 147684}
!10481 = !{i64 147688}
!10482 = !{i64 147712}
!10483 = !{i64 147720}
!10484 = !{i64 147728}
!10485 = !{i64 147742}
!10486 = !{i64 147748}
!10487 = !{i64 147762}
!10488 = !{i64 147776}
!10489 = !{i64 147784}
!10490 = !{i64 147788}
!10491 = !{i64 147800}
!10492 = !{i64 147806}
!10493 = !{i64 147808}
!10494 = !{i64 147820}
!10495 = !{i64 147828}
!10496 = !{i64 147848}
!10497 = !{i64 147868}
!10498 = !{i64 147872}
!10499 = !{i64 147874}
!10500 = !{i64 147896}
!10501 = !{i64 147916}
!10502 = !{i64 147928}
!10503 = !{i64 147948}
!10504 = !{i64 147960}
!10505 = !{i64 147980}
!10506 = !{i64 147992}
!10507 = !{i64 148014}
!10508 = !{i64 148018}
!10509 = !{i64 148026}
!10510 = !{i64 148034}
!10511 = !{i64 148046}
!10512 = !{i64 148048}
!10513 = !{i64 148052}
!10514 = !{i64 148054}
!10515 = !{i64 148058}
!10516 = !{i64 148064}
!10517 = !{i64 148068}
!10518 = !{i64 148082}
!10519 = !{i64 148084}
!10520 = !{i64 148094}
!10521 = !{i64 148096}
!10522 = !{i64 148100}
!10523 = !{i64 148102}
!10524 = !{i64 148106}
!10525 = !{i64 148112}
!10526 = !{i64 148116}
!10527 = !{i64 148122}
!10528 = !{i64 148124}
!10529 = !{i64 148128}
!10530 = !{i64 148138}
!10531 = !{i64 148154}
!10532 = !{i64 148166}
!10533 = !{i64 148180}
!10534 = !{i64 148196}
!10535 = !{i64 148206}
!10536 = !{i64 148220}
!10537 = !{i64 148224}
!10538 = !{i64 148274}
!10539 = !{i64 148276}
!10540 = !{i64 148266}
!10541 = !{i64 148284}
!10542 = !{i64 148304}
!10543 = !{i64 148318}
!10544 = !{i64 148320}
!10545 = !{i64 148326}
!10546 = !{i64 148330}
!10547 = !{i64 148342}
!10548 = !{i64 148352}
!10549 = !{i64 148362}
!10550 = !{i64 148372}
!10551 = !{i64 148374}
!10552 = !{i64 148334}
!10553 = !{i64 148380}
!10554 = !{i64 148382}
!10555 = !{i64 148384}
!10556 = !{i64 148390}
!10557 = !{i64 148392}
!10558 = !{i64 148394}
!10559 = !{i64 148422}
!10560 = !{i64 148440}
!10561 = !{i64 148444}
!10562 = !{i64 148450}
!10563 = !{i64 148452}
!10564 = !{i64 148456}
!10565 = !{i64 148488}
!10566 = !{i64 148506}
!10567 = !{i64 148542}
!10568 = !{i64 148558}
!10569 = !{i64 148576}
!10570 = !{i64 148582}
!10571 = !{i64 148588}
!10572 = !{i64 148594}
!10573 = !{i64 148600}
!10574 = !{i64 148606}
!10575 = !{i64 148612}
!10576 = !{i64 148618}
!10577 = !{i64 148628}
!10578 = !{i64 148632}
!10579 = !{i64 148644}
!10580 = !{i64 148646}
!10581 = !{i64 148648}
!10582 = !{i64 148658}
!10583 = !{i64 148664}
!10584 = !{i64 148666}
!10585 = !{i64 148668}
!10586 = !{i64 148676}
!10587 = !{i64 148686}
!10588 = !{i64 148690}
!10589 = !{i64 148698}
!10590 = !{i64 148704}
!10591 = !{i64 148712}
!10592 = !{i64 148718}
!10593 = !{i64 148724}
!10594 = !{i64 148734}
!10595 = !{i64 148738}
!10596 = !{i64 148746}
!10597 = !{i64 148748}
!10598 = !{i64 148754}
!10599 = !{i64 148782}
!10600 = !{i64 148798}
!10601 = !{i64 148814}
!10602 = !{i64 148816}
!10603 = !{i64 148820}
!10604 = !{i64 148830}
!10605 = !{i64 148842}
!10606 = !{i64 148848}
!10607 = !{i64 148850}
!10608 = !{i64 148858}
!10609 = !{i64 148862}
!10610 = !{i64 148864}
!10611 = !{i64 148870}
!10612 = !{i64 148874}
!10613 = !{i64 148880}
!10614 = !{i64 148884}
!10615 = !{i64 148888}
!10616 = !{i64 148892}
!10617 = !{i64 148894}
!10618 = !{i64 148898}
!10619 = !{i64 148902}
!10620 = !{i64 148904}
!10621 = !{i64 148908}
!10622 = !{i64 148910}
!10623 = !{i64 148914}
!10624 = !{i64 148918}
!10625 = !{i64 148922}
!10626 = !{i64 148928}
!10627 = !{i64 148930}
!10628 = !{i64 148938}
!10629 = !{i64 148944}
!10630 = !{i64 148946}
!10631 = !{i64 148950}
!10632 = !{i64 148952}
!10633 = !{i64 148956}
!10634 = !{i64 148962}
!10635 = !{i64 148964}
!10636 = !{i64 148966}
!10637 = !{i64 148974}
!10638 = !{i64 148990}
!10639 = !{i64 148994}
!10640 = !{i64 149006}
!10641 = !{i64 149008}
!10642 = !{i64 149036}
!10643 = !{i64 149038}
!10644 = !{i64 149042}
!10645 = !{i64 149046}
!10646 = !{i64 149048}
!10647 = !{i64 149052}
!10648 = !{i64 149054}
!10649 = !{i64 149058}
!10650 = !{i64 149062}
!10651 = !{i64 149066}
!10652 = !{i64 149068}
!10653 = !{i64 149072}
!10654 = !{i64 149076}
!10655 = !{i64 149082}
!10656 = !{i64 149084}
!10657 = !{i64 149088}
!10658 = !{i64 149090}
!10659 = !{i64 149094}
!10660 = !{i64 149098}
!10661 = !{i64 149100}
!10662 = !{i64 149102}
!10663 = !{i64 149130}
!10664 = !{i64 149136}
!10665 = !{i64 149138}
!10666 = !{i64 149142}
!10667 = !{i64 149150}
!10668 = !{i64 149152}
!10669 = !{i64 149158}
!10670 = !{i64 149160}
!10671 = !{i64 149188}
!10672 = !{i64 149192}
!10673 = !{i64 149200}
!10674 = !{i64 149220}
!10675 = !{i64 149234}
!10676 = !{i64 149248}
!10677 = !{i64 149254}
!10678 = !{i64 149260}
!10679 = !{i64 149270}
!10680 = !{i64 149288}
!10681 = !{i64 149300}
!10682 = !{i64 149314}
!10683 = !{i64 149328}
!10684 = !{i64 149348}
!10685 = !{i64 149358}
!10686 = !{i64 149360}
!10687 = !{i64 149376}
!10688 = !{i64 149392}
!10689 = !{i64 149398}
!10690 = !{i64 149402}
!10691 = !{i64 149410}
!10692 = !{i64 149414}
!10693 = !{i64 149416}
!10694 = !{i64 149446}
!10695 = !{i64 149456}
!10696 = !{i64 149460}
!10697 = !{i64 149510}
!10698 = !{i64 149514}
!10699 = !{i64 149516}
!10700 = !{i64 149518}
!10701 = !{i64 149520}
!10702 = !{i64 149478}
!10703 = !{i64 149484}
!10704 = !{i64 149490}
!10705 = !{i64 149492}
!10706 = !{i64 149496}
!10707 = !{i64 149500}
!10708 = !{i64 149502}
!10709 = !{i64 149506}
!10710 = !{i64 149528}
!10711 = !{i64 149532}
!10712 = !{i64 149548}
!10713 = !{i64 149550}
!10714 = !{i64 149580}
!10715 = !{i64 149594}
!10716 = !{i64 149596}
!10717 = !{i64 149602}
!10718 = !{i64 149608}
!10719 = !{i64 149610}
!10720 = !{i64 149614}
!10721 = !{i64 149616}
!10722 = !{i64 149618}
!10723 = !{i64 149620}
!10724 = !{i64 149624}
!10725 = !{i64 149628}
!10726 = !{i64 149632}
!10727 = !{i64 149634}
!10728 = !{i64 149638}
!10729 = !{i64 149640}
!10730 = !{i64 149642}
!10731 = !{i64 149644}
!10732 = !{i64 149648}
!10733 = !{i64 149652}
!10734 = !{i64 149656}
!10735 = !{i64 149658}
!10736 = !{i64 149662}
!10737 = !{i64 149664}
!10738 = !{i64 149666}
!10739 = !{i64 149668}
!10740 = !{i64 149672}
!10741 = !{i64 149676}
!10742 = !{i64 149706}
!10743 = !{i64 149712}
!10744 = !{i64 149720}
!10745 = !{i64 149732}
!10746 = !{i64 149736}
!10747 = !{i64 149750}
!10748 = !{i64 149758}
!10749 = !{i64 149764}
!10750 = !{i64 149770}
!10751 = !{i64 149802}
!10752 = !{i64 149806}
!10753 = !{i64 149812}
!10754 = !{i64 149824}
!10755 = !{i64 149830}
!10756 = !{i64 149832}
!10757 = !{i64 149848}
!10758 = !{i64 149852}
!10759 = !{i64 149868}
!10760 = !{i64 149872}
!10761 = !{i64 149876}
!10762 = !{i64 149878}
!10763 = !{i64 149900}
!10764 = !{i64 149960}
!10765 = !{i64 149964}
!10766 = !{i64 149970}
!10767 = !{i64 149978}
!10768 = !{i64 149986}
!10769 = !{i64 150042}
!10770 = !{i64 150048}
!10771 = !{i64 150062}
!10772 = !{i64 150066}
!10773 = !{i64 150088}
!10774 = !{i64 150090}
!10775 = !{i64 150094}
!10776 = !{i64 150102}
!10777 = !{i64 150108}
!10778 = !{i64 150110}
!10779 = !{i64 150122}
!10780 = !{i64 150126}
!10781 = !{i64 150132}
!10782 = !{i64 150134}
!10783 = !{i64 150136}
!10784 = !{i64 150148}
!10785 = !{i64 150150}
!10786 = !{i64 150152}
!10787 = !{i64 150156}
!10788 = !{i64 150166}
!10789 = !{i64 150174}
!10790 = !{i64 150176}
!10791 = !{i64 150200}
!10792 = !{i64 150202}
!10793 = !{i64 150204}
!10794 = !{i64 150208}
!10795 = !{i64 150210}
!10796 = !{i64 150212}
!10797 = !{i64 150214}
!10798 = !{i64 150224}
!10799 = !{i64 150244}
!10800 = !{i64 150232}
!10801 = !{i64 150234}
!10802 = !{i64 150258}
!10803 = !{i64 150262}
!10804 = !{i64 150270}
!10805 = !{i64 150272}
!10806 = !{i64 150278}
!10807 = !{i64 150280}
!10808 = !{i64 150300}
!10809 = !{i64 150304}
!10810 = !{i64 150320}
!10811 = !{i64 150324}
!10812 = !{i64 150360}
!10813 = !{i64 150364}
!10814 = !{i64 150368}
!10815 = !{i64 150370}
!10816 = !{i64 150384}
!10817 = !{i64 150388}
!10818 = !{i64 150404}
!10819 = !{i64 150410}
!10820 = !{i64 150412}
!10821 = !{i64 150442}
!10822 = !{i64 150446}
!10823 = !{i64 150458}
!10824 = !{i64 150462}
!10825 = !{i64 150466}
!10826 = !{i64 150470}
!10827 = !{i64 150482}
!10828 = !{i64 150484}
!10829 = !{i64 150486}
!10830 = !{i64 150490}
!10831 = !{i64 150502}
!10832 = !{i64 150504}
!10833 = !{i64 150528}
!10834 = !{i64 150530}
!10835 = !{i64 150536}
!10836 = !{i64 150538}
!10837 = !{i64 150544}
!10838 = !{i64 150546}
!10839 = !{i64 150552}
!10840 = !{i64 150554}
!10841 = !{i64 150560}
!10842 = !{i64 150562}
!10843 = !{i64 150568}
!10844 = !{i64 150570}
!10845 = !{i64 150600}
!10846 = !{i64 150606}
!10847 = !{i64 150612}
!10848 = !{i64 150614}
!10849 = !{i64 150616}
!10850 = !{i64 150624}
!10851 = !{i64 150628}
!10852 = !{i64 150632}
!10853 = !{i64 150634}
!10854 = !{i64 150636}
!10855 = !{i64 150640}
!10856 = !{i64 150652}
!10857 = !{i64 150660}
!10858 = !{i64 150662}
!10859 = !{i64 150664}
!10860 = !{i64 150666}
!10861 = !{i64 150668}
!10862 = !{i64 150672}
!10863 = !{i64 150676}
!10864 = !{i64 150686}
!10865 = !{i64 150688}
!10866 = !{i64 150706}
!10867 = !{i64 150710}
!10868 = !{i64 150712}
!10869 = !{i64 150718}
!10870 = !{i64 150722}
!10871 = !{i64 150726}
!10872 = !{i64 150728}
!10873 = !{i64 150734}
!10874 = !{i64 150744}
!10875 = !{i64 150756}
!10876 = !{i64 150760}
!10877 = !{i64 150766}
!10878 = !{i64 150778}
!10879 = !{i64 150800}
!10880 = !{i64 150790}
!10881 = !{i64 150814}
!10882 = !{i64 150818}
!10883 = !{i64 150820}
!10884 = !{i64 150844}
!10885 = !{i64 150850}
!10886 = !{i64 150854}
!10887 = !{i64 150860}
!10888 = !{i64 150868}
!10889 = !{i64 150880}
!10890 = !{i64 150888}
!10891 = !{i64 150894}
!10892 = !{i64 150896}
!10893 = !{i64 150898}
!10894 = !{i64 150900}
!10895 = !{i64 150910}
!10896 = !{i64 150924}
!10897 = !{i64 150928}
!10898 = !{i64 150942}
!10899 = !{i64 150946}
!10900 = !{i64 150950}
!10901 = !{i64 150954}
!10902 = !{i64 150956}
!10903 = !{i64 150958}
!10904 = !{i64 150960}
!10905 = !{i64 150990}
!10906 = !{i64 151000}
!10907 = !{i64 151004}
!10908 = !{i64 151008}
!10909 = !{i64 151014}
!10910 = !{i64 151026}
!10911 = !{i64 151036}
!10912 = !{i64 151048}
!10913 = !{i64 151052}
!10914 = !{i64 151058}
!10915 = !{i64 151066}
!10916 = !{i64 151088}
!10917 = !{i64 151078}
!10918 = !{i64 151100}
!10919 = !{i64 151112}
!10920 = !{i64 151134}
!10921 = !{i64 151138}
!10922 = !{i64 151144}
!10923 = !{i64 151156}
!10924 = !{i64 151160}
!10925 = !{i64 151166}
!10926 = !{i64 151188}
!10927 = !{i64 151178}
!10928 = !{i64 151200}
!10929 = !{i64 151206}
!10930 = !{i64 151218}
!10931 = !{i64 151224}
!10932 = !{i64 151226}
!10933 = !{i64 151240}
!10934 = !{i64 151244}
!10935 = !{i64 151252}
!10936 = !{i64 151254}
!10937 = !{i64 151260}
!10938 = !{i64 151266}
!10939 = !{i64 151280}
!10940 = !{i64 151284}
!10941 = !{i64 151296}
!10942 = !{i64 151300}
!10943 = !{i64 151306}
!10944 = !{i64 151308}
!10945 = !{i64 151312}
!10946 = !{i64 151316}
!10947 = !{i64 151320}
!10948 = !{i64 151328}
!10949 = !{i64 151334}
!10950 = !{i64 151340}
!10951 = !{i64 151346}
!10952 = !{i64 151350}
!10953 = !{i64 151388}
!10954 = !{i64 151390}
!10955 = !{i64 151406}
!10956 = !{i64 151408}
!10957 = !{i64 151414}
!10958 = !{i64 151458}
!10959 = !{i64 151460}
!10960 = !{i64 151472}
!10961 = !{i64 151476}
!10962 = !{i64 151492}
!10963 = !{i64 151482}
!10964 = !{i64 151502}
!10965 = !{i64 151510}
!10966 = !{i64 151516}
!10967 = !{i64 151540}
!10968 = !{i64 151562}
!10969 = !{i64 151552}
!10970 = !{i64 151586}
!10971 = !{i64 151596}
!10972 = !{i64 151600}
!10973 = !{i64 151612}
!10974 = !{i64 151618}
!10975 = !{i64 151620}
!10976 = !{i64 151628}
!10977 = !{i64 151630}
!10978 = !{i64 151642}
!10979 = !{i64 151648}
!10980 = !{i64 151650}
!10981 = !{i64 151658}
!10982 = !{i64 151660}
!10983 = !{i64 151672}
!10984 = !{i64 151678}
!10985 = !{i64 151680}
!10986 = !{i64 151688}
!10987 = !{i64 151690}
!10988 = !{i64 151698}
!10989 = !{i64 151700}
!10990 = !{i64 151704}
!10991 = !{i64 151714}
!10992 = !{i64 151718}
!10993 = !{i64 151728}
!10994 = !{i64 151732}
!10995 = !{i64 151746}
!10996 = !{i64 151748}
!10997 = !{i64 151752}
!10998 = !{i64 151756}
!10999 = !{i64 151764}
!11000 = !{i64 151778}
!11001 = !{i64 151780}
!11002 = !{i64 151800}
!11003 = !{i64 151806}
!11004 = !{i64 151810}
!11005 = !{i64 151816}
!11006 = !{i64 151818}
!11007 = !{i64 151832}
!11008 = !{i64 151834}
!11009 = !{i64 151844}
!11010 = !{i64 151858}
!11011 = !{i64 151860}
!11012 = !{i64 151864}
!11013 = !{i64 151868}
!11014 = !{i64 151872}
!11015 = !{i64 151878}
!11016 = !{i64 151882}
!11017 = !{i64 151892}
!11018 = !{i64 151896}
!11019 = !{i64 151908}
!11020 = !{i64 151916}
!11021 = !{i64 151918}
!11022 = !{i64 151928}
!11023 = !{i64 151934}
!11024 = !{i64 151966}
!11025 = !{i64 151970}
!11026 = !{i64 151974}
!11027 = !{i64 151982}
!11028 = !{i64 151984}
!11029 = !{i64 151998}
!11030 = !{i64 151978}
!11031 = !{i64 152004}
!11032 = !{i64 152010}
!11033 = !{i64 152012}
!11034 = !{i64 152016}
!11035 = !{i64 152032}
!11036 = !{i64 152036}
!11037 = !{i64 152042}
!11038 = !{i64 152048}
!11039 = !{i64 152050}
!11040 = !{i64 152052}
!11041 = !{i64 152056}
!11042 = !{i64 152072}
!11043 = !{i64 152076}
!11044 = !{i64 152082}
!11045 = !{i64 152092}
!11046 = !{i64 152100}
!11047 = !{i64 152102}
!11048 = !{i64 152106}
!11049 = !{i64 152110}
!11050 = !{i64 152118}
!11051 = !{i64 152124}
!11052 = !{i64 152126}
!11053 = !{i64 152130}
!11054 = !{i64 152136}
!11055 = !{i64 152140}
!11056 = !{i64 152144}
!11057 = !{i64 152150}
!11058 = !{i64 152158}
!11059 = !{i64 152164}
!11060 = !{i64 152166}
!11061 = !{i64 152168}
!11062 = !{i64 152174}
!11063 = !{i64 151948}
!11064 = !{i64 151952}
!11065 = !{i64 152180}
!11066 = !{i64 152184}
!11067 = !{i64 152186}
!11068 = !{i64 152188}
!11069 = !{i64 152202}
!11070 = !{i64 152206}
!11071 = !{i64 152214}
!11072 = !{i64 152218}
!11073 = !{i64 152228}
!11074 = !{i64 152232}
!11075 = !{i64 152244}
!11076 = !{i64 152252}
!11077 = !{i64 152254}
!11078 = !{i64 152264}
!11079 = !{i64 152270}
!11080 = !{i64 152272}
!11081 = !{i64 152274}
!11082 = !{i64 152286}
!11083 = !{i64 152294}
!11084 = !{i64 152296}
!11085 = !{i64 152302}
!11086 = !{i64 152308}
!11087 = !{i64 152310}
!11088 = !{i64 152330}
!11089 = !{i64 152336}
!11090 = !{i64 152338}
!11091 = !{i64 152340}
!11092 = !{i64 152346}
!11093 = !{i64 152358}
!11094 = !{i64 152360}
!11095 = !{i64 152352}
!11096 = !{i64 152364}
!11097 = !{i64 152370}
!11098 = !{i64 152372}
!11099 = !{i64 152386}
!11100 = !{i64 152390}
!11101 = !{i64 152396}
!11102 = !{i64 152400}
!11103 = !{i64 152404}
!11104 = !{i64 152414}
!11105 = !{i64 152416}
!11106 = !{i64 152430}
!11107 = !{i64 152436}
!11108 = !{i64 152438}
!11109 = !{i64 152446}
!11110 = !{i64 152448}
!11111 = !{i64 152450}
!11112 = !{i64 152454}
!11113 = !{i64 152456}
!11114 = !{i64 152460}
!11115 = !{i64 152480}
!11116 = !{i64 152482}
!11117 = !{i64 152490}
!11118 = !{i64 152510}
!11119 = !{i64 152514}
!11120 = !{i64 152520}
!11121 = !{i64 152524}
!11122 = !{i64 152528}
!11123 = !{i64 152530}
!11124 = !{i64 152534}
!11125 = !{i64 152546}
!11126 = !{i64 152552}
!11127 = !{i64 152554}
!11128 = !{i64 152568}
!11129 = !{i64 152574}
!11130 = !{i64 152576}
!11131 = !{i64 152594}
!11132 = !{i64 152602}
!11133 = !{i64 152608}
!11134 = !{i64 152612}
!11135 = !{i64 152628}
!11136 = !{i64 152634}
!11137 = !{i64 152636}
!11138 = !{i64 152642}
!11139 = !{i64 152644}
!11140 = !{i64 152650}
!11141 = !{i64 152658}
!11142 = !{i64 152664}
!11143 = !{i64 152672}
!11144 = !{i64 152678}
!11145 = !{i64 152692}
!11146 = !{i64 152698}
!11147 = !{i64 152712}
!11148 = !{i64 152718}
!11149 = !{i64 152740}
!11150 = !{i64 152744}
!11151 = !{i64 152760}
!11152 = !{i64 152766}
!11153 = !{i64 152770}
!11154 = !{i64 152772}
!11155 = !{i64 152776}
!11156 = !{i64 152802}
!11157 = !{i64 152808}
!11158 = !{i64 152816}
!11159 = !{i64 152824}
!11160 = !{i64 152826}
!11161 = !{i64 152834}
!11162 = !{i64 152838}
!11163 = !{i64 152840}
!11164 = !{i64 152846}
!11165 = !{i64 152852}
!11166 = !{i64 152854}
!11167 = !{i64 152856}
!11168 = !{i64 152870}
!11169 = !{i64 152876}
!11170 = !{i64 152882}
!11171 = !{i64 152886}
!11172 = !{i64 152888}
!11173 = !{i64 152892}
!11174 = !{i64 152898}
!11175 = !{i64 152910}
!11176 = !{i64 152912}
!11177 = !{i64 152930}
!11178 = !{i64 152932}
!11179 = !{i64 152934}
!11180 = !{i64 152940}
!11181 = !{i64 152942}
!11182 = !{i64 152954}
!11183 = !{i64 152958}
!11184 = !{i64 152960}
!11185 = !{i64 152972}
!11186 = !{i64 152976}
!11187 = !{i64 152998}
!11188 = !{i64 153004}
!11189 = !{i64 153006}
!11190 = !{i64 153020}
!11191 = !{i64 153026}
!11192 = !{i64 153030}
!11193 = !{i64 153056}
!11194 = !{i64 153062}
!11195 = !{i64 153064}
!11196 = !{i64 153080}
!11197 = !{i64 153092}
!11198 = !{i64 153096}
!11199 = !{i64 153106}
!11200 = !{i64 153108}
!11201 = !{i64 153122}
!11202 = !{i64 153126}
!11203 = !{i64 153128}
!11204 = !{i64 153130}
!11205 = !{i64 153146}
!11206 = !{i64 153148}
!11207 = !{i64 153156}
!11208 = !{i64 153160}
!11209 = !{i64 153162}
!11210 = !{i64 153174}
!11211 = !{i64 153176}
!11212 = !{i64 153200}
!11213 = !{i64 153206}
!11214 = !{i64 153208}
!11215 = !{i64 153222}
!11216 = !{i64 153228}
!11217 = !{i64 153232}
!11218 = !{i64 153262}
!11219 = !{i64 153268}
!11220 = !{i64 153270}
!11221 = !{i64 153286}
!11222 = !{i64 153298}
!11223 = !{i64 153302}
!11224 = !{i64 153312}
!11225 = !{i64 153316}
!11226 = !{i64 153336}
!11227 = !{i64 153340}
!11228 = !{i64 153370}
!11229 = !{i64 153376}
!11230 = !{i64 153378}
!11231 = !{i64 153392}
!11232 = !{i64 153398}
!11233 = !{i64 153416}
!11234 = !{i64 153422}
!11235 = !{i64 153424}
!11236 = !{i64 153440}
!11237 = !{i64 153452}
!11238 = !{i64 153456}
!11239 = !{i64 153466}
!11240 = !{i64 153468}
!11241 = !{i64 153484}
!11242 = !{i64 153490}
!11243 = !{i64 153492}
!11244 = !{i64 153506}
!11245 = !{i64 153512}
!11246 = !{i64 153524}
!11247 = !{i64 153532}
!11248 = !{i64 153534}
!11249 = !{i64 153536}
!11250 = !{i64 153542}
!11251 = !{i64 153546}
!11252 = !{i64 153568}
!11253 = !{i64 153574}
!11254 = !{i64 153576}
!11255 = !{i64 153582}
!11256 = !{i64 153590}
!11257 = !{i64 153594}
!11258 = !{i64 153604}
!11259 = !{i64 153608}
!11260 = !{i64 153622}
!11261 = !{i64 153628}
!11262 = !{i64 153632}
!11263 = !{i64 153634}
!11264 = !{i64 153640}
!11265 = !{i64 153670}
!11266 = !{i64 153704}
!11267 = !{i64 153710}
!11268 = !{i64 153720}
!11269 = !{i64 153724}
!11270 = !{i64 153728}
!11271 = !{i64 153738}
!11272 = !{i64 153740}
!11273 = !{i64 153766}
!11274 = !{i64 153780}
!11275 = !{i64 153824}
!11276 = !{i64 153834}
!11277 = !{i64 153836}
!11278 = !{i64 153838}
!11279 = !{i64 153852}
!11280 = !{i64 153858}
!11281 = !{i64 153880}
!11282 = !{i64 153886}
!11283 = !{i64 153888}
!11284 = !{i64 153906}
!11285 = !{i64 153908}
!11286 = !{i64 153922}
!11287 = !{i64 153926}
!11288 = !{i64 153942}
!11289 = !{i64 153944}
!11290 = !{i64 153954}
!11291 = !{i64 153956}
!11292 = !{i64 153974}
!11293 = !{i64 153976}
!11294 = !{i64 153986}
!11295 = !{i64 153988}
!11296 = !{i64 153998}
!11297 = !{i64 154000}
!11298 = !{i64 154014}
!11299 = !{i64 154016}
!11300 = !{i64 154018}
!11301 = !{i64 154026}
!11302 = !{i64 154028}
!11303 = !{i64 154038}
!11304 = !{i64 154046}
!11305 = !{i64 154050}
!11306 = !{i64 154058}
!11307 = !{i64 154062}
!11308 = !{i64 154070}
!11309 = !{i64 154072}
!11310 = !{i64 154088}
!11311 = !{i64 154092}
!11312 = !{i64 154102}
!11313 = !{i64 154124}
!11314 = !{i64 154136}
!11315 = !{i64 154146}
!11316 = !{i64 154148}
!11317 = !{i64 154160}
!11318 = !{i64 154166}
!11319 = !{i64 154170}
!11320 = !{i64 154174}
!11321 = !{i64 154182}
!11322 = !{i64 154188}
!11323 = !{i64 154190}
!11324 = !{i64 154204}
!11325 = !{i64 154206}
!11326 = !{i64 154216}
!11327 = !{i64 154220}
!11328 = !{i64 154232}
!11329 = !{i64 154234}
!11330 = !{i64 154242}
!11331 = !{i64 154250}
!11332 = !{i64 154256}
!11333 = !{i64 154262}
!11334 = !{i64 154270}
!11335 = !{i64 154284}
!11336 = !{i64 154292}
!11337 = !{i64 154302}
!11338 = !{i64 154326}
!11339 = !{i64 154346}
!11340 = !{i64 154360}
!11341 = !{i64 154376}
!11342 = !{i64 154388}
!11343 = !{i64 154402}
!11344 = !{i64 154414}
!11345 = !{i64 154420}
!11346 = !{i64 154424}
!11347 = !{i64 154438}
!11348 = !{i64 154440}
!11349 = !{i64 154454}
!11350 = !{i64 154458}
!11351 = !{i64 154460}
!11352 = !{i64 154464}
!11353 = !{i64 154466}
!11354 = !{i64 154472}
!11355 = !{i64 154478}
!11356 = !{i64 154474}
!11357 = !{i64 154498}
!11358 = !{i64 154500}
!11359 = !{i64 154502}
!11360 = !{i64 154516}
!11361 = !{i64 154518}
!11362 = !{i64 154524}
!11363 = !{i64 154526}
!11364 = !{i64 154528}
!11365 = !{i64 154536}
!11366 = !{i64 154544}
!11367 = !{i64 154546}
!11368 = !{i64 154560}
!11369 = !{i64 154568}
!11370 = !{i64 154578}
!11371 = !{i64 154586}
!11372 = !{i64 154592}
!11373 = !{i64 154600}
!11374 = !{i64 154602}
!11375 = !{i64 154610}
!11376 = !{i64 154616}
!11377 = !{i64 154620}
!11378 = !{i64 154624}
!11379 = !{i64 154634}
!11380 = !{i64 154638}
!11381 = !{i64 154640}
!11382 = !{i64 154650}
!11383 = !{i64 154652}
!11384 = !{i64 154662}
!11385 = !{i64 154664}
!11386 = !{i64 154666}
!11387 = !{i64 154676}
!11388 = !{i64 154680}
!11389 = !{i64 154686}
!11390 = !{i64 154688}
!11391 = !{i64 154704}
!11392 = !{i64 154708}
!11393 = !{i64 154722}
!11394 = !{i64 154724}
!11395 = !{i64 154732}
!11396 = !{i64 154738}
!11397 = !{i64 154740}
!11398 = !{i64 154744}
!11399 = !{i64 154746}
!11400 = !{i64 154748}
!11401 = !{i64 154758}
!11402 = !{i64 154766}
!11403 = !{i64 154768}
!11404 = !{i64 154772}
!11405 = !{i64 154776}
!11406 = !{i64 154778}
!11407 = !{i64 154780}
!11408 = !{i64 154788}
!11409 = !{i64 154792}
!11410 = !{i64 154800}
!11411 = !{i64 154806}
!11412 = !{i64 154808}
!11413 = !{i64 154812}
!11414 = !{i64 154814}
!11415 = !{i64 154816}
!11416 = !{i64 154826}
!11417 = !{i64 154834}
!11418 = !{i64 154836}
!11419 = !{i64 154842}
!11420 = !{i64 154844}
!11421 = !{i64 154846}
!11422 = !{i64 154854}
!11423 = !{i64 154868}
!11424 = !{i64 154872}
!11425 = !{i64 154880}
!11426 = !{i64 154894}
!11427 = !{i64 154898}
!11428 = !{i64 154908}
!11429 = !{i64 154910}
!11430 = !{i64 154912}
!11431 = !{i64 154914}
!11432 = !{i64 154916}
!11433 = !{i64 154944}
!11434 = !{i64 154948}
!11435 = !{i64 154954}
!11436 = !{i64 154956}
!11437 = !{i64 154958}
!11438 = !{i64 154960}
!11439 = !{i64 154982}
!11440 = !{i64 154986}
!11441 = !{i64 155000}
!11442 = !{i64 155004}
!11443 = !{i64 155014}
!11444 = !{i64 155038}
!11445 = !{i64 155046}
!11446 = !{i64 155064}
!11447 = !{i64 155048}
!11448 = !{i64 155076}
!11449 = !{i64 155084}
!11450 = !{i64 155090}
!11451 = !{i64 155092}
!11452 = !{i64 155098}
!11453 = !{i64 155104}
!11454 = !{i64 155106}
!11455 = !{i64 155110}
!11456 = !{i64 155114}
!11457 = !{i64 155116}
!11458 = !{i64 155132}
!11459 = !{i64 155140}
!11460 = !{i64 155144}
!11461 = !{i64 155148}
!11462 = !{i64 155152}
!11463 = !{i64 155156}
!11464 = !{i64 155162}
!11465 = !{i64 155168}
!11466 = !{i64 155176}
!11467 = !{i64 155178}
!11468 = !{i64 155182}
!11469 = !{i64 155188}
!11470 = !{i64 155194}
!11471 = !{i64 155196}
!11472 = !{i64 155216}
!11473 = !{i64 155220}
!11474 = !{i64 155222}
!11475 = !{i64 155210}
!11476 = !{i64 155224}
!11477 = !{i64 155230}
!11478 = !{i64 155232}
!11479 = !{i64 155238}
!11480 = !{i64 155244}
!11481 = !{i64 155252}
!11482 = !{i64 155260}
!11483 = !{i64 155264}
!11484 = !{i64 155266}
!11485 = !{i64 155278}
!11486 = !{i64 155280}
!11487 = !{i64 155294}
!11488 = !{i64 155296}
!11489 = !{i64 155308}
!11490 = !{i64 155316}
!11491 = !{i64 155322}
!11492 = !{i64 155324}
!11493 = !{i64 155334}
!11494 = !{i64 155338}
!11495 = !{i64 155352}
!11496 = !{i64 155356}
!11497 = !{i64 155372}
!11498 = !{i64 155378}
!11499 = !{i64 155380}
!11500 = !{i64 155390}
!11501 = !{i64 155394}
!11502 = !{i64 155408}
!11503 = !{i64 155412}
!11504 = !{i64 155416}
!11505 = !{i64 155428}
!11506 = !{i64 155432}
!11507 = !{i64 155448}
!11508 = !{i64 155454}
!11509 = !{i64 155456}
!11510 = !{i64 155470}
!11511 = !{i64 155474}
!11512 = !{i64 155488}
!11513 = !{i64 155492}
!11514 = !{i64 155496}
!11515 = !{i64 155508}
!11516 = !{i64 155512}
!11517 = !{i64 155516}
!11518 = !{i64 155528}
!11519 = !{i64 155532}
!11520 = !{i64 155548}
!11521 = !{i64 155554}
!11522 = !{i64 155556}
!11523 = !{i64 155576}
!11524 = !{i64 155580}
!11525 = !{i64 155590}
!11526 = !{i64 155596}
!11527 = !{i64 155598}
!11528 = !{i64 155600}
!11529 = !{i64 155592}
!11530 = !{i64 155608}
!11531 = !{i64 155610}
!11532 = !{i64 155612}
!11533 = !{i64 155616}
!11534 = !{i64 155618}
!11535 = !{i64 155628}
!11536 = !{i64 155642}
!11537 = !{i64 155644}
!11538 = !{i64 155650}
!11539 = !{i64 155660}
!11540 = !{i64 155664}
!11541 = !{i64 155666}
!11542 = !{i64 155674}
!11543 = !{i64 155676}
!11544 = !{i64 155680}
!11545 = !{i64 155682}
!11546 = !{i64 155688}
!11547 = !{i64 155700}
!11548 = !{i64 155704}
!11549 = !{i64 155740}
!11550 = !{i64 155756}
!11551 = !{i64 155772}
!11552 = !{i64 155788}
!11553 = !{i64 155790}
!11554 = !{i64 155796}
!11555 = !{i64 155798}
!11556 = !{i64 155800}
!11557 = !{i64 155804}
!11558 = !{i64 155806}
!11559 = !{i64 155814}
!11560 = !{i64 155818}
!11561 = !{i64 155822}
!11562 = !{i64 155828}
!11563 = !{i64 155838}
!11564 = !{i64 155852}
!11565 = !{i64 155884}
!11566 = !{i64 155892}
!11567 = !{i64 155886}
!11568 = !{i64 155896}
!11569 = !{i64 155908}
!11570 = !{i64 155898}
!11571 = !{i64 155912}
!11572 = !{i64 155924}
!11573 = !{i64 155914}
!11574 = !{i64 155932}
!11575 = !{i64 155934}
!11576 = !{i64 155940}
!11577 = !{i64 155954}
!11578 = !{i64 155956}
!11579 = !{i64 155970}
!11580 = !{i64 155972}
!11581 = !{i64 155984}
!11582 = !{i64 155994}
!11583 = !{i64 156002}
!11584 = !{i64 156004}
!11585 = !{i64 156010}
!11586 = !{i64 156012}
!11587 = !{i64 156022}
!11588 = !{i64 156024}
!11589 = !{i64 156030}
!11590 = !{i64 156032}
!11591 = !{i64 156040}
!11592 = !{i64 156042}
!11593 = !{i64 156044}
!11594 = !{i64 156048}
!11595 = !{i64 156054}
!11596 = !{i64 156064}
!11597 = !{i64 156068}
!11598 = !{i64 156080}
!11599 = !{i64 156084}
!11600 = !{i64 156088}
!11601 = !{i64 156094}
!11602 = !{i64 156198}
!11603 = !{i64 156106}
!11604 = !{i64 156108}
!11605 = !{i64 156112}
!11606 = !{i64 156120}
!11607 = !{i64 156122}
!11608 = !{i64 156132}
!11609 = !{i64 156144}
!11610 = !{i64 156162}
!11611 = !{i64 156168}
!11612 = !{i64 156170}
!11613 = !{i64 156182}
!11614 = !{i64 156184}
!11615 = !{i64 156188}
!11616 = !{i64 156210}
!11617 = !{i64 156222}
!11618 = !{i64 156224}
!11619 = !{i64 156228}
!11620 = !{i64 156230}
!11621 = !{i64 156234}
!11622 = !{i64 156240}
!11623 = !{i64 156244}
!11624 = !{i64 156258}
!11625 = !{i64 156260}
!11626 = !{i64 156270}
!11627 = !{i64 156272}
!11628 = !{i64 156276}
!11629 = !{i64 156278}
!11630 = !{i64 156282}
!11631 = !{i64 156288}
!11632 = !{i64 156292}
!11633 = !{i64 156298}
!11634 = !{i64 156300}
!11635 = !{i64 156304}
!11636 = !{i64 156314}
!11637 = !{i64 156330}
!11638 = !{i64 156342}
!11639 = !{i64 156356}
!11640 = !{i64 156372}
!11641 = !{i64 156382}
!11642 = !{i64 156396}
!11643 = !{i64 156414}
!11644 = !{i64 156420}
!11645 = !{i64 156430}
!11646 = !{i64 156432}
!11647 = !{i64 156440}
!11648 = !{i64 156448}
!11649 = !{i64 156450}
!11650 = !{i64 156462}
!11651 = !{i64 156468}
!11652 = !{i64 156472}
!11653 = !{i64 156478}
!11654 = !{i64 156480}
!11655 = !{i64 156484}
!11656 = !{i64 156490}
!11657 = !{i64 156496}
!11658 = !{i64 156502}
!11659 = !{i64 156504}
!11660 = !{i64 156514}
!11661 = !{i64 156526}
!11662 = !{i64 156530}
!11663 = !{i64 156536}
!11664 = !{i64 156546}
!11665 = !{i64 156592}
!11666 = !{i64 156650}
!11667 = !{i64 156666}
!11668 = !{i64 156668}
!11669 = !{i64 156706}
!11670 = !{i64 156714}
!11671 = !{i64 156776}
!11672 = !{i64 156780}
!11673 = !{i64 156794}
!11674 = !{i64 156796}
!11675 = !{i64 156804}
!11676 = !{i64 156810}
!11677 = !{i64 156812}
!11678 = !{i64 156816}
!11679 = !{i64 156824}
!11680 = !{i64 156832}
!11681 = !{i64 156836}
!11682 = !{i64 156846}
!11683 = !{i64 156904}
!11684 = !{i64 156966}
!11685 = !{i64 157116}
!11686 = !{i64 157270}
!11687 = !{i64 157422}
!11688 = !{i64 157474}
!11689 = !{i64 157536}
!11690 = !{i64 157600}
!11691 = !{i64 157604}
!11692 = !{i64 157614}
!11693 = !{i64 157616}
!11694 = !{i64 157624}
!11695 = !{i64 157628}
!11696 = !{i64 157638}
!11697 = !{i64 157640}
!11698 = !{i64 157650}
!11699 = !{i64 157652}
!11700 = !{i64 157660}
!11701 = !{i64 157664}
!11702 = !{i64 157674}
!11703 = !{i64 157738}
!11704 = !{i64 157750}
!11705 = !{i64 157774}
!11706 = !{i64 157776}
!11707 = !{i64 157788}
!11708 = !{i64 157796}
!11709 = !{i64 157802}
!11710 = !{i64 157804}
!11711 = !{i64 157812}
!11712 = !{i64 157820}
!11713 = !{i64 157884}
!11714 = !{i64 157886}
!11715 = !{i64 157832}
!11716 = !{i64 157842}
!11717 = !{i64 157848}
!11718 = !{i64 157850}
!11719 = !{i64 157858}
!11720 = !{i64 157868}
!11721 = !{i64 157876}
!11722 = !{i64 157890}
!11723 = !{i64 157898}
!11724 = !{i64 157906}
!11725 = !{i64 157908}
!11726 = !{i64 157920}
!11727 = !{i64 157924}
!11728 = !{i64 157932}
!11729 = !{i64 157940}
!11730 = !{i64 157942}
!11731 = !{i64 157950}
!11732 = !{i64 157958}
!11733 = !{i64 158004}
!11734 = !{i64 158006}
!11735 = !{i64 157972}
!11736 = !{i64 157978}
!11737 = !{i64 157988}
!11738 = !{i64 157996}
!11739 = !{i64 158010}
!11740 = !{i64 158018}
!11741 = !{i64 158026}
!11742 = !{i64 158028}
!11743 = !{i64 158040}
!11744 = !{i64 158044}
!11745 = !{i64 158052}
!11746 = !{i64 158060}
!11747 = !{i64 158062}
!11748 = !{i64 158070}
!11749 = !{i64 158124}
!11750 = !{i64 158126}
!11751 = !{i64 158080}
!11752 = !{i64 158088}
!11753 = !{i64 158096}
!11754 = !{i64 158108}
!11755 = !{i64 158116}
!11756 = !{i64 158138}
!11757 = !{i64 158140}
!11758 = !{i64 158148}
!11759 = !{i64 158156}
!11760 = !{i64 158158}
!11761 = !{i64 158170}
!11762 = !{i64 158178}
!11763 = !{i64 158184}
!11764 = !{i64 158194}
!11765 = !{i64 158202}
!11766 = !{i64 158208}
!11767 = !{i64 158210}
!11768 = !{i64 158214}
!11769 = !{i64 158220}
!11770 = !{i64 158226}
!11771 = !{i64 158228}
!11772 = !{i64 158238}
!11773 = !{i64 158240}
!11774 = !{i64 158280}
!11775 = !{i64 158284}
!11776 = !{i64 158286}
!11777 = !{i64 158260}
!11778 = !{i64 158262}
!11779 = !{i64 158264}
!11780 = !{i64 158268}
!11781 = !{i64 158274}
!11782 = !{i64 158294}
!11783 = !{i64 158300}
!11784 = !{i64 158310}
!11785 = !{i64 158312}
!11786 = !{i64 158330}
!11787 = !{i64 158324}
!11788 = !{i64 158340}
!11789 = !{i64 158352}
!11790 = !{i64 158356}
!11791 = !{i64 158376}
!11792 = !{i64 158370}
!11793 = !{i64 158390}
!11794 = !{i64 158394}
!11795 = !{i64 158396}
!11796 = !{i64 158404}
!11797 = !{i64 158408}
!11798 = !{i64 158410}
!11799 = !{i64 158412}
!11800 = !{i64 158424}
!11801 = !{i64 158428}
!11802 = !{i64 158442}
!11803 = !{i64 158444}
!11804 = !{i64 158462}
!11805 = !{i64 158470}
!11806 = !{i64 158456}
!11807 = !{i64 158476}
!11808 = !{i64 158484}
!11809 = !{i64 158492}
!11810 = !{i64 158496}
!11811 = !{i64 158498}
!11812 = !{i64 158502}
!11813 = !{i64 158510}
!11814 = !{i64 158514}
!11815 = !{i64 158518}
!11816 = !{i64 158520}
!11817 = !{i64 158522}
!11818 = !{i64 158526}
!11819 = !{i64 158532}
!11820 = !{i64 158538}
!11821 = !{i64 158542}
!11822 = !{i64 158544}
!11823 = !{i64 158554}
!11824 = !{i64 158572}
!11825 = !{i64 158576}
!11826 = !{i64 158578}
!11827 = !{i64 158586}
!11828 = !{i64 158588}
!11829 = !{i64 158592}
!11830 = !{i64 158600}
!11831 = !{i64 158610}
!11832 = !{i64 158628}
!11833 = !{i64 158632}
!11834 = !{i64 158636}
!11835 = !{i64 158640}
!11836 = !{i64 158644}
!11837 = !{i64 158652}
!11838 = !{i64 158662}
!11839 = !{i64 158664}
!11840 = !{i64 158678}
!11841 = !{i64 158682}
!11842 = !{i64 158686}
!11843 = !{i64 158688}
!11844 = !{i64 158690}
!11845 = !{i64 158708}
!11846 = !{i64 158716}
!11847 = !{i64 158718}
!11848 = !{i64 158720}
!11849 = !{i64 158728}
!11850 = !{i64 158732}
!11851 = !{i64 158740}
!11852 = !{i64 158742}
!11853 = !{i64 158752}
!11854 = !{i64 158758}
!11855 = !{i64 158762}
!11856 = !{i64 158764}
!11857 = !{i64 158772}
!11858 = !{i64 158784}
!11859 = !{i64 158790}
!11860 = !{i64 158796}
!11861 = !{i64 158798}
!11862 = !{i64 158810}
!11863 = !{i64 158812}
!11864 = !{i64 158824}
!11865 = !{i64 158826}
!11866 = !{i64 158844}
!11867 = !{i64 158852}
!11868 = !{i64 158838}
!11869 = !{i64 158858}
!11870 = !{i64 158866}
!11871 = !{i64 158878}
!11872 = !{i64 158884}
!11873 = !{i64 158886}
!11874 = !{i64 158890}
!11875 = !{i64 158898}
!11876 = !{i64 158902}
!11877 = !{i64 158906}
!11878 = !{i64 158908}
!11879 = !{i64 158910}
!11880 = !{i64 158914}
!11881 = !{i64 158918}
!11882 = !{i64 158920}
!11883 = !{i64 158924}
!11884 = !{i64 158926}
!11885 = !{i64 158936}
!11886 = !{i64 158940}
!11887 = !{i64 158954}
!11888 = !{i64 158956}
!11889 = !{i64 158974}
!11890 = !{i64 158982}
!11891 = !{i64 158968}
!11892 = !{i64 158988}
!11893 = !{i64 158996}
!11894 = !{i64 159004}
!11895 = !{i64 159008}
!11896 = !{i64 159010}
!11897 = !{i64 159014}
!11898 = !{i64 159022}
!11899 = !{i64 159030}
!11900 = !{i64 159038}
!11901 = !{i64 159040}
!11902 = !{i64 159044}
!11903 = !{i64 159052}
!11904 = !{i64 159056}
!11905 = !{i64 159060}
!11906 = !{i64 159062}
!11907 = !{i64 159080}
!11908 = !{i64 159086}
!11909 = !{i64 159090}
!11910 = !{i64 159094}
!11911 = !{i64 159098}
!11912 = !{i64 159110}
!11913 = !{i64 159116}
!11914 = !{i64 159120}
!11915 = !{i64 159124}
!11916 = !{i64 159128}
!11917 = !{i64 159132}
!11918 = !{i64 159140}
!11919 = !{i64 159146}
!11920 = !{i64 159150}
!11921 = !{i64 159152}
!11922 = !{i64 159156}
!11923 = !{i64 159160}
!11924 = !{i64 159162}
!11925 = !{i64 159166}
!11926 = !{i64 159168}
!11927 = !{i64 159178}
!11928 = !{i64 159180}
!11929 = !{i64 159200}
!11930 = !{i64 159194}
!11931 = !{i64 159216}
!11932 = !{i64 159220}
!11933 = !{i64 159222}
!11934 = !{i64 159232}
!11935 = !{i64 159236}
!11936 = !{i64 159238}
!11937 = !{i64 159240}
!11938 = !{i64 159244}
!11939 = !{i64 159250}
!11940 = !{i64 159256}
!11941 = !{i64 159258}
!11942 = !{i64 159262}
!11943 = !{i64 159272}
!11944 = !{i64 159278}
!11945 = !{i64 159286}
!11946 = !{i64 159290}
!11947 = !{i64 159292}
!11948 = !{i64 159302}
!11949 = !{i64 159304}
!11950 = !{i64 159322}
!11951 = !{i64 159316}
!11952 = !{i64 159368}
!11953 = !{i64 159372}
!11954 = !{i64 159374}
!11955 = !{i64 159344}
!11956 = !{i64 159348}
!11957 = !{i64 159350}
!11958 = !{i64 159352}
!11959 = !{i64 159356}
!11960 = !{i64 159362}
!11961 = !{i64 159380}
!11962 = !{i64 159382}
!11963 = !{i64 159392}
!11964 = !{i64 159396}
!11965 = !{i64 159416}
!11966 = !{i64 159430}
!11967 = !{i64 159410}
!11968 = !{i64 159450}
!11969 = !{i64 159458}
!11970 = !{i64 159464}
!11971 = !{i64 159466}
!11972 = !{i64 159506}
!11973 = !{i64 159510}
!11974 = !{i64 159512}
!11975 = !{i64 159482}
!11976 = !{i64 159486}
!11977 = !{i64 159488}
!11978 = !{i64 159490}
!11979 = !{i64 159494}
!11980 = !{i64 159500}
!11981 = !{i64 159520}
!11982 = !{i64 159540}
!11983 = !{i64 159552}
!11984 = !{i64 159556}
!11985 = !{i64 159558}
!11986 = !{i64 159568}
!11987 = !{i64 159572}
!11988 = !{i64 159584}
!11989 = !{i64 159592}
!11990 = !{i64 159600}
!11991 = !{i64 159602}
!11992 = !{i64 159662}
!11993 = !{i64 159664}
!11994 = !{i64 159618}
!11995 = !{i64 159628}
!11996 = !{i64 159638}
!11997 = !{i64 159644}
!11998 = !{i64 159646}
!11999 = !{i64 159654}
!12000 = !{i64 159676}
!12001 = !{i64 159680}
!12002 = !{i64 159688}
!12003 = !{i64 159696}
!12004 = !{i64 159698}
!12005 = !{i64 159736}
!12006 = !{i64 159744}
!12007 = !{i64 159746}
!12008 = !{i64 159714}
!12009 = !{i64 159724}
!12010 = !{i64 159730}
!12011 = !{i64 159758}
!12012 = !{i64 159760}
!12013 = !{i64 159768}
!12014 = !{i64 159776}
!12015 = !{i64 159778}
!12016 = !{i64 159824}
!12017 = !{i64 159832}
!12018 = !{i64 159834}
!12019 = !{i64 159794}
!12020 = !{i64 159802}
!12021 = !{i64 159812}
!12022 = !{i64 159818}
!12023 = !{i64 159846}
!12024 = !{i64 159848}
!12025 = !{i64 159858}
!12026 = !{i64 159860}
!12027 = !{i64 159868}
!12028 = !{i64 159876}
!12029 = !{i64 159878}
!12030 = !{i64 159890}
!12031 = !{i64 159896}
!12032 = !{i64 159904}
!12033 = !{i64 159910}
!12034 = !{i64 159912}
!12035 = !{i64 159916}
!12036 = !{i64 159922}
!12037 = !{i64 159934}
!12038 = !{i64 159936}
!12039 = !{i64 159946}
!12040 = !{i64 159948}
!12041 = !{i64 159956}
!12042 = !{i64 159962}
!12043 = !{i64 159964}
!12044 = !{i64 159972}
!12045 = !{i64 159976}
!12046 = !{i64 159986}
!12047 = !{i64 159988}
!12048 = !{i64 160006}
!12049 = !{i64 160000}
!12050 = !{i64 160016}
!12051 = !{i64 160028}
!12052 = !{i64 160032}
!12053 = !{i64 160052}
!12054 = !{i64 160058}
!12055 = !{i64 160046}
!12056 = !{i64 160070}
!12057 = !{i64 160078}
!12058 = !{i64 160080}
!12059 = !{i64 160094}
!12060 = !{i64 160098}
!12061 = !{i64 160106}
!12062 = !{i64 160108}
!12063 = !{i64 160118}
!12064 = !{i64 160120}
!12065 = !{i64 160132}
!12066 = !{i64 160134}
!12067 = !{i64 160142}
!12068 = !{i64 160148}
!12069 = !{i64 160150}
!12070 = !{i64 160162}
!12071 = !{i64 160166}
!12072 = !{i64 160176}
!12073 = !{i64 160190}
!12074 = !{i64 160194}
!12075 = !{i64 160200}
!12076 = !{i64 160210}
!12077 = !{i64 160224}
!12078 = !{i64 160232}
!12079 = !{i64 160242}
!12080 = !{i64 160248}
!12081 = !{i64 160250}
!12082 = !{i64 160266}
!12083 = !{i64 160278}
!12084 = !{i64 160286}
!12085 = !{i64 160300}
!12086 = !{i64 160316}
!12087 = !{i64 160324}
!12088 = !{i64 160326}
!12089 = !{i64 160338}
!12090 = !{i64 160348}
!12091 = !{i64 160352}
!12092 = !{i64 160362}
!12093 = !{i64 160364}
!12094 = !{i64 160382}
!12095 = !{i64 160376}
!12096 = !{i64 160398}
!12097 = !{i64 160414}
!12098 = !{i64 160416}
!12099 = !{i64 160438}
!12100 = !{i64 160432}
!12101 = !{i64 160454}
!12102 = !{i64 160458}
!12103 = !{i64 160470}
!12104 = !{i64 160482}
!12105 = !{i64 160492}
!12106 = !{i64 160508}
!12107 = !{i64 160518}
!12108 = !{i64 160528}
!12109 = !{i64 160530}
!12110 = !{i64 160532}
!12111 = !{i64 160548}
!12112 = !{i64 160562}
!12113 = !{i64 160574}
!12114 = !{i64 160588}
!12115 = !{i64 160592}
!12116 = !{i64 160598}
!12117 = !{i64 160602}
!12118 = !{i64 160606}
!12119 = !{i64 160612}
!12120 = !{i64 160614}
!12121 = !{i64 160616}
!12122 = !{i64 160620}
!12123 = !{i64 160626}
!12124 = !{i64 160628}
!12125 = !{i64 160636}
!12126 = !{i64 160644}
!12127 = !{i64 160646}
!12128 = !{i64 160658}
!12129 = !{i64 160664}
!12130 = !{i64 160668}
!12131 = !{i64 160672}
!12132 = !{i64 160682}
!12133 = !{i64 160684}
!12134 = !{i64 160702}
!12135 = !{i64 160696}
!12136 = !{i64 160718}
!12137 = !{i64 160722}
!12138 = !{i64 160726}
!12139 = !{i64 160738}
!12140 = !{i64 160740}
!12141 = !{i64 160748}
!12142 = !{i64 160762}
!12143 = !{i64 160756}
!12144 = !{i64 160766}
!12145 = !{i64 160770}
!12146 = !{i64 160776}
!12147 = !{i64 160778}
!12148 = !{i64 160780}
!12149 = !{i64 160784}
!12150 = !{i64 160790}
!12151 = !{i64 160792}
!12152 = !{i64 160802}
!12153 = !{i64 160806}
!12154 = !{i64 160810}
!12155 = !{i64 160820}
!12156 = !{i64 160834}
!12157 = !{i64 160844}
!12158 = !{i64 160850}
!12159 = !{i64 160864}
!12160 = !{i64 160868}
!12161 = !{i64 160874}
!12162 = !{i64 160878}
!12163 = !{i64 160882}
!12164 = !{i64 160886}
!12165 = !{i64 160894}
!12166 = !{i64 160906}
!12167 = !{i64 160910}
!12168 = !{i64 160922}
!12169 = !{i64 160926}
!12170 = !{i64 160930}
!12171 = !{i64 160936}
!12172 = !{i64 160948}
!12173 = !{i64 160952}
!12174 = !{i64 160976}
!12175 = !{i64 160988}
!12176 = !{i64 160996}
!12177 = !{i64 161014}
!12178 = !{i64 161018}
!12179 = !{i64 161022}
!12180 = !{i64 161032}
!12181 = !{i64 161036}
!12182 = !{i64 161040}
!12183 = !{i64 161044}
!12184 = !{i64 161066}
!12185 = !{i64 161086}
!12186 = !{i64 161106}
!12187 = !{i64 161108}
!12188 = !{i64 161154}
!12189 = !{i64 161158}
!12190 = !{i64 161176}
!12191 = !{i64 161180}
!12192 = !{i64 161198}
!12193 = !{i64 161202}
!12194 = !{i64 161220}
!12195 = !{i64 161230}
!12196 = !{i64 161244}
!12197 = !{i64 161250}
!12198 = !{i64 161266}
!12199 = !{i64 161426}
!12200 = !{i64 161428}
!12201 = !{i64 161486}
!12202 = !{i64 161492}
!12203 = !{i64 161510}
!12204 = !{i64 161516}
!12205 = !{i64 161534}
!12206 = !{i64 161540}
!12207 = !{i64 161558}
!12208 = !{i64 161564}
!12209 = !{i64 161610}
!12210 = !{i64 161622}
!12211 = !{i64 161624}
!12212 = !{i64 161682}
!12213 = !{i64 161688}
!12214 = !{i64 161706}
!12215 = !{i64 161712}
!12216 = !{i64 161730}
!12217 = !{i64 161736}
!12218 = !{i64 161754}
!12219 = !{i64 161760}
!12220 = !{i64 161806}
!12221 = !{i64 161818}
!12222 = !{i64 161820}
!12223 = !{i64 161832}
!12224 = !{i64 161834}
!12225 = !{i64 161840}
!12226 = !{i64 161850}
!12227 = !{i64 161858}
!12228 = !{i64 161864}
!12229 = !{i64 161868}
!12230 = !{i64 161870}
!12231 = !{i64 161874}
!12232 = !{i64 161876}
!12233 = !{i64 161880}
!12234 = !{i64 161886}
!12235 = !{i64 161894}
!12236 = !{i64 161896}
!12237 = !{i64 161908}
!12238 = !{i64 161914}
!12239 = !{i64 161910}
!12240 = !{i64 161920}
!12241 = !{i64 161928}
!12242 = !{i64 161930}
!12243 = !{i64 161940}
!12244 = !{i64 161944}
!12245 = !{i64 161968}
!12246 = !{i64 161972}
!12247 = !{i64 161948}
!12248 = !{i64 161980}
!12249 = !{i64 161986}
!12250 = !{i64 161990}
!12251 = !{i64 161992}
!12252 = !{i64 162000}
!12253 = !{i64 162022}
!12254 = !{i64 162040}
!12255 = !{i64 162050}
!12256 = !{i64 162052}
!12257 = !{i64 162068}
!12258 = !{i64 162070}
!12259 = !{i64 162074}
!12260 = !{i64 162078}
!12261 = !{i64 162080}
!12262 = !{i64 162086}
!12263 = !{i64 162092}
!12264 = !{i64 162098}
!12265 = !{i64 162112}
!12266 = !{i64 162120}
!12267 = !{i64 162124}
!12268 = !{i64 162126}
!12269 = !{i64 162128}
!12270 = !{i64 162130}
!12271 = !{i64 162138}
!12272 = !{i64 162144}
!12273 = !{i64 162146}
!12274 = !{i64 162148}
!12275 = !{i64 162154}
!12276 = !{i64 162156}
!12277 = !{i64 162160}
!12278 = !{i64 162162}
!12279 = !{i64 162182}
!12280 = !{i64 162192}
!12281 = !{i64 162716}
!12282 = !{i32 0, i32 33}
!12283 = !{i64 162724}
!12284 = !{i64 162728}
!12285 = !{i64 162732}
!12286 = !{i64 162736}
!12287 = !{i64 162756}
!12288 = !{i64 162772}
!12289 = !{i64 162776}
!12290 = !{i64 162778}
!12291 = !{i64 162786}
!12292 = !{i64 162782}
!12293 = !{i64 162790}
!12294 = !{i64 162792}
!12295 = !{i64 162796}
!12296 = !{i64 162798}
!12297 = !{i64 162802}
!12298 = !{i64 162804}
!12299 = !{i64 162808}
!12300 = !{i64 162810}
!12301 = !{i64 162830}
!12302 = !{i64 162840}
!12303 = !{i64 163370}
!12304 = !{i64 163374}
!12305 = !{i64 163378}
!12306 = !{i64 163380}
!12307 = !{i64 163384}
!12308 = !{i64 163396}
!12309 = !{i64 163400}
!12310 = !{i64 163404}
!12311 = !{i64 163408}
!12312 = !{i64 163412}
!12313 = !{i64 163420}
!12314 = !{i64 163418}
!12315 = !{i64 163426}
!12316 = !{i64 163460}
!12317 = !{i64 163468}
!12318 = !{i64 163472}
!12319 = !{i64 163476}
!12320 = !{i64 163482}
!12321 = !{i64 163486}
!12322 = !{i64 163490}
!12323 = !{i64 163496}
!12324 = !{i64 163514}
!12325 = !{i64 163518}
!12326 = !{i64 163522}
!12327 = !{i64 163526}
!12328 = !{i64 163558}
!12329 = !{i64 163560}
!12330 = !{i64 163562}
!12331 = !{i64 163530}
!12332 = !{i64 163564}
!12333 = !{i64 163568}
!12334 = !{i64 163576}
!12335 = !{i64 163580}
!12336 = !{i64 163582}
!12337 = !{i64 163584}
!12338 = !{i64 163588}
!12339 = !{i64 163592}
!12340 = !{i64 163596}
!12341 = !{i64 163600}
!12342 = !{i64 163602}
!12343 = !{i64 163604}
!12344 = !{i64 163608}
!12345 = !{i64 163612}
!12346 = !{i64 163620}
!12347 = !{i64 163624}
!12348 = !{i64 163626}
!12349 = !{i64 163630}
!12350 = !{i64 163634}
!12351 = !{i64 163636}
!12352 = !{i64 163640}
!12353 = !{i64 163644}
!12354 = !{i64 163646}
!12355 = !{i64 163650}
!12356 = !{i64 163652}
!12357 = !{i64 163664}
!12358 = !{i64 163668}
!12359 = !{i64 163654}
!12360 = !{i64 163658}
!12361 = !{i64 163674}
!12362 = !{i64 163678}
!12363 = !{i64 163680}
!12364 = !{i64 163688}
!12365 = !{i64 163694}
!12366 = !{i64 163698}
!12367 = !{i64 163702}
!12368 = !{i64 163706}
!12369 = !{i64 163710}
!12370 = !{i64 163712}
!12371 = !{i64 163716}
!12372 = !{i64 163718}
!12373 = !{i64 163720}
!12374 = !{i64 163724}
!12375 = !{i64 163732}
!12376 = !{i64 163736}
!12377 = !{i64 163740}
!12378 = !{i64 163744}
!12379 = !{i64 163748}
!12380 = !{i64 163754}
!12381 = !{i64 163766}
!12382 = !{i64 163768}
!12383 = !{i64 163772}
!12384 = !{i64 163774}
!12385 = !{i64 163778}
!12386 = !{i64 163786}
!12387 = !{i64 163788}
!12388 = !{i64 163792}
!12389 = !{i64 163798}
!12390 = !{i64 163802}
!12391 = !{i64 163806}
!12392 = !{i64 163810}
!12393 = !{i64 163814}
!12394 = !{i64 163816}
!12395 = !{i64 163818}
!12396 = !{i64 163824}
!12397 = !{i64 163828}
!12398 = !{i64 163832}
!12399 = !{i64 163836}
!12400 = !{i64 163838}
!12401 = !{i64 163842}
!12402 = !{i64 163852}
!12403 = !{i64 163856}
!12404 = !{i64 163782}
!12405 = !{i64 163866}
!12406 = !{i64 163864}
!12407 = !{i64 163880}
!12408 = !{i64 163882}
!12409 = !{i64 163884}
!12410 = !{i64 163886}
!12411 = !{i64 163888}
!12412 = !{i64 163892}
!12413 = !{i64 163896}
!12414 = !{i64 163900}
!12415 = !{i64 163904}
!12416 = !{i64 163916}
!12417 = !{i64 163918}
!12418 = !{i64 163922}
!12419 = !{i64 163926}
!12420 = !{i64 163930}
!12421 = !{i64 163934}
!12422 = !{i64 163940}
!12423 = !{i64 163942}
!12424 = !{i64 163948}
!12425 = !{i64 163950}
!12426 = !{i64 163958}
!12427 = !{i64 163954}
!12428 = !{i64 163974}
!12429 = !{i64 163980}
!12430 = !{i64 163986}
!12431 = !{i64 163992}
!12432 = !{i64 163994}
!12433 = !{i64 163998}
!12434 = !{i64 164006}
!12435 = !{i64 164010}
!12436 = !{i64 164018}
!12437 = !{i64 164022}
!12438 = !{i64 164024}
!12439 = !{i64 164026}
!12440 = !{i64 164028}
!12441 = !{i64 164036}
!12442 = !{i64 164040}
!12443 = !{i64 164070}
!12444 = !{i64 164080}
!12445 = !{i64 164086}
!12446 = !{i64 164090}
!12447 = !{i64 164092}
!12448 = !{i64 164108}
!12449 = !{i64 164112}
!12450 = !{i64 164116}
!12451 = !{i64 164140}
!12452 = !{i64 164144}
!12453 = !{i64 164148}
!12454 = !{i64 164160}
!12455 = !{i64 164164}
!12456 = !{i64 164176}
!12457 = !{i64 164186}
!12458 = !{i64 164190}
!12459 = !{i64 164204}
!12460 = !{i64 164210}
!12461 = !{i64 164236}
!12462 = !{i64 164240}
!12463 = !{i64 164242}
!12464 = !{i64 164252}
!12465 = !{i64 164256}
!12466 = !{i64 164258}
!12467 = !{i64 164262}
!12468 = !{i64 164294}
!12469 = !{i64 164298}
!12470 = !{i64 164302}
!12471 = !{i64 164306}
!12472 = !{i64 164310}
!12473 = !{i64 164314}
!12474 = !{i64 164322}
!12475 = !{i64 164326}
!12476 = !{i64 164330}
!12477 = !{i64 164340}
!12478 = !{i64 164350}
!12479 = !{i64 164354}
!12480 = !{i64 164374}
!12481 = !{i64 164412}
!12482 = !{i64 164420}
!12483 = !{i64 164422}
!12484 = !{i64 164430}
!12485 = !{i64 164432}
